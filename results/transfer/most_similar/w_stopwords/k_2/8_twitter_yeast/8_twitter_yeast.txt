Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.255
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.13087620782678364;  // std dev = 4.899, 121.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=33 */
%   | | | else return 0.17119241336038063;  // std dev = 4.973, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.5984861696068178;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5600967122952899;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.680528493578232;  // std dev = 3.298, 82.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=69 */
%   | | | else return -0.1609814223378894;  // std dev = 0.032, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( location(A, I) )
%   | | | then return 0.21139333653555337;  // std dev = 1.584, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.6106618609486437;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6031245176690043;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11819209406032376;  // std dev = 4.254, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6901004706747672;  // std dev = 0.996, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14309859354351778;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.1982728230711691;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.46839384359549757;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.21480990801715305;  // std dev = 1.212, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3665889619761009;  // std dev = 0.950, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.028475982698926705;  // std dev = 0.706, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5300118257017352;  // std dev = 1.480, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.06346766618042649;  // std dev = 4.954, 201.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5018919271387616;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.061557575244253315;  // std dev = 1.645, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2723777868024066;  // std dev = 0.865, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3631444813727158;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06646075834355024;  // std dev = 5.385, 233.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37887543114072475;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.37082377952135775;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.031131439578974143;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.30970237579718835;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4196648055240326;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.294588965399312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.01627895129617089;  // std dev = 2.246, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2781587482139985;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.08768762470782966;  // std dev = 4.547, 166.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=55 */
%   | | | else return -0.05663208573170748;  // std dev = 1.991, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2703562678822216;  // std dev = 0.141, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.06600675670571654;  // std dev = 0.429, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.548679485075804;  // std dev = 1.083, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18961613200243915;  // std dev = 0.578, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2258715496007763;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07396155393586892;  // std dev = 3.897, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.2017791957554592;  // std dev = 9.13e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.034682047527162786;  // std dev = 0.929, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38140334953801613;  // std dev = 2.836, 80.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | | else return -0.15989097957909557;  // std dev = 0.276, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.24940618347137433;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.14449119528545284;  // std dev = 1.215, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1912375450431489;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18449928771277455;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06195725764678344;  // std dev = 1.656, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.14882520687719203;  // std dev = 0.675, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.024122820809736614;  // std dev = 1.683, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18357310290893483;  // std dev = 0.000922, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.023381266166421878;  // std dev = 3.412, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
%   | | | else return -0.08239211096724433;  // std dev = 1.517, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1560756307100505;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21612293161582008;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15839543988095015;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.01362403576943033;  // std dev = 2.344, 108.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.15763951408511;  // std dev = 0.000817, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.005894712918416927;  // std dev = 3.562, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | | else return 0.01972326292591694;  // std dev = 1.361, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.549', 'seconds']
Parameter learned model CLL:-0.200676 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 3, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.899, 88, 33], 'false,false,true,false': [4.973, 79, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.279, 9, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.926, 1, 6], 'true,false': [0.921, 1, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.298, 13, 69], 'false,false,true,false': [0.032, 143, 0], 'false,false,false,true': [1.584, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.019, 0, 8], 'true,false': [0.022, 0, 3], 'false,true,true': [4.254, 77, 34], 'false,true,false,true': [0.996, 1, 37], 'false,true,false,false': [0.0, 66, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [1.212, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.95, 1, 10], 'true,false': [0.706, 1, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.48, 3, 14], 'false,true,false': [4.954, 144, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.645, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.865, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.023, 0, 4], 'false,true': [5.385, 162, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.009, 0, 7], 'true,true,false': [0.099, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.246, 33, 12], 'false,false,true': [0.001, 0, 3], 'false,false,false,true': [4.547, 111, 55], 'false,false,false,false': [1.991, 22, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.141, 0, 10], 'true,true,true,false': [0.429, 1, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.083, 1, 33], 'true,false': [0.578, 85, 0], 'false,true': [0.001, 0, 3], 'false,false,true': [3.897, 77, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [9.13e-09, 0, 6], 'true,false': [0.929, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.836, 9, 71], 'false,true,false': [0.276, 157, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.215, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.098, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.034, 0, 3], 'false,true,true': [1.656, 40, 11], 'false,true,false,true': [0.675, 2, 1], 'false,true,false,false': [1.683, 32, 17], 'false,false,true': [0.000922, 0, 3], 'false,false,false,true': [3.412, 88, 40], 'false,false,false,false': [1.517, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.067, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 3], 'false,true': [2.344, 79, 29], 'false,false,true': [0.000817, 0, 3], 'false,false,false,true': [3.562, 90, 40], 'false,false,false,false': [1.361, 9, 4]}]
{'': [0.07638888888888877, 0.20733143513066318], 'false': [0.24999999999999992, 0.20528363198925284], 'false,true': [0.0, 1.4802973661668753e-16], 'false,false': [0.20689097960356248, 0.1799307958477507], 'false,false,true': [0.1983471074380178, 0.2150472589792073], 'false,false,false': [0.22222222222222224, 0.14876033057851243], 'true': [0.09876543209876527, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.13157347653174428, 0.21465923377518384], 'false': [0.0, 0.2132995533900891], 'false,false': [0.21237106326783972, 0.22817720836024333], 'false,false,false': [0.22817720836024333, nan], 'false,false,true': [0.13265102199177456, 7.3513080515912696e-06], 'true': [0.12244897959183668, 0.14142516503635097], 'false,true': [0.0, nan]}
{'': [8.803019884296891e-05, 0.17051506083867043], 'false': [0.1671066577114015, 0.22617016315112073], 'false,false': [0.24999999999999997, 0.20980598201952977], 'false,false,true': [0.0, 0.22222222222222213], 'false,false,false': [0.20980598201952977, nan], 'false,true': [0.16301761690374716, 0.17050976521618957], 'false,true,false': [0.026095180566251392, -4.710037074167331e-17], 'true': [4.7092563798034615e-05, 0.0001558797392913943]}
{'': [0.12808565753561021, 0.14175566594735994], 'false': [0.13826313167986273, 0.19243911335456193], 'false,false': [0.0, 0.19325847487790207], 'false,false,false': [0.19325847487790207, nan], 'false,true': [0.128896078790221, 0.1220816144916748], 'false,true,true': [nan, 0.12889607879022116], 'true': [0.08207826044745788, 0.2490617710879934], 'false,false,true': [nan, 0.0]}
{'': [0.06427303566792614, 0.12875302867345798], 'false': [0.12444615956772932, 0.20650682511244825], 'false,false': [0.0, 0.21985714539591814], 'false,false,false': [0.22222222222222218, 0.18749999999999994], 'true': [0.093597421823415, 0.0001318681281352041], 'true,true': [0.093597421823415, nan], 'false,false,true': [nan, 0.0]}
{'': [0.003392283147740992, 0.12570014502346033], 'false': [0.11211997279430695, 0.12826405647761743], 'false,false': [5.084017322779891e-07, 0.12956759437466814], 'false,false,false': [0.12453071303305592, 0.14160705526635364], 'true': [0.003521164570990609, 0.0], 'true,true': [1.1113957690521228e-05, 0.003247067502689068], 'true,false': [nan, 0.0]}
{'': [0.11865455812727538, 0.12714275002051886], 'false': [3.8545437720342396e-07, 0.12982589448084714], 'false,false': [0.12982589448084714, nan], 'true': [0.05560364999635565, 0.003930851771255587], 'true,true': [0.032710351032555124, 0.03451516663163686], 'true,true,false': [nan, 0.034515166631636965], 'true,true,true': [0.002002208989508092, 0.09196765765616872]}
{'': [0.07897342720648844, 0.10242903435341108], 'false': [0.09977359409279922, 0.14860427329859896], 'false,false': [0.0, 0.16401514374606027], 'false,false,false': [0.16401514374606027, nan], 'false,true': [0.10053219700409355, 0.0004842429029928064], 'false,true,true': [nan, 0.10053219700409359], 'true': [1.3877787807814457e-17, 0.14398612593996224], 'false,false,true': [0.0, nan]}
{'': [0.0009873343182942812, 0.08250571120410022], 'false': [0.0608459955286225, 0.09714592995688615], 'false,false': [2.8312880447078914e-07, 0.09858108987691501], 'false,false,false': [0.09097070778556446, 0.15350857694655598], 'false,true': [0.053798249609679875, 0.06489054163390015], 'false,true,false': [0.15192273062716807, 0.057836404481534674], 'true': [0.0012021068021508055, 0.0003815865224220903], 'true,false': [nan, 0.0003815865224220903]}
{'': [0.0007796799337388315, 0.07929064134361545], 'false': [0.05089369090795458, 0.10005437586622007], 'false,false': [2.2222901568484202e-07, 0.1016880742758597], 'false,false,false': [0.09759459759216291, 0.14244899675345496], 'true': [0.0009527283507461716, 0.0002986570019026756], 'true,true': [0.0009527283507461716, nan], 'true,true,true': [0.0006381226075942595, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 6.535
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.2285193054698827;  // std dev = 2.509, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.3364098046647297;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.16767274462332082;  // std dev = 5.992, 168.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7670719622367216;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.764919203565047;  // std dev = 2.151, 74.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=69 */
%   | | | else return -0.16347873173425015;  // std dev = 0.175, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.32003788113918835;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1047688941159031;  // std dev = 1.204, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5615239171140314;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5882063320409344;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.04335083677091478;  // std dev = 3.170, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | | else return 0.14583114762888813;  // std dev = 2.750, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6199837271818733;  // std dev = 1.657, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.1455154000341149;  // std dev = 0.055, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.7679403850857964;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.03776527183702968;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.1631761750971407;  // std dev = 0.978, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.43224394754485146;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.025986893235136744;  // std dev = 1.069, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( enzyme(F, H), interaction(I, F) )
%   | | | then return -0.03809509936855323;  // std dev = 1.280, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.06173001384462781;  // std dev = 4.195, 133.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=38 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0974061697743794;  // std dev = 3.123, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | | | else return 0.011906279564454407;  // std dev = 1.064, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.5147960481995988;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.1643657661472295;  // std dev = 0.842, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1295822290419021;  // std dev = 1.353, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.3161784522522513;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.40971754362548807;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3456443790391518;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.046361715576818195;  // std dev = 4.187, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
%   | | | else return 0.10193954476611107;  // std dev = 3.077, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | | else return 0.17582444805341363;  // std dev = 0.340, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.38803143305852916;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.16121565147067152;  // std dev = 0.875, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.04686588863285736;  // std dev = 1.441, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14161024987678003;  // std dev = 0.337, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.3988031436808613;  // std dev = 0.150, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3007716557263721;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.47654455101329884;  // std dev = 1.259, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.1665897549084371;  // std dev = 0.236, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.3354833794151547;  // std dev = 0.909, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.03334368635167645;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.027598609739688355;  // std dev = 4.715, 203.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=55 */
%   | | | else return 0.18443399437668512;  // std dev = 1.536, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2606032216556798;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.5408018413383175;  // std dev = 0.341, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.6566932291362262;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.18276077223827497;  // std dev = 0.076, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.27573248751677343;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5810728135206773;  // std dev = 0.228, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.19578201351302843;  // std dev = 0.482, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.026615091501425645;  // std dev = 1.780, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.12173570128137869;  // std dev = 2.413, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20116311203969864;  // std dev = 0.060, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20813201442020066;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), phenotype(A, H) )
%   | | | then return 0.26730004838341626;  // std dev = 1.378, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.41261281732439786;  // std dev = 1.763, 58.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=54 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.1322979148961733;  // std dev = 0.190, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.165226680273731;  // std dev = 0.218, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.19702374620730057;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.15014378027873634;  // std dev = 1.275, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.03932877965168957;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18569472914712587;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.16648639039557064;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.006410935570695114;  // std dev = 1.139, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.12673286823678434;  // std dev = 0.815, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.017788969496272036;  // std dev = 1.583, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.05612757023761835;  // std dev = 0.907, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1900661276583153;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.019411229580075552;  // std dev = 1.996, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return 0.03290581566067643;  // std dev = 2.878, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.09000443157781472;  // std dev = 0.201, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.14467796971968225;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( location(G, I), location(A, I) )
%   | | | then return -0.05165516661320035;  // std dev = 1.677, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | | else return 0.027025983686598545;  // std dev = 1.183, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.00873094893772139;  // std dev = 0.826, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.08568382831000823;  // std dev = 0.656, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.16251374117780673;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, M), enzyme(A, N) )
%   | | | then return -0.0399383597430051;  // std dev = 1.555, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.018324500310734047;  // std dev = 3.021, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.938', 'seconds']
Refined model CLL: -0.194187


******************************************
Best model found
******************************************
Results 

CLL : -0.214728 

AUC ROC : 0.988695 

AUC PR : 0.262759 

Precision : 0.198753 

Recall : 0.904255 

F1 : 0.325879 

Total Learning Time : 6.535 

Total Inference Time : 10.923570156097412 

Total revision time: 25.71882966995239
Best scored revision CLL: -0.194187


Results 

CLL : -0.214728 

AUC ROC : 0.988695 

AUC PR : 0.262759 

Precision : 0.198753 

Recall : 0.904255 

F1 : 0.325879 

Total Learning Time : 25.732917585372924 

Total Inference Time : 10.923570156097412 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.214
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11434728220694913;  // std dev = 4.802, 121.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=31 */
%   | | | else return 0.2097114350995116;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7271035802978393;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6400986658662524;  // std dev = 0.923, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6994614863608312;  // std dev = 3.223, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.1626268387417544;  // std dev = 0.087, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07373365448410585;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4816738798898106;  // std dev = 0.950, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.569251136878944;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0522919846014276;  // std dev = 4.473, 143.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6656285591107085;  // std dev = 1.387, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return -0.14767985761167776;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8127710730342079;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0387046417067406;  // std dev = 1.685, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3271503535960534;  // std dev = 1.343, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.4336618155526457;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5698890036956712;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4713130673362552;  // std dev = 2.051, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0.039810185317990215;  // std dev = 5.008, 225.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6448279210495489;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.020776714750774177;  // std dev = 1.703, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.37173429400972463;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25730080572453773;  // std dev = 0.974, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.06110289675017461;  // std dev = 5.711, 272.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4878906607913447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04417410956053887;  // std dev = 1.672, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2913550995104795;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.313341167714837;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.36903998571703744;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.02382135366094368;  // std dev = 2.823, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.29332369405074576;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.058641741253012164;  // std dev = 4.499, 174.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=51 */
%   | | | else return 0.0892323915488813;  // std dev = 2.101, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.22553135347534914;  // std dev = 1.072, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.2879466790249934;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.016587915887690097;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.49198126661153385;  // std dev = 1.619, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18120552184671695;  // std dev = 0.974, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2345295844633289;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05135277308543901;  // std dev = 4.375, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.07581325850551922;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.1208101614115105;  // std dev = 0.944, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3510454842303995;  // std dev = 3.403, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.15067344524920348;  // std dev = 0.239, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.23266494036474172;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.032152654402576246;  // std dev = 1.429, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2017867136390807;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.034311285642177856;  // std dev = 0.575, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23252839999037606;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.012713753679524433;  // std dev = 1.810, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.13640606518198747;  // std dev = 0.929, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.062350252135927924;  // std dev = 1.476, 74.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.008960758570183172;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07036240833603905;  // std dev = 3.541, 129.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=47 */
%   | | | else return 0.00579040873616057;  // std dev = 1.504, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1556437764963811;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.09139999326357957;  // std dev = 0.778, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.595343528034247;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1915674351783466;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01529822108566494;  // std dev = 2.460, 130.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.0052678791559664;  // std dev = 0.933, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.004385161213596193;  // std dev = 3.785, 167.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=47 */
%   | | | else return 0.10572619323620813;  // std dev = 1.329, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.827', 'seconds']
Parameter learned model CLL:-0.200746 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [1.0, 2, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.802, 90, 31], 'false,false,true,false': [5.402, 83, 45], 'false,false,false,true': [1.549, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.024, 0, 10], 'false,true,true': [0.923, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.223, 12, 76], 'false,false,true,false': [0.087, 178, 0], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.95, 1, 11], 'true,false': [0.017, 0, 6], 'false,true,true': [4.473, 109, 34], 'false,true,false,true': [1.387, 2, 48], 'false,true,false,false': [0.0, 88, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.685, 13, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.343, 2, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.088, 0, 3], 'false,true,true,false': [2.051, 6, 21], 'false,true,false': [5.008, 167, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.703, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.05e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.974, 1, 10], 'false,true': [5.711, 190, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.672, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.009, 0, 9], 'true,true,false': [0.909, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.823, 50, 19], 'false,false,true': [0.023, 0, 8], 'false,false,false,true': [4.499, 123, 51], 'false,false,false,false': [2.101, 20, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [1.072, 1, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.887, 1, 3], 'true,true,false,false': [1.619, 3, 33], 'true,false': [0.974, 98, 0], 'false,true': [0.019, 0, 5], 'false,false,true': [4.375, 105, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.897, 1, 7], 'true,false': [0.944, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.403, 15, 82], 'false,true,false': [0.239, 186, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.429, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.13, 0, 9], 'true,false,true': [0.575, 1, 2], 'true,false,false': [0.13, 0, 5], 'false,true,true': [1.81, 37, 13], 'false,true,false,true': [0.929, 2, 8], 'false,true,false,false': [1.476, 63, 11], 'false,false,true': [0.919, 1, 5], 'false,false,false,true': [3.541, 82, 47], 'false,false,false,false': [1.504, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.778, 1, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.101, 0, 3], 'false,true': [2.46, 98, 32], 'false,false,true': [0.933, 1, 5], 'false,false,false,true': [3.785, 120, 47], 'false,false,false,false': [1.329, 7, 4]}]
{'': [0.05246913580246885, 0.21881952985724407], 'false': [0.20999999999999988, 0.21347326366631494], 'false,false': [0.21206109578877788, 0.23999999999999985], 'false,false,false': [0.23999999999999985, nan], 'false,false,true': [0.19056075404685593, 0.22796630859375114], 'false,true': [0.25, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.22222222222222224], 'true': [0.07100591715976314, 0.0]}
{'': [4.8348344665135013e-05, 0.20742852239522236], 'false': [0.10660169051290769, 0.2028210959257207], 'false,false': [0.20360731765103413, 0.1874999999999999], 'false,false,true': [0.11803726171288006, 4.216886170569966e-05], 'false,false,false': [0.1874999999999999, nan], 'false,true': [0.10660169051290769, nan], 'true': [-1.2688263138573217e-16, 5.821946503408171e-05]}
{'': [0.0518693662782875, 0.15741204476765197], 'false': [0.15535973506699147, 0.1891762771897341], 'false,false': [0.1891762771897341, nan], 'false,false,true': [0.0, 0.16701658015567697], 'false,true': [0.13994023167216893, 0.16677359030322952], 'false,true,false': [0.038487782406407545, -1.0092936587501423e-17], 'true': [0.07522258928394406, 4.973630581336005e-05]}
{'': [0.0955093784093682, 0.13784871974574728], 'false': [0.1351964846267216, 0.1720926032392111], 'false,false': [0.0, 0.16115646615164328], 'false,false,false': [0.16115646615164328, nan], 'false,true': [0.1414179756657758, 0.11144941490350957], 'false,true,true': [0.00257912732364729, 0.1558727928475433], 'true': [0.10021836595987012, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.0557753913095154, 0.12317711358771871], 'false': [0.11990983293280161, 0.17537442382772941], 'false,false': [0.0, 0.17475389132660016], 'false,false,false': [0.17475389132660016, nan], 'true': [1.586032892321652e-17, 0.08617631310463168], 'true,true': [1.586032892321652e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.04894235377483997, 0.1180737807384984], 'false': [0.11553507119087747, 0.11833418593736], 'false,false': [6.827278678277204e-05, 0.12097265490798824], 'false,false,false': [0.11631915931279783, 0.1471647573400871], 'true': [0.051728722778739605, 0.0], 'true,true': [8.832245551013448e-06, 0.11795381959560303], 'true,false': [nan, 0.0]}
{'': [0.11769462011652693, 0.12294361405387823], 'false': [7.30937727317582e-05, 0.12591681690371512], 'false,false': [0.12591681690371512, nan], 'true': [0.10576083435367838, 0.009671847489654661], 'true,true': [0.06783511445795766, 0.10848483875055911], 'true,true,false': [0.19676188805262032, 0.072812016378204], 'true,true,true': [0.07184565188431721, 0.0]}
{'': [0.0897154114016242, 0.0995715229937593], 'false': [0.09781899708841743, 0.13005147095399827], 'false,false': [0.0, 0.13620874546623732], 'false,false,false': [0.13620874546623732, nan], 'false,true': [0.11936012849543057, 0.00030594885411747543], 'false,true,true': [nan, 0.1193601284954305], 'true': [0.100605819094147, 0.08094260067854762], 'false,false,true': [0.0, nan]}
{'': [0.030459621521380636, 0.08092163788070075], 'false': [0.04989177477015676, 0.10478186665962032], 'false,false': [0.1409051907595055, 0.10315715218169388], 'false,false,false': [0.09719293946857835, 0.15071416579177818], 'false,true': [0.06549010168777655, 0.04035530177984711], 'false,true,false': [0.08637129824014024, 0.029434057966262278], 'true': [0.0018707699541687013, 0.0600778825206969], 'true,false': [0.11002995886271823, 0.003405355029804047]}
{'': [0.06362984588403836, 0.0737859620218415], 'false': [0.046538037095743265, 0.09276225765090725], 'false,false': [0.14494973630416136, 0.09100218534237113], 'false,false,false': [0.08578992626700363, 0.16049841338593476], 'true': [0.07343308294795765, 0.003406143652525779], 'true,true': [0.044227137699569895, 0.0], 'true,true,true': [0.0, 0.08639064355710821], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 8.134
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3692600462106225;  // std dev = 3.353, 45.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | | | else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.08155319041866102;  // std dev = 4.038, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | | else return 0.21814893509951105;  // std dev = 4.800, 100.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, E) )
%   | | then return 0.7283527732630031;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.229832666771678;  // std dev = 1.251, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6746236572125552;  // std dev = 3.401, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.15181563699036635;  // std dev = 0.282, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2764473920575157;  // std dev = 1.455, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.17047049087213853;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.42783215328840907;  // std dev = 0.351, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.5976620839748239;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.064871921984071;  // std dev = 3.921, 108.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | | | else return -0.015883138702928637;  // std dev = 1.953, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5924025852264012;  // std dev = 2.313, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.1361979592630895;  // std dev = 0.186, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.42696076390756693;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13850149699896436;  // std dev = 1.266, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.13986308949568202;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3957957546592714;  // std dev = 0.253, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.570572237424688;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5826522000040186;  // std dev = 0.385, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.12353789965025516;  // std dev = 0.428, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( location(A, H), interaction(A, I) )
%   | | | then return 0.05530868875082919;  // std dev = 2.842, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.1485068318758406;  // std dev = 3.844, 102.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=39 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.020956754100058483;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.2122834712113444;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.03830585957160907;  // std dev = 0.772, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3540577071921649;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.4153479072310503;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.2923320818600093;  // std dev = 0.281, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( location(A, H), interaction(A, I) )
%   | | then return 0.02760320021876853;  // std dev = 0.303, 135.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=33 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.06955956976114404;  // std dev = 3.861, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | | else return 0.14435395645792312;  // std dev = 1.542, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.5157246631065647;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.019245361099979538;  // std dev = 1.080, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.23511738901265933;  // std dev = 0.975, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.34244773642810766;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.476600944090624;  // std dev = 0.218, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.10215513563699888;  // std dev = 0.092, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.02272259736166397;  // std dev = 1.569, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.6997033682625002;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.01856630774596842;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.29491406748666926;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.0618865324934068;  // std dev = 3.992, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
%   | | | else return -0.01625161969902663;  // std dev = 2.995, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2716763440364958;  // std dev = 0.069, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.4130890926577405;  // std dev = 0.259, 40.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | else return -0.16295052231683338;  // std dev = 0.102, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return -0.013179023959531633;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.002506515928078342;  // std dev = 0.843, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4776960388748404;  // std dev = 0.788, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.16485256743981844;  // std dev = 0.447, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.049314649460670726;  // std dev = 2.152, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.11677702629735083;  // std dev = 2.376, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.1797613853391065;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.7171580815938495;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.23545220854322918;  // std dev = 0.068, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), location(A, J) )
%   | | | then return 0.19885462406754004;  // std dev = 1.275, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | | else return 0.39211150520902355;  // std dev = 2.417, 64.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=56 */
%   | | else return -0.14378764965295748;  // std dev = 0.049, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2559874768830085;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.006710277688912266;  // std dev = 1.129, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.12572593317999325;  // std dev = 0.554, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16126639745964363;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08929262177114103;  // std dev = 0.244, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( phenotype(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, G) )
%   | | | then return 0.3159529297291035;  // std dev = 1.805, 53.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=50 */
%   | | | else return -0.08739522657599715;  // std dev = 1.439, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | else return -0.150992145997768;  // std dev = 0.090, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return -0.02847370262654789;  // std dev = 1.884, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | | else return -0.10650511644013157;  // std dev = 1.598, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return -0.12850763836822562;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08778541017178039;  // std dev = 1.183, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13096991474795253;  // std dev = 0.157, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(D, D) )
%   | | then if ( phenotype(D, F), complex(D, G) )
%   | | | then return -0.05768979090293616;  // std dev = 0.783, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.08034537852499261;  // std dev = 1.320, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( interaction(H, D), enzyme(H, I) )
%   | | | then return -0.01433353472831972;  // std dev = 1.961, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | | else return -0.05065928032191593;  // std dev = 1.832, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.014356205311050028;  // std dev = 0.806, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.10236464878068033;  // std dev = 1.359, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.005953088538165399;  // std dev = 2.141, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | | else return -0.10235127125187209;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.863', 'seconds']
Refined model CLL: -0.179927


******************************************
Best model found
******************************************
Results 

CLL : -0.157115 

AUC ROC : 0.992067 

AUC PR : 0.457386 

Precision : 0.315328 

Recall : 0.815094 

F1 : 0.454737 

Total Learning Time : 8.134 

Total Inference Time : 14.211981296539307 

Total revision time: 32.399788091659545
Best scored revision CLL: -0.179927


Results 

CLL : -0.157115 

AUC ROC : 0.992067 

AUC PR : 0.457386 

Precision : 0.315328 

Recall : 0.815094 

F1 : 0.454737 

Total Learning Time : 32.41387600708008 

Total Inference Time : 14.211981296539307 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.432
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.028361701056959166;  // std dev = 2.576, 47.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=8 */
%   | | | else return 0.1420199028414468;  // std dev = 5.613, 155.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2381489350995123;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8422273799038339;  // std dev = 0.038, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1570344286998153;  // std dev = 0.072, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else if ( location(A, K) )
%   | | | then return 0.14828261840878793;  // std dev = 3.496, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.2266188083042414;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08583404724631939;  // std dev = 2.078, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6422966104222205;  // std dev = 1.395, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return -0.1400331663584207;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16160183037994322;  // std dev = 3.535, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14490196543016373;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3965361430006752;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5952430893165052;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.054896892416926184;  // std dev = 4.258, 194.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5151892804773579;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08327217956166108;  // std dev = 3.537, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.01380060530748195;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.056027350506620756;  // std dev = 4.294, 194.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3883119406728123;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08486112639138135;  // std dev = 3.589, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.7741790883243174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.1936482242616295;  // std dev = 0.709, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3009610941635139;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.00931310317567268;  // std dev = 0.894, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05809016469977157;  // std dev = 4.010, 169.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=49 */
%   | | | else return 0.05055966062837279;  // std dev = 3.712, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24278462241812918;  // std dev = 0.173, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22570093759436682;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6082553387083957;  // std dev = 1.145, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.20437576224200077;  // std dev = 0.734, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.07595657008175016;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.035625342057513595;  // std dev = 3.472, 131.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17233459289094855;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.204361792971759;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45355609670721736;  // std dev = 0.776, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13980096025949984;  // std dev = 0.281, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.18875191105343486;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.006179434626877788;  // std dev = 3.133, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15373019720746756;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.14648108519450764;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17701991468355938;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0595457122309231;  // std dev = 0.381, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1779479437374809;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.03189104823753281;  // std dev = 1.473, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18926521687436737;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06418935994063554;  // std dev = 2.587, 98.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=36 */
%   | | | else return 0.03459428469398371;  // std dev = 3.039, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12992966978148363;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15074004813693342;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1306486306270822;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.5002180134671891;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.147538935736041;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03558111970342991;  // std dev = 1.434, 87.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16191379546668117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.012779783411111882;  // std dev = 2.701, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   | | | else return -0.020782942470104045;  // std dev = 3.211, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.120', 'seconds']
Parameter learned model CLL:-0.175684 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.576, 39, 8], 'false,false,true,false': [5.613, 111, 44], 'false,false,false,true': [3.432, 31, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.038, 0, 52], 'false,false,true,false': [0.072, 147, 0], 'false,false,false,true': [3.496, 38, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.078, 23, 8], 'false,true,false,true': [1.395, 2, 48], 'false,true,false,false': [0.0, 120, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.535, 35, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.127, 0, 3], 'false,true,false': [4.258, 142, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.537, 41, 18], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.294, 138, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.589, 40, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.709, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.894, 10, 3], 'false,false,true': [7.45e-09, 0, 6], 'false,false,false,true': [4.01, 120, 49], 'false,false,false,false': [3.712, 45, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.173, 0, 12], 'true,true,true,false': [0.023, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.145, 1, 36], 'true,false': [0.734, 114, 0], 'false,true': [1.195, 2, 5], 'false,false,true': [3.472, 95, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.067, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.776, 0, 56], 'false,true,false': [0.281, 155, 0], 'false,false,true,true': [0.02, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.133, 50, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.043, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.041, 0, 4], 'false,true,true': [0.381, 7, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.473, 48, 14], 'false,false,true': [5.27e-09, 0, 5], 'false,false,false,true': [2.587, 62, 36], 'false,false,false,false': [3.039, 43, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.003, 0, 5], 'true,true,true,false': [0.029, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.042, 0, 4], 'false,true': [1.434, 70, 17], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.701, 88, 36], 'false,false,false,false': [3.211, 53, 20]}]
{'': [-2.5376526277146434e-16, 0.2095389087065669], 'false': [-1.4802973661668753e-16, 0.2026297577854685], 'false,false': [0.19115772963435043, 0.23495906016375898], 'false,false,false': [0.23559999999999953, 0.22222222222222224], 'false,false,true': [0.14124038026256244, 0.20328824141519333], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [1.2688263138573217e-16, 0.2032518272535654], 'false': [7.401486830834377e-17, 0.19972647898539703], 'false,false': [0.19277380877957548, 0.22044658963751684], 'false,false,false': [0.21819775281614343, 0.23999999999999994], 'false,false,true': [2.8109482002765146e-05, 3.507432431281283e-05], 'true': [7.401486830834377e-17, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-2.5376526277146434e-16, 0.15945585821509295], 'false': [0.13863665822041624, 0.2256770534242212], 'false,false': [0.2258334974877123, 0.2222222222222222], 'false,false,true': [0.0, 0.2271708009850616], 'false,false,false': [0.2222222222222222, nan], 'false,true': [0.13929652684971372, 0.13851356992119065], 'false,true,false': [0.038917987399593484, -1.258252761241844e-16], 'true': [-7.401486830834377e-17, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.12544585183545578], 'false': [0.09658331402278561, 0.2079256165130383], 'false,false': [0.002385135412852707, 0.20962133023504706], 'false,false,false': [0.2120445580571898, 0.18749999999999994], 'false,true': [0.011457378625333692, 0.09347471988201474], 'false,true,true': [0.0, 0.005405392205237651], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, -3.700743415417188e-17]}
{'': [-3.172065784643304e-17, 0.12508979656966657], 'false': [0.095026922095559, 0.21736387671712623], 'false,false': [0.0011424431607301722, 0.22242133242089762], 'false,false,false': [0.21827186463538764, 0.0], 'false,false,true': [0.0, 0.0], 'true': [-2.2204460492503132e-17, -3.700743415417188e-17], 'true,true': [-2.2204460492503132e-17, nan]}
{'': [0.03457366888367984, 0.12233977018306304], 'false': [0.0614142987890639, 0.12538602490130132], 'false,false': [9.25185853854297e-18, 0.1276092952735916], 'false,false,false': [0.09514051594356858, 0.21198716539885143], 'true': [0.04276607867881357, 0.00046591531784435464], 'true,true': [2.3790493384824782e-17, 0.10043055267905072], 'true,false': [0.0, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.12732902743267313, 0.09830891545291269], 'true': [0.05389797553726664, 0.004725060404960835], 'false': [0.20408163265306123, 0.09202538992390973], 'false,false': [0.09202538992390973, nan], 'true,true': [0.002206443977595943, 0.038547388316173464], 'true,true,false': [0.0, 0.03541025289577695], 'true,true,true': [0.0024901270688948984, 0.0002541863265242139]}
{'': [0.000569968922951168, 0.08851713155298785], 'false': [0.07186860801571493, 0.13727575933811265], 'false,false': [0.00019507494393420505, 0.14026644173334443], 'false,false,false': [0.14026644173334443, nan], 'false,true': [0.010750345200217877, 0.0005089764919352875], 'false,true,true': [nan, 0.010750345200217908], 'true': [0.0, 0.0005578420958718688], 'false,false,true': [0.00019507494393420505, nan]}
{'': [0.00037311677040341836, 0.07911442462353985], 'false': [0.03346610790078118, 0.09668354003419108], 'false,false': [5.551115123125783e-18, 0.09912363415817245], 'false,false,false': [0.06828321146300105, 0.1465644876823727], 'false,true': [0.01819118996354535, 0.03524542041963657], 'false,true,false': [0.0, 0.035006356885647204], 'true': [0.00020966977088023495, 0.00047753743094902104], 'true,false': [0.0, 0.00041039776737400446]}
{'': [0.025720880119510126, 0.06898566136633306], 'false': [0.023642867938655852, 0.0880346742963866], 'false,false': [0.0, 0.08962288918194923], 'false,false,false': [0.05883120476177255, 0.14121753365433024], 'true': [0.03364361677387644, 0.00043292741451827696], 'true,true': [0.00020717439438313473, 0.08844282725128177], 'true,true,false': [0.0, 0.0], 'true,true,true': [2.06761879001649e-06, 0.0002783491158110431]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.276
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.024815601766178884;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.25814893509951237;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.1610060779566546;  // std dev = 6.079, 175.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=53 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.746456124970328;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( location(A, H), location(G, H) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8161805080935112;  // std dev = 0.990, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1606702938975964;  // std dev = 0.149, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.059080764039703706;  // std dev = 1.959, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.2919434482774947;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5744107852816384;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4668597615042813;  // std dev = 0.326, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.014841598752611916;  // std dev = 1.312, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.10678469743079994;  // std dev = 1.580, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6791366863726206;  // std dev = 0.270, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14440850772471558;  // std dev = 0.068, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.1745067175753342;  // std dev = 0.539, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.14683043387229391;  // std dev = 3.565, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else return 0.8149906536820848;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.23475122383041044;  // std dev = 0.797, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.46494045270839585;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4720869649222932;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5569536868572483;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.12666742365476175;  // std dev = 0.323, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.07289695983205458;  // std dev = 4.099, 169.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=52 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5154216379073;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.06719878720611816;  // std dev = 3.669, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return -0.17232752641582805;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3618400582675439;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.3277478673287638;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3643139104010163;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09586563728344243;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.34451131780784083;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07150890926169835;  // std dev = 4.035, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3884835080380739;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.10272889696655442;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.03182112085347292;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2775208102817723;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.08787224866478399;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.2791753543174155;  // std dev = 0.513, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.10173935694512895;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.05888829864097215;  // std dev = 0.493, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.2952258242181511;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.026082486276038125;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.027366729578489905;  // std dev = 3.178, 93.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
%   | | | else return 0.09502996984942931;  // std dev = 4.214, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.22556678365690638;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.26199426858775987;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6001836950227386;  // std dev = 1.037, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.1882758080907628;  // std dev = 0.078, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( complex(F, H) )
%   | | then if ( complex(A, I), phenotype(F, J) )
%   | | | then return 0.31578759592556777;  // std dev = 0.547, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0646750097578636;  // std dev = 2.054, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.1080252787009236;  // std dev = 1.051, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0026974729312915463;  // std dev = 2.313, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else return -0.06824222477358165;  // std dev = 0.219, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18532474036250288;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.22828287606186237;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.31166346875362116;  // std dev = 0.389, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4828799336663322;  // std dev = 0.344, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.1165852275852959;  // std dev = 0.200, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.16845725150711638;  // std dev = 0.155, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20665171434710333;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.10888549051322412;  // std dev = 1.926, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.02211477237568683;  // std dev = 2.262, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16141662552259936;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1466497786367809;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), location(G, H) )
%   | | | then return -0.061823381585183204;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.005814937305870775;  // std dev = 0.330, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.20389483217996363;  // std dev = 0.039, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.023000125790069728;  // std dev = 1.323, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20697657038132328;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.01603021628165114;  // std dev = 2.367, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | | else return 0.026389997891835673;  // std dev = 3.231, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14232071003925367;  // std dev = 0.008, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.12251811832330406;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2434534098091834;  // std dev = 0.130, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.0966044767746486;  // std dev = 0.161, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.04574396058949455;  // std dev = 0.256, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.08281974579705648;  // std dev = 0.906, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1751261363261957;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.0358549135443521;  // std dev = 2.153, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return -0.004236465911237257;  // std dev = 3.430, 124.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '59.137', 'seconds']
Refined model CLL: -0.182418


******************************************
Best model found
******************************************
Results 

CLL : -0.19648 

AUC ROC : 0.982037 

AUC PR : 0.211582 

Precision : 0.135347 

Recall : 0.808664 

F1 : 0.231884 

Total Learning Time : 3.276 

Total Inference Time : 3.0092265605926514 

Total revision time: 10.647149141311646
Best scored revision CLL: -0.175684


Results 

CLL : -0.19648 

AUC ROC : 0.982037 

AUC PR : 0.211582 

Precision : 0.135347 

Recall : 0.808664 

F1 : 0.231884 

Total Learning Time : 10.661237056732178 

Total Inference Time : 3.0092265605926514 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.513
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.04655473220096165;  // std dev = 3.248, 69.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | | | else return 0.16767274462332127;  // std dev = 5.189, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1795775065280838;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6182726872238381;  // std dev = 0.912, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6123228684706172;  // std dev = 0.957, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7371516373405133;  // std dev = 2.317, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | | else return -0.15910910402110726;  // std dev = 0.081, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( location(A, I) )
%   | | | then return 0.12502239661879333;  // std dev = 2.798, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.8414589649401938;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5675374649126431;  // std dev = 0.082, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.403953031665774;  // std dev = 0.923, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.049965802297067506;  // std dev = 2.846, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6172112347999767;  // std dev = 1.905, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.14289671189193415;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6600588550604501;  // std dev = 0.192, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1110231285901253;  // std dev = 2.466, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.12890477597408212;  // std dev = 1.393, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44940196155183537;  // std dev = 0.178, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5694389357672999;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6208270470179592;  // std dev = 0.179, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.05684289370088931;  // std dev = 4.424, 191.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.418111511343636;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6150298650206124;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.037345841738465405;  // std dev = 2.868, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return -0.08208719773810436;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.313645097316018;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.38773021090483945;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.05040884960619556;  // std dev = 4.573, 212.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32111723714373197;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08266187781263301;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.11135460431381027;  // std dev = 2.445, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.37608902050080695;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.24877135956577723;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4364823177025689;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2554488409784893;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.016563877989518822;  // std dev = 0.879, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06962247724280156;  // std dev = 1.297, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13965392322092257;  // std dev = 0.937, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.07887222176670682;  // std dev = 4.092, 146.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=46 */
%   | | | else return 0.003899103875180308;  // std dev = 3.161, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24481635187724746;  // std dev = 0.220, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3162343631408598;  // std dev = 0.163, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2657113192943122;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.572986455210974;  // std dev = 1.237, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1755504160817414;  // std dev = 0.770, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2972412338008574;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05825480956929098;  // std dev = 3.471, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1677309466302187;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22008447664799582;  // std dev = 0.066, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43946325126449415;  // std dev = 1.617, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.1438590937462677;  // std dev = 0.365, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.00843505376670492;  // std dev = 0.922, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.3718610623282408;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.13516753434823497;  // std dev = 2.220, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15083256001137094;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18830719382225802;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.23739519266060727;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09126669000583076;  // std dev = 0.292, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.09727520000411885;  // std dev = 0.976, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.015822995928000055;  // std dev = 1.478, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2014523720068034;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06756210002350126;  // std dev = 2.735, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return 0.05178552123186156;  // std dev = 2.318, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12782164004674645;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15135853589217463;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.115867602541332;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.030676443563529925;  // std dev = 0.496, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.23094997428546238;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.004306158252343042;  // std dev = 1.669, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17100528878777396;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01201185839499679;  // std dev = 2.994, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | | | else return -0.07160577739422608;  // std dev = 2.588, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.642', 'seconds']
Parameter learned model CLL:-0.183357 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.248, 56, 13], 'false,false,true,false': [5.189, 87, 39], 'false,false,false,true': [2.471, 19, 9], 'false,false,false,false': [1.477, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.912, 1, 7], 'false,true,true': [0.957, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.317, 6, 52], 'false,false,true,false': [0.081, 130, 0], 'false,false,false,true': [2.798, 27, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.082, 0, 11], 'true,false': [0.923, 1, 4], 'false,true,true': [2.846, 52, 14], 'false,true,false,true': [1.905, 4, 42], 'false,true,false,false': [0.0, 85, 0], 'false,false,true,true': [0.192, 0, 3], 'false,false,true,false': [2.466, 21, 9], 'false,false,false,true': [1.393, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.178, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.179, 0, 6], 'false,true,false': [4.424, 142, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.868, 35, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.021, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.085, 0, 6], 'false,true': [4.573, 156, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.765, 1, 2], 'false,false,false,true': [2.445, 19, 9], 'false,false,false,false': [1.058, 2, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.005, 0, 9], 'true,true,false': [0.055, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.879, 1, 2], 'false,true': [1.297, 30, 5], 'false,false,true': [0.937, 1, 5], 'false,false,false,true': [4.092, 100, 46], 'false,false,false,false': [3.161, 42, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.22, 0, 13], 'true,true,true,false': [0.163, 0, 3], 'true,true,false,true': [0.019, 0, 3], 'true,true,false,false': [1.237, 1, 33], 'true,false': [0.77, 115, 0], 'false,true': [0.028, 0, 3], 'false,false,true': [3.471, 72, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 8], 'true,false': [0.066, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.617, 2, 56], 'false,true,false': [0.365, 142, 0], 'false,false,true,true': [0.922, 1, 3], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [2.22, 17, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.035, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.161, 0, 5], 'false,true,true': [0.292, 21, 1], 'false,true,false,true': [0.976, 1, 6], 'false,true,false,false': [1.478, 55, 17], 'false,false,true': [0.021, 0, 3], 'false,false,false,true': [2.735, 55, 31], 'false,false,false,false': [2.318, 23, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.011, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.496, 1, 2], 'true,false': [0.1, 0, 3], 'false,true': [1.669, 62, 24], 'false,false,true': [0.019, 0, 3], 'false,false,false,true': [2.994, 70, 31], 'false,false,false,false': [2.588, 42, 12]}]
{'': [0.05859374999999978, 0.2073116590396835], 'false': [0.10937499999999978, 0.1986996858791743], 'false,false': [0.1955555555555564, 0.21301775147928945], 'false,false,false': [0.21811224489795927, 0.1983471074380164], 'false,false,true': [0.15290905272001626, 0.21371882086167857], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, 0.18750000000000006], 'true': [-1.4802973661668753e-16, 0.18750000000000006]}
{'': [0.054556190053438536, 0.20729402281103104], 'false': [0.11436836921285842, 0.2023799725103176], 'false,false': [0.19995337964408327, 0.21351772085705867], 'false,false,false': [0.20597554782679942, 0.0], 'false,false,true': [0.09254943691296379, 5.061307633516831e-05], 'false,true': [0.11436836921285842, nan], 'true': [1.1102230246251565e-16, 0.10399158673791786]}
{'': [0.05940192404990591, 0.15986306503025555], 'false': [0.14828973173164692, 0.21166609961731883], 'false,false': [0.21038247489089218, 0.2155666081072617], 'false,false,false': [0.2155666081072617, nan], 'false,false,true': [0.012297598528418904, 0.20278730535070333], 'false,true': [0.12268834302966213, 0.15935127962542195], 'false,true,false': [0.07891963413728313, -4.179663151530001e-17], 'true': [0.0006088089052874421, 0.17034936894258534]}
{'': [0.0021171187632130404, 0.12495627864283038], 'false': [0.10958378176716622, 0.1819711351841678], 'false,false': [0.008617075114411343, 0.18060449352173802], 'false,false,false': [0.1788637441892695, 0.1875], 'false,true': [0.0049196358593739066, 0.1024652972661824], 'false,false,true': [0.0, 0.0], 'false,true,true': [0.0, 0.0053623268867109], 'true': [0.0021171187632130404, nan]}
{'': [0.0018277624212413043, 0.11746121184748733], 'false': [0.09863485827181816, 0.21680625731439127], 'false,false': [0.1569842890964695, 0.22404827426638055], 'false,false,false': [0.2134398576757528, 0.22398993107727844], 'false,false,true': [0.0, 0.19509714586352842], 'true': [4.8219693226930145e-05, 0.0012039140799816421], 'true,true': [4.8219693226930145e-05, nan]}
{'': [0.06343188845247316, 0.12375271139841364], 'false': [0.048093595111093866, 0.13404729846850608], 'false,false': [0.14641641175020637, 0.13348798370172985], 'false,false,false': [0.11467871489026409, 0.17846375439632148], 'true': [0.007744367876621105, 0.20387770363769114], 'true,false': [0.0, 0.2575704317980278], 'true,true': [2.5630765394524246e-06, 0.000769687581290035], 'true,false,true': [0.0, nan]}
{'': [0.10766854936130472, 0.11525861717708659], 'false': [0.00025333288489557776, 0.11699183722802237], 'false,false': [0.11699183722802237, nan], 'true': [0.05312408035525076, 0.005150924954709613], 'true,true': [0.005463080897126535, 0.04836919071927363], 'true,true,false': [0.00012352481973050092, 0.04497064698420521], 'true,true,true': [0.0037210886851712236, 0.008867531295159603]}
{'': [0.0009705575604755046, 0.09838001499648874], 'false': [0.08380531116635133, 0.17890608156320545], 'false,false': [0.19107813288885925, 0.16992798025542385], 'false,false,true': [0.21243197337128017, 0.0], 'false,false,false': [0.16992798025542385, nan], 'false,true': [0.04509371578126966, 0.0009402516883070756], 'false,true,true': [nan, 0.04509371578126951], 'true': [3.469446951953614e-18, 0.0006179570781804247]}
{'': [0.0032619170019108426, 0.07467225008041975], 'false': [0.03394429709497034, 0.10414766025456117], 'false,false': [0.00014862465557093085, 0.10626237197702418], 'false,false,false': [0.08697153652508818, 0.1534858060722676], 'false,true': [0.0038795460115442566, 0.04072572915419721], 'false,true,false': [0.13595408426483868, 0.03033401921301802], 'true': [0.00012336910926481203, 0.004653062585821044], 'true,false': [0.0, 0.005182069831326264]}
{'': [0.021369307748896237, 0.07705317688312797], 'false': [0.03239132417405555, 0.10133269234119924], 'false,false': [0.00011501504863892693, 0.10261976473812319], 'false,false,false': [0.08874017077992404, 0.12402372789796925], 'true': [0.022038570712944856, 0.003329689741227604], 'true,true': [9.997463534098805e-05, 0.06544232805658123], 'true,true,false': [0.0, 0.081887648046579], 'true,true,true': [0.0, 5.668480387410746e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
1;false,false,false;location(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;location(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.419
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.0399671169176941;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.07383520960931629;  // std dev = 2.937, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return 0.2008062777568541;  // std dev = 5.675, 143.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.4178724455614659;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7385128322212614;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.3861400788776212;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7816196285008714;  // std dev = 1.655, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.16056515511398012;  // std dev = 0.166, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( location(A, J) )
%   | | | then return 0.17452019843073932;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.33190566652871933;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5662393334476138;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4171967891416304;  // std dev = 0.821, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.03870962527100489;  // std dev = 1.563, 37.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | | else return 0.14302141951778863;  // std dev = 2.151, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.647562975770227;  // std dev = 1.373, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14377914169220318;  // std dev = 0.065, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then return 0.4886376179389269;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.04142804780336118;  // std dev = 1.077, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1677263240648037;  // std dev = 2.267, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.39193599598110584;  // std dev = 0.213, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.644378795133518;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3517989507696059;  // std dev = 1.163, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( location(A, G), interaction(A, H) )
%   | | | then return -0.013971920814185607;  // std dev = 2.578, 97.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=17 */
%   | | | else return 0.08474482569756943;  // std dev = 3.401, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.529386901728979;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.09579745369793582;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.24014394639326128;  // std dev = 1.406, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0768652908943501;  // std dev = 2.373, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.2264177420021302;  // std dev = 0.291, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.39666908019429553;  // std dev = 0.112, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11355248121147864;  // std dev = 0.009, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2655507420207641;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04133217652367713;  // std dev = 4.371, 201.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=52 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.4137614237512325;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15910090279563574;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.040637605893174805;  // std dev = 2.190, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.16885960283431245;  // std dev = 1.733, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.272410320548894;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.23976994406977542;  // std dev = 0.707, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.3181690906369049;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.43993184633603527;  // std dev = 0.132, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3127095880830799;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.02888654358445934;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.25054134029468084;  // std dev = 1.576, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return -0.042264929594164495;  // std dev = 1.843, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.054676121144210804;  // std dev = 4.278, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2684835937332814;  // std dev = 0.066, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.23227423312717402;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5964617325740975;  // std dev = 0.604, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1712582391393298;  // std dev = 0.078, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.03125761374794131;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5385433830062972;  // std dev = 0.202, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.17048521117380483;  // std dev = 0.079, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.036975266037681705;  // std dev = 2.111, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return -0.03178083948557297;  // std dev = 1.603, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18196223566232295;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21728482779316508;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.29204201193413426;  // std dev = 1.035, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.4225813285885064;  // std dev = 1.125, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | else return -0.13194862553055048;  // std dev = 0.033, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( location(A, J) )
%   | | | then return 0.2577354195344956;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.04284468992798606;  // std dev = 1.390, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.03379925168453719;  // std dev = 1.954, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1636991555645734;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.20537293232629095;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( phenotype(A, H), enzyme(G, I) )
%   | | | then return 0.019244648388312146;  // std dev = 0.415, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.06017748336080422;  // std dev = 0.687, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.039452871357897996;  // std dev = 1.082, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.020818821819921444;  // std dev = 1.197, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.22188774205292727;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return -0.006451621253308656;  // std dev = 3.535, 147.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=41 */
%   | | | else return -0.06424391179505322;  // std dev = 0.887, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.14255058132380807;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.01991223109733259;  // std dev = 0.259, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.18097691077084313;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(G, I), complex(H, I) )
%   | | | then return -0.05667867918905572;  // std dev = 1.526, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.00562023638006711;  // std dev = 1.209, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else return 0.0924300973001178;  // std dev = 0.471, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.07139451193155905;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.05942705973052103;  // std dev = 1.935, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.04678616023382865;  // std dev = 2.819, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.802', 'seconds']
Refined model CLL: -0.177166


******************************************
Best model found
******************************************
Results 

CLL : -0.185672 

AUC ROC : 0.986107 

AUC PR : 0.243923 

Precision : 0.164729 

Recall : 0.90106 

F1 : 0.278536 

Total Learning Time : 3.419 

Total Inference Time : 3.3683130741119385 

Total revision time: 11.387990076065064
Best scored revision CLL: -0.177166


Results 

CLL : -0.185672 

AUC ROC : 0.986107 

AUC PR : 0.243923 

Precision : 0.164729 

Recall : 0.90106 

F1 : 0.278536 

Total Learning Time : 11.402077991485596 

Total Inference Time : 3.3683130741119385 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.179
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2047624809162454;  // std dev = 7.540, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16981324829588426;  // std dev = 5.395, 130.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=44 */
%   | | | else return 0.1595959846435063;  // std dev = 5.375, 131.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15335229260589456;  // std dev = 4.783, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | | | else return 0.15831293198021984;  // std dev = 5.808, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08412753311265672;  // std dev = 3.734, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0.09911372574558712;  // std dev = 6.762, 211.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07655072229053547;  // std dev = 7.737, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14086781584610372;  // std dev = 7.283, 223.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7248165910923098;  // std dev = 0.003, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.27525136202323686;  // std dev = 0.004, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.01752791605174117;  // std dev = 4.110, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | else return 0.03788795861494884;  // std dev = 4.381, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02580455187204556;  // std dev = 3.832, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | | else return 0.07778952687102351;  // std dev = 5.763, 144.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.020776393219226825;  // std dev = 7.064, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03678187971239629;  // std dev = 6.952, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.553', 'seconds']
Parameter learned model CLL:-0.338109 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.54, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.395, 86, 44], 'false,false,false,false': [5.375, 88, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.783, 66, 35], 'false,false,false,false': [5.808, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.734, 46, 20], 'false,false,false,false': [6.762, 144, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.737, 192, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.283, 136, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.003, 0, 35], 'true,false': [0.004, 66, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.11, 57, 24], 'false,false,false,false': [4.381, 61, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.832, 75, 35], 'false,false,false,false': [5.763, 92, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.064, 186, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.952, 167, 87]}]
{'': [nan, 0.22647259567308548], 'false': [nan, 0.2264725956730854], 'false,false': [nan, 0.22647259567308548], 'false,false,false': [nan, 0.2264725956730854]}
{'': [nan, 0.2222222222222216], 'false': [nan, 0.22222222222222296], 'false,false': [nan, 0.2222222222222216], 'false,false,false': [0.22390532544378772, 0.22049997086416948]}
{'': [nan, 0.22736897776197673], 'false': [nan, 0.22736897776197673], 'false,false': [nan, 0.22736897776197584], 'false,false,false': [0.22648487528542774, 0.2279623364304528]}
{'': [nan, 0.21542717618206894], 'false': [nan, 0.21542717618206894], 'false,false': [nan, 0.21542717618206866], 'false,false,false': [0.21120293847566576, 0.2166949902620975]}
{'': [nan, 0.21456222098614022], 'false': [nan, 0.21456222098614022], 'false,false': [nan, 0.21456222098614094], 'false,false,false': [nan, 0.21456222098614094]}
{'': [nan, 0.23784340346701316], 'false': [nan, 0.23784340346701316], 'false,false': [nan, 0.23784340346701352], 'false,false,false': [nan, 0.23784340346701274]}
{'': [0.22647938886902502, 0.21233810995170727], 'true': [2.2164604323344455e-07, 2.262636696858885e-07], 'false': [nan, 0.21233810995170727], 'false,false': [nan, 0.21233810995170727], 'false,false,false': [0.2085048010973937, 0.21562933972983173], 'true,true': [nan, 2.2164604323344455e-07], 'true,true,false': [nan, 2.2164604323344455e-07]}
{'': [nan, 0.18922743668900124], 'false': [nan, 0.18922743668900124], 'false,false': [nan, 0.18922743668900216], 'false,false,false': [0.13347808833190974, 0.23064339745854934]}
{'': [nan, 0.1828065025029432], 'false': [nan, 0.18280650250294456], 'false,false': [nan, 0.18280650250294456], 'false,false,false': [nan, 0.18280650250294456]}
{'': [nan, 0.19026935976214052], 'false': [nan, 0.19026935976214052], 'false,false': [nan, 0.19026935976214043], 'false,false,false': [nan, 0.19026935976214043]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.584
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, C) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( phenotype(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( enzyme(A, G), enzyme(F, H) )
%   | | | then return 0.03206197857777315;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.17579599392304157;  // std dev = 4.292, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.40814893509951233;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.2123156017661781;  // std dev = 4.686, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then return 0.42307896302832476;  // std dev = 0.865, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.759041459552964;  // std dev = 0.143, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( complex(A, F), phenotype(A, G) )
%   | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.8210225248658827;  // std dev = 0.160, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.16629901425301438;  // std dev = 0.185, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.12673371204829958;  // std dev = 3.140, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.2236668665282894;  // std dev = 5.015, 106.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( enzyme(A, E), interaction(F, A) )
%   | then return 0.3782988132703833;  // std dev = 0.998, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.6527946088071426;  // std dev = 0.166, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.06741553407613138;  // std dev = 0.389, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   else if ( interaction(A, G), location(A, H) )
%   | then if ( complex(G, I), enzyme(G, J) )
%   | | then return 0.2713612089191329;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5785480875508324;  // std dev = 0.929, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.03770421403338551;  // std dev = 2.866, 64.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=10 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.5695308654838533;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.06970315323640694;  // std dev = 2.989, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.14032651055982204;  // std dev = 4.360, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6860084796061074;  // std dev = 0.123, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.16250994209614847;  // std dev = 0.151, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( interaction(F, A), location(A, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, F), location(H, G) )
%   | | | then return 0.6023321747887054;  // std dev = 0.495, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.11293938560699278;  // std dev = 1.301, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.19056896503030846;  // std dev = 0.484, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0.06602696539331794;  // std dev = 5.558, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | else if ( location(A, I) )
%   | | then return 0.41004826711304637;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.08820962012386842;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11421188802810914;  // std dev = 1.215, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( complex(D, E), location(A, F) )
%   | then if ( phenotype(A, G), interaction(D, D) )
%   | | then return 0.4657225247499427;  // std dev = 0.751, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.0802091868705397;  // std dev = 0.958, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.31185205866370147;  // std dev = 1.928, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( enzyme(D, I), phenotype(A, J) )
%   | | then return 0.26223936023270744;  // std dev = 0.804, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.07391504601561688;  // std dev = 0.402, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.32567011027370385;  // std dev = 0.285, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( recursion_proteinclass(M, B) )
%   | | | then return 0.4227711773640212;  // std dev = 1.226, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.04844087247896991;  // std dev = 4.505, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   | | else return -0.026284396489368363;  // std dev = 0.365, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.24879231094209484;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.333300235467744;  // std dev = 0.218, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.5585786135877944;  // std dev = 0.186, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), enzyme(H, F) )
%   | | | then return -0.18326718451481516;  // std dev = 1.031, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 5.52858671382328E-4;  // std dev = 2.851, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(I, K), complex(I, L) )
%   | | | then return 0.019969785570092796;  // std dev = 3.002, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.14294307372390677;  // std dev = 4.019, 73.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.06523035454787611;  // std dev = 1.285, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.01302200177514929;  // std dev = 1.755, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.512780566638622;  // std dev = 0.170, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.20952577832845548;  // std dev = 0.083, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( phenotype(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.06565014709419045;  // std dev = 0.708, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.16603276643652082;  // std dev = 1.264, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return -0.018181795423871536;  // std dev = 0.260, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( location(H, J) )
%   | | | then return 0.07854362852322544;  // std dev = 2.147, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.43176375325517763;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.08509342360470111;  // std dev = 2.182, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.013918339210623546;  // std dev = 3.852, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.252476958137066;  // std dev = 0.128, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( enzyme(D, G) )
%   | | | then return -0.006237340962302329;  // std dev = 0.368, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13008801318533184;  // std dev = 0.615, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11274885496819566;  // std dev = 0.134, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.013391590878494671;  // std dev = 1.302, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.01355562689847848;  // std dev = 1.717, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.19228054538663805;  // std dev = 1.718, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.09756315121513234;  // std dev = 1.321, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.0169476241531849;  // std dev = 5.023, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.20674871417257656;  // std dev = 0.123, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( phenotype(D, E) )
%   | | then return 0.01033586914595061;  // std dev = 0.312, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | else return -0.07342963251072832;  // std dev = 0.364, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.42330782523509447;  // std dev = 0.157, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.19502199159200057;  // std dev = 0.084, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6481071217328248;  // std dev = 0.220, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.28542371335377625;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.0817901870217476;  // std dev = 3.450, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.2287627783659734;  // std dev = 1.216, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.02274112058142315;  // std dev = 0.241, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(E, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.27036538730756066;  // std dev = 0.284, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0024501209022199126;  // std dev = 1.954, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.09834453908627468;  // std dev = 1.381, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.5316482746225337;  // std dev = 0.905, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( phenotype(I, J), complex(I, K) )
%   | | | then return 0.021813023780863854;  // std dev = 1.511, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.08793632142711895;  // std dev = 1.930, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.14436634089911748;  // std dev = 1.171, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.022388957612503108;  // std dev = 3.634, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.125', 'seconds']
Refined model CLL: -0.265418


******************************************
Best model found
******************************************
Results 

CLL : -0.278111 

AUC ROC : 0.904025 

AUC PR : 0.291017 

Precision : 0.324444 

Recall : 0.51773 

F1 : 0.398907 

Total Learning Time : 8.584 

Total Inference Time : 4.221871852874756 

Total revision time: 15.703558433532715
Best scored revision CLL: -0.265418


Results 

CLL : -0.278111 

AUC ROC : 0.904025 

AUC PR : 0.291017 

Precision : 0.324444 

Recall : 0.51773 

F1 : 0.398907 

Total Learning Time : 15.73269485282898 

Total Inference Time : 4.221871852874756 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.25
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2071422236901168;  // std dev = 8.228, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19212890347749953;  // std dev = 5.764, 144.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=52 */
%   | | | else return 0.15806181752362114;  // std dev = 5.916, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17311428756366073;  // std dev = 5.086, 111.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=41 */
%   | | | else return 0.13029467378311052;  // std dev = 6.524, 194.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12705933480480805;  // std dev = 4.329, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   | | | else return 0.1341677862356552;  // std dev = 6.979, 214.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.058174179875764925;  // std dev = 8.526, 346.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08992951168953935;  // std dev = 8.263, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7231835188202514;  // std dev = 0.016, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27662328507784534;  // std dev = 0.021, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11205820602339542;  // std dev = 3.766, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.09254956839156857;  // std dev = 5.071, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07808887685117766;  // std dev = 3.933, 106.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=41 */
%   | | | else return 0.05923708406318216;  // std dev = 6.418, 182.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03257113123587176;  // std dev = 7.619, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026207753164606495;  // std dev = 7.614, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.224', 'seconds']
Parameter learned model CLL:-0.344214 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.228, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.764, 92, 52], 'false,false,false,false': [5.916, 107, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.086, 70, 41], 'false,false,false,false': [6.524, 131, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.329, 53, 29], 'false,false,false,false': [6.979, 139, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.526, 242, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.263, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.016, 0, 41], 'true,false': [0.021, 70, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.766, 37, 23], 'false,false,false,false': [5.071, 72, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.933, 65, 41], 'false,false,false,false': [6.418, 119, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.619, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.614, 205, 104]}]
{'': [nan, 0.2271969731093216], 'false': [nan, 0.22719697310932], 'false,false': [nan, 0.2271969731093216], 'false,false,false': [nan, 0.22719697310932]}
{'': [nan, 0.2254245226502861], 'false': [nan, 0.22542452265028456], 'false,false': [nan, 0.2254245226502861], 'false,false,false': [0.23070987654320943, 0.2200862307661877]}
{'': [nan, 0.2247747406961828], 'false': [nan, 0.2247747406961828], 'false,false': [nan, 0.22477474069618225], 'false,false,false': [0.23302982574275644, 0.21938418958275346]}
{'': [nan, 0.22789685282295202], 'false': [nan, 0.22789685282295202], 'false,false': [nan, 0.22789685282295205], 'false,false,false': [0.2285841760856642, 0.2276194877669556]}
{'': [nan, 0.2101076681394546], 'false': [nan, 0.2101076681394546], 'false,false': [nan, 0.21010766813945345], 'false,false,false': [nan, 0.21010766813945345]}
{'': [nan, 0.22531971898168318], 'false': [nan, 0.22531971898168318], 'false,false': [nan, 0.225319718981682], 'false,false,false': [nan, 0.22531971898168254]}
{'': [0.2328518901865638, 0.23204935169153706], 'true': [5.9992587493557094e-06, 6.393161521258049e-06], 'false': [nan, 0.23204935169153706], 'false,false': [nan, 0.23204935169153706], 'false,false,false': [0.23638888888888826, 0.22959183673469277], 'true,true': [nan, 5.9992587493557094e-06], 'true,true,false': [nan, 5.9992587493557094e-06]}
{'': [nan, 0.19678799977001893], 'false': [nan, 0.19678799977001893], 'false,false': [nan, 0.19678799977001954], 'false,false,false': [0.14589409106249557, 0.2262987037417365]}
{'': [nan, 0.18727707010691297], 'false': [nan, 0.18727707010691294], 'false,false': [nan, 0.18727707010691294], 'false,false,false': [nan, 0.18727707010691294]}
{'': [nan, 0.18761780305104167], 'false': [nan, 0.18761780305104167], 'false,false': [nan, 0.18761780305104167], 'false,false,false': [nan, 0.18761780305104167]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 11.851
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6273797043302811;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | else return -0.042614423679113625;  // std dev = 3.422, 131.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=13 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.20754652546095678;  // std dev = 4.344, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return 0.11529179224236952;  // std dev = 3.657, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(D, E) )
%   | then if ( complex(A, F), complex(C, F) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.21947341221095437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.7324548349452545;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, G), complex(A, H) )
%   | then if ( complex(G, I), interaction(G, J) )
%   | | then if ( recursion_proteinclass(J, B), interaction(J, K) )
%   | | | then return 0.7636183198639677;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.061122836828582175;  // std dev = 2.032, 61.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   | | else return 0.41457291685468045;  // std dev = 1.012, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.7551805016408266;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.24666824411807167;  // std dev = 3.053, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.11236743734263213;  // std dev = 5.879, 174.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, C) )
%   | then return 0.040549617509586064;  // std dev = 0.357, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.5363240230851606;  // std dev = 0.332, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(C, A) )
%   | | | then return -0.15791354106753872;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.11224268305099495;  // std dev = 2.779, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.5433210006457947;  // std dev = 0.244, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7980556565585385;  // std dev = 0.207, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.17681533502175323;  // std dev = 0.043, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.09520487919163059;  // std dev = 5.029, 134.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=38 */
%   | | | else return 0.1646585001160384;  // std dev = 2.216, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.44676100702846255;  // std dev = 0.234, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( location(F, E), location(D, E) )
%   | | | then return 0.5037257949144975;  // std dev = 1.256, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return -0.028529177959712347;  // std dev = 1.022, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return -0.09428354839091815;  // std dev = 1.943, 71.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=5 */
%   | | | else return 0.053739834633818206;  // std dev = 2.380, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6881365562088033;  // std dev = 0.183, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.15879924427681502;  // std dev = 0.088, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.11051699449823192;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.17251913697811613;  // std dev = 3.650, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(C, D), complex(A, E) )
%   | then return -0.05870137005535829;  // std dev = 0.301, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.41803459399732223;  // std dev = 0.177, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, A), complex(A, G) )
%   | | | then return 0.16040926440551787;  // std dev = 0.712, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.008202946304804334;  // std dev = 1.751, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4407268008914129;  // std dev = 0.081, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( enzyme(J, K), location(A, L) )
%   | | | then return -0.08359468498225679;  // std dev = 1.086, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.08881286515404609;  // std dev = 1.849, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.08601386093656668;  // std dev = 5.425, 181.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=59 */
%   | | | else return 0.23406098894731361;  // std dev = 1.719, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3676301090563537;  // std dev = 0.082, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.07834852422128381;  // std dev = 0.411, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( complex(A, E), interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B), interaction(F, G) )
%   | | then return 0.33164928886922834;  // std dev = 0.168, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16988698773191468;  // std dev = 0.389, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.02733314963119578;  // std dev = 2.707, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return -0.10179801511024633;  // std dev = 0.937, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.048313630269966934;  // std dev = 3.408, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.16000757473054697;  // std dev = 3.413, 59.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=25 */
%   | | | else return 0.10222849715006568;  // std dev = 2.944, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.03326036591378836;  // std dev = 0.311, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, E), complex(D, G) )
%   | | | then return 0.3304842534379538;  // std dev = 1.165, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.015146365737782457;  // std dev = 0.623, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( phenotype(A, E), interaction(A, H) )
%   | | | then return -0.10602980353734197;  // std dev = 1.437, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.029273240273788453;  // std dev = 4.835, 144.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=41 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.631705800782039;  // std dev = 0.193, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.25524501921424203;  // std dev = 0.169, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.1585647166894811;  // std dev = 1.369, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.35553297845376264;  // std dev = 0.668, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.32166985053598796;  // std dev = 0.140, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.25759491340294166;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then return -0.2332589955583139;  // std dev = 0.968, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.26502983576336736;  // std dev = 0.167, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.11482743825075799;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.2648585309107898;  // std dev = 1.402, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return 0.010155398433198643;  // std dev = 5.439, 205.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=52 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.15212482238446706;  // std dev = 1.808, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.0875715748038631;  // std dev = 2.153, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.17026493328917838;  // std dev = 0.330, 40.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=33 */
%   | else return -0.07383375040945661;  // std dev = 0.284, 126.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=17 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( phenotype(A, H), location(A, I) )
%   | | then if ( complex(F, J) )
%   | | | then return 0.023184369892649503;  // std dev = 3.312, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0.1548317871646207;  // std dev = 1.155, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(K, F), interaction(K, K) )
%   | | | then return 0.02617305159030654;  // std dev = 0.911, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.22019277256060316;  // std dev = 2.584, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( complex(A, L), location(A, M) )
%   | | then return -0.0856426149283573;  // std dev = 0.276, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.31669410422109473;  // std dev = 0.663, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0020700130184573375;  // std dev = 1.624, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.15505930469076884;  // std dev = 0.344, 62.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=40 */
%   | else return -0.153451688207154;  // std dev = 0.046, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( location(A, H), location(F, H) )
%   | | then if ( interaction(A, I), interaction(F, I) )
%   | | | then return 0.009779863487751114;  // std dev = 1.822, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.11059337219352622;  // std dev = 3.699, 67.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=27 */
%   | | else if ( complex(F, J), enzyme(F, K) )
%   | | | then return -0.051407582566555046;  // std dev = 1.061, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.033210970793210504;  // std dev = 2.432, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | else if ( interaction(A, L), interaction(M, A) )
%   | | then return 0.44165920057679503;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, N) )
%   | | | then return -0.10358510602123128;  // std dev = 1.735, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.01763159623507164;  // std dev = 1.064, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.592', 'seconds']
Refined model CLL: -0.258512


******************************************
Best model found
******************************************
Results 

CLL : -0.263511 

AUC ROC : 0.860231 

AUC PR : 0.206035 

Precision : 0.251685 

Recall : 0.422642 

F1 : 0.315493 

Total Learning Time : 11.851 

Total Inference Time : 8.875271320343018 

Total revision time: 24.05515711402893
Best scored revision CLL: -0.258512


Results 

CLL : -0.263511 

AUC ROC : 0.860231 

AUC PR : 0.206035 

Precision : 0.251685 

Recall : 0.422642 

F1 : 0.315493 

Total Learning Time : 24.084293533325194 

Total Inference Time : 8.875271320343018 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.171
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1668737673142774;  // std dev = 7.975, 298.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16143821568636393;  // std dev = 5.868, 157.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=51 */
%   | | | else return 0.18702480178250425;  // std dev = 5.161, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13543228269762878;  // std dev = 5.454, 136.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
%   | | | else return 0.11532673465336628;  // std dev = 5.780, 158.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1432248753118068;  // std dev = 4.107, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | | else return 0.11883544463058254;  // std dev = 6.662, 202.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12847834328991134;  // std dev = 7.682, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07267110927230841;  // std dev = 7.876, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7293626981237911;  // std dev = 0.000771, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2706231950562824;  // std dev = 0.001, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07148355559093525;  // std dev = 4.082, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | | else return 0.03984135240381368;  // std dev = 3.993, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04129504940763715;  // std dev = 4.256, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | | else return 0.0650999744904126;  // std dev = 5.627, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.052460984406882655;  // std dev = 6.994, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027958884667932626;  // std dev = 7.073, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.541', 'seconds']
Parameter learned model CLL:-0.327934 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.975, 206, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.868, 106, 51], 'false,false,false,false': [5.161, 76, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.454, 92, 44], 'false,false,false,false': [5.78, 110, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.107, 48, 26], 'false,false,false,false': [6.662, 136, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.682, 165, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.876, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.000771, 0, 44], 'true,false': [0.001, 83, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.082, 50, 25], 'false,false,false,false': [3.993, 52, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.256, 88, 44], 'false,false,false,false': [5.627, 93, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.994, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.073, 183, 92]}]
{'': [nan, 0.21341381018873137], 'false': [nan, 0.2134138101887312], 'false,false': [nan, 0.21341381018873137], 'false,false,false': [nan, 0.2134138101887312]}
{'': [nan, 0.22302733230326846], 'false': [nan, 0.22302733230326507], 'false,false': [nan, 0.22302733230326846], 'false,false,false': [0.21931924215992374, 0.22762802249981814]}
{'': [nan, 0.21492317700263494], 'false': [nan, 0.21492317700263494], 'false,false': [nan, 0.21492317700263647], 'false,false,false': [0.21873801747552477, 0.21145252468394915]}
{'': [nan, 0.22200858840495738], 'false': [nan, 0.22200858840495738], 'false,false': [nan, 0.22200858840495646], 'false,false,false': [0.22790357925493004, 0.2196895500538825]}
{'': [nan, 0.22963447071988102], 'false': [nan, 0.22963447071988102], 'false,false': [nan, 0.22963447071988166], 'false,false,false': [nan, 0.22963447071988166]}
{'': [nan, 0.21999142555478882], 'false': [nan, 0.21999142555478882], 'false,false': [nan, 0.21999142555478826], 'false,false,false': [nan, 0.2199914255547886]}
{'': [0.22641807761022514, 0.21767252947785531], 'true': [1.3500420175722122e-08, 1.269528270460703e-08], 'false': [nan, 0.21767252947785531], 'false,false': [nan, 0.21767252947785531], 'false,false,false': [0.2222222222222221, 0.2126222222222225], 'true,true': [nan, 1.3500420175722122e-08], 'true,true,false': [nan, 1.3500420175722122e-08]}
{'': [nan, 0.18245300415150453], 'false': [nan, 0.18245300415150453], 'false,false': [nan, 0.18245300415150484], 'false,false,false': [0.1372041526514516, 0.22453963464639903]}
{'': [nan, 0.18526576711007392], 'false': [nan, 0.18526576711007522], 'false,false': [nan, 0.18526576711007522], 'false,false,false': [nan, 0.18526576711007522]}
{'': [nan, 0.18191137110542], 'false': [nan, 0.18191137110542], 'false,false': [nan, 0.18191137110542], 'false,false,false': [nan, 0.18191137110542]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.023
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, E), interaction(A, F) )
%   | | | then return 0.0636283871543069;  // std dev = 3.452, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | | else return 0.15045662740720414;  // std dev = 6.351, 195.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0.7494009686751072;  // std dev = 1.622, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return -0.15441705690082724;  // std dev = 0.112, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.15547253370773295;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.10777524900838988;  // std dev = 1.714, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.3936081007852678;  // std dev = 1.645, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.16708826959599654;  // std dev = 4.863, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.12025579444615056;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.03139244453642207;  // std dev = 1.401, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.32372161137020594;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(G, A), interaction(A, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.6502483202925162;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13548546886340185;  // std dev = 2.648, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.11552165963300486;  // std dev = 2.940, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.07848288134474046;  // std dev = 5.262, 159.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=42 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.12202891185407211;  // std dev = 0.136, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(D, F), complex(A, F) )
%   | | | then return 0.151486781193479;  // std dev = 1.072, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07042940135837271;  // std dev = 1.625, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6139913362222127;  // std dev = 1.385, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | | else return -0.15644912683138384;  // std dev = 0.393, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.22082277291258484;  // std dev = 2.947, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.12144241522501158;  // std dev = 4.149, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.37341527129272506;  // std dev = 0.093, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( interaction(D, F), complex(F, G) )
%   | | | then return 0.19234043569142503;  // std dev = 0.709, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0035561942247766543;  // std dev = 0.605, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.04318590188849135;  // std dev = 0.596, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.15612996405123056;  // std dev = 0.133, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), phenotype(K, L) )
%   | | | then return 0.061986010969328445;  // std dev = 2.608, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.30054716115627655;  // std dev = 1.908, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.10781806688254778;  // std dev = 2.918, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.05691456469471205;  // std dev = 4.303, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.2626378732815141;  // std dev = 0.255, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return -0.04015316574684124;  // std dev = 0.330, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( enzyme(A, H), phenotype(G, I) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.09058546907167582;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.014286807303763523;  // std dev = 2.021, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( enzyme(G, J), location(G, K) )
%   | | | then return 0.1709483839089789;  // std dev = 1.339, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.054983529395820525;  // std dev = 3.083, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | else if ( location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.4910426726484579;  // std dev = 2.035, 35.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=29 */
%   | | | else return -0.20534332089032;  // std dev = 0.361, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.006924525652020397;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4884196281920945;  // std dev = 0.188, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.1899414864763723;  // std dev = 0.082, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then if ( location(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -6.683040756497912E-4;  // std dev = 0.246, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.38926174490716764;  // std dev = 0.634, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.042125847110873055;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( location(A, I), location(H, I) )
%   | | | then return 0.03029374599401948;  // std dev = 1.444, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.04991043664990058;  // std dev = 0.933, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.15929204516130732;  // std dev = 1.118, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.0551917301684683;  // std dev = 3.904, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.1329671060897486;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21725151017163283;  // std dev = 0.116, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, A) )
%   | then return -0.10414632311299364;  // std dev = 0.132, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.3457871865985119;  // std dev = 1.020, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return -0.13763886645016352;  // std dev = 0.296, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.014705436103135124;  // std dev = 3.431, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | | else return 0.07782193722577986;  // std dev = 3.682, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17108042160198433;  // std dev = 0.081, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.27448710144775323;  // std dev = 0.400, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.6272749813349068;  // std dev = 0.352, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( phenotype(A, G), interaction(D, H) )
%   | | | then return -0.12404080051823653;  // std dev = 0.251, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.24133158122430232;  // std dev = 0.810, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5064490547191333;  // std dev = 0.950, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.19785920126616832;  // std dev = 0.487, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.028188501728990446;  // std dev = 1.964, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.2075822709480961;  // std dev = 1.677, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.09601040342381127;  // std dev = 0.211, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( enzyme(C, D), interaction(E, A) )
%   | | then return -0.09396516027221302;  // std dev = 0.235, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | else return -0.021920870618618526;  // std dev = 0.254, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( phenotype(F, H), complex(A, G) )
%   | | then return 0.2238910191468403;  // std dev = 0.427, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, I), location(F, I) )
%   | | | then return -0.007782846073298426;  // std dev = 1.894, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.08223983503030621;  // std dev = 1.585, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.16033289341060464;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.03552707883893798;  // std dev = 2.287, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0.04806925130625458;  // std dev = 1.346, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.448', 'seconds']
Refined model CLL: -0.20294


******************************************
Best model found
******************************************
Results 

CLL : -0.233325 

AUC ROC : 0.976001 

AUC PR : 0.239649 

Precision : 0.129677 

Recall : 0.725632 

F1 : 0.220033 

Total Learning Time : 6.023 

Total Inference Time : 2.9299027919769287 

Total revision time: 11.875333303451537
Best scored revision CLL: -0.20294


Results 

CLL : -0.233325 

AUC ROC : 0.976001 

AUC PR : 0.239649 

Precision : 0.129677 

Recall : 0.725632 

F1 : 0.220033 

Total Learning Time : 11.904469722747802 

Total Inference Time : 2.9299027919769287 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.294
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17432540568774807;  // std dev = 7.669, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19419692930051255;  // std dev = 5.775, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
%   | | | else return 0.15633095662647026;  // std dev = 4.806, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1874781219981721;  // std dev = 4.171, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   | | | else return 0.16118892151259892;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13474999129745951;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.12888136472646658;  // std dev = 6.622, 194.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07739488944066135;  // std dev = 7.656, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.058150114757937785;  // std dev = 7.683, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7286267693152471;  // std dev = 0.021, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2710791857753391;  // std dev = 0.028, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04062084392764509;  // std dev = 4.777, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | | else return 0.08679097453568557;  // std dev = 4.040, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05398449975254025;  // std dev = 3.350, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.08144586455465444;  // std dev = 6.102, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04318752017707795;  // std dev = 7.026, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01014388026837848;  // std dev = 7.186, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.650', 'seconds']
Parameter learned model CLL:-0.340155 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.669, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.775, 93, 52], 'false,false,false,false': [4.806, 72, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.171, 46, 28], 'false,false,false,false': [6.133, 107, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.491, 34, 19], 'false,false,false,false': [6.622, 127, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.656, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.683, 188, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.021, 0, 28], 'true,false': [0.028, 45, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.777, 74, 33], 'false,false,false,false': [4.04, 47, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.35, 52, 28], 'false,false,false,false': [6.102, 104, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.026, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.186, 185, 86]}]
{'': [nan, 0.21620891003460282], 'false': [nan, 0.2162089100346027], 'false,false': [nan, 0.21620891003460282], 'false,false,false': [nan, 0.2162089100346027]}
{'': [nan, 0.2252345200869812], 'false': [nan, 0.22523452008698153], 'false,false': [nan, 0.2252345200869812], 'false,false,false': [0.23001189060641902, 0.2178711285154869]}
{'': [nan, 0.23031723267041537], 'false': [nan, 0.23031723267041537], 'false,false': [nan, 0.23031723267041615], 'false,false,false': [0.23514342641845634, 0.22793877031446477]}
{'': [nan, 0.2268954095366475], 'false': [nan, 0.2268954095366475], 'false,false': [nan, 0.22689540953664777], 'false,false,false': [0.22997508009967904, 0.2260466661120831]}
{'': [nan, 0.2170668943361087], 'false': [nan, 0.2170668943361087], 'false,false': [nan, 0.2170668943361098], 'false,false,false': [nan, 0.2170668943361098]}
{'': [nan, 0.2154515383082822], 'false': [nan, 0.2154515383082822], 'false,false': [nan, 0.21545153830828243], 'false,false,false': [nan, 0.21545153830828198]}
{'': [0.23631977735117354, 0.2191822346039513], 'true': [1.6192412434065267e-05, 1.701078918678631e-05], 'false': [nan, 0.2191822346039513], 'false,false': [nan, 0.2191822346039513], 'false,false,false': [0.21329373744431707, 0.22665895061728408], 'true,true': [nan, 1.6192412434065267e-05], 'true,true,false': [nan, 1.6192412434065267e-05]}
{'': [nan, 0.20042785780658803], 'false': [nan, 0.20042785780658803], 'false,false': [nan, 0.200427857806588], 'false,false,false': [0.14030877061195507, 0.22986699789209036]}
{'': [nan, 0.19361321607191373], 'false': [nan, 0.1936132160719138], 'false,false': [nan, 0.1936132160719138], 'false,false,false': [nan, 0.1936132160719138]}
{'': [nan, 0.190556386297159], 'false': [nan, 0.190556386297159], 'false,false': [nan, 0.19055638629715893], 'false,false,false': [nan, 0.19055638629715893]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.342
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( enzyme(E, G), complex(A, H) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.10033643509951176;  // std dev = 4.847, 128.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=31 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.24638422921715938;  // std dev = 4.493, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.716220207819358;  // std dev = 0.254, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), phenotype(D, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.26658907503459095;  // std dev = 1.620, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.4547386172957681;  // std dev = 1.340, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, D) )
%   | | | then return -0.14309419766973033;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14487661424882642;  // std dev = 1.883, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.09549078945074152;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.20521234472246494;  // std dev = 2.329, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.11912275277062379;  // std dev = 5.501, 149.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.24301829193549837;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6464188412266395;  // std dev = 0.069, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.3761412463291368;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.13055501859681987;  // std dev = 2.598, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.07036022621975098;  // std dev = 1.870, 42.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( phenotype(K, L) )
%   | | | then return -0.04810282405025033;  // std dev = 1.187, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.06537122097565265;  // std dev = 0.856, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return 0.2394298093093195;  // std dev = 2.466, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.13964218576288573;  // std dev = 5.070, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.18306627950513818;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.42250461284900037;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5629715817683404;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, A) )
%   | then return -0.11167404251025591;  // std dev = 0.046, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.692427716767368;  // std dev = 1.922, 50.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | | | else return -0.21315825174386124;  // std dev = 0.269, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( location(A, I) )
%   | | | then return 0.010631008329598457;  // std dev = 4.017, 93.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=21 */
%   | | | else return 0.16683024317692244;  // std dev = 1.362, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), interaction(E, E) )
%   | then if ( complex(C, F), complex(A, G) )
%   | | then return 0.14203997026421775;  // std dev = 1.023, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.03747102996878586;  // std dev = 0.379, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( complex(C, H), phenotype(C, I) )
%   | | then return 0.4669478121474328;  // std dev = 0.381, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07187839010850064;  // std dev = 1.213, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.27161738104367206;  // std dev = 1.611, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( interaction(A, K), complex(K, L) )
%   | then return 0.047431037462816544;  // std dev = 0.321, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.43685285806404117;  // std dev = 0.158, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, N), phenotype(A, P) )
%   | | | then return -0.0038958951620385995;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.11735620299437001;  // std dev = 3.972, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( enzyme(C, E) )
%   | then return 0.039121035327120864;  // std dev = 0.372, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.3348110928528737;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.001440347780468031;  // std dev = 1.565, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.1002764669056124;  // std dev = 4.347, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
%   else if ( phenotype(A, G), complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.6535085761904211;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.17507918618932933;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.1466541359808593;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.05559346106150148;  // std dev = 2.090, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.01569976267206637;  // std dev = 1.669, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.514762458233551;  // std dev = 0.173, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.19958260543725645;  // std dev = 0.075, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(E, F), interaction(G, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.04325040733257329;  // std dev = 0.686, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.29497491819974925;  // std dev = 1.170, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.4836974398542433;  // std dev = 0.640, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.015615229391748557;  // std dev = 4.200, 116.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.04964310955540769;  // std dev = 0.353, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.621256098420925;  // std dev = 0.318, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11934241498425657;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.17307608584096243;  // std dev = 0.281, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.06302129754411538;  // std dev = 0.287, 81.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   else if ( location(A, F), interaction(G, A) )
%   | then if ( complex(G, H), interaction(A, I) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.03586245205985196;  // std dev = 0.834, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.08266513373921847;  // std dev = 2.258, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.22563799906405382;  // std dev = 0.948, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.04050628264278122;  // std dev = 4.089, 109.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=37 */
%   | else if ( location(A, K), enzyme(A, L) )
%   | | then return 0.35460040524810194;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, M) )
%   | | | then return 0.05841766876083798;  // std dev = 1.168, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.22025027996020854;  // std dev = 1.168, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(C, E) )
%   | then return -0.0286448574346525;  // std dev = 0.289, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | else if ( interaction(C, C) )
%   | | then return 0.012013384541598247;  // std dev = 0.297, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.3223567795675811;  // std dev = 0.630, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( location(A, F), complex(A, G) )
%   | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.22667678454788226;  // std dev = 0.337, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | else return -0.1626238913888565;  // std dev = 0.058, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B), phenotype(J, K) )
%   | | | then return 0.45651367761545397;  // std dev = 0.360, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0069947574351109576;  // std dev = 2.268, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.2915556176598909;  // std dev = 1.428, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.09465900573055445;  // std dev = 3.307, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), interaction(D, A) )
%   | then if ( phenotype(D, E), complex(D, F) )
%   | | then return 0.2087496177114588;  // std dev = 0.194, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.11209238958382686;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3088503837594324;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.41860388086388345;  // std dev = 0.276, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, J), enzyme(J, K) )
%   | | | then return -0.12344556659422558;  // std dev = 1.495, 44.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | | | else return 0.005959563811664509;  // std dev = 2.038, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.26371132135295305;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.008020906148727545;  // std dev = 3.952, 106.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   | | | else return 0.06383610421553516;  // std dev = 2.559, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.430', 'seconds']
Refined model CLL: -0.268526


******************************************
Best model found
******************************************
Results 

CLL : -0.273493 

AUC ROC : 0.911727 

AUC PR : 0.199447 

Precision : 0.198473 

Recall : 0.459364 

F1 : 0.277186 

Total Learning Time : 6.342 

Total Inference Time : 2.8218541145324707 

Total revision time: 12.082235179901122
Best scored revision CLL: -0.268526


Results 

CLL : -0.273493 

AUC ROC : 0.911727 

AUC PR : 0.199447 

Precision : 0.198473 

Recall : 0.459364 

F1 : 0.277186 

Total Learning Time : 12.111371599197387 

Total Inference Time : 2.8218541145324707 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.253
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1264416180263402;  // std dev = 4.914, 123.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=33 */
%   | | | else return 0.15323090231262587;  // std dev = 5.038, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.681715202578795;  // std dev = 3.306, 82.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=69 */
%   | | | else return -0.15979815320688215;  // std dev = 0.022, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else if ( location(A, I) )
%   | | | then return 0.2048648556391363;  // std dev = 1.567, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11443799895780513;  // std dev = 4.266, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6703293402967787;  // std dev = 1.377, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.1410535165248478;  // std dev = 6.32e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14465767924350556;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.026779780115318317;  // std dev = 1.434, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08248641584169003;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.630742099932295;  // std dev = 0.965, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.03322840326502699;  // std dev = 5.123, 239.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6195159495879596;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08608865127122661;  // std dev = 1.629, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33742441942857665;  // std dev = 0.108, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.006876514806647804;  // std dev = 1.090, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06190180459319643;  // std dev = 5.437, 245.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46704241581124617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.015910392364862098;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.04110605962328336;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14854744611459575;  // std dev = 0.848, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.2459349265736971;  // std dev = 0.642, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3545578243325773;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.010436411353974063;  // std dev = 2.160, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3192156093868898;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05451446302706866;  // std dev = 4.861, 190.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=55 */
%   | | | else return -0.013671387508089444;  // std dev = 2.001, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.27509700168035944;  // std dev = 0.226, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2781569918027872;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.6762243876040653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5870562618801604;  // std dev = 0.456, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17080714807790312;  // std dev = 0.373, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.00415101817273722;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.10279839229674494;  // std dev = 3.857, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1807060528698463;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.24860564009757322;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38676354453767264;  // std dev = 2.772, 81.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=71 */
%   | | else return -0.1521050399490025;  // std dev = 0.238, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22587021187657486;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.017768829301239165;  // std dev = 1.443, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17738992696972378;  // std dev = 0.120, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20694537341960847;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.062415882178158286;  // std dev = 1.568, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.31013356607042186;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.002957248742144535;  // std dev = 1.842, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.04073328724739245;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03226348267957288;  // std dev = 3.503, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | | else return 0.1079962519660471;  // std dev = 1.308, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13982162432284087;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24716071628437464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17511890506388925;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.006916469463041254;  // std dev = 2.269, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.21608684365074327;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03608288509129916;  // std dev = 3.393, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | | else return -0.03846761011671623;  // std dev = 1.479, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.754', 'seconds']
Parameter learned model CLL:-0.196058 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.914, 90, 33], 'false,false,true,false': [5.038, 86, 36], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 5], 'false,true,true': [0.051, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.306, 13, 69], 'false,false,true,false': [0.022, 144, 0], 'false,false,false,true': [1.567, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.266, 79, 34], 'false,true,false,true': [1.377, 2, 37], 'false,true,false,false': [6.32e-08, 78, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 3, 2], 'false,false,false,true': [1.434, 10, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [0.707, 1, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.965, 1, 14], 'false,true,false': [5.123, 182, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.629, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.108, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.09, 2, 4], 'false,true': [5.437, 174, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.291, 10, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.848, 1, 7], 'true,true,false': [0.642, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.16, 35, 12], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [4.861, 135, 55], 'false,false,false,false': [2.001, 18, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.226, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.456, 0, 33], 'true,false': [0.373, 74, 0], 'false,true': [0.866, 1, 3], 'false,false,true': [3.857, 72, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.016, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.772, 10, 71], 'false,true,false': [0.238, 157, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.443, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.12, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.039, 0, 3], 'false,true,true': [1.568, 42, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.842, 38, 17], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [3.503, 82, 40], 'false,false,false,false': [1.308, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.04, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.035, 0, 3], 'false,true': [2.269, 77, 29], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [3.393, 81, 40], 'false,false,false,false': [1.479, 13, 4]}]
{'': [-1.6148698540002277e-16, 0.20733143513066318], 'false': [0.18750000000000006, 0.2043214148404473], 'false,false': [0.20231570179092076, 0.23999999999999985], 'false,false,false': [0.22222222222222224, 0.20408163265306126], 'false,false,true': [0.1963117192147544, 0.20800859983875414], 'false,true': [nan, 0.18750000000000006], 'false,true,false': [0.0, 0.22222222222222224], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [2.4223047810003414e-16, 0.21561295145786163], 'false': [0.0008585132404309951, 0.21362816886832275], 'false,false': [0.2120706309914017, 0.24545704490575698], 'false,false,false': [0.24545704490575698, nan], 'false,false,true': [0.13327441654252212, 3.229883608075252e-06], 'false,true': [0.0008585132404309951, nan], 'true': [7.401486830834377e-17, 0.0]}
{'': [-1.2111523905001707e-16, 0.1637102309720507], 'false': [0.16186645986919976, 0.1836434054073347], 'false,false': [0.24000000000000005, 0.15810801457388687], 'false,false,true': [nan, 0.24000000000000005], 'false,true': [0.1610861771603726, 0.16250997278402707], 'false,true,false': [0.04863515812273205, 5.124106267500723e-17], 'false,false,false': [0.15810801457388687, nan], 'true': [0.0, 0.0]}
{'': [0.07638888888888899, 0.13126187754466628], 'false': [0.12684832259714804, 0.20839849285929476], 'false,false': [0.0, 0.2041045259712001], 'false,false,false': [0.2041045259712001, nan], 'false,true': [0.06214166012387056, 0.10982539734348025], 'true': [1.3322676295501878e-16, 0.25], 'false,true,true': [nan, 0.06214166012387074], 'false,false,true': [nan, 0.0]}
{'': [0.11949888847105401, 0.12447737887672729], 'false': [0.12067166878878345, 0.1667234232618941], 'false,false': [0.0, 0.16305498290306367], 'false,false,false': [0.20408163265306123, 0.13888888888888898], 'true': [0.0016758604309643646, 0.19812574779349448], 'true,true': [0.0016758604309643646, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0911539717012863, 0.12379497869151619], 'false': [0.09925544869789436, 0.12882234207943427], 'false,false': [0.0, 0.12960282240840748], 'false,false,false': [0.12437916855070696, 0.16682885653650292], 'true': [0.09643329998704853, 0.0], 'true,true': [0.08996567179316001, 0.10304567547471102], 'true,false': [nan, 0.0]}
{'': [0.12208613674390101, 0.13505058764254316], 'false': [0.1875, 0.13284183212262954], 'false,false': [0.13284183212262954, nan], 'true': [0.054105110284420575, 0.0018815048596919175], 'true,true': [0.004650325617934981, 0.05168277970905573], 'true,true,false': [0.0, 0.006311336332215858], 'true,true,true': [0.005114506948860342, 0.0]}
{'': [0.0011664231045567747, 0.09992183307091447], 'false': [0.09771469550459058, 0.13275275464869501], 'false,false': [0.0, 0.13889630170258102], 'false,false,false': [0.13889630170258102, nan], 'false,true': [0.09485774128661947, 0.0003620795526129942], 'false,true,true': [nan, 0.09485774128661943], 'true': [0.0, 5.139231419091228e-05], 'false,false,true': [0.0, nan]}
{'': [0.0016300456350357958, 0.08589085245649346], 'false': [0.055764675734357436, 0.10814426272905599], 'false,false': [0.18750000000000003, 0.10557420187627022], 'false,false,false': [0.10058533209414194, 0.15564421147260368], 'false,true': [0.04636868938767626, 0.062215942838567774], 'false,true,false': [0.0, 0.06166219019342324], 'true': [0.001811020428515435, 0.0005121557022280676], 'true,false': [nan, 0.0005121557022280676]}
{'': [0.0012689740232952077, 0.07741404008866352], 'false': [0.04858277636397068, 0.09847409410632003], 'false,false': [-9.25185853854297e-18, 0.09985330354661964], 'false,false,false': [0.09513122313743654, 0.12859028255338878], 'true': [0.0014646973794509334, 0.00039887796648486556], 'true,true': [0.0014646973794509334, nan], 'true,true,true': [0.00023372977933881173, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 4.785
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.129993595293686;  // std dev = 4.515, 103.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=28 */
%   | | | else return 0.17283424978482687;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7319045176838227;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7345712489727279;  // std dev = 2.663, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.16009127004588594;  // std dev = 0.113, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.21657667506678369;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.03704561875831043;  // std dev = 0.933, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.45941522513154887;  // std dev = 0.293, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5790548187777336;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.17187038209300648;  // std dev = 2.151, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.07619042859665073;  // std dev = 3.627, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6104547139503291;  // std dev = 1.899, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.1419385804231714;  // std dev = 0.020, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.810525711582117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18947428841788302;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.27085625071189434;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3543883071086802;  // std dev = 0.291, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.43795427990562485;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5894025168864726;  // std dev = 1.337, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.15315012777116205;  // std dev = 0.138, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.2867061258372214;  // std dev = 1.614, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.13246552533581304;  // std dev = 3.911, 119.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=44 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4878827235442704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.03584526148149045;  // std dev = 0.758, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.051375958779745455;  // std dev = 1.311, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.36251010809565315;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.16863305508959955;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.1098305615349702;  // std dev = 0.009, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.15613292490961175;  // std dev = 0.252, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( location(A, G) )
%   | | | then return 0.06048535219095625;  // std dev = 5.165, 211.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=68 */
%   | | | else return 0.024735563729587882;  // std dev = 1.014, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.36903443684136206;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.06568536079617687;  // std dev = 0.780, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.1447962466915917;  // std dev = 1.209, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( location(A, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2878979437563893;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.3291397496539505;  // std dev = 0.721, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4036111114196366;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2879429307193895;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( enzyme(A, I) )
%   | | then return -0.053014661058505996;  // std dev = 0.280, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else return 0.05488203614304841;  // std dev = 0.344, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.29909392987984684;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.035547400765340596;  // std dev = 3.371, 107.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   | | | else return 0.10331639942550679;  // std dev = 3.205, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4382460808555674;  // std dev = 0.238, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | else return -0.17683539585153885;  // std dev = 0.061, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), complex(G, F) )
%   | | | then return -0.09076939002102731;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5063080279303751;  // std dev = 0.853, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return -0.15638888841850948;  // std dev = 0.012, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5000517830975054;  // std dev = 0.330, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1775401306711219;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.029059356681372606;  // std dev = 2.338, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.10052951151393348;  // std dev = 0.723, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16388357858902142;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07962792559300186;  // std dev = 0.790, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.2508642392495183;  // std dev = 2.757, 60.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=48 */
%   | | | else return 0.44650564488288963;  // std dev = 0.742, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.12174148737783642;  // std dev = 0.250, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.1483802311240996;  // std dev = 0.169, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.16361337926754072;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.01366091261544694;  // std dev = 0.819, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.0671251025360201;  // std dev = 0.993, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16114090812420412;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.11805991511423841;  // std dev = 0.769, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return -0.03196644053498098;  // std dev = 0.229, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return -0.06330041419163518;  // std dev = 0.610, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.024324085625908702;  // std dev = 1.565, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.37152962812315565;  // std dev = 0.341, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.1517115383494982;  // std dev = 0.532, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.01076397377985291;  // std dev = 2.431, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.06413200157003993;  // std dev = 0.919, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14069841537046057;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.17854010845982202;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.02514225332659049;  // std dev = 1.821, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | | else return -0.09406963499617478;  // std dev = 0.165, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( location(A, J) )
%   | | | then return 0.01706575052048561;  // std dev = 1.583, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.018565347948087237;  // std dev = 0.494, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1913749014902566;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.002443950913507213;  // std dev = 1.636, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.04983911073082332;  // std dev = 2.260, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.315', 'seconds']
Refined model CLL: -0.179479


******************************************
Best model found
******************************************
Results 

CLL : -0.175987 

AUC ROC : 0.989042 

AUC PR : 0.334091 

Precision : 0.191971 

Recall : 0.932624 

F1 : 0.318402 

Total Learning Time : 4.785 

Total Inference Time : 6.594569683074951 

Total revision time: 19.746446502685547
Best scored revision CLL: -0.179479


Results 

CLL : -0.175987 

AUC ROC : 0.989042 

AUC PR : 0.334091 

Precision : 0.191971 

Recall : 0.932624 

F1 : 0.318402 

Total Learning Time : 19.769966495513916 

Total Inference Time : 6.594569683074951 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.269
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09479015647355703;  // std dev = 4.865, 131.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=31 */
%   | | | else return 0.18423589162125062;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7473839334745777;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7496183004983902;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7031663610524451;  // std dev = 3.210, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.16000754918500262;  // std dev = 0.077, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | | else if ( location(A, K) )
%   | | | then return 0.027214741108519624;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5854435311656698;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5839600917520967;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05586396594489712;  // std dev = 4.427, 145.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6102390888115744;  // std dev = 2.124, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.1448260343806376;  // std dev = 6.99e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8329866708420062;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.010242850170781378;  // std dev = 1.692, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.38099436962741356;  // std dev = 0.966, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return -0.05932928784695457;  // std dev = 0.711, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2228823623046563;  // std dev = 0.795, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5771862172339403;  // std dev = 1.440, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return 0.033443380864195044;  // std dev = 5.076, 247.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5528357099953187;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07859942274317101;  // std dev = 1.683, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.34771154746083605;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.36068220374094717;  // std dev = 0.103, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05611327476429729;  // std dev = 5.762, 286.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4156392283119005;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.20494868042489842;  // std dev = 1.496, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2729181711547833;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.2729762150073121;  // std dev = 1.026, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31944138920237475;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.0016697981068872184;  // std dev = 2.780, 81.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1728290130591331;  // std dev = 0.961, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05540034675080011;  // std dev = 4.630, 180.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=51 */
%   | | | else return 0.024249202737745456;  // std dev = 2.286, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2793123720512407;  // std dev = 0.325, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.25430515367477025;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.015773034035959255;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.45115105115592347;  // std dev = 1.947, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.1856575731909531;  // std dev = 0.906, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.1053476051196573;  // std dev = 0.851, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04804783037571841;  // std dev = 4.512, 158.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17813188764405;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.010528693360776656;  // std dev = 1.434, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3444693000087106;  // std dev = 3.657, 99.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=82 */
%   | | else return -0.14416577054674445;  // std dev = 0.226, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20914502790689793;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0708826725050451;  // std dev = 1.401, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1758282102394101;  // std dev = 0.145, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2311097528145475;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2197600303039901;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -8.114905350213911E-4;  // std dev = 1.643, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2161808106528497;  // std dev = 0.546, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.05513793145711845;  // std dev = 1.645, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.23855107183363025;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02131738734584127;  // std dev = 4.065, 159.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=47 */
%   | | | else return 0.002990378802950968;  // std dev = 1.471, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1320428546876279;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.20594184423573056;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18385254540768822;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.019087833765627348;  // std dev = 2.610, 127.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.028994015787843108;  // std dev = 0.929, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03481599239101487;  // std dev = 3.853, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | | else return -0.01176551775641782;  // std dev = 1.492, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.274', 'seconds']
Parameter learned model CLL:-0.193079 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.865, 100, 31], 'false,false,true,false': [5.507, 93, 45], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.007, 0, 10], 'false,true,true': [0.0, 0, 7], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,true': [3.21, 12, 76], 'false,false,true,false': [0.077, 164, 0], 'false,false,false,true': [1.799, 17, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.008, 0, 11], 'true,false': [0.005, 0, 6], 'false,true,true': [4.427, 111, 34], 'false,true,false,true': [2.124, 5, 48], 'false,true,false,false': [6.99e-08, 97, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.692, 17, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.966, 1, 16], 'true,false': [0.711, 1, 1], 'false,true,true,true': [0.795, 1, 3], 'false,true,true,false': [1.44, 3, 21], 'false,true,false': [5.076, 189, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.683, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.103, 0, 10], 'false,true': [5.762, 204, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.496, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.003, 0, 9], 'true,true,false': [1.026, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.78, 62, 19], 'false,false,true': [0.961, 1, 8], 'false,false,false,true': [4.63, 129, 51], 'false,false,false,false': [2.286, 29, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.325, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.879, 1, 3], 'true,true,false,false': [1.947, 5, 33], 'true,false': [0.906, 102, 0], 'false,true': [0.851, 1, 5], 'false,false,true': [4.512, 111, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.434, 3, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.657, 17, 82], 'false,true,false': [0.226, 185, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.401, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.145, 0, 9], 'true,false,true': [0.843, 2, 2], 'true,false,false': [0.125, 0, 5], 'false,true,true': [1.643, 39, 13], 'false,true,false,true': [0.546, 1, 8], 'false,true,false,false': [1.645, 49, 11], 'false,false,true': [0.076, 0, 5], 'false,false,false,true': [4.065, 112, 47], 'false,false,false,false': [1.471, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [5.27e-09, 0, 7], 'true,true,true,false': [0.095, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.095, 0, 3], 'false,true': [2.61, 95, 32], 'false,false,true': [0.929, 1, 5], 'false,false,false,true': [3.853, 106, 47], 'false,false,false,false': [1.492, 13, 4]}]
{'': [0.12749999999999959, 0.2104141473401904], 'false': [-2.5376526277146434e-16, 0.20320909410995533], 'false,false': [0.202705877475436, 0.21301775147928975], 'false,false,false': [0.21301775147928975, nan], 'false,false,true': [0.18064215372064682, 0.2197542533081297], 'true': [0.1224489795918365, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [4.145934392450185e-06, 0.20997147247277922], 'false': [0.10937500000000006, 0.2068468641915606], 'false,false': [0.21023125368095608, 0.15419501133786842], 'false,false,true': [0.11707251465399623, 3.597474544984237e-05], 'false,false,false': [0.15419501133786842, nan], 'false,true': [-6.344131569286608e-17, 0.0], 'true': [-6.344131569286608e-17, 4.992395997138744e-06], 'false,true,false': [0.0, nan]}
{'': [6.239573581524801e-06, 0.14990041766184173], 'false': [0.14906592061958726, 0.15946166306345477], 'false,false': [0.15946166306345477, nan], 'false,false,true': [0.0, 0.13628655766061848], 'false,true': [0.13519110882011404, 0.1603306819143477], 'false,true,false': [0.08508632085403896, 5.036063204485246e-17], 'true': [6.338265440053448e-06, 4.634725717655996e-06]}
{'': [0.0940287260065663, 0.13082553768628438], 'false': [0.12733358209497816, 0.190272269342923], 'false,false': [0.0, 0.188900833789949], 'false,false,false': [0.188900833789949, nan], 'false,true': [0.11201575215837677, 0.1043103570527186], 'false,true,true': [0.15788777170187085, 0.08643738390811573], 'true': [0.054924006257125735, 0.2529428598432695], 'false,false,true': [nan, 0.0]}
{'': [0.0006669829942848364, 0.12047443081840314], 'false': [0.11609877528100006, 0.2070663374079456], 'false,false': [0.0, 0.22373747051520154], 'false,false,false': [0.22373747051520154, nan], 'true': [-1.586032892321652e-17, 0.001064596650851457], 'false,false,true': [nan, 0.0], 'true,true': [-1.586032892321652e-17, nan]}
{'': [0.06209910935518182, 0.11541586168484959], 'false': [0.09538774518970732, 0.12169794960800125], 'false,false': [0.10263665832807897, 0.12188432474186696], 'false,false,false': [0.11908142518779857, 0.13402320029890463], 'true': [0.06585312441788588, 0.0], 'true,true': [1.2769464700326495e-06, 0.15051978355745085], 'true,false': [nan, 0.0]}
{'': [0.11209625774120757, 0.1286680906940523], 'false': [0.12078818247767065, 0.1288472082934993], 'false,false': [0.1288472082934993, nan], 'true': [0.09746934283829457, 0.00804030139497582], 'true,true': [0.006653791004126358, 0.1274799136525789], 'true,true,false': [0.1932851463657345, 0.09978941835288202], 'true,true,true': [0.0070582920103850364, 0.0]}
{'': [0.10927018276708785, 0.10349337597646491], 'true': [-3.96508223080413e-18, 0.15827618273094263], 'false': [0.10148339508931023, 0.1414271810519143], 'false,false': [0.0, 0.15094073219889403], 'false,false,false': [0.15094073219889403, nan], 'false,true': [0.13507524316967717, 0.00027602331648052107], 'false,true,true': [nan, 0.13507524316967712], 'false,false,true': [0.0, nan]}
{'': [0.0727289123358748, 0.08411901215493353], 'false': [0.05199335289741014, 0.10515431819427236], 'false,false': [0.001153776940072382, 0.10679461555842439], 'false,false,false': [0.10390418003872358, 0.1352131482526005], 'true': [0.0023396863151500923, 0.13087909392491182], 'true,false': [0.17764675061528123, 0.0031167190929020316], 'false,true': [0.05192300222587957, 0.05189225677225465], 'false,true,false': [0.033112171623835555, 0.04510746174189117]}
{'': [0.0022709948692397064, 0.08236382335595144], 'false': [0.053625086051871794, 0.10208659580381295], 'false,false': [0.1438585841140361, 0.10061224415824492], 'false,false,false': [0.09701523482082285, 0.13103247481618954], 'true': [0.0020453890060228917, 0.002994001253491895], 'true,true': [0.0020453890060228917, nan], 'true,true,true': [3.96508223080413e-18, 0.0014911050571305522]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 6.655
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, D), interaction(E, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.588918165868743;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return -0.04084096389038667;  // std dev = 2.998, 99.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=10 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.22893545195344356;  // std dev = 4.557, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
%   | | | else return 0.10139217834275562;  // std dev = 3.691, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7462537292833586;  // std dev = 0.129, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.4068585879990681;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.652379862116436;  // std dev = 3.565, 92.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   | | | else return -0.15264637271524614;  // std dev = 0.225, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.20293531505553108;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.0314188162333243;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.46927376624045597;  // std dev = 0.278, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.6079774752880985;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.011676228241363195;  // std dev = 2.503, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | | else return 0.15635128691670452;  // std dev = 3.119, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6105767287617718;  // std dev = 2.294, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.1381741491537339;  // std dev = 0.138, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.5470777348581648;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.404610951314372;  // std dev = 0.717, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.18086079124079368;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.0918389274274211;  // std dev = 0.849, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.44544364365168504;  // std dev = 0.041, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(F, A) )
%   | then if ( complex(A, G), location(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5848973399336939;  // std dev = 0.418, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.13742896329854518;  // std dev = 0.527, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.029062804886502522;  // std dev = 1.575, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.1472924221814999;  // std dev = 4.341, 134.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=51 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.44841037462861466;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.1215248587298036;  // std dev = 1.050, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07139160397270543;  // std dev = 1.172, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.35711392732401853;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.13884219446799131;  // std dev = 0.903, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3516010224757461;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( location(A, G), complex(A, H) )
%   | | then return 0.029625172243461072;  // std dev = 0.256, 98.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=26 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.2785975609320755;  // std dev = 0.958, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0704462729892435;  // std dev = 4.623, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3417498737031509;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.05272601075580324;  // std dev = 1.181, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.15957555310729477;  // std dev = 1.009, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2559986690367287;  // std dev = 0.253, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.2694813141108324;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( enzyme(A, G) )
%   | | then return -0.08777643156121234;  // std dev = 0.227, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(F, H), interaction(H, H) )
%   | | | then return 0.11042029431542782;  // std dev = 1.113, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.005630404212976105;  // std dev = 2.114, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.036892397585445595;  // std dev = 1.189, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.023503824416385773;  // std dev = 0.813, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return 0.09932069706349916;  // std dev = 4.370, 161.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=62 */
%   | | | else return 0.01711132480323941;  // std dev = 1.319, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26365609567674;  // std dev = 0.080, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.42161052758790635;  // std dev = 0.284, 40.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | else return -0.153507907772248;  // std dev = 0.071, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.40718102379239735;  // std dev = 0.107, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.1530024522795627;  // std dev = 0.089, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.540901317581398;  // std dev = 0.249, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.17474321080964395;  // std dev = 0.098, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.04868887756330226;  // std dev = 3.047, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | | else return 0.19610465645360828;  // std dev = 0.850, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18845356972539218;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.20088713889522972;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.2024262618341202;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), location(A, I) )
%   | | | then return 0.25954701096263266;  // std dev = 1.072, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return 0.39459795593997893;  // std dev = 2.225, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | else return -0.14910836541473182;  // std dev = 0.057, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.17793616794394607;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.0532906047214775;  // std dev = 1.120, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.025534684337486065;  // std dev = 0.729, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.1458821675757831;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2153913702431944;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19375780563105344;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11786325558276294;  // std dev = 0.045, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.23967990271652695;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.014872586568033306;  // std dev = 2.317, 117.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17680079956201547;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return -0.02488277079531941;  // std dev = 1.835, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return 0.027280723046543155;  // std dev = 2.999, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.11611723549668754;  // std dev = 0.174, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), enzyme(A, H) )
%   | | | then return -0.21733791082250942;  // std dev = 0.697, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.29333536459832027;  // std dev = 0.197, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3238883161363781;  // std dev = 0.943, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.15875697292338964;  // std dev = 0.759, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.19086316962749264;  // std dev = 2.368, 74.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=50 */
%   | | | else return -0.13234084807449606;  // std dev = 0.342, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.22970863355414886;  // std dev = 0.399, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10354512990264095;  // std dev = 0.425, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.692', 'seconds']
Refined model CLL: -0.183264


******************************************
Best model found
******************************************
Results 

CLL : -0.156902 

AUC ROC : 0.993498 

AUC PR : 0.415916 

Precision : 0.320728 

Recall : 0.864151 

F1 : 0.467824 

Total Learning Time : 6.655 

Total Inference Time : 11.503995180130005 

Total revision time: 27.712381576538085
Best scored revision CLL: -0.183264


Results 

CLL : -0.156902 

AUC ROC : 0.993498 

AUC PR : 0.415916 

Precision : 0.320728 

Recall : 0.864151 

F1 : 0.467824 

Total Learning Time : 27.735901569366455 

Total Inference Time : 11.503995180130005 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.391
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1005731775237548;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.13840371216957503;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284563;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7268735122674133;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7385128322212614;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7670719622367217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8041570123733578;  // std dev = 1.389, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15839474403786408;  // std dev = 0.026, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else if ( location(A, K) )
%   | | | then return 0.09791137358449015;  // std dev = 3.638, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.33320549123154836;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.43001326728981376;  // std dev = 0.920, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5650663047861899;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.029907933486179063;  // std dev = 2.144, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6918936534391665;  // std dev = 0.242, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1394349490698003;  // std dev = 4.71e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.550660127024114;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17628342285891216;  // std dev = 3.531, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.8191510516837065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44163867461720546;  // std dev = 0.073, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1861104531517631;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.380233932604753;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4119692429184193;  // std dev = 0.649, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06515591723655742;  // std dev = 4.216, 184.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41403200502403614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5688240239247692;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.0804762321546988;  // std dev = 3.564, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.4167447576853574;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3742280879377577;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33718062185040254;  // std dev = 0.084, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05848060374689849;  // std dev = 4.274, 192.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.31835239220556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12703840917720965;  // std dev = 0.784, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08515530448332533;  // std dev = 3.598, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.6481641097662939;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27230078382828804;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.36225095718257494;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2535616022789824;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.33729450150192797;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4589101753763112;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.09057609725959996;  // std dev = 1.049, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.26905092161960115;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.036967118929990515;  // std dev = 4.079, 186.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=49 */
%   | | | else return 0.11446313505470852;  // std dev = 3.537, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24630107987677596;  // std dev = 0.136, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.00728517337847893;  // std dev = 0.672, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2145087193195988;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6297288448276045;  // std dev = 0.702, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.20745156953529834;  // std dev = 0.932, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2207576555930452;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04298463003993397;  // std dev = 3.427, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18334730125471374;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1879434013642473;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45340622305132083;  // std dev = 0.790, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13768393128366518;  // std dev = 0.206, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.27735984325474705;  // std dev = 0.099, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.014650348082725896;  // std dev = 3.154, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1620778718307156;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12033853727523502;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2052097018480964;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.11565264201270146;  // std dev = 0.768, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.10970613104468581;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.029960020657681045;  // std dev = 1.278, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15866534691521927;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.018999821792850764;  // std dev = 2.775, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | | else return 0.01529382730098945;  // std dev = 3.108, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14612113891133255;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17634067725376076;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12951333567554413;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13942627416984366;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.018442499710717503;  // std dev = 1.396, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1386813567343262;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02368723913551788;  // std dev = 2.711, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else return -0.014249385055705175;  // std dev = 3.184, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.367', 'seconds']
Parameter learned model CLL:-0.175432 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [2.462, 25, 8], 'false,false,true,false': [5.628, 113, 44], 'false,false,false,true': [3.559, 38, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.027, 0, 8], 'false,true,true': [0.052, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [1.389, 2, 52], 'false,false,true,false': [0.026, 152, 0], 'false,false,false,true': [3.638, 50, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.92, 1, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.144, 33, 8], 'false,true,false,true': [0.242, 0, 48], 'false,true,false,false': [4.71e-08, 125, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.531, 35, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.073, 0, 11], 'true,false': [0.893, 1, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.649, 1, 3], 'false,true,false': [4.216, 132, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.564, 43, 18], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.057, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.084, 0, 9], 'false,true': [4.274, 136, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.784, 1, 1], 'false,false,false,true': [3.598, 41, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.024, 0, 7], 'true,true,false': [0.102, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.049, 31, 3], 'false,false,true': [0.074, 0, 6], 'false,false,false,true': [4.079, 137, 49], 'false,false,false,false': [3.537, 34, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.136, 0, 12], 'true,true,true,false': [0.672, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.702, 0, 36], 'true,false': [0.932, 104, 0], 'false,true': [0.065, 0, 5], 'false,false,true': [3.427, 92, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.017, 0, 6], 'true,false': [0.068, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.79, 0, 56], 'false,true,false': [0.206, 130, 0], 'false,false,true,true': [0.099, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.154, 52, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.034, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.101, 0, 4], 'false,true,true': [0.768, 14, 1], 'false,true,false,true': [0.794, 1, 2], 'false,true,false,false': [1.278, 55, 14], 'false,false,true': [0.05, 0, 5], 'false,false,false,true': [2.775, 89, 36], 'false,false,false,false': [3.108, 43, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.023, 0, 5], 'true,true,true,false': [0.087, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.047, 0, 4], 'false,true': [1.396, 62, 17], 'false,false,true': [0.045, 0, 5], 'false,false,false,true': [2.711, 85, 36], 'false,false,false,false': [3.184, 50, 20]}]
{'': [0.06222222222222188, 0.21138851458765526], 'false': [0.12244897959183662, 0.20505600000000138], 'false,false': [0.19878116343490385, 0.2222222222222218], 'false,false,false': [0.2222222222222217, 0.22222222222222224], 'false,false,true': [0.1836547291092747, 0.20171203699947343], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.0, 0.18750000000000006], 'true': [0.08999999999999977, 0.0]}
{'': [8.940649933971859e-05, 0.196310930519644], 'false': [0.0005664054911388808, 0.19174828015609005], 'false,false': [0.18857306816021632, 0.2006172839506169], 'false,false,false': [0.1946366782006917, 0.25], 'false,false,true': [0.03572341372350015, 4.444692128317755e-06], 'false,true': [0.0005437492714934322, 0.0], 'true': [0.0, 9.126913474255538e-05], 'false,true,false': [nan, 0.0]}
{'': [0.0610865302308594, 0.15625298247655667], 'false': [0.13434176421642918, 0.2281354808822455], 'false,false': [0.22510883826941683, 0.0], 'false,false,true': [0.0, 0.2266989062982803], 'false,true': [0.11211956977006697, 0.13888801774736323], 'false,true,false': [0.0012206179026698443, 1.7763568394002505e-17], 'true': [0.12101889515801702, 0.0001340268823311619], 'false,false,false': [0.0, nan]}
{'': [0.0663168914577352, 0.1287410968410341], 'false': [0.09927443090800103, 0.21226352604714185], 'false,false': [0.005990142278841232, 0.21397700868410346], 'false,false,false': [0.20827104444476738, 0.22222222222222218], 'false,true': [0.0844819894997304, 0.09660980480382171], 'false,true,true': [0.0, 0.10540106089052195], 'true': [0.00048590045994713967, 0.1994693572604383], 'false,false,true': [0.0, 0.0]}
{'': [0.0010571620222618833, 0.1263430268596099], 'false': [0.09516088632652771, 0.21909802301769063], 'false,false': [0.24914379011753895, 0.21737084074294893], 'false,false,true': [0.0, 0.30759136319084646], 'false,false,false': [0.21579731243577693, 0.0], 'true': [0.0006515059438083615, 0.0007923426733295664], 'true,true': [0.0006515059438083615, nan]}
{'': [0.004115091070711555, 0.11232479409092], 'false': [0.03238201411780251, 0.12063381130675886], 'false,false': [0.0009104178649920192, 0.12250315418999878], 'false,false,false': [0.08943852214587023, 0.2317380771427152], 'true': [0.002866679618753713, 0.007107734113034374], 'true,false': [0.0017527996030699822, 0.0], 'true,true': [8.47349580509471e-05, 0.002586243156323248], 'true,false,true': [0.0, 0.0]}
{'': [0.13615352518504734, 0.08946162535910762], 'true': [0.06060309195036233, 0.00834684992921885], 'false': [0.0008329578088567047, 0.09173559063211983], 'false,false': [0.09173559063211983, nan], 'true,true': [0.040523535434209994, 0.017856709663060757], 'true,true,true': [0.0015516190736682516, 0.15070831802901477], 'true,true,false': [0.0, 0.013693060386007507]}
{'': [0.0003521395390516935, 0.09454801376534404], 'false': [0.0771072511544385, 0.13680284087762776], 'false,false': [0.004891704549984041, 0.13816244581584453], 'false,false,false': [0.13816244581584453, nan], 'false,true': [0.011149366332786086, 0.0003279217369664488], 'false,true,true': [nan, 0.011149366332786213], 'false,false,true': [0.004891704549984041, nan], 'true': [4.6833620729209526e-05, 0.000572065776557773]}
{'': [0.0013801225328633918, 0.07392687380059812], 'false': [0.03396594420450154, 0.0904656301092151], 'false,false': [0.0005072882073589302, 0.09234376347349853], 'false,false,false': [0.061626559437091985, 0.15328146496738237], 'false,true': [0.03929590651652908, 0.03168574315685282], 'false,true,false': [0.21033890144638942, 0.023653237780491276], 'true': [0.0001314619260140241, 0.003187855984068255], 'true,false': [0.0, 0.002544197064894574]}
{'': [0.0009776295314601019, 0.07140794005011228], 'false': [0.024672886320596554, 0.08995971976646787], 'false,false': [0.0004076379198626162, 0.09188017353809556], 'false,false,false': [0.060731579527604565, 0.14481100662952315], 'true': [0.0011051099459127827, 0.0005484050376490697], 'true,true': [0.0012252572582312944, 0.0], 'true,true,true': [0.00010616822073793164, 0.0025196428430351164], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.473
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.01604367194161748;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1342683380845855;  // std dev = 5.175, 134.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=37 */
%   | | | else return 0.2391013160518931;  // std dev = 4.451, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8385300011960741;  // std dev = 0.054, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1577795685898078;  // std dev = 0.156, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.20148227045752334;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.08229622394589545;  // std dev = 2.861, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.06418984542640988;  // std dev = 0.809, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.0696809129623576;  // std dev = 1.913, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6818759739157038;  // std dev = 0.240, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1404354148961331;  // std dev = 0.077, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.008053882453112005;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18464782778190353;  // std dev = 3.477, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | else return 0.014361397740239196;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3341802508249765;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.16751358415830997;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3871048427559718;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.43523053864270816;  // std dev = 0.659, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return -0.017051475837331333;  // std dev = 1.752, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | | else return 0.057389420629016794;  // std dev = 3.857, 153.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=43 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5314040579059124;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.06400587814248236;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.11156458514727545;  // std dev = 2.725, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.34733637082907026;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then if ( complex(E, G), enzyme(A, H) )
%   | | | then return 0.06308120525934414;  // std dev = 0.989, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 5.564566231845362E-4;  // std dev = 1.392, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.1570902407082992;  // std dev = 1.584, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.061119705468260906;  // std dev = 3.444, 136.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=41 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.421387468451747;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3790283950310177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.06997740373814432;  // std dev = 3.621, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return -0.062576002150361;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26609906179608966;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3833804699707654;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.30597265819575;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10790892927172968;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.024915697837297746;  // std dev = 0.863, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.06500383339654923;  // std dev = 0.461, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.27736151712091744;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.014073345467636196;  // std dev = 2.152, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.06724030457194517;  // std dev = 4.962, 192.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=61 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.18103964850612442;  // std dev = 0.251, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.24838310478236558;  // std dev = 0.656, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5934651365231312;  // std dev = 1.426, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.18877774273129722;  // std dev = 0.068, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.22734137502155388;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(G, I), location(G, J) )
%   | | | then return -0.002287806322615193;  // std dev = 1.994, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.05904045399918267;  // std dev = 2.183, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.002544731497166127;  // std dev = 0.933, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.18114694966697792;  // std dev = 1.027, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1882159907456844;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), location(A, F) )
%   | | then return -0.3607642185439254;  // std dev = 1.069, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.19300046410026547;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.35336456056261933;  // std dev = 0.332, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.48833918819614436;  // std dev = 0.328, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.139312113193669;  // std dev = 0.044, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4102254880341068;  // std dev = 1.683, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.22667850841347997;  // std dev = 0.078, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0.3321997675680186;  // std dev = 0.683, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1680264354012128;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.19976363412670603;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3014308150858051;  // std dev = 0.125, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.0943684805054118;  // std dev = 0.127, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.08115851495737347;  // std dev = 0.913, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.03918491842099314;  // std dev = 0.647, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.16201889355808402;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.04167117648527422;  // std dev = 2.897, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | | else return 0.010619306263645106;  // std dev = 2.611, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1435115657129618;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.18222982446585947;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.06891319948489052;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.027041479414452962;  // std dev = 0.694, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.0063743087029605305;  // std dev = 0.942, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.058525338614646885;  // std dev = 0.578, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.14122411674774543;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, L) )
%   | | | then return 0.03770667592836559;  // std dev = 3.586, 153.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=54 */
%   | | | else return 0.12999895496391023;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.834', 'seconds']
Refined model CLL: -0.171953


******************************************
Best model found
******************************************
Results 

CLL : -0.187909 

AUC ROC : 0.983884 

AUC PR : 0.214118 

Precision : 0.138889 

Recall : 0.884477 

F1 : 0.240078 

Total Learning Time : 3.473 

Total Inference Time : 3.2249553203582764 

Total revision time: 10.850531257629395
Best scored revision CLL: -0.171953


Results 

CLL : -0.187909 

AUC ROC : 0.983884 

AUC PR : 0.214118 

Precision : 0.138889 

Recall : 0.884477 

F1 : 0.240078 

Total Learning Time : 10.874051250457764 

Total Inference Time : 3.2249553203582764 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.62
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1034319539674369;  // std dev = 3.132, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.20025419825740642;  // std dev = 5.065, 114.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09499104036267027;  // std dev = 2.621, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.748592982892723;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5395610122338588;  // std dev = 1.240, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7472519861082711;  // std dev = 2.143, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.16411621795730025;  // std dev = 0.069, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else if ( location(A, I) )
%   | | | then return 0.05124510990049849;  // std dev = 2.946, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5734183503905234;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5880862353656813;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0836384763712483;  // std dev = 2.752, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6526652190297818;  // std dev = 1.379, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1474322531543261;  // std dev = 0.086, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4984627159642578;  // std dev = 0.775, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20682106509480083;  // std dev = 2.330, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.007616950621627604;  // std dev = 1.539, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.31770969903924573;  // std dev = 1.317, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5789955958547675;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6011428804372044;  // std dev = 0.178, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.04799816475749686;  // std dev = 4.375, 190.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.538381179999889;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.10956140666778136;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06882769892907223;  // std dev = 2.836, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.005006185472211849;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3523729730450347;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22155954749248272;  // std dev = 0.947, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.037617809498527985;  // std dev = 4.557, 215.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.40502903664908907;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4941125604094127;  // std dev = 0.126, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.028150385186253023;  // std dev = 2.617, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.005851098446813818;  // std dev = 1.524, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27965519481265433;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.46540054070967846;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.312258240197515;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.376992625800818;  // std dev = 0.118, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06632014114214616;  // std dev = 1.282, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.32103590604091475;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.04794024554850553;  // std dev = 4.116, 166.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=46 */
%   | | | else return 0.08998930682289256;  // std dev = 3.019, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2659131868316649;  // std dev = 0.216, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2801408670765118;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2527874959343985;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6065331214037446;  // std dev = 0.787, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17620771987803596;  // std dev = 0.643, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2688956193989002;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07589794576755593;  // std dev = 3.313, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18167666228008716;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.09388453299837198;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4167708627815559;  // std dev = 1.695, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.141426454860656;  // std dev = 0.232, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.21989238335889516;  // std dev = 1.108, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05847271337410649;  // std dev = 2.434, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17134332153044585;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19061077176259233;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.06396129306151847;  // std dev = 0.976, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.096349854856993;  // std dev = 0.326, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23485256337207863;  // std dev = 0.157, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.019221030651755188;  // std dev = 1.441, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.032389855555314456;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03145876795996336;  // std dev = 2.892, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | | else return -0.03888052764646592;  // std dev = 2.603, 60.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13493061963929154;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1469336712729927;  // std dev = 0.857, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.17567623480453698;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18870800023918932;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2521327954438393;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02015255681536159;  // std dev = 1.759, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2090567627277601;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.012412869368762515;  // std dev = 2.922, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | | else return 0.020813841529613974;  // std dev = 2.517, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.932', 'seconds']
Parameter learned model CLL:-0.174212 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.132, 40, 13], 'false,false,true,false': [5.065, 75, 39], 'false,false,false,true': [2.621, 29, 9], 'false,false,false,false': [1.225, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.042, 0, 7], 'false,true,true': [1.24, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.143, 5, 52], 'false,false,true,false': [0.069, 131, 0], 'false,false,false,true': [2.946, 41, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.038, 0, 11], 'true,false': [0.042, 0, 4], 'false,true,true': [2.752, 39, 14], 'false,true,false,true': [1.379, 2, 42], 'false,true,false,false': [0.086, 77, 0], 'false,false,true,true': [0.775, 1, 3], 'false,false,true,false': [2.33, 15, 9], 'false,false,false,true': [1.539, 10, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.317, 2, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.178, 0, 6], 'false,true,false': [4.375, 141, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [2.836, 31, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.003, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.947, 1, 6], 'false,true': [4.557, 159, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.126, 0, 2], 'false,false,false,true': [2.617, 30, 9], 'false,false,false,false': [1.524, 10, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.023, 0, 9], 'true,true,false': [0.045, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.118, 0, 2], 'false,true': [1.282, 25, 5], 'false,false,true': [0.042, 0, 5], 'false,false,false,true': [4.116, 120, 46], 'false,false,false,false': [3.019, 32, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.216, 0, 13], 'true,true,true,false': [0.111, 0, 3], 'true,true,false,true': [0.043, 0, 3], 'true,true,false,false': [0.787, 0, 33], 'true,false': [0.643, 95, 0], 'false,true': [0.002, 0, 3], 'false,false,true': [3.313, 66, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.883, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.695, 3, 56], 'false,true,false': [0.232, 137, 0], 'false,false,true,true': [1.108, 3, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.434, 28, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.096, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.976, 1, 5], 'false,true,true': [0.326, 21, 1], 'false,true,false,true': [0.157, 0, 6], 'false,true,false,false': [1.441, 57, 17], 'false,false,true': [0.818, 1, 3], 'false,false,false,true': [2.892, 66, 31], 'false,false,false,false': [2.603, 48, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.857, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.036, 0, 2], 'true,false': [0.109, 0, 3], 'false,true': [1.759, 68, 24], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [2.922, 74, 31], 'false,false,false,false': [2.517, 33, 12]}]
{'': [0.10380622837370206, 0.2185743801652894], 'false': [0.17283950617283939, 0.21131600817591828], 'false,false': [0.21442145648822178, 0.19834710743801603], 'false,false,true': [0.1851192595229614, 0.22506925207756298], 'false,false,false': [0.18074792243767326, 0.24999999999999992], 'false,true': [0.0, 0.1874999999999999], 'false,true,false': [0.18750000000000006, 0.18750000000000006], 'true': [0.07100591715976314, 0.18750000000000006]}
{'': [0.00016732161202218283, 0.20003824620588978], 'false': [0.17071272562485656, 0.19422383091124198], 'false,false': [0.1999321124680601, 0.17229645596799636], 'false,false,true': [0.08057913594384015, 3.5897070231926894e-05], 'false,false,false': [0.1668521468855509, 0.25000000000000006], 'false,true': [0.17071272562485656, nan], 'true': [-2.220446049250313e-16, 0.0002561045081969558]}
{'': [0.0002533606516578265, 0.1712423168088509], 'false': [0.1582674164929774, 0.22453117510920106], 'false,false': [0.22579214602388195, 0.18219386396049492], 'false,false,true': [0.15030123493083436, 0.22622327132198114], 'false,false,false': [0.18219386396049492, nan], 'false,true': [0.14287014001249587, 0.16391973413209018], 'false,true,false': [0.04323897961159571, 9.617801560400165e-05], 'true': [0.00012853581483557812, 0.0004388545965131607]}
{'': [0.10198127120287598, 0.12535303056002003], 'false': [0.10767315536426478, 0.19479214989043825], 'false,false': [0.17097159950015, 0.19142662273102398], 'false,false,false': [0.19144639675021702, 0.18750000000000006], 'false,false,true': [0.0, 0.24999999999999997], 'false,true': [0.004580559041780801, 0.10072332243019164], 'true': [0.10198127120287598, nan], 'false,true,true': [0.0, 0.0052739138038335005]}
{'': [0.06023199634305912, 0.1130452521172396], 'false': [0.09660426142020552, 0.17724924171983342], 'false,false': [0.007054110404938789, 0.17641956696292888], 'false,false,false': [0.1755690094837214, 0.17859829575873706], 'true': [9.847983642144144e-07, 0.12804628265764928], 'false,false,true': [0.0, 0.007935874205556165], 'true,true': [9.847983642144144e-07, nan]}
{'': [0.007232124384737873, 0.11557615557119112], 'false': [0.054755099371516486, 0.12194877650376122], 'false,false': [0.0003573524193746458, 0.12321094312026869], 'false,false,false': [0.10205102316641175, 0.19818618015445247], 'true': [0.00754762000000698, 0.005583675980197618], 'true,true': [5.698831244000452e-05, 0.0005160027045984505], 'true,false': [0.0, 0.006978667077150724], 'true,false,true': [0.0, nan]}
{'': [0.11604507379414865, 0.11083480175026705], 'true': [0.03998859634429637, 0.004357012755838699], 'false': [1.8519246057779881e-06, 0.1131451818799381], 'false,false': [0.1131451818799381, nan], 'true,true': [0.0037097943676978468, 0.026833780743617346], 'true,true,false': [0.0006064489261552453, 0.018790086341222336], 'true,true,true': [0.0035811471579462184, 0.004102793765770894]}
{'': [0.050692553599147844, 0.09642160764569904], 'false': [0.08049635431513165, 0.16426108210493548], 'false,false': [0.20478834537550705, 0.14807497603880537], 'false,false,true': [0.20478834537550705, nan], 'false,false,false': [0.14807497603880537, nan], 'false,true': [0.04871139059331823, 0.00039155261415114095], 'true': [-6.938893903907228e-18, 0.09753137821638698], 'false,true,true': [nan, 0.04871139059331832]}
{'': [0.05937179567860533, 0.07134364703938263], 'false': [0.026729111510198793, 0.09937462359568396], 'false,false': [0.1672892143072839, 0.09761036310475588], 'false,false,false': [0.08625272093051396, 0.11291507696932405], 'true': [0.0009243382734560934, 0.13817841668550665], 'true,false': [0.0, 0.15891671130615007], 'false,true': [0.004828006652717203, 0.03075650931024803], 'false,true,false': [0.004130873519493326, 0.028073840306119466]}
{'': [0.06041430204088405, 0.07417303215116214], 'false': [0.033643353764023394, 0.09797582521369746], 'false,false': [1.3108992006257332e-06, 0.09919641407369031], 'false,false,false': [0.08132994553008317, 0.14083543724216718], 'true': [0.06758791596421414, 0.00396760948121717], 'true,true': [0.08247126350587507, 0.00048107174621868365], 'true,true,true': [0.0, 0.24461464849743175], 'true,true,false': [0.0, 0.000664998649213426]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.308
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.08921948595311938;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.06968739663797391;  // std dev = 2.945, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return 0.16249676118646797;  // std dev = 5.838, 161.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7339281331150419;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.47910989281367944;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8019194713993594;  // std dev = 1.390, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15579039760992786;  // std dev = 0.134, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.02592298951841167;  // std dev = 2.223, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.212194916336009;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.48670867617716046;  // std dev = 0.282, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.39958745445076305;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.1776650950895329;  // std dev = 1.695, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.013714605069522948;  // std dev = 2.059, 46.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6081340844214873;  // std dev = 1.905, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.13942676945747157;  // std dev = 0.061, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5509769940537406;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.06479660048882488;  // std dev = 2.312, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.2394767158243584;  // std dev = 1.707, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4479103031685468;  // std dev = 0.072, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.2727465413828049;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5067380509408884;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4727642030058306;  // std dev = 0.889, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.007542744517933291;  // std dev = 2.519, 88.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=16 */
%   | | | else return 0.09206429346203111;  // std dev = 3.545, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4142658589134937;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.23631048127722262;  // std dev = 1.315, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.07073155593946723;  // std dev = 2.556, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3413964544202345;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.39968250718598003;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11516005868092181;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.04031191620219892;  // std dev = 2.778, 88.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.09167251559622773;  // std dev = 2.876, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return 0.018898442497076798;  // std dev = 2.068, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3185108212391049;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.04548726411854627;  // std dev = 2.149, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.13259078429937526;  // std dev = 1.941, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26814405968411664;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.14068435226976383;  // std dev = 1.010, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.25366979331934403;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.0796635400139893;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.024374181641673463;  // std dev = 0.268, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else return -0.1033128729096012;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3224215985785568;  // std dev = 0.117, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.08336916255196045;  // std dev = 3.121, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return 0.0375150483269047;  // std dev = 3.999, 117.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2685278112453605;  // std dev = 0.079, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.22217717279650176;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5905190635751664;  // std dev = 1.088, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.16226870098660878;  // std dev = 0.060, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2908869012829944;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( enzyme(A, I), phenotype(A, H) )
%   | | | then return -0.09145625515435506;  // std dev = 0.743, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.04129691327284552;  // std dev = 3.069, 86.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.17938047486678166;  // std dev = 0.658, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13082645976832158;  // std dev = 0.812, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( phenotype(A, E) )
%   | | then return -0.0846741796550203;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1851634118396772;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.20351116984095308;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.3996396909322532;  // std dev = 0.244, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return -0.1403544564929095;  // std dev = 0.032, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6181882123770149;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.21928917192812497;  // std dev = 0.092, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.04630395813785815;  // std dev = 1.532, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.11000947074350921;  // std dev = 1.491, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17176619324917503;  // std dev = 0.068, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2093334338915105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.22439691301509992;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.07516145657943131;  // std dev = 0.021, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( complex(A, F) )
%   | | then if ( enzyme(A, G), location(A, H) )
%   | | | then return -0.006914714093984816;  // std dev = 1.242, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.0843830615565272;  // std dev = 1.851, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0032616227316788434;  // std dev = 2.953, 142.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=43 */
%   | | | else return -0.05615000690432207;  // std dev = 1.863, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15528900256823233;  // std dev = 0.033, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.044011721334912435;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.12873272931443244;  // std dev = 0.642, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.008925770255386123;  // std dev = 0.654, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.051489257784113215;  // std dev = 0.952, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.00802752531266099;  // std dev = 1.059, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.19519552262363346;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.0024630627058849384;  // std dev = 2.781, 95.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | | | else return 0.05140938755111045;  // std dev = 2.409, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.231', 'seconds']
Refined model CLL: -0.17748


******************************************
Best model found
******************************************
Results 

CLL : -0.186842 

AUC ROC : 0.983244 

AUC PR : 0.22606 

Precision : 0.146164 

Recall : 0.780919 

F1 : 0.24624 

Total Learning Time : 3.308 

Total Inference Time : 3.176056385040283 

Total revision time: 11.228862312316895
Best scored revision CLL: -0.174212


Results 

CLL : -0.186842 

AUC ROC : 0.983244 

AUC PR : 0.22606 

Precision : 0.146164 

Recall : 0.780919 

F1 : 0.24624 

Total Learning Time : 11.252382305145264 

Total Inference Time : 3.176056385040283 

Starting experiments for fasttext using relax-wmd 

Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.379
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1501843333295994;  // std dev = 4.834, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   | | | else return 0.17393840878372158;  // std dev = 4.963, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5600967122952899;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7492293200691814;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7450999169318386;  // std dev = 2.520, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.16272383890165898;  // std dev = 0.021, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08850789617161409;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5848449424905715;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6031245176690042;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09238394135858771;  // std dev = 4.274, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7027237782980905;  // std dev = 0.157, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.1432216978573197;  // std dev = 5.96e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09177903560294753;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.18005754283230818;  // std dev = 1.258, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4404320614860957;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.025257771720890332;  // std dev = 0.710, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5588070575342959;  // std dev = 1.329, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.03845432245560375;  // std dev = 4.927, 227.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5031410091800993;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.02400751110727363;  // std dev = 1.786, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.35086741923041964;  // std dev = 0.143, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3477061297436278;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06183934660488445;  // std dev = 5.326, 234.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3797576960421173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.11145528188768908;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.09838528703237077;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2611504804675087;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.45716964510842156;  // std dev = 0.205, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2951847036064187;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.03839501854278307;  // std dev = 2.149, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.268273864400776;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.0657085528650602;  // std dev = 4.605, 178.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=55 */
%   | | | else return 0.18732607509325455;  // std dev = 1.748, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2558825887535236;  // std dev = 0.282, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.23766586345117413;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5177176232376013;  // std dev = 1.368, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.180271902619243;  // std dev = 0.491, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21897182373771998;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05951147230789109;  // std dev = 3.932, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.04582733713192033;  // std dev = 0.808, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.19817999382265744;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38118040565002376;  // std dev = 2.633, 81.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=71 */
%   | | else return -0.15107553532225987;  // std dev = 0.204, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19731117530663622;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04875840371197534;  // std dev = 1.467, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19376731333400998;  // std dev = 0.178, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.7121427210334178;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.003816596601497621;  // std dev = 0.550, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.01833087194153913;  // std dev = 1.306, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.18735588209696852;  // std dev = 0.720, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.010026625959413794;  // std dev = 1.593, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15593170556498223;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.041251550116446184;  // std dev = 3.219, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | | | else return 0.030101149481657725;  // std dev = 1.488, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1449791311411363;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.31258627526856464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.04334829271483845;  // std dev = 0.712, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.010698890235102197;  // std dev = 2.326, 103.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.13649101222069326;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.02310345208127602;  // std dev = 3.472, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | | else return 0.05289324643922743;  // std dev = 1.437, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.802', 'seconds']
Parameter learned model CLL:-0.197617 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.707, 1, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.834, 80, 33], 'false,false,true,false': [4.963, 78, 36], 'false,false,false,true': [1.279, 9, 2], 'false,false,false,false': [1.279, 9, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.921, 1, 5], 'false,true,true': [0.073, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.52, 7, 69], 'false,false,true,false': [0.021, 171, 0], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.042, 0, 8], 'true,false': [0.022, 0, 3], 'false,true,true': [4.274, 86, 34], 'false,true,false,true': [0.157, 0, 37], 'false,true,false,false': [5.96e-08, 78, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.225, 6, 2], 'false,false,false,true': [1.258, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.04, 0, 10], 'true,false': [0.71, 1, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.329, 2, 14], 'false,true,false': [4.927, 170, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.786, 16, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.143, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.021, 0, 4], 'false,true': [5.326, 163, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.03, 0, 7], 'true,true,false': [0.205, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.149, 27, 12], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [4.605, 123, 55], 'false,false,false,false': [1.748, 8, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.282, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.368, 2, 33], 'true,false': [0.491, 90, 0], 'false,true': [0.003, 0, 3], 'false,false,true': [3.932, 83, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.808, 1, 6], 'true,false': [0.052, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.633, 10, 71], 'false,true,false': [0.204, 135, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.467, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.178, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.55, 1, 3], 'false,true,true': [1.306, 33, 11], 'false,true,false,true': [0.72, 1, 1], 'false,true,false,false': [1.593, 43, 17], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [3.219, 84, 40], 'false,false,false,false': [1.488, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.037, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.712, 1, 3], 'false,true': [2.326, 74, 29], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [3.472, 78, 40], 'false,false,false,false': [1.437, 9, 4]}]
{'': [0.07638888888888877, 0.21015794653876818], 'false': [0.18750000000000006, 0.2072224641538053], 'false,false': [0.2115701837800076, 0.14876033057851223], 'false,false,true': [0.20675072441068348, 0.21606648199446107], 'false,true': [nan, 0.18750000000000006], 'false,true,false': [0.25, 0.0], 'false,false,false': [0.14876033057851243, 0.14876033057851243], 'true': [0.09876543209876527, 1.4802973661668753e-16]}
{'': [0.07892516503635094, 0.20219238799062852], 'false': [0.001770828104934526, 0.19994738706693455], 'false,false': [0.2012742059734593, 0.17993079584775074], 'false,false,true': [0.08357406707991796, 2.6183056059655255e-06], 'false,false,false': [0.17993079584775074, nan], 'true': [0.0, 0.14142516503635105], 'false,true': [0.001770828104934526, nan]}
{'': [0.00026552346421341, 0.15718206501782378], 'false': [0.15458884740683915, 0.194654478837576], 'false,false': [0.18749999999999994, 0.19791241025582962], 'false,false,false': [0.19791241025582962, nan], 'false,false,true': [nan, 0.18749999999999994], 'false,true': [0.15221838103903476, 0.15637953790619075], 'false,true,false': [0.0006649236826159057, 4.554761126667309e-17], 'true': [0.0002155099877761968, 0.00015587973929146828]}
{'': [0.07229789014340317, 0.12695581566129258], 'false': [0.12384285670914842, 0.16236008909562324], 'false,false': [0.0, 0.15954624074204712], 'false,false,false': [0.15954624074204712, nan], 'false,true': [0.11043167360754175, 0.10695986054954608], 'false,true,true': [nan, 0.11043167360754186], 'true': [0.00015610582650036343, 0.25228429443429157], 'false,false,true': [nan, 0.0]}
{'': [0.0019034588206298412, 0.12588182798292616], 'false': [0.12121019562958338, 0.1952160426515756], 'false,false': [0.0, 0.20412433884444064], 'false,false,false': [0.20408163265306126, 0.2040816326530612], 'true': [0.0029242019458261786, 0.00011079869166943923], 'true,true': [0.0029242019458261786, nan], 'false,false,true': [nan, 0.0]}
{'': [0.011288143632255004, 0.12493822816036677], 'false': [0.11845020852361166, 0.1259802290480955], 'false,false': [2.8693881261587784e-06, 0.12737141498412355], 'false,false,false': [0.11914957704240743, 0.21819388737529938], 'true': [0.01236117358521498, 0.0], 'true,true': [0.00013281739649786565, 0.013997545657656393], 'true,false': [nan, 0.0]}
{'': [0.11063850415939763, 0.12327551939682083], 'false': [2.1792397338349367e-06, 0.12567676709472708], 'false,false': [0.12567676709472708, nan], 'true': [0.05504946554735707, 0.002674007062752004], 'true,true': [0.00724510778784728, 0.05347144966286653], 'true,true,false': [nan, 0.05347144966286643], 'true,true,true': [0.007939450468382814, 0.0]}
{'': [0.06033630956432065, 0.1016883902514572], 'false': [0.09868764393694855, 0.1448029661240555], 'false,false': [0.0, 0.1536748400696862], 'false,false,false': [0.1536748400696862, nan], 'false,true': [0.08559432176973425, 0.0003074922246680962], 'false,true,true': [nan, 0.08559432176973408], 'true': [0.09337165990682407, 0.0005468754177259449], 'false,false,true': [0.0, nan]}
{'': [0.08353905053212451, 0.07129955566573794], 'true': [0.003962347551511813, 0.14256394220451757], 'true,false': [0.0, 0.07568537885399618], 'false': [0.04576343398152283, 0.08950597662440651], 'false,false': [1.2916679672560678e-06, 0.09116636319699138], 'false,false,false': [0.08358300264089864, 0.15822155287912693], 'false,true': [0.038779465236700617, 0.05051906999086392], 'false,true,false': [0.259218456132551, 0.04230565428657238]}
{'': [0.05411360537062682, 0.08297146158139049], 'false': [0.05252733524831563, 0.10570366722400701], 'false,false': [1.036026608995655e-06, 0.10785131406315664], 'false,false,false': [0.1021356419122679, 0.15893266441769352], 'true': [0.003242170905044129, 0.12665819835996772], 'true,true': [0.003242170905044129, nan], 'true,true,true': [0.00019381883187423256, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 9.703
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, G), phenotype(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14185106490048766;  // std dev = 6.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.2127588641775273;  // std dev = 5.681, 141.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=50 */
%   | | | else return 0.07554023944733837;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7480325422264149;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6646707748530459;  // std dev = 3.101, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.15816650668502602;  // std dev = 0.220, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.03319778312061471;  // std dev = 0.768, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1648083823312996;  // std dev = 1.273, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.44944856678266504;  // std dev = 0.317, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5888801916661459;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.025680464448198114;  // std dev = 2.698, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.09102002816709372;  // std dev = 3.078, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5448446448267414;  // std dev = 2.385, 44.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | | else return -0.13849211912457354;  // std dev = 0.147, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.1015754868277949;  // std dev = 0.630, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08133195747747504;  // std dev = 0.729, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.29373034168857504;  // std dev = 1.080, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.35754659532064514;  // std dev = 0.290, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.06004341001575392;  // std dev = 0.702, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.40072375171436486;  // std dev = 3.420, 93.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=68 */
%   | | | else return -0.13982682306926764;  // std dev = 0.393, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.15190630818273998;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04744140990210761;  // std dev = 1.204, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5916527957556921;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.25917973256740495;  // std dev = 1.081, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08289148939548832;  // std dev = 0.656, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3712119160564566;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.18711169933052066;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.0032603834961854516;  // std dev = 2.020, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return 0.05074506457289014;  // std dev = 4.264, 193.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=56 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.10729947752495306;  // std dev = 0.516, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.216677447744249;  // std dev = 0.839, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4450106697618099;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.061741575444033914;  // std dev = 0.768, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.04799410076639858;  // std dev = 1.241, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.31636284719786956;  // std dev = 0.066, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.33942418356722737;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, I), enzyme(G, J) )
%   | | | then return -0.0665911321113811;  // std dev = 0.593, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.0347462644025025;  // std dev = 2.113, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.13409557488555923;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.2681832899448659;  // std dev = 0.261, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.3446627526770151;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.009022151261319474;  // std dev = 2.613, 95.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=23 */
%   | | | else return 0.06345243359591443;  // std dev = 3.595, 116.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2546733667037223;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(A, E), interaction(F, A) )
%   | | | then return 0.44172189016823005;  // std dev = 0.217, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5655720464130531;  // std dev = 0.323, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.15256327642812653;  // std dev = 0.056, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.27151992181385104;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, H), enzyme(A, I) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.11086802750942822;  // std dev = 0.729, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 5.686131272481458E-4;  // std dev = 1.055, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.14711015087665172;  // std dev = 1.711, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.04727557713594729;  // std dev = 2.710, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1784527430937074;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.05387696109948328;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.24848723127495112;  // std dev = 1.920, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.357698292060917;  // std dev = 1.897, 57.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=53 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.12045752212839644;  // std dev = 0.224, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.15409262063274595;  // std dev = 0.322, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2209809760574819;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.016241291422216423;  // std dev = 0.934, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.11726335212562228;  // std dev = 0.754, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17809411794874958;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.723872947346095;  // std dev = 0.153, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.18261975833060398;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(H, A), interaction(H, H) )
%   | | then return -0.03141584380795459;  // std dev = 0.195, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.030990911678846753;  // std dev = 0.849, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.07221497691558423;  // std dev = 1.100, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2121424901284917;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.02081738470333477;  // std dev = 1.288, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | | else return 0.046292604602619025;  // std dev = 2.926, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15377980974122407;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1569285763937082;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.2262120648031977;  // std dev = 1.217, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return -0.12230944421767699;  // std dev = 0.424, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.09621956153484933;  // std dev = 0.846, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.038309666332552575;  // std dev = 0.617, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1788653494013622;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return -0.04198015604639984;  // std dev = 1.855, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.022744133131345434;  // std dev = 2.687, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '25.248', 'seconds']
Refined model CLL: -0.172694


******************************************
Best model found
******************************************
Results 

CLL : -0.17859 

AUC ROC : 0.989324 

AUC PR : 0.325879 

Precision : 0.193271 

Recall : 0.875887 

F1 : 0.316667 

Total Learning Time : 9.703 

Total Inference Time : 104.14087677001953 

Total revision time: 122.17764685821533
Best scored revision CLL: -0.172694


Results 

CLL : -0.17859 

AUC ROC : 0.989324 

AUC PR : 0.325879 

Precision : 0.193271 

Recall : 0.875887 

F1 : 0.316667 

Total Learning Time : 123.72011898231506 

Total Inference Time : 104.14087677001953 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.264
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11434728220694913;  // std dev = 4.802, 121.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=31 */
%   | | | else return 0.189031288040688;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.609733748384724;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.5604369136311725;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.682144869816042;  // std dev = 3.438, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.16112365429500164;  // std dev = 0.068, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1622848608523529;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5984418964569002;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6095520609496101;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09636351357214624;  // std dev = 4.291, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.565329277067737;  // std dev = 2.606, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.1452823157079934;  // std dev = 4.21e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3046995507075102;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2735329114623569;  // std dev = 1.344, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3421085816272868;  // std dev = 1.341, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.44595502856953995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.45388241802042767;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4654618917137855;  // std dev = 2.017, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else return 0.03436600425854101;  // std dev = 5.146, 244.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4872139734558445;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return -0.020298447350726414;  // std dev = 1.762, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.24661036383249219;  // std dev = 0.925, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20088469645830842;  // std dev = 1.301, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05964276517459347;  // std dev = 5.836, 280.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.368567021888645;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.028108718928802148;  // std dev = 1.710, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.31880789130646986;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.11828133284243404;  // std dev = 1.225, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.28762718332078274;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.05859894609151596;  // std dev = 2.709, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.21123132990132898;  // std dev = 0.932, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05831850743949491;  // std dev = 4.620, 182.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=51 */
%   | | | else return 0.01633011180077173;  // std dev = 2.342, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.3020383814974849;  // std dev = 0.307, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2324437623047496;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2879339745343721;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.49599683111538795;  // std dev = 1.504, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.1836482714409943;  // std dev = 0.753, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.27015015190458386;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.061718278048295216;  // std dev = 4.422, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19798012836698278;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.045374831716670665;  // std dev = 1.590, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3654445097581844;  // std dev = 3.395, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.14934770092204377;  // std dev = 0.247, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1935654255278909;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.03220296673659487;  // std dev = 1.533, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1918135014714321;  // std dev = 0.147, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.16216035564504117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.23200328603481957;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.0031468937597546277;  // std dev = 1.589, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2805228278601921;  // std dev = 0.144, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.056935693262732436;  // std dev = 1.593, 70.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22818838945616648;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04728900557878236;  // std dev = 3.963, 134.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=47 */
%   | | | else return 0.03858621657096511;  // std dev = 1.462, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14322477530968522;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.05093691961290671;  // std dev = 0.857, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.7753559473456036;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.4354650610915044;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.21203309456009875;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.030203057421417802;  // std dev = 2.462, 142.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.09668442517625096;  // std dev = 1.202, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.051857962120052885;  // std dev = 3.668, 139.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=47 */
%   | | | else return 0.07255277190437388;  // std dev = 1.408, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.827', 'seconds']
Parameter learned model CLL:-0.204831 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.802, 90, 31], 'false,false,true,false': [5.487, 91, 45], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [1.291, 2, 10], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.438, 14, 76], 'false,false,true,false': [0.068, 182, 0], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.011, 0, 11], 'true,false': [0.017, 0, 6], 'false,true,true': [4.291, 87, 34], 'false,true,false,true': [2.606, 8, 48], 'false,true,false,false': [4.21e-08, 90, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.344, 4, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.341, 2, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.095, 0, 3], 'false,true,true,false': [2.017, 7, 21], 'false,true,false': [5.146, 186, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.762, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.925, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.301, 2, 10], 'false,true': [5.836, 198, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.71, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.023, 0, 9], 'true,true,false': [1.225, 3, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.709, 41, 19], 'false,false,true': [0.932, 1, 8], 'false,false,false,true': [4.62, 131, 51], 'false,false,false,false': [2.342, 29, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.307, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.504, 4, 33], 'true,false': [0.753, 96, 0], 'false,true': [0.018, 0, 5], 'false,false,true': [4.422, 108, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.59, 4, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.395, 15, 82], 'false,true,false': [0.247, 182, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.533, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.147, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.112, 0, 5], 'false,true,true': [1.589, 33, 13], 'false,true,false,true': [0.144, 0, 8], 'false,true,false,false': [1.593, 59, 11], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [3.963, 87, 47], 'false,false,false,false': [1.462, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 7], 'true,true,true,false': [0.857, 1, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.073, 0, 3], 'false,true': [2.462, 110, 32], 'false,false,true': [1.202, 2, 5], 'false,false,false,true': [3.668, 92, 47], 'false,false,false,false': [1.408, 8, 4]}]
{'': [0.05246913580246885, 0.21627768595041377], 'false': [-2.5376526277146434e-16, 0.20940075740699596], 'false,false': [0.208269618010871, 0.2314049586776858], 'false,false,false': [0.2314049586776858, nan], 'false,false,true': [0.19056075404685593, 0.22139922145328833], 'true': [0.07100591715976314, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.12770150771236657, 0.20547536568250616], 'false': [-6.344131569286608e-17, 0.20188879388541006], 'false,false': [0.20090848708410394, 0.2222222222222221], 'false,false,false': [0.2222222222222221, nan], 'false,false,true': [0.1313278538776966, 2.5454508202659287e-05], 'true': [0.10937499999999989, 0.138947108353923], 'false,true': [-6.344131569286608e-17, nan]}
{'': [5.1404370601288215e-05, 0.16343054093545864], 'false': [0.1599117579334879, 0.23066171875846156], 'false,false': [0.23066171875846156, nan], 'false,false,true': [0.25, 0.22563287656770942], 'false,true': [0.15213739280825103, 0.16592170114070529], 'false,true,false': [0.1212994189270413, 1.973729821555834e-17], 'true': [1.0213701692488284e-05, 4.705040248698111e-05]}
{'': [0.095244104278723, 0.13297358275777707], 'false': [0.12960601321920992, 0.17625166099154488], 'false,false': [0.0, 0.17248716428957508], 'false,false,false': [0.17248716428957508, nan], 'false,true': [0.13156066332524397, 0.10851679893867792], 'false,true,true': [0.0030092889695641687, 0.145321048971964], 'true': [0.09996786000834351, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.12791561592673992, 0.1253157939150845], 'true': [0.10685981076021636, 0.14111648470836327], 'false': [0.12163647837127685, 0.18960432769713775], 'false,false': [0.0, 0.19500012520688675], 'false,false,false': [0.19500012520688675, nan], 'true,true': [0.10685981076021636, nan], 'false,false,true': [nan, 0.0]}
{'': [0.08870675248427771, 0.121775132734932], 'false': [0.12227527799221763, 0.12164424483029253], 'false,false': [0.09650953504271581, 0.12166204834205202], 'false,false,false': [0.11727390630809226, 0.14068814125603724], 'true': [0.09338372636586018, 0.0], 'true,true': [5.834175398824717e-05, 0.1666036606530169], 'true,false': [nan, 0.0]}
{'': [0.10966131785948544, 0.12352154211635377], 'false': [6.247538847212742e-05, 0.1261464724672365], 'false,false': [0.1261464724672365, nan], 'true': [0.05110202544624382, 0.005903415277424833], 'true,true': [0.006190246468552735, 0.05952944217070688], 'true,true,false': [-9.25185853854297e-18, 0.061109392276412655], 'true,true,true': [0.0063002163776698875, 0.0]}
{'': [0.1335869609693844, 0.10301756736736081], 'true': [-7.93016446160826e-18, 0.18063989592163776], 'false': [0.10163194928167874, 0.1199630525165161], 'false,false': [0.0, 0.12372832903852188], 'false,false,false': [0.12372832903852188, nan], 'false,true': [0.11882155148460574, 0.00033401012253075777], 'false,true,true': [nan, 0.11882155148460595], 'false,false,true': [0.0, nan]}
{'': [0.002667189543446878, 0.08741054335599326], 'false': [0.04773681543619306, 0.11765675531997465], 'false,false': [4.9600254905690644e-05, 0.120550783388539], 'false,false,false': [0.1171943767522212, 0.15260781568436602], 'false,true': [0.05486348484006457, 0.04329322578435854], 'false,true,false': [0.002604851804205374, 0.036263504798217834], 'true': [0.002393050427941764, 0.00278934325997903], 'true,false': [0.0, 0.0025113562995616734]}
{'': [0.09444740906138042, 0.07848865159004906], 'true': [0.10533043338042965, 0.0017830511995617453], 'true,true': [0.05456495380241829, 0.028881453639649224], 'false': [0.0426897535125177, 0.10785217538554266], 'false,false': [0.20625069274717783, 0.10229133217213149], 'false,false,false': [0.09681907982728402, 0.16528401512602328], 'true,true,true': [3.96508223080413e-18, 0.10487138345028188], 'true,true,false': [0.0, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 7.86
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( location(A, H), phenotype(A, I) )
%   | | then if ( location(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4922952765629276;  // std dev = 4.362, 82.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=52 */
%   | | | else return -0.14185106490048766;  // std dev = 7.45e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( location(A, K), complex(A, L) )
%   | | | then return -0.0198998453882926;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return 0.13863673997756112;  // std dev = 4.068, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.5528067455442878;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109543;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then return 0.2641072739982948;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7551805016408267;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6547671577120245;  // std dev = 3.400, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.14624373241163735;  // std dev = 0.377, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.1496043335506223;  // std dev = 1.108, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.030815589314646043;  // std dev = 1.250, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4171688139531487;  // std dev = 0.359, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.41832160542311986;  // std dev = 0.353, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6243341649198877;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07710624129572322;  // std dev = 3.946, 112.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5358276881598513;  // std dev = 2.754, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.1309669299969469;  // std dev = 0.206, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.4770437087837765;  // std dev = 0.734, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.18268033390074442;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.257233391002161;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4071661251884808;  // std dev = 0.229, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.4514556084358845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), enzyme(F, H) )
%   | | | then return -0.10529508061219912;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.47890252888120327;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.06189480497789262;  // std dev = 3.413, 104.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=27 */
%   | | | else return 0.12050687927199892;  // std dev = 4.266, 137.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=49 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4823666090106393;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.3602731810385723;  // std dev = 0.958, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.12165723964718826;  // std dev = 0.722, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.3642357588904502;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.36670575455091986;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.45399856268122873;  // std dev = 1.708, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return -0.0480243090588839;  // std dev = 2.234, 74.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.005470084433816885;  // std dev = 1.946, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.05642414509734315;  // std dev = 3.945, 135.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=40 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3651850247164111;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.012217786897436436;  // std dev = 1.047, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07443487523391545;  // std dev = 1.186, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.30472098003536374;  // std dev = 0.045, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( complex(A, D), location(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.040684349761509385;  // std dev = 1.154, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.09690061542471529;  // std dev = 1.026, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( location(J, E), recursion_proteinclass(J, B) )
%   | | | then return 0.19752306831108643;  // std dev = 2.249, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | | | else return -0.12431258374131897;  // std dev = 0.109, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(A, M), interaction(K, M) )
%   | | | then return -0.08574673469786834;  // std dev = 1.697, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.04375629509079861;  // std dev = 2.626, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.07699882135724284;  // std dev = 3.045, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | | | else return 0.12194030609911223;  // std dev = 1.892, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24474754105277807;  // std dev = 0.040, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.14892373367063444;  // std dev = 1.060, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.4392783991888312;  // std dev = 1.847, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.14460428660509717;  // std dev = 0.065, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.24765516244157118;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.536863408497896;  // std dev = 0.186, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.14740494083140201;  // std dev = 0.216, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.012458992978940086;  // std dev = 2.244, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0.043676924894753145;  // std dev = 2.911, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19492039445960074;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2205155078876205;  // std dev = 0.032, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.24850163439137643;  // std dev = 1.268, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.341725102277751;  // std dev = 2.928, 75.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=63 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.11636451935473364;  // std dev = 0.324, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.15342574209693308;  // std dev = 0.561, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.18731026672180107;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.06317858340531322;  // std dev = 0.923, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.017154081432891228;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16304756858660058;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1735295143002624;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( complex(A, H), interaction(A, G) )
%   | | | then return -0.03065030697148165;  // std dev = 1.310, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return -0.11054747694209857;  // std dev = 1.354, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.04842613280518905;  // std dev = 1.219, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.033842400227519574;  // std dev = 1.648, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.003019397314995046;  // std dev = 0.920, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.11687202758447685;  // std dev = 1.052, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.033047515771356124;  // std dev = 3.523, 154.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.144799884017584;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.0897942434834852;  // std dev = 1.115, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1657198667563163;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.1931994073096549;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return 0.04384110098178418;  // std dev = 2.444, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return -0.07958968868691574;  // std dev = 0.512, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return -0.0491383283398166;  // std dev = 1.486, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return 0.0026408702502492146;  // std dev = 3.286, 151.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=43 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.860', 'seconds']
Refined model CLL: -0.188964


******************************************
Best model found
******************************************
Results 

CLL : -0.169393 

AUC ROC : 0.988931 

AUC PR : 0.346032 

Precision : 0.263291 

Recall : 0.784906 

F1 : 0.394313 

Total Learning Time : 7.86 

Total Inference Time : 18.329200267791748 

Total revision time: 35.61257140541076
Best scored revision CLL: -0.188964


Results 

CLL : -0.169393 

AUC ROC : 0.988931 

AUC PR : 0.346032 

Precision : 0.263291 

Recall : 0.784906 

F1 : 0.394313 

Total Learning Time : 37.15504352951049 

Total Inference Time : 18.329200267791748 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.42
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11621345122854462;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.134878494847939;  // std dev = 5.641, 159.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.18573514199606403;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5293402122862327;  // std dev = 1.250, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8413059952428465;  // std dev = 0.006, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15865439557685912;  // std dev = 0.012, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | | else if ( location(A, K) )
%   | | | then return 0.17171877526255924;  // std dev = 3.451, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.3340026641994516;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.587906612129053;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6009658010795391;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07891462282904337;  // std dev = 2.036, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6632351168358162;  // std dev = 1.014, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.13898141137129694;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14794267215473023;  // std dev = 3.576, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.7807653928755663;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.443951710429685;  // std dev = 0.064, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4634827732471141;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3915366716890194;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5874151814561012;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.046138281725832904;  // std dev = 4.255, 201.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5186001579758845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.03750122237665812;  // std dev = 3.670, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.006266704537075753;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3339834398377569;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3459860119094451;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.055495902827335866;  // std dev = 4.274, 193.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39074893960500645;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1421101594310454;  // std dev = 3.469, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.11108272307846045;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26059981201407717;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3485924742115366;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29465913419601686;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30260700969254994;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07846051807533426;  // std dev = 0.955, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.27573681837552305;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06319244196393348;  // std dev = 3.959, 165.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
%   | | | else return 0.10520628728253656;  // std dev = 3.582, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23586488471912634;  // std dev = 0.117, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22626674570431782;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.22580353588225277;  // std dev = 0.658, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6267170227648593;  // std dev = 0.706, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19535070828931425;  // std dev = 0.584, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22109200552072233;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08192524355458192;  // std dev = 3.252, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17250588482235774;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09916406027148496;  // std dev = 0.870, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4252390220082301;  // std dev = 1.101, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.14563682043077847;  // std dev = 0.220, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.10840187189596347;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.024934441949450797;  // std dev = 3.022, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16035786670104699;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13038188797906058;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18941057045125026;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06539472609008885;  // std dev = 0.386, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1891065245052691;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.007709831585215823;  // std dev = 1.248, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.003852917754484616;  // std dev = 0.915, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04730496799996463;  // std dev = 2.610, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
%   | | | else return 0.060889046076541053;  // std dev = 2.913, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13663977129747756;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17032528830941285;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12813078618785534;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.04338824623603097;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02391052953059133;  // std dev = 1.375, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17031166117759636;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.005815388622873888;  // std dev = 2.799, 134.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=36 */
%   | | | else return 0.034805134580626916;  // std dev = 2.948, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.196', 'seconds']
Parameter learned model CLL:-0.185412 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.436, 23, 8], 'false,false,true,false': [5.641, 115, 44], 'false,false,false,true': [3.574, 39, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.25, 2, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.006, 0, 52], 'false,false,true,false': [0.012, 159, 0], 'false,false,false,true': [3.451, 35, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.047, 0, 6], 'true,false': [0.05, 0, 8], 'false,true,true': [2.036, 23, 8], 'false,true,false,true': [1.014, 1, 48], 'false,true,false,false': [0.0, 125, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.576, 38, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.064, 0, 11], 'true,false': [0.022, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.116, 0, 3], 'false,true,false': [4.255, 149, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.67, 50, 18], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.039, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.048, 0, 9], 'false,true': [4.274, 137, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.469, 33, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.036, 0, 7], 'true,true,false': [0.066, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.955, 21, 3], 'false,false,true': [0.02, 0, 6], 'false,false,false,true': [3.959, 116, 49], 'false,false,false,false': [3.582, 35, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.117, 0, 12], 'true,true,true,false': [0.023, 0, 2], 'true,true,false,true': [0.658, 1, 1], 'true,true,false,false': [0.706, 0, 36], 'true,false': [0.584, 79, 0], 'false,true': [0.003, 0, 5], 'false,false,true': [3.252, 69, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.004, 0, 6], 'true,false': [0.87, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.101, 1, 56], 'false,true,false': [0.22, 157, 0], 'false,false,true,true': [0.729, 1, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.022, 43, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.049, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.039, 0, 4], 'false,true,true': [0.386, 8, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.248, 41, 14], 'false,false,true': [0.915, 1, 5], 'false,false,false,true': [2.61, 67, 36], 'false,false,false,false': [2.913, 34, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.025, 0, 5], 'true,true,true,false': [0.027, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.836, 1, 4], 'false,true': [1.375, 62, 17], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.799, 98, 36], 'false,false,false,false': [2.948, 36, 20]}]
{'': [0.06222222222222188, 0.2118530273437506], 'false': [-1.4802973661668753e-16, 0.20505600000000138], 'false,false': [0.19878116343490385, 0.2222222222222218], 'false,false,false': [0.22027348394768081, 0.25], 'false,false,true': [0.19146722164412083, 0.20015031050986984], 'true': [0.08999999999999977, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [0.10791697586175186, 0.19995910239593193], 'false': [7.401486830834377e-17, 0.19624970897248437], 'false,false': [0.18569625432615844, 0.22816168575205034], 'false,false,false': [0.22466536648772376, 0.25], 'false,false,true': [8.012734612569043e-07, 8.677372276487327e-07], 'true': [0.0, 0.15615063371361426], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0003837253755529473, 0.1564406741962375], 'false': [0.13575465044262153, 0.22222103363691742], 'false,false': [0.2194579521208459, 0.0], 'false,false,true': [0.0, 0.22042825018799977], 'false,true': [0.13373573528858868, 0.13610462659454825], 'false,true,false': [0.020988928716677246, -1.1013412404281553e-16], 'true': [0.0003754228775501023, 0.0003168626421790055], 'false,false,false': [0.0, nan]}
{'': [0.00038905129465021434, 0.1217308446080346], 'false': [0.09315475248304424, 0.19675622627398814], 'false,false': [0.00255462385154398, 0.1970406363963486], 'false,false,false': [0.19806036998613935, 0.18750000000000003], 'false,true': [0.010557977333318924, 0.09006936793123783], 'false,true,true': [0.0, 0.004485205463948668], 'false,false,true': [0.0, 0.0], 'true': [0.0003703262713244645, 0.00015798924475751708]}
{'': [0.0003010256426198169, 0.12560465831169168], 'false': [0.09466988693348624, 0.22549575618318132], 'false,false': [0.0012262985795323533, 0.23215467901824732], 'false,false,false': [0.23143266489648198, 0.24999999999999997], 'false,false,true': [0.0, 0.0], 'true': [0.0002969601389827492, 0.00025183363563151414], 'true,true': [0.0002969601389827492, nan]}
{'': [0.0019143435666192365, 0.12106700720260351], 'false': [0.037999828259000126, 0.12750628543650686], 'false,false': [6.50609655640418e-05, 0.12989822427355355], 'false,false,false': [0.09499843998881116, 0.23327370472893916], 'true': [0.002303786374447099, 0.00043027116302804536], 'true,true': [0.00018482647904554433, 0.0010847879910204777], 'true,false': [0.0003898036525812887, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.14165079906480746, 0.09699650277896027], 'true': [0.06841002278514893, 0.004319867706376696], 'false': [1.7005345127385495e-06, 0.10073496708419603], 'false,false': [0.10073496708419603, nan], 'true,true': [0.0010259001802013382, 0.06075180503834706], 'true,true,false': [0.21672670891942739, 0.013834358762825547], 'true,true,true': [0.001138298254219137, 0.0002725480739110206]}
{'': [0.05175303343052584, 0.0878983185350959], 'false': [0.06957742990023802, 0.14718385431563386], 'false,false': [0.17723076004175242, 0.144944932345153], 'false,false,true': [0.17723076004175242, nan], 'false,false,false': [0.144944932345153, nan], 'false,true': [0.021274365111926673, 0.00030927696153070205], 'true': [2.8284408009615625e-06, 0.08410156079896203], 'false,true,true': [nan, 0.02127436511192664]}
{'': [0.0005423111803453118, 0.07919169774285163], 'false': [0.027468505195117246, 0.0991035759654402], 'false,false': [0.1394524205027516, 0.09747633234543011], 'false,false,false': [0.0661348428316331, 0.15713626237233244], 'false,true': [0.01658312107881613, 0.028618346064193487], 'false,true,false': [0.0, 0.028299831508722072], 'true': [0.0002626124278375108, 0.0008545460123098369], 'true,false': [0.0, 0.00037130544450678094]}
{'': [0.05478916999699178, 0.06815557989161287], 'false': [0.0239361118055077, 0.08573138932248106], 'false,false': [1.1439310017458126e-06, 0.08729650583148994], 'false,false,false': [0.058451923150820366, 0.15515376834580197], 'true': [0.0004222882035253256, 0.1398518857520254], 'true,true': [0.0004384714216526704, 0.0], 'true,true,true': [0.00012918889176570801, 0.0002447460195717695], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.958
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995117;  // std dev = 1.98e-07, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.024815601766178936;  // std dev = 1.826, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.2132891220153997;  // std dev = 4.950, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7385128322212614;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7670719622367217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7617983194854959;  // std dev = 0.987, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.14579770032646605;  // std dev = 0.259, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2597970396530056;  // std dev = 2.218, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.11849244696235979;  // std dev = 2.650, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.07098159265506673;  // std dev = 0.640, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.21918007406283807;  // std dev = 1.550, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6198230811757109;  // std dev = 0.509, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13130107631090318;  // std dev = 0.217, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.550660127024114;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0752819828592612;  // std dev = 3.653, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | else return 0.1389620364829899;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3973582002353475;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5017733901679431;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.10805600410634876;  // std dev = 0.057, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.06854936713844341;  // std dev = 3.773, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41403200502403614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5934042086160847;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return -0.08561311892616778;  // std dev = 0.772, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.13339477700460273;  // std dev = 3.414, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then return 0.03775174073503882;  // std dev = 0.271, 201.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=56 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.31835239220556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.446370106333134;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.013285802780724653;  // std dev = 1.613, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.15809141341223065;  // std dev = 3.027, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.22922135964589335;  // std dev = 0.692, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.28302920752143323;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.09893903666550898;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.03802441166317896;  // std dev = 0.596, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return 0.06757870884524708;  // std dev = 0.442, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.017132742573867047;  // std dev = 3.189, 95.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=27 */
%   | | | else return 0.11096432192257892;  // std dev = 3.737, 114.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24845782138578873;  // std dev = 0.061, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), complex(A, F) )
%   | | | then return 0.3400511027077125;  // std dev = 0.168, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6599588563539058;  // std dev = 0.478, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.1854896980420223;  // std dev = 0.069, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), phenotype(J, K) )
%   | | | then return 0.013156538385286161;  // std dev = 1.822, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.13067201020823765;  // std dev = 1.182, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.07614037991667516;  // std dev = 1.888, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.1676897474328925;  // std dev = 0.659, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17233392227005456;  // std dev = 0.005, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.34532231376798483;  // std dev = 0.848, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.40431681983459916;  // std dev = 0.551, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.10514901789851806;  // std dev = 0.184, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.15617218150230158;  // std dev = 0.233, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return -0.08279845330129999;  // std dev = 1.645, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return -0.0014119611552322574;  // std dev = 1.413, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( location(A, J) )
%   | | | then return 0.0508517009725804;  // std dev = 1.868, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.031360515045456894;  // std dev = 1.001, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17109621921618387;  // std dev = 0.035, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.07181695743455314;  // std dev = 0.012, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.03409535383369552;  // std dev = 0.278, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.18511527144963347;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.008645234902926898;  // std dev = 1.077, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | else if ( location(A, G), enzyme(A, H) )
%   | | then if ( interaction(A, I), location(I, G) )
%   | | | then return -0.004814404785007369;  // std dev = 1.103, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.0767655645193341;  // std dev = 1.585, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else if ( location(A, J) )
%   | | | then return 0.023008203002124562;  // std dev = 3.039, 113.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return -0.0252552234070047;  // std dev = 1.004, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.06767217018404588;  // std dev = 0.216, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.12805411440450343;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1681552211585561;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then return 0.008272809591299703;  // std dev = 0.151, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.06851702622824285;  // std dev = 0.899, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.10692472989800123;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.14904942267136037;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.022984760005368962;  // std dev = 1.476, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return -0.006212618884278161;  // std dev = 3.507, 153.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.932', 'seconds']
Refined model CLL: -0.165439


******************************************
Best model found
******************************************
Results 

CLL : -0.184863 

AUC ROC : 0.986717 

AUC PR : 0.239781 

Precision : 0.154528 

Recall : 0.880866 

F1 : 0.262931 

Total Learning Time : 2.958 

Total Inference Time : 2.6770479679107666 

Total revision time: 9.7976195602417
Best scored revision CLL: -0.165439


Results 

CLL : -0.184863 

AUC ROC : 0.986717 

AUC PR : 0.239781 

Precision : 0.154528 

Recall : 0.880866 

F1 : 0.262931 

Total Learning Time : 11.34009168434143 

Total Inference Time : 2.6770479679107666 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.573
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07481560176617903;  // std dev = 3.191, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.16283643509951176;  // std dev = 5.207, 128.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7281936043102514;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.618272687223838;  // std dev = 0.912, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.821137451694901;  // std dev = 0.994, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1587044192205109;  // std dev = 0.064, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07355277018736;  // std dev = 2.898, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.15288007360931785;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5692527820673249;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3645677887052325;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.03054573563940821;  // std dev = 2.831, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6429193383633405;  // std dev = 1.381, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14235479721269287;  // std dev = 2.58e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.40722456467898716;  // std dev = 0.909, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.104251101703532;  // std dev = 2.496, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10337726270064955;  // std dev = 1.451, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4396471115530395;  // std dev = 0.080, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.572738411276384;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5972705332550997;  // std dev = 0.187, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.04974279459762545;  // std dev = 4.312, 190.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.47910063734941555;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6152245192818757;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.04882403976445534;  // std dev = 2.876, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.7785130874434055;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3264837193113197;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3500841828825612;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.061748289519930326;  // std dev = 4.454, 187.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3629121360913201;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4132511936032091;  // std dev = 0.071, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06928906568472876;  // std dev = 2.558, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.04313594384351684;  // std dev = 1.474, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.07973721327184367;  // std dev = 1.259, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.42980338412976216;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.28380624663318943;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 3.918738120293567E-4;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0732633085900388;  // std dev = 1.256, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2792022568906537;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.07067836553190214;  // std dev = 3.931, 148.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | | | else return 0.03088243114690026;  // std dev = 3.139, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26998194304155887;  // std dev = 0.150, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2890194049145044;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2527142346918057;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5962617050605918;  // std dev = 0.840, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17613646080438278;  // std dev = 0.729, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2166268109936158;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08376621141117505;  // std dev = 3.197, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19764758256465909;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.06971867576199992;  // std dev = 0.939, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3783699896513901;  // std dev = 2.131, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return -0.1414312964093793;  // std dev = 0.223, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.23414361404983186;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03310906889268246;  // std dev = 2.493, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16766365697390057;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.20801708705739613;  // std dev = 0.570, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.21240589252009562;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09066808643340299;  // std dev = 0.313, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.237461126092375;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.022786032217123952;  // std dev = 1.456, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.07560925283799258;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02529299297783196;  // std dev = 2.904, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | | else return 0.03971008040792645;  // std dev = 2.476, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1459938851957624;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14380744059406597;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1544329737973763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20807518683647197;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1848766795369411;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03515578078943438;  // std dev = 2.081, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.06446617343739114;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03647943269950007;  // std dev = 2.737, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | | else return 0.006281674090694107;  // std dev = 2.494, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.060', 'seconds']
Parameter learned model CLL:-0.1769 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.191, 47, 13], 'false,false,true,false': [5.207, 89, 39], 'false,false,false,true': [2.527, 22, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.02, 0, 7], 'false,true,true': [0.912, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.994, 1, 52], 'false,false,true,false': [0.064, 132, 0], 'false,false,false,true': [2.898, 35, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.017, 0, 11], 'true,false': [0.886, 1, 4], 'false,true,true': [2.831, 55, 14], 'false,true,false,true': [1.381, 2, 42], 'false,true,false,false': [2.58e-08, 90, 0], 'false,false,true,true': [0.909, 1, 3], 'false,false,true,false': [2.496, 23, 9], 'false,false,false,true': [1.451, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.08, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.187, 0, 6], 'false,true,false': [4.312, 141, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.876, 35, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.001, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.057, 0, 6], 'false,true': [4.454, 131, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.071, 0, 2], 'false,false,false,true': [2.558, 25, 9], 'false,false,false,false': [1.474, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.259, 2, 9], 'true,true,false': [0.052, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.782, 1, 2], 'false,true': [1.256, 29, 5], 'false,false,true': [0.045, 0, 5], 'false,false,false,true': [3.931, 102, 46], 'false,false,false,false': [3.139, 41, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.15, 0, 13], 'true,true,true,false': [0.097, 0, 3], 'true,true,false,true': [0.027, 0, 3], 'true,true,false,false': [0.84, 0, 33], 'true,false': [0.729, 114, 0], 'false,true': [0.028, 0, 3], 'false,false,true': [3.197, 61, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.939, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.131, 4, 56], 'false,true,false': [0.223, 134, 0], 'false,false,true,true': [0.085, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.493, 33, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.022, 0, 10], 'true,false,true': [0.57, 1, 1], 'true,false,false': [0.059, 0, 5], 'false,true,true': [0.313, 20, 1], 'false,true,false,true': [0.17, 0, 6], 'false,true,false,false': [1.456, 57, 17], 'false,false,true': [0.858, 1, 3], 'false,false,false,true': [2.904, 67, 31], 'false,false,false,false': [2.476, 30, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.019, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.03, 0, 2], 'true,false': [0.044, 0, 3], 'false,true': [2.081, 70, 24], 'false,false,true': [0.858, 1, 3], 'false,false,false,true': [2.737, 64, 31], 'false,false,false,false': [2.494, 37, 12]}]
{'': [0.05859374999999978, 0.21135583315070533], 'false': [0.10937499999999978, 0.2029916203304892], 'false,false': [0.2000905387052973, 0.21606648199445933], 'false,false,false': [0.2060353798126952, 0.24489795918367335], 'false,false,true': [0.1697222222222217, 0.21185302734375056], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, 0.18750000000000006], 'true': [0.07100591715976314, 1.4802973661668753e-16]}
{'': [3.726045762206809e-05, 0.20356392618194938], 'false': [0.1039915867379182, 0.1985243352621587], 'false,false': [0.20161760215878174, 0.18534295171261492], 'false,false,true': [0.018644839368825484, 3.110156625234102e-05], 'false,false,false': [0.18255250713749346, 0.22222222222222224], 'false,true': [0.1039915867379182, nan], 'true': [-2.220446049250313e-16, 5.703131268651264e-05]}
{'': [0.05809958547355093, 0.15278294017820937], 'false': [0.14025461572259745, 0.20650801495767987], 'false,false': [0.20512827848747409, 0.2105415370625115], 'false,false,false': [0.2105415370625115, nan], 'false,false,true': [0.20673213369098006, 0.19472858333510917], 'false,true': [0.11612943023247356, 0.1502243469688246], 'false,true,false': [0.04332983732592661, 7.401486830834377e-18], 'true': [2.610354836572106e-05, 0.15705778248495622]}
{'': [0.00042218938920279093, 0.1216578243180567], 'false': [0.10469565329933692, 0.1880711327953336], 'false,false': [0.004117713607191635, 0.1871098883359493], 'false,false,false': [0.179848854044492, 0.0], 'false,true': [0.00509137554772091, 0.09784889721104503], 'false,true,true': [0.0, 0.005853963137753586], 'false,false,true': [0.0, 0.0], 'true': [0.00042218938920279093, nan]}
{'': [0.0003525807093982684, 0.12401597843175982], 'false': [0.10607713218867237, 0.19648813391373074], 'false,false': [0.002252462854386905, 0.20282248710184855], 'false,false,false': [0.19247442257958555, 0.24137434932987073], 'false,false,true': [0.0, 0.0025340207111852475], 'true': [2.0462729014939876e-07, 0.0005469557040940024], 'true,true': [2.0462729014939876e-07, nan]}
{'': [0.13956740837931597, 0.11464084830583726], 'true': [0.12978329886748866, 0.16806944483869027], 'true,false': [0.0, 0.20401166643785082], 'true,true': [0.1440478359879074, 0.0006885175349784223], 'false': [0.046423731411341124, 0.12309936911740879], 'false,false': [0.00040819612688828275, 0.12496518602641882], 'false,false,false': [0.1044034711924705, 0.17914026072659348], 'true,false,true': [0.0, nan]}
{'': [0.10719118120558252, 0.10813181034565703], 'false': [0.0002570603559927387, 0.1110920355864747], 'false,false': [0.1110920355864747, nan], 'true': [0.0388668310023318, 0.00466710636230325], 'true,true': [0.0020480443062918796, 0.028620336060756053], 'true,true,false': [0.00023891812113556918, 0.02136505959795825], 'true,true,true': [0.001736158641968291, 0.0031050785761108646]}
{'': [0.05924186689187173, 0.09151805831184176], 'false': [0.08137622544627364, 0.13195170940834458], 'false,false': [0.0023841528296656513, 0.13806361599193095], 'false,false,false': [0.13806361599193095, nan], 'false,true': [0.07565906555089044, 0.00037118583168709176], 'false,true,true': [nan, 0.07565906555089033], 'true': [0.0, 0.11030083118588174], 'false,false,true': [0.0023841528296656513, nan]}
{'': [0.03554567308996449, 0.07443337877719249], 'false': [0.02721391189471487, 0.10659742446108035], 'false,false': [0.18409507005874576, 0.10407562824244761], 'false,false,false': [0.08606747555857286, 0.1459491544845118], 'true': [4.854001703483157e-05, 0.08291354806818267], 'true,false': [0.1621994395677029, 0.0006976252521414151], 'false,true': [0.0046771878644437884, 0.03154152344000125], 'false,true,false': [0.004811110230458003, 0.028629210485162336]}
{'': [0.0007373215214168394, 0.07867952577583831], 'false': [0.0460759635562734, 0.09803923528268739], 'false,false': [0.18393036110399663, 0.09543118026402704], 'false,false,false': [0.07887527114791977, 0.12692776766184344], 'true': [0.0006009559508740389, 0.000644028925596891], 'true,true': [3.8478440542311086e-05, 0.0009431595161922962], 'true,true,false': [0.0, 0.00045557693437786595], 'true,true,true': [0.0, 0.0001885677707145067]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
3;false,false,false;location(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 3.534
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.04862512557570276;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.13885068948547727;  // std dev = 5.876, 171.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=48 */
%   | | | else return 0.21109011157010057;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7551723247302798;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7534963577430148;  // std dev = 2.138, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.1537304628838016;  // std dev = 0.147, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.33046267672618707;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12078525737134822;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3553664367462845;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return -0.0714663748803082;  // std dev = 1.042, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.09908479834648412;  // std dev = 2.520, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6815658177819699;  // std dev = 1.003, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.13898431575145115;  // std dev = 0.028, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5697894723557454;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.07022904284877106;  // std dev = 2.255, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.2673176263730301;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return -0.04962765971418951;  // std dev = 1.185, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.4298356177061225;  // std dev = 0.021, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5729369529903026;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6151363873332517;  // std dev = 0.167, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11316271542289154;  // std dev = 0.037, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.0872870550318282;  // std dev = 4.182, 159.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.42871946673847866;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(A, J) )
%   | | | then return 0.06989387430495679;  // std dev = 2.796, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.2686683140351821;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3304329915423556;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3859196159715425;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1030327502409732;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.015867084731271092;  // std dev = 1.654, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.22963144120965548;  // std dev = 1.555, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.07052298295064195;  // std dev = 3.597, 122.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=37 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3285930007317567;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.023195157791476455;  // std dev = 2.577, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.1472596715356408;  // std dev = 1.359, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.3040975500534325;  // std dev = 0.071, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.2607069744550094;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.10013161710263359;  // std dev = 0.034, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.040308335695300755;  // std dev = 0.487, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.0371087353569149;  // std dev = 0.333, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.038529999241609526;  // std dev = 0.954, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.31217137030047376;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.09744632629503758;  // std dev = 2.872, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | | | else return 0.03384638970802715;  // std dev = 4.115, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23920339285109343;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2642898332446658;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5858921772800092;  // std dev = 0.779, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.18463079881438757;  // std dev = 0.084, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.23807881841558454;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5186556875277564;  // std dev = 0.240, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.17232870787313057;  // std dev = 0.349, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.19409581218191377;  // std dev = 1.135, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.08401444397941626;  // std dev = 1.613, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1724666163162452;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.19973750354138334;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return 0.2292940543660358;  // std dev = 1.395, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return 0.4481394539590209;  // std dev = 0.518, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.1219659198776893;  // std dev = 0.240, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.16019652836901774;  // std dev = 0.245, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.1763696812250961;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.045888742208027335;  // std dev = 2.135, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.26467712741115634;  // std dev = 1.117, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1705166564498535;  // std dev = 0.043, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.31962127869044266;  // std dev = 0.354, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.6024593462028957;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1364148015677379;  // std dev = 0.186, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.24600050257096923;  // std dev = 0.110, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(A, H), recursion_proteinclass(I, B) )
%   | | | then return 0.25080980924449214;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.02056121106551652;  // std dev = 2.018, 97.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=23 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.034608814000705826;  // std dev = 1.481, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.08749896343689893;  // std dev = 1.636, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.13379889169628872;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( location(C, E), interaction(D, C) )
%   | | | then return 0.11281551036789739;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21566412518342543;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1619584785863136;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.1560598953840941;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), location(A, H) )
%   | | then if ( phenotype(A, I), phenotype(G, I) )
%   | | | then return -0.047056546294302094;  // std dev = 0.917, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 2.650815254451146E-4;  // std dev = 2.498, 145.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=44 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.25710916833769476;  // std dev = 1.044, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.01241778720582908;  // std dev = 1.913, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.875', 'seconds']
Refined model CLL: -0.174961


******************************************
Best model found
******************************************
Results 

CLL : -0.187546 

AUC ROC : 0.988522 

AUC PR : 0.259029 

Precision : 0.166038 

Recall : 0.932862 

F1 : 0.281901 

Total Learning Time : 3.534 

Total Inference Time : 3.1028635501861572 

Total revision time: 11.382641918182372
Best scored revision CLL: -0.174961


Results 

CLL : -0.187546 

AUC ROC : 0.988522 

AUC PR : 0.259029 

Precision : 0.166038 

Recall : 0.932862 

F1 : 0.281901 

Total Learning Time : 12.925114042282104 

Total Inference Time : 3.1028635501861572 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.089
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19021000380180236;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16174043707248975;  // std dev = 5.436, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return 0.17465206938710715;  // std dev = 5.322, 126.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15873928946178772;  // std dev = 4.770, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | | else return 0.16002369838899672;  // std dev = 5.807, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1476667859186735;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.13517649877612817;  // std dev = 6.585, 190.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07026566674121913;  // std dev = 7.738, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08918281478536007;  // std dev = 7.556, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7275077375598441;  // std dev = 0.000245, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.27249749606840706;  // std dev = 0.000315, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05408346064669754;  // std dev = 4.027, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | | else return 0.10053861640812843;  // std dev = 4.189, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04232797709691129;  // std dev = 3.784, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | | | else return 0.06448450515620875;  // std dev = 5.802, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030198854448957847;  // std dev = 7.010, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04527562373762602;  // std dev = 6.857, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.633', 'seconds']
Parameter learned model CLL:-0.344961 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.623, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.436, 90, 44], 'false,false,false,false': [5.322, 83, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.77, 65, 35], 'false,false,false,false': [5.807, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.568, 35, 20], 'false,false,false,false': [6.585, 123, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.738, 192, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.556, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.000245, 0, 35], 'true,false': [0.000315, 57, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.027, 50, 24], 'false,false,false,false': [4.189, 47, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.784, 69, 35], 'false,false,false,false': [5.802, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.01, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.857, 161, 87]}]
{'': [nan, 0.22179651535458392], 'false': [nan, 0.22179651535458392], 'false,false': [nan, 0.22179651535458392], 'false,false,false': [nan, 0.22179651535458392]}
{'': [nan, 0.22264792899408378], 'false': [nan, 0.22264792899408417], 'false,false': [nan, 0.22264792899408378], 'false,false,false': [0.22053909556694237, 0.22480473670949874]}
{'': [nan, 0.2277503369337522], 'false': [nan, 0.2277503369337522], 'false,false': [nan, 0.22775033693375135], 'false,false,false': [0.22757290500131455, 0.22786955817043691]}
{'': [nan, 0.2289610102787369], 'false': [nan, 0.2289610102787369], 'false,false': [nan, 0.22896101027873575], 'false,false,false': [0.231404958677686, 0.22821852949081559]}
{'': [nan, 0.21458908882619798], 'false': [nan, 0.21458908882619798], 'false,false': [nan, 0.21458908882619845], 'false,false,false': [nan, 0.21458908882619845]}
{'': [nan, 0.2256374225813676], 'false': [nan, 0.2256374225813676], 'false,false': [nan, 0.22563742258136646], 'false,false,false': [nan, 0.22563742258136782]}
{'': [0.23570662770290102, 0.22713602548790043], 'true': [1.708663737482701e-09, 1.7437242760820482e-09], 'false': [nan, 0.22713602548790043], 'false,false': [nan, 0.22713602548790043], 'false,false,false': [0.2191380569758947, 0.23395555555555583], 'true,true': [nan, 1.708663737482701e-09], 'true,true,false': [nan, 1.708663737482701e-09]}
{'': [nan, 0.19050838562642167], 'false': [nan, 0.19050838562642167], 'false,false': [nan, 0.1905083856264208], 'false,false,false': [0.13766498193076038, 0.22743898972929671]}
{'': [nan, 0.18756214195573542], 'false': [nan, 0.18756214195573445], 'false,false': [nan, 0.18756214195573445], 'false,false,false': [nan, 0.18756214195573445]}
{'': [nan, 0.18958820599074486], 'false': [nan, 0.18958820599074486], 'false,false': [nan, 0.18958820599074583], 'false,false,false': [nan, 0.18958820599074583]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.353
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.6763307532813305;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(D, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( phenotype(A, F), enzyme(D, G) )
%   | | | then return 0.024815601766178884;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.19148226843284566;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   else if ( complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.206633783584361;  // std dev = 5.474, 132.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.72952920574415;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, C), enzyme(C, D) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(C, E), enzyme(A, F) )
%   | | | then return 0.4977558458480869;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13603073220737716;  // std dev = 2.495, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7758103737087194;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8055474841244599;  // std dev = 0.253, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.157535555170358;  // std dev = 0.153, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.09538935727072104;  // std dev = 3.147, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.18273273050576755;  // std dev = 3.703, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.59246540965926;  // std dev = 0.285, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(C, A) )
%   | | then return -0.15069026723438098;  // std dev = 0.074, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(C, F), phenotype(A, F) )
%   | | | then return 0.4861910357374037;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21467261044628277;  // std dev = 2.833, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.4568031232010787;  // std dev = 0.288, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( enzyme(I, J), location(I, K) )
%   | | | then return -0.02636813852836814;  // std dev = 1.430, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.10727390758327537;  // std dev = 2.275, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.08748856625843669;  // std dev = 2.292, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.1450230321805632;  // std dev = 4.053, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.520868539610209;  // std dev = 0.103, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F), phenotype(A, G) )
%   | | then if ( phenotype(D, G), interaction(A, H) )
%   | | | then return -0.1613246735409417;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.012953733147330554;  // std dev = 1.812, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( interaction(D, D), enzyme(A, I) )
%   | | | then return -0.006930585411971224;  // std dev = 1.151, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.12607856013991922;  // std dev = 2.192, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( complex(J, K), interaction(J, A) )
%   | | | then return 0.13182176868182888;  // std dev = 1.026, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.004376825532850211;  // std dev = 1.654, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.1562125359538291;  // std dev = 2.695, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return 0.09432147934245937;  // std dev = 4.454, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.1076151621379129;  // std dev = 0.370, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.4618607893073173;  // std dev = 0.159, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.026739924571226564;  // std dev = 0.384, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( phenotype(A, H), complex(G, I) )
%   | | then return 0.6389710323832801;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09340954759952048;  // std dev = 1.552, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.25237437358380144;  // std dev = 1.399, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.46525572191877923;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.05261050163597954;  // std dev = 4.624, 138.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=39 */
%   | | | else return 0.2701287074949106;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.47324800747872614;  // std dev = 0.252, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(C, A) )
%   | | then return -0.2073836990715415;  // std dev = 0.072, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(C, F), complex(F, G) )
%   | | | then return 0.0072883380810153066;  // std dev = 1.852, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.10633486660695493;  // std dev = 2.703, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then if ( enzyme(A, I), complex(H, J) )
%   | | then return -0.12286739822128569;  // std dev = 0.290, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else return -0.018329410549641472;  // std dev = 0.380, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( interaction(M, K), enzyme(M, N) )
%   | | | then return 0.06971270007295848;  // std dev = 3.260, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return -0.016272017257231448;  // std dev = 2.779, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | | else return 0.1632539840334444;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5056111370516125;  // std dev = 0.153, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.16802240204429164;  // std dev = 0.051, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.23262297409932256;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.027410932296633828;  // std dev = 0.985, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.09412771759463633;  // std dev = 0.817, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | else if ( location(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06496165763856364;  // std dev = 2.657, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.11604376362367624;  // std dev = 3.722, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return 0.11621600098617076;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3212834361679153;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return 0.060931809535452776;  // std dev = 0.278, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(D, F), enzyme(D, G) )
%   | | then if ( enzyme(E, H), interaction(A, E) )
%   | | | then return -0.026285425581145244;  // std dev = 0.741, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1649381101844184;  // std dev = 1.703, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(E, E), complex(A, I) )
%   | | | then return -0.10219800491961167;  // std dev = 0.840, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.01744859763983668;  // std dev = 2.688, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), complex(L, K) )
%   | | | then return -0.03922567724245272;  // std dev = 2.053, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.02371487637524155;  // std dev = 2.270, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.12840077343965448;  // std dev = 1.155, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.030108171707781982;  // std dev = 3.220, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then return 0.03378068882368151;  // std dev = 0.306, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   | else if ( interaction(D, A), enzyme(D, G) )
%   | | then return -0.06500772925626394;  // std dev = 0.281, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.11161513268162937;  // std dev = 0.896, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3833941991453089;  // std dev = 1.452, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else if ( enzyme(A, J) )
%   | then return -0.013375044402663953;  // std dev = 0.303, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.38310556796911505;  // std dev = 2.537, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.24978535656201878;  // std dev = 0.332, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return 0.09263967800114457;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08977925741168377;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(D, F), location(E, C) )
%   | | | then return 0.22903857969351044;  // std dev = 1.653, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | | else return 0.4654834397366892;  // std dev = 2.088, 56.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=50 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.24710739997608996;  // std dev = 0.532, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.2129430956868015;  // std dev = 0.951, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then return -0.15411692657514983;  // std dev = 0.364, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.2391334715804286;  // std dev = 0.057, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( interaction(A, J), interaction(J, A) )
%   | then return 0.07533137967869685;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then return -0.10946308453965466;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.16376604280560533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '348', 'milliseconds']
Refined model CLL: -0.224448


******************************************
Best model found
******************************************
Results 

CLL : -0.233691 

AUC ROC : 0.985927 

AUC PR : 0.364876 

Precision : 0.327899 

Recall : 0.641844 

F1 : 0.434053 

Total Learning Time : 12.353 

Total Inference Time : 8.857204914093018 

Total revision time: 23.99154504966736
Best scored revision CLL: -0.224448


Results 

CLL : -0.233691 

AUC ROC : 0.985927 

AUC PR : 0.364876 

Precision : 0.327899 

Recall : 0.641844 

F1 : 0.434053 

Total Learning Time : 24.024315921783447 

Total Inference Time : 8.857204914093018 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.255
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1649335958664746;  // std dev = 8.491, 339.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18352917046380937;  // std dev = 5.829, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
%   | | | else return 0.17452484145948038;  // std dev = 5.869, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13868773600238546;  // std dev = 5.249, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return 0.11839379837450695;  // std dev = 6.606, 205.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.0869586614627294;  // std dev = 4.509, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | | | else return 0.11796667323921178;  // std dev = 7.109, 230.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09406199010332347;  // std dev = 8.398, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1005453725460535;  // std dev = 8.252, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7359103647295291;  // std dev = 0.012, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26386013773686023;  // std dev = 0.018, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06365492529951057;  // std dev = 3.930, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | | else return 0.07871358772930939;  // std dev = 5.131, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.01939352251206612;  // std dev = 4.225, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
%   | | | else return 0.0737119705926094;  // std dev = 6.389, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04109756916158932;  // std dev = 7.694, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05325550954368391;  // std dev = 7.525, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.181', 'seconds']
Parameter learned model CLL:-0.338446 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.491, 235, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.829, 98, 52], 'false,false,false,false': [5.869, 102, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.249, 84, 41], 'false,false,false,false': [6.606, 142, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.509, 68, 29], 'false,false,false,false': [7.109, 155, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.398, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.252, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.012, 0, 41], 'true,false': [0.018, 92, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.93, 47, 23], 'false,false,false,false': [5.131, 77, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.225, 96, 41], 'false,false,false,false': [6.389, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.694, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.525, 190, 104]}]
{'': [nan, 0.2126678326850637], 'false': [nan, 0.21266783268506254], 'false,false': [nan, 0.2126678326850637], 'false,false,false': [nan, 0.21266783268506254]}
{'': [nan, 0.22506925207755651], 'false': [nan, 0.22506925207756287], 'false,false': [nan, 0.22506925207755651], 'false,false,false': [0.22648888888888943, 0.22364648338674367]}
{'': [nan, 0.2158288772012739], 'false': [nan, 0.2158288772012739], 'false,false': [nan, 0.21582887720127203], 'false,false,false': [0.22038443464609034, 0.21289509679254864]}
{'': [nan, 0.21692696079410426], 'false': [nan, 0.21692696079410426], 'false,false': [nan, 0.21692696079410448], 'false,false,false': [0.20958656605377965, 0.21973747784352485]}
{'': [nan, 0.21833530295550085], 'false': [nan, 0.21833530295550085], 'false,false': [nan, 0.2183353029555001], 'false,false,false': [nan, 0.2183353029555001]}
{'': [nan, 0.22621626971364592], 'false': [nan, 0.22621626971364592], 'false,false': [nan, 0.22621626971364706], 'false,false,false': [nan, 0.22621626971364625]}
{'': [0.21314548521757634, 0.2234094918354086], 'false': [nan, 0.2234094918354086], 'false,false': [nan, 0.2234094918354086], 'false,false,false': [0.22061224489795922, 0.22499817371612163], 'true': [3.8019657913003455e-06, 3.341502116415779e-06], 'true,true': [nan, 3.8019657913003455e-06], 'true,true,false': [nan, 3.8019657913003455e-06]}
{'': [nan, 0.18640379566915272], 'false': [nan, 0.18640379566915272], 'false,false': [nan, 0.18640379566915236], 'false,false,false': [0.13029834549830105, 0.22806566875615156]}
{'': [nan, 0.19157182786043098], 'false': [nan, 0.19157182786043117], 'false,false': [nan, 0.19157182786043117], 'false,false,false': [nan, 0.19157182786043117]}
{'': [nan, 0.19259181582549484], 'false': [nan, 0.19259181582549484], 'false,false': [nan, 0.19259181582549462], 'false,false,false': [nan, 0.19259181582549462]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.627
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, D), phenotype(C, E) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.26991364098186527;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.10814893509951236;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, J) )
%   | | then return 0.10814893509951191;  // std dev = 0.433, 88.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.18373033044834852;  // std dev = 5.322, 129.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.7842674338925745;  // std dev = 0.060, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.38549043213845974;  // std dev = 1.012, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(E, A), interaction(G, E) )
%   | | | then return 0.7735096489031179;  // std dev = 0.991, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.02728884849696334;  // std dev = 0.931, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.17877240483171558;  // std dev = 0.138, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0.047874944970596196;  // std dev = 3.233, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5736390831484214;  // std dev = 0.799, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.09734771078923471;  // std dev = 3.323, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.1859851086029459;  // std dev = 4.705, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5405623914680682;  // std dev = 0.285, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, D), interaction(E, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2674338351965242;  // std dev = 1.358, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.1027406267726366;  // std dev = 1.356, 37.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=2 */
%   | | else if ( enzyme(E, H), interaction(I, A) )
%   | | | then return 0.016718932306463367;  // std dev = 1.312, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.18650443087778676;  // std dev = 1.983, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.7859590372233161;  // std dev = 0.211, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1789920631247936;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(A, M), interaction(N, A) )
%   | | | then return 0.06211484628590224;  // std dev = 3.424, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.13690042388188253;  // std dev = 5.394, 140.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=46 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.4054086576321009;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14636257140160305;  // std dev = 0.074, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, D) )
%   | | | then return 0.006512896530014368;  // std dev = 1.328, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.1209642651521469;  // std dev = 2.419, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.550556476040322;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, F), complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7242407401126371;  // std dev = 0.257, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.16393715920750826;  // std dev = 0.083, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.04068917835977808;  // std dev = 2.941, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else return 0.10593347896236842;  // std dev = 5.502, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then return 0.0601775699483625;  // std dev = 1.125, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.4228350927606718;  // std dev = 0.111, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.5962036095731562;  // std dev = 2.716, 85.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=76 */
%   | | | else return -0.09502999576012543;  // std dev = 1.912, 45.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | else return -0.19081874980232444;  // std dev = 0.430, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( enzyme(A, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.02941082309202058;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.11274415642535392;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.45018081155922857;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2817831412597862;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.2788842305764219;  // std dev = 0.105, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.22443492967504858;  // std dev = 1.004, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.4296775173117481;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), location(A, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.29957581765828306;  // std dev = 0.331, 31.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | | else return 0.009661777585219968;  // std dev = 0.334, 222.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=52 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7753026441585291;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18938215023236105;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.2466459269060881;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.01782293974840905;  // std dev = 1.306, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3809883412524321;  // std dev = 0.125, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.22901876845666208;  // std dev = 0.182, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.16465160947835344;  // std dev = 0.109, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), phenotype(H, I) )
%   | | | then return 0.5124364176101157;  // std dev = 1.807, 40.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | | | else return 0.21796135217678442;  // std dev = 2.512, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | else return -0.18315231275907098;  // std dev = 0.233, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.07459828746894369;  // std dev = 0.659, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.10444974130553585;  // std dev = 1.466, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.047193737659251014;  // std dev = 1.086, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.12903491270836864;  // std dev = 0.195, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.06324671154699239;  // std dev = 0.940, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.033620509700176916;  // std dev = 0.809, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return -0.028938839763191383;  // std dev = 0.190, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.2701560204059777;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2835637148173074;  // std dev = 3.193, 86.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=60 */
%   | | | else return -0.14873269972442876;  // std dev = 0.230, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.03765581572781642;  // std dev = 1.529, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.03238454719862362;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(A, E), interaction(C, C) )
%   | then return -0.05798753955686765;  // std dev = 0.207, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | else if ( phenotype(D, F), phenotype(A, F) )
%   | | then if ( complex(C, G), complex(D, H) )
%   | | | then return 0.03495859325294358;  // std dev = 2.313, 78.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=31 */
%   | | | else return -0.03703245692309914;  // std dev = 1.306, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.2300115023227552;  // std dev = 0.187, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.04568841771461224;  // std dev = 3.322, 105.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=37 */
%   else if ( interaction(A, I), enzyme(A, J) )
%   | then if ( interaction(I, I) )
%   | | then return 0.09829198540638717;  // std dev = 0.499, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.0062129045432929835;  // std dev = 0.247, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( complex(A, K) )
%   | | then return 0.19987712122034829;  // std dev = 0.591, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.3367703201340522;  // std dev = 1.054, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(D, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.2162289782403619;  // std dev = 0.868, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1562124671346069;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.25865745679237745;  // std dev = 0.186, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.13085457794034297;  // std dev = 0.054, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.21048067662708222;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3983434993333711;  // std dev = 0.228, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1955903245705461;  // std dev = 0.620, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.16015873622179722;  // std dev = 1.489, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.009883294003088069;  // std dev = 3.540, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.602', 'seconds']
Refined model CLL: -0.201164


******************************************
Best model found
******************************************
Results 

CLL : -0.19915 

AUC ROC : 0.992319 

AUC PR : 0.479204 

Precision : 0.395257 

Recall : 0.754717 

F1 : 0.518807 

Total Learning Time : 14.627 

Total Inference Time : 12.94896388053894 

Total revision time: 30.857587606430055
Best scored revision CLL: -0.201164


Results 

CLL : -0.19915 

AUC ROC : 0.992319 

AUC PR : 0.479204 

Precision : 0.395257 

Recall : 0.754717 

F1 : 0.518807 

Total Learning Time : 30.890358478546144 

Total Inference Time : 12.94896388053894 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.202
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17107410516753951;  // std dev = 7.951, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.21102244400253792;  // std dev = 5.646, 136.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=51 */
%   | | | else return 0.18348007112118203;  // std dev = 5.172, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14521885632007975;  // std dev = 5.395, 130.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=44 */
%   | | | else return 0.14271245130921267;  // std dev = 5.647, 143.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13255331119839464;  // std dev = 4.107, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | | else return 0.10024647536023049;  // std dev = 6.720, 209.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1144377504573705;  // std dev = 7.731, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09013409676322791;  // std dev = 7.752, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7230917143017858;  // std dev = 0.039, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2768289239901802;  // std dev = 0.056, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05852710730999429;  // std dev = 4.082, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | | else return 0.06398178845133938;  // std dev = 3.916, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.025019021704721107;  // std dev = 4.305, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.0790571759251119;  // std dev = 5.528, 132.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03705470603505851;  // std dev = 7.042, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03627536063596163;  // std dev = 6.983, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.446', 'seconds']
Parameter learned model CLL:-0.336461 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.951, 202, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.646, 85, 51], 'false,false,false,false': [5.172, 77, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.395, 86, 44], 'false,false,false,false': [5.647, 95, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.107, 48, 26], 'false,false,false,false': [6.72, 143, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.731, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.752, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.039, 0, 44], 'true,false': [0.056, 89, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.082, 50, 25], 'false,false,false,false': [3.916, 46, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.305, 93, 44], 'false,false,false,false': [5.528, 84, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.042, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.983, 174, 92]}]
{'': [nan, 0.21500300800592462], 'false': [nan, 0.2150030080059244], 'false,false': [nan, 0.21500300800592462], 'false,false,false': [nan, 0.2150030080059244]}
{'': [nan, 0.23101246202492434], 'false': [nan, 0.23101246202492481], 'false,false': [nan, 0.23101246202492434], 'false,false,false': [0.23437500000000072, 0.22673082447572618]}
{'': [nan, 0.22344135885698416], 'false': [nan, 0.22344135885698416], 'false,false': [nan, 0.223441358856984], 'false,false,false': [0.22391382219456915, 0.22300885527186917]}
{'': [nan, 0.2193461726131093], 'false': [nan, 0.2193461726131093], 'false,false': [nan, 0.21934617261311015], 'false,false,false': [0.22790357925493135, 0.21604335821058337]}
{'': [nan, 0.22727361360318987], 'false': [nan, 0.22727361360318987], 'false,false': [nan, 0.22727361360318965], 'false,false,false': [nan, 0.22727361360318965]}
{'': [nan, 0.22678263606311905], 'false': [nan, 0.22678263606311905], 'false,false': [nan, 0.22678263606311944], 'false,false,false': [nan, 0.22678263606311894]}
{'': [0.22138003160823358, 0.2222296476949449], 'false': [nan, 0.2222296476949449], 'false,false': [nan, 0.2222296476949449], 'false,false,false': [0.2222222222222219, 0.22222222222222227], 'true': [3.45383179212985e-05, 3.4704495634525567e-05], 'true,true': [nan, 3.45383179212985e-05], 'true,true,false': [nan, 3.45383179212985e-05]}
{'': [nan, 0.18321425638296254], 'false': [nan, 0.18321425638296254], 'false,false': [nan, 0.18321425638296307], 'false,false,false': [0.135267040256078, 0.23149045520178937]}
{'': [nan, 0.18297038494165044], 'false': [nan, 0.1829703849416498], 'false,false': [nan, 0.1829703849416498], 'false,false,false': [nan, 0.1829703849416498]}
{'': [nan, 0.18332968769834818], 'false': [nan, 0.18332968769834818], 'false,false': [nan, 0.18332968769834915], 'false,false,false': [nan, 0.18332968769834915]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 5.879
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, D), enzyme(C, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( complex(D, F), phenotype(C, G) )
%   | | | then return 0.26723984419042146;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.08672036367094087;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(A, J), phenotype(I, K) )
%   | | | then return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.2956489350995123;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.15226658215833566;  // std dev = 3.757, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0.12481560176617904;  // std dev = 4.531, 105.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=28 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6700079679528544;  // std dev = 0.214, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( complex(E, D) )
%   | | then if ( enzyme(A, F), enzyme(E, F) )
%   | | | then return -0.13841404521214934;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.0394313751292418;  // std dev = 2.351, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( interaction(G, E), enzyme(G, H) )
%   | | | then return 0.252288678852022;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.07570287631401819;  // std dev = 2.831, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(A, J), location(A, K) )
%   | | | then return 0.3325995380213612;  // std dev = 1.591, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.17743957265651766;  // std dev = 1.787, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.2341363940808324;  // std dev = 2.873, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.13420635648589743;  // std dev = 4.348, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5751755262036224;  // std dev = 0.248, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( phenotype(A, G), interaction(D, H) )
%   | | | then return -0.16661925519984816;  // std dev = 0.088, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.027941791790229233;  // std dev = 2.168, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( complex(A, I), complex(D, J) )
%   | | | then return 0.34352573230401273;  // std dev = 1.802, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.10996773645918323;  // std dev = 3.884, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.7834801252898446;  // std dev = 0.331, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.1832396808282913;  // std dev = 0.050, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.23868415390565037;  // std dev = 1.411, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.15572006480368517;  // std dev = 3.894, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.42474304595333795;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5805705375780869;  // std dev = 0.091, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D), location(D, E) )
%   | | then return -0.1582760470412858;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.04064521151504907;  // std dev = 1.215, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.08447879563497408;  // std dev = 0.939, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), interaction(J, J) )
%   | | | then return 0.14010472694454465;  // std dev = 2.902, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.0580014273423697;  // std dev = 4.982, 148.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=40 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.0904457010608218;  // std dev = 2.474, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.14617738805999217;  // std dev = 2.735, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.3807674845980223;  // std dev = 0.331, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.013653538916121444;  // std dev = 0.357, 88.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=17 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( location(F, G), interaction(F, F) )
%   | | then return 0.4491932128195612;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, F), complex(A, H) )
%   | | | then return -0.021347426629373736;  // std dev = 1.476, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.1833652871053917;  // std dev = 2.813, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6577229182760207;  // std dev = 0.483, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.18736296051531148;  // std dev = 0.241, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.07788535353984577;  // std dev = 2.769, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.14486976234624344;  // std dev = 2.727, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3214366187422702;  // std dev = 0.092, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, D), complex(A, F) )
%   | | then if ( interaction(G, A), enzyme(G, E) )
%   | | | then return -0.08174924360264141;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.15225006767901134;  // std dev = 1.540, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.17262639632068136;  // std dev = 0.335, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.05253925710597184;  // std dev = 1.747, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.09679292395571447;  // std dev = 1.114, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.04355362105569639;  // std dev = 2.105, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.04846505933228237;  // std dev = 3.144, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   | | | else return 0.14575264988445183;  // std dev = 4.651, 96.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2563955076466965;  // std dev = 0.087, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.6715452993612657;  // std dev = 1.025, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.4972052373066799;  // std dev = 0.516, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.17380555941553913;  // std dev = 0.057, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.6208305415713562;  // std dev = 0.481, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.2469875010267596;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.3155519793184563;  // std dev = 0.176, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.06336864235579455;  // std dev = 2.506, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -9.515005386006896E-4;  // std dev = 4.499, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then return 0.011800943695868583;  // std dev = 0.302, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else if ( interaction(G, C), phenotype(G, D) )
%   | | then if ( enzyme(C, H) )
%   | | | then return 0.02248243401648749;  // std dev = 0.393, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.36728081055996986;  // std dev = 1.411, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return 0.09140929379591177;  // std dev = 0.392, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.209260000724982;  // std dev = 0.189, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(L, A), enzyme(J, M) )
%   | | | then return -0.09648482927415275;  // std dev = 0.991, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.060989717199755114;  // std dev = 3.204, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | | else if ( enzyme(A, N), complex(A, P) )
%   | | | then return -0.092192303999254;  // std dev = 0.447, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.005226954330054851;  // std dev = 3.676, 84.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4001606498855145;  // std dev = 0.172, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.1718907867500888;  // std dev = 0.063, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(E, A), phenotype(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.3150000292158752;  // std dev = 0.454, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.19568903334989116;  // std dev = 0.149, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.03502617588666343;  // std dev = 1.345, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6535052376364454;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.24686348252350784;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return -0.08261691003072757;  // std dev = 1.129, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.09994298295755535;  // std dev = 4.419, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, E) )
%   | then return 0.033606595586426646;  // std dev = 0.238, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | else if ( phenotype(C, F) )
%   | | then if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.615994598558894;  // std dev = 0.275, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.31389513474481656;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.02464968980019792;  // std dev = 0.407, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then return -0.05317903570601538;  // std dev = 0.297, 83.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), interaction(L, J) )
%   | | | then return 0.17449387249666265;  // std dev = 1.441, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.03921241568024571;  // std dev = 1.695, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return -0.10712021221539735;  // std dev = 1.524, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.03260894959507544;  // std dev = 2.784, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.897', 'seconds']
Refined model CLL: -0.252641


******************************************
Best model found
******************************************
Results 

CLL : -0.250123 

AUC ROC : 0.957493 

AUC PR : 0.266035 

Precision : 0.215287 

Recall : 0.610108 

F1 : 0.318267 

Total Learning Time : 5.879 

Total Inference Time : 2.5560786724090576 

Total revision time: 11.385769039154052
Best scored revision CLL: -0.252641


Results 

CLL : -0.250123 

AUC ROC : 0.957493 

AUC PR : 0.266035 

Precision : 0.215287 

Recall : 0.610108 

F1 : 0.318267 

Total Learning Time : 11.418539911270141 

Total Inference Time : 2.5560786724090576 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.101
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16311347410660493;  // std dev = 7.731, 282.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17921610429575166;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
%   | | | else return 0.16403391806093376;  // std dev = 4.784, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11302287137925073;  // std dev = 4.424, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | | else return 0.15537112011467222;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.18100829250899816;  // std dev = 3.411, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.11989654670362623;  // std dev = 6.694, 202.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09094093789711763;  // std dev = 7.623, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07230134874358557;  // std dev = 7.631, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7358714680443796;  // std dev = 0.036, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2630267121379828;  // std dev = 0.052, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06814236991453393;  // std dev = 4.690, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | | | else return 0.11089127169401583;  // std dev = 3.959, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07432010605639276;  // std dev = 3.313, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | | | else return 0.04817283694220206;  // std dev = 6.239, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03931519879787023;  // std dev = 7.075, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026497450809384596;  // std dev = 7.110, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.546', 'seconds']
Parameter learned model CLL:-0.340823 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.731, 196, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.849, 100, 52], 'false,false,false,false': [4.784, 70, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.424, 65, 28], 'false,false,false,false': [6.172, 111, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.411, 30, 19], 'false,false,false,false': [6.694, 135, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.623, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.631, 181, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.036, 0, 28], 'true,false': [0.052, 53, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.69, 66, 33], 'false,false,false,false': [3.959, 42, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.313, 48, 28], 'false,false,false,false': [6.239, 118, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.075, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.11, 174, 86]}]
{'': [nan, 0.2119611689552847], 'false': [nan, 0.2119611689552846], 'false,false': [nan, 0.2119611689552847], 'false,false,false': [nan, 0.2119611689552846]}
{'': [nan, 0.22308349609374956], 'false': [nan, 0.22308349609375], 'false,false': [nan, 0.22308349609374956], 'false,false,false': [0.22506925207756232, 0.22004437869822505]}
{'': [nan, 0.22049882554366318], 'false': [nan, 0.22049882554366318], 'false,false': [nan, 0.22049882554366232], 'false,false,false': [0.21041355054707628, 0.2254121312196613]}
{'': [nan, 0.22545883654755075], 'false': [nan, 0.22545883654755075], 'false,false': [nan, 0.22545883654755122], 'false,false,false': [0.23740108288213213, 0.22183288079463612]}
{'': [nan, 0.21927161403239617], 'false': [nan, 0.21927161403239617], 'false,false': [nan, 0.2192716140323966], 'false,false,false': [nan, 0.2192716140323966]}
{'': [nan, 0.218116776783479], 'false': [nan, 0.218116776783479], 'false,false': [nan, 0.21811677678347963], 'false,false,false': [nan, 0.21811677678347852]}
{'': [0.22573720408340842, 0.2273774908027081], 'false': [nan, 0.2273774908027081], 'false,false': [nan, 0.2273774908027081], 'false,false,false': [0.22222222222222282, 0.2339051013588773], 'true': [4.7328533837122577e-05, 5.19111364988844e-05], 'true,true': [nan, 4.7328533837122577e-05], 'true,true,false': [nan, 4.7328533837122577e-05]}
{'': [nan, 0.198138010392957], 'false': [nan, 0.198138010392957], 'false,false': [nan, 0.19813801039295734], 'false,false,false': [0.1443839827602329, 0.2211437877602411]}
{'': [nan, 0.19401919925337366], 'false': [nan, 0.19401919925337366], 'false,false': [nan, 0.19401919925337366], 'false,false,false': [nan, 0.19401919925337366]}
{'': [nan, 0.19444941090357842], 'false': [nan, 0.19444941090357842], 'false,false': [nan, 0.19444941090357842], 'false,false,false': [nan, 0.19444941090357842]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 7.168
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8055173561521439;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, C), interaction(A, E) )
%   | | | then return -0.10018439823382112;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return 0.11621345122854389;  // std dev = 5.968, 186.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=48 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08037115732173453;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7581972449152694;  // std dev = 0.173, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.13008760554655224;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then return 0.7229730810252627;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, E), interaction(E, F) )
%   | | | then return 0.12391781174156906;  // std dev = 4.353, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   | | | else return 0.20376824977357932;  // std dev = 4.789, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.595116862006472;  // std dev = 0.066, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.35674582854644665;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( location(A, E), interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11606101405424218;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.04424321268338763;  // std dev = 3.422, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | | else return 0.18341685502105928;  // std dev = 3.169, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(A, K), phenotype(J, L) )
%   | | | then return 0.22457011152732884;  // std dev = 2.528, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.4697724572052717;  // std dev = 1.981, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.16072919080046275;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.07168956001983934;  // std dev = 1.472, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4112424651823306;  // std dev = 2.58e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(C, E) )
%   | | then return 0.5609887253235158;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5078879606963613;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.1046743862519071;  // std dev = 5.27e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( complex(F, H) )
%   | | | then return 0.010649321647522967;  // std dev = 1.728, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.18630282779222032;  // std dev = 1.446, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5152365650558004;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.16868071592124667;  // std dev = 2.077, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.07674235253194443;  // std dev = 5.816, 167.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=49 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.314182477154477;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.40379263305799534;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.61644047860088;  // std dev = 0.217, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.030401930986498904;  // std dev = 3.877, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | | else return 0.3953717879006199;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.045410019805509974;  // std dev = 2.216, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return -0.03891685682472319;  // std dev = 3.198, 78.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=14 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.06242804475359654;  // std dev = 3.175, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return -0.026978210005121184;  // std dev = 1.885, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), recursion_proteinclass(D, B) )
%   | then return 0.33819203178944807;  // std dev = 0.231, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.006378609964643707;  // std dev = 0.410, 151.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=38 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(F, H), phenotype(A, G) )
%   | | | then return 0.07754336174354996;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1666286980579365;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.007960591306717122;  // std dev = 0.403, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.7760151694858988;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.22568819639718563;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.4432282971344827;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23390519563123924;  // std dev = 2.159, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5563842640192239;  // std dev = 0.246, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.23818016151803167;  // std dev = 0.049, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.4260337920717014;  // std dev = 0.152, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, H), phenotype(H, F) )
%   | | | then return -0.09635059698536748;  // std dev = 1.302, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.03236822480984919;  // std dev = 4.175, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, I) )
%   | | | then return -0.1114362748584884;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.09436990586281108;  // std dev = 1.697, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.39373839148101925;  // std dev = 0.719, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09742937658682907;  // std dev = 2.197, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), phenotype(A, E) )
%   | then if ( interaction(A, C) )
%   | | then return -0.02632950586467447;  // std dev = 0.242, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.4796987851701936;  // std dev = 0.798, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14617416064396183;  // std dev = 1.958, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else return 0.029243574246896182;  // std dev = 0.374, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   else if ( interaction(A, H), interaction(H, H) )
%   | then return -0.12755303876017157;  // std dev = 0.385, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( complex(J, K) )
%   | | | then return 0.08015347080596376;  // std dev = 1.444, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.052117062166634566;  // std dev = 0.748, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.013086425231423018;  // std dev = 0.723, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07609919962876467;  // std dev = 1.249, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), phenotype(E, F) )
%   | then if ( phenotype(A, G), phenotype(C, H) )
%   | | then return 0.03116262101153877;  // std dev = 0.362, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( phenotype(C, F), interaction(A, I) )
%   | | | then return 0.06943656808891158;  // std dev = 1.403, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.3505377296337508;  // std dev = 1.562, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else return -0.026085955394949106;  // std dev = 0.347, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   else if ( complex(A, J) )
%   | then return 0.10747230718017807;  // std dev = 0.370, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5571158513826396;  // std dev = 1.249, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.2414725028393691;  // std dev = 0.699, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.10882490113659257;  // std dev = 1.488, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return -0.038224831129590735;  // std dev = 2.267, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.07649871638920655;  // std dev = 0.260, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( phenotype(A, G), interaction(F, F) )
%   | | | then return 0.009923562151277513;  // std dev = 1.126, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.10993313674310667;  // std dev = 2.358, 53.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | else if ( complex(D, H), phenotype(D, I) )
%   | | | then return 0.1057143421603939;  // std dev = 2.561, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return -0.045215067924303694;  // std dev = 2.613, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(K, L), phenotype(A, L) )
%   | | | then return 0.3002369391744402;  // std dev = 0.970, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.015070611935165895;  // std dev = 2.400, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return -0.09711131749453435;  // std dev = 1.116, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.014689324731400664;  // std dev = 2.398, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.096', 'seconds']
Refined model CLL: -0.278474


******************************************
Best model found
******************************************
Results 

CLL : -0.304086 

AUC ROC : 0.875833 

AUC PR : 0.161781 

Precision : 0.132895 

Recall : 0.35689 

F1 : 0.193672 

Total Learning Time : 7.168 

Total Inference Time : 2.5481417179107666 

Total revision time: 12.449421352386475
Best scored revision CLL: -0.278474


Results 

CLL : -0.304086 

AUC ROC : 0.875833 

AUC PR : 0.161781 

Precision : 0.132895 

Recall : 0.35689 

F1 : 0.193672 

Total Learning Time : 12.482192224502564 

Total Inference Time : 2.5481417179107666 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.121
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.15814893509951092;  // std dev = 4.806, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | | | else return 0.1914822684328444;  // std dev = 4.899, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4337591264966688;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.37303404635576287;  // std dev = 1.116, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7201701904886921;  // std dev = 2.818, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.1644885539606844;  // std dev = 0.028, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else if ( location(A, I) )
%   | | | then return 0.14869453118830717;  // std dev = 1.659, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4595870227762404;  // std dev = 0.963, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.6243590738810859;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.090915462911168;  // std dev = 4.315, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6831759620899286;  // std dev = 0.988, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14516886623544942;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14483896558905515;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.18897921847056767;  // std dev = 1.335, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.45708666299767814;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5121238519907652;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5114930399931241;  // std dev = 1.562, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.04456155694152787;  // std dev = 5.002, 216.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.706788608156341;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07729315198380683;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3406565933612843;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.05148428900898366;  // std dev = 1.289, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.045763693660024814;  // std dev = 5.483, 255.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5431546591565409;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.17516185811709914;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.01808107467982063;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2778807932536319;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.31957821371266115;  // std dev = 0.641, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4085155372099126;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.020898236836461977;  // std dev = 2.296, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.38549757943032387;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06785026518168011;  // std dev = 4.724, 173.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=55 */
%   | | | else return 0.017077487457047496;  // std dev = 1.923, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2838382339371371;  // std dev = 0.363, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.31461716724791255;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.7879869032679062;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5878062261807;  // std dev = 0.467, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17911320470653988;  // std dev = 0.529, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.29917158996612575;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06601485835853209;  // std dev = 3.997, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1684473113730589;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07020041745608345;  // std dev = 0.900, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3612229595191689;  // std dev = 3.061, 83.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=71 */
%   | | else return -0.15422196826770038;  // std dev = 0.218, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.25100900012492033;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.01333427330909319;  // std dev = 1.447, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17778211619565576;  // std dev = 0.198, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.37558365382294223;  // std dev = 0.118, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.26175283013492123;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.015342019986580592;  // std dev = 1.472, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.08881250546824122;  // std dev = 0.358, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.009707658429327271;  // std dev = 1.724, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22790532598045354;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06270822150896485;  // std dev = 3.247, 113.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
%   | | | else return 0.023528285344277658;  // std dev = 1.433, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13033148961560734;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3197664698318474;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.22072060136049293;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.21507084174070534;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.010924445619871036;  // std dev = 2.336, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.055367553007285075;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.007118515495103816;  // std dev = 3.494, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | | | else return 0.10193660878635204;  // std dev = 1.327, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.687', 'seconds']
Parameter learned model CLL:-0.193863 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.0, 2, 2], 'false,false,true,true': [4.806, 77, 33], 'false,false,true,false': [4.899, 72, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.195, 2, 5], 'false,true,true': [1.116, 2, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.818, 9, 69], 'false,false,true,false': [0.028, 149, 0], 'false,false,false,true': [1.659, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.963, 1, 8], 'true,false': [1.49e-08, 0, 3], 'false,true,true': [4.315, 85, 34], 'false,true,false,true': [0.988, 1, 37], 'false,true,false,false': [0.0, 89, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.335, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.072, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.562, 3, 14], 'false,true,false': [5.002, 159, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.049, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.289, 3, 4], 'false,true': [5.483, 184, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.102, 0, 7], 'true,true,false': [0.641, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.296, 47, 12], 'false,false,true': [0.032, 0, 3], 'false,false,false,true': [4.724, 118, 55], 'false,false,false,false': [1.923, 18, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.363, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.467, 0, 33], 'true,false': [0.529, 91, 0], 'false,true': [0.028, 0, 3], 'false,false,true': [3.997, 79, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.9, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.061, 12, 71], 'false,true,false': [0.218, 154, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.447, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.198, 0, 8], 'true,false,true': [0.118, 2, 0], 'true,false,false': [0.097, 0, 3], 'false,true,true': [1.472, 32, 11], 'false,true,false,true': [0.358, 1, 1], 'false,true,false,false': [1.724, 49, 17], 'false,false,true': [0.024, 0, 3], 'false,false,false,true': [3.247, 73, 40], 'false,false,false,false': [1.433, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.032, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.085, 0, 3], 'false,true': [2.336, 78, 29], 'false,false,true': [0.851, 1, 3], 'false,false,false,true': [3.494, 94, 40], 'false,false,false,false': [1.327, 7, 4]}]
{'': [-1.6148698540002277e-16, 0.21735753124779336], 'false': [0.24999999999999992, 0.2156472948870406], 'false,true': [0.0, 0.23999999999999994], 'false,true,false': [0.0, 0.25], 'false,false': [0.21633280026933777, 0.20408163265306106], 'false,false,true': [0.21000000000000138, 0.22222222222222346], 'false,false,false': [0.22222222222222224, 0.18750000000000003], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.13017751479289935, 0.21336438853167622], 'false': [0.2490539122393037, 0.2115124954850506], 'false,true': [0.2490539122393037, nan], 'false,false': [0.21149648237094548, 0.2117119940816761], 'false,false,false': [0.2117119940816761, nan], 'false,false,true': [0.10179613864057921, 5.246528541075697e-06], 'true': [7.401486830834377e-17, 0.20408163265306128]}
{'': [0.08233698479587848, 0.15794194976631334], 'false': [0.15395555960253446, 0.22293655194608247], 'false,false': [0.2222222222222223, 0.2226372869856446], 'false,false,false': [0.2226372869856446, nan], 'false,false,true': [nan, 0.2222222222222223], 'false,true': [0.1564326432286577, 0.15156753438884712], 'false,true,false': [0.02570576652615299, -1.1226974406321808e-16], 'true': [0.10299518918818033, 7.401486830834377e-17]}
{'': [0.000719853412869519, 0.13767427466631912], 'false': [0.13258720942373795, 0.21514240472131319], 'false,false': [0.0, 0.20409208405480633], 'false,false,false': [0.20409208405480633, nan], 'false,true': [0.143480465314908, 0.11582246568648753], 'false,true,true': [nan, 0.14348046531490813], 'true': [0.0005164667384963906, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.15729107970838138, 0.12263615068765396], 'true': [0.0003446030362894386, 0.2373503205674072], 'false': [0.11789593188532307, 0.19724254121574378], 'false,false': [0.0, 0.19496507357243437], 'false,false,false': [0.24, 0.15999999999999992], 'true,true': [0.0003446030362894386, nan], 'false,false,true': [nan, 0.0]}
{'': [0.03646238391001838, 0.12352775063386207], 'false': [0.08934554749610578, 0.13187058139877383], 'false,false': [0.00034229814757521143, 0.13230053464938674], 'false,false,false': [0.12897045728374315, 0.15404102320129012], 'true': [0.03866599664059052, 0.0], 'true,true': [0.0014894585013048697, 0.10261850891974401], 'true,false': [nan, 0.0]}
{'': [0.11953496807010833, 0.1322295979846944], 'false': [0.0002706382860324282, 0.13421952244373667], 'false,false': [0.13421952244373667, nan], 'true': [0.06116315587183882, 0.0030743055338288885], 'true,true': [0.012044542609970193, 0.06044024121447776], 'true,true,false': [0.0, 0.00660097735087553], 'true,true,true': [0.013162874804080927, 0.0]}
{'': [0.06983860770291699, 0.1019349878714299], 'false': [0.10018464697456075, 0.12633582340078592], 'false,false': [0.0, 0.1309089137888069], 'false,false,false': [0.1309089137888069, nan], 'false,true': [0.11285794126632184, 0.0003089679968548899], 'false,true,true': [nan, 0.11285794126632202], 'true': [4.625929269271485e-18, 0.13485098932366726], 'false,false,true': [0.0, nan]}
{'': [0.04922299210056736, 0.07563269801546774], 'false': [0.04763092303118039, 0.09697365465942626], 'false,false': [0.00019206091889465796, 0.0985817869459395], 'false,false,false': [0.0933250735867208, 0.13682718423153914], 'true': [0.0048909639373391975, 0.10216737676610958], 'true,false': [0.006993072919724369, 0.003137795150190951], 'false,true': [0.05037046303970205, 0.045870366886337825], 'false,true,false': [0.06407792101854673, 0.045033145683654734]}
{'': [0.015688471663654047, 0.0792918670855462], 'false': [0.05102037641762216, 0.09936602458335847], 'false,false': [0.1812170734737362, 0.09697772404838961], 'false,false,false': [0.09110970797581543, 0.1601523938341167], 'true': [0.017474643414946575, 0.0024199804947613868], 'true,true': [0.004056343870792914, 0.0], 'true,true,true': [0.00015012010042956707, 0.0], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 5.316
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(H, J), interaction(K, H) )
%   | | | then return -0.038402789038418816;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.18373033044834952;  // std dev = 3.073, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.14661047356105084;  // std dev = 3.267, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return 0.19421450887000313;  // std dev = 5.217, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7480325422264149;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.504142292933094;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6984358879986916;  // std dev = 3.072, 80.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=69 */
%   | | | else return -0.16406806393742712;  // std dev = 0.083, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5060152952195848;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.058671653555240094;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5043297552154354;  // std dev = 0.264, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.004604966734879206;  // std dev = 1.965, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.14926310279620542;  // std dev = 3.724, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6156459863651123;  // std dev = 1.882, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.1421653995437008;  // std dev = 0.062, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.020300602441270472;  // std dev = 0.678, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09811187434402653;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.21140338802907066;  // std dev = 1.061, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03127883975061167;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.4704069819539964;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.11494244021877704;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4229899577111085;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(G, I), enzyme(I, J) )
%   | | | then return 0.11125188222766094;  // std dev = 5.367, 203.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=69 */
%   | | | else return -0.14544835323507752;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.027060765533064433;  // std dev = 0.292, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.6028628815540326;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.10721628437713722;  // std dev = 1.420, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.07205788392584736;  // std dev = 0.924, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.3585286941850575;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3761814203448573;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.356257571805983;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.15031808389347948;  // std dev = 0.012, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( location(A, G) )
%   | | | then return 0.08677185159256018;  // std dev = 5.256, 207.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=68 */
%   | | | else return 0.22735172592406774;  // std dev = 0.920, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4537687504487846;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.09013887950124272;  // std dev = 0.905, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.030100194450089702;  // std dev = 1.514, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.285653239359275;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.39254053140864026;  // std dev = 0.195, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.34542209785027467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, I), enzyme(G, J) )
%   | | | then return -0.07552030386583762;  // std dev = 0.792, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.10234353089621323;  // std dev = 2.278, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else return -0.13942570857560616;  // std dev = 0.000610, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2916929896487508;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.11439636559671469;  // std dev = 2.386, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.031076300791771316;  // std dev = 4.508, 175.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.255941493071079;  // std dev = 0.066, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5364001505289986;  // std dev = 1.482, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18424980840030286;  // std dev = 0.055, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.23525565428871376;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.611614235081999;  // std dev = 0.110, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19130206751269385;  // std dev = 0.074, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.0954599854687935;  // std dev = 1.969, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return -0.0068559792912509495;  // std dev = 3.058, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( complex(A, E) )
%   | | then return -0.10712776491742688;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18624001532432166;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17820634351310868;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.30728437355376775;  // std dev = 2.824, 61.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=48 */
%   | | | else return 0.49309845323873797;  // std dev = 0.406, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.15831532705484616;  // std dev = 0.030, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.22433381712079314;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.008244064915744134;  // std dev = 1.011, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.18039872979532073;  // std dev = 0.944, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F) )
%   | | then return 0.07068336802674546;  // std dev = 0.516, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.3767965957538508;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.20291312068443065;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.012610914782827738;  // std dev = 0.238, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.056762006678990395;  // std dev = 1.669, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.01346913892933237;  // std dev = 0.702, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.07925230666708846;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.006834091136683229;  // std dev = 2.120, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0.0510272793576234;  // std dev = 2.733, 84.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=30 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.169760287974652;  // std dev = 0.122, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22199611033121947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06331958168650978;  // std dev = 0.603, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, A) )
%   | then if ( complex(A, F) )
%   | | then return -0.19744087130125076;  // std dev = 0.631, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08425156840452451;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.18048301253206034;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return -0.02416435151568297;  // std dev = 2.362, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return 0.015471166775235357;  // std dev = 3.700, 171.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=55 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.372', 'seconds']
Refined model CLL: -0.196984


******************************************
Best model found
******************************************
Results 

CLL : -0.193637 

AUC ROC : 0.986905 

AUC PR : 0.309768 

Precision : 0.172414 

Recall : 0.762411 

F1 : 0.28123 

Total Learning Time : 5.316 

Total Inference Time : 6.491616487503052 

Total revision time: 20.21283718299866
Best scored revision CLL: -0.193863


Results 

CLL : -0.193637 

AUC ROC : 0.986905 

AUC PR : 0.309768 

Precision : 0.172414 

Recall : 0.762411 

F1 : 0.28123 

Total Learning Time : 20.236482822418214 

Total Inference Time : 6.491616487503052 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.158
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1101814554247144;  // std dev = 4.815, 123.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=31 */
%   | | | else return 0.19396983062189962;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.643282164625158;  // std dev = 0.970, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7492620528604262;  // std dev = 0.125, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6916342203614576;  // std dev = 3.327, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.16187291863500483;  // std dev = 0.077, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11891977694583404;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4256103843731406;  // std dev = 1.282, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.5807864396203487;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07624454140891909;  // std dev = 4.344, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6328041809357524;  // std dev = 1.920, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.14580329427837316;  // std dev = 9.42e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.31601792010146423;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.06481665780576167;  // std dev = 1.615, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.34324785650918294;  // std dev = 1.358, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.5099049996439919;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3201444398452392;  // std dev = 0.749, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5499925799177937;  // std dev = 1.525, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.009614605262925933;  // std dev = 5.208, 270.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5318997014183278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return -0.03560493579932473;  // std dev = 1.814, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3666813242329425;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2071346328121164;  // std dev = 1.334, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.058428365023411;  // std dev = 5.787, 280.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4003211055301482;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.30641211172682115;  // std dev = 1.400, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.290073768273589;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3472032438964036;  // std dev = 0.703, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.30907475675211105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.007586678061240709;  // std dev = 2.838, 81.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.23173305050650614;  // std dev = 0.913, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05256651247871611;  // std dev = 4.642, 183.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=51 */
%   | | | else return 0.04283847918855588;  // std dev = 2.248, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.28891907057181127;  // std dev = 0.282, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.12757162000797168;  // std dev = 0.530, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2564822687984988;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.49631105731991176;  // std dev = 1.530, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18272018443355945;  // std dev = 0.770, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.308816807445418;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07160012128604637;  // std dev = 4.319, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.05921252336884274;  // std dev = 0.931, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.22595551942717879;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38725859971668314;  // std dev = 3.088, 93.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=82 */
%   | | else return -0.14542429463125683;  // std dev = 0.271, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2717124557455127;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.011321946504953793;  // std dev = 1.456, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18620504197254217;  // std dev = 0.093, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.04965172307264979;  // std dev = 0.427, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.03708494002609978;  // std dev = 0.938, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.025395720402016757;  // std dev = 1.695, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.0616995126606991;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.018706910803964506;  // std dev = 1.275, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20754153321017038;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05935520585419374;  // std dev = 3.629, 137.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=47 */
%   | | | else return 0.09151934645894245;  // std dev = 1.355, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.024621558029790158;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.06931211187720614;  // std dev = 0.900, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19405710783671595;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.012779786364528506;  // std dev = 2.301, 127.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.17549757767358307;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.006977299756665924;  // std dev = 3.911, 160.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=47 */
%   | | | else return 0.09005259962926604;  // std dev = 1.350, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.528', 'seconds']
Parameter learned model CLL:-0.20124 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [1.095, 3, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.815, 92, 31], 'false,false,true,false': [5.467, 89, 45], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [0.97, 1, 10], 'false,true,true': [0.125, 0, 7], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,true': [3.327, 13, 76], 'false,false,true,false': [0.077, 183, 0], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.282, 2, 11], 'true,false': [0.037, 0, 6], 'false,true,true': [4.344, 98, 34], 'false,true,false,true': [1.92, 4, 48], 'false,true,false,false': [9.42e-08, 108, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.615, 11, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.358, 2, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.749, 1, 3], 'false,true,true,false': [1.525, 4, 21], 'false,true,false': [5.208, 212, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.814, 21, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.334, 2, 10], 'false,true': [5.787, 198, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.4, 4, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.021, 0, 9], 'true,true,false': [0.703, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.838, 62, 19], 'false,false,true': [0.913, 1, 8], 'false,false,false,true': [4.642, 132, 51], 'false,false,false,false': [2.248, 24, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.282, 0, 15], 'true,true,true,false': [0.53, 1, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.53, 3, 33], 'true,false': [0.77, 95, 0], 'false,true': [0.037, 0, 5], 'false,false,true': [4.319, 104, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.931, 1, 7], 'true,false': [0.076, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.088, 11, 82], 'false,true,false': [0.271, 179, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.456, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.093, 0, 9], 'true,false,true': [0.427, 1, 2], 'true,false,false': [0.938, 1, 5], 'false,true,true': [1.695, 45, 13], 'false,true,false,true': [1.247, 2, 8], 'false,true,false,false': [1.275, 39, 11], 'false,false,true': [0.029, 0, 5], 'false,false,false,true': [3.629, 90, 47], 'false,false,false,false': [1.355, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.935, 1, 7], 'true,true,true,false': [0.9, 1, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.089, 0, 3], 'false,true': [2.301, 95, 32], 'false,false,true': [0.025, 0, 5], 'false,false,false,true': [3.911, 113, 47], 'false,false,false,false': [1.35, 6, 4]}]
{'': [0.05246913580246885, 0.2145912822291599], 'false': [0.20999999999999988, 0.20895233620320447], 'false,true': [0.24000000000000005, 0.0], 'false,false': [0.208269618010871, 0.22222222222222207], 'false,false,false': [0.22222222222222207, nan], 'false,false,true': [0.18851212902373046, 0.22304522165293048], 'true': [-1.4802973661668753e-16, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.053678825939678196, 0.20567039709992674], 'false': [0.11792942728935768, 0.20123832769815264], 'false,false': [0.20109186800239245, 0.2040816326530614], 'false,false,false': [0.2040816326530614, nan], 'false,false,true': [0.12439380477338938, 3.1991160893026474e-05], 'false,true': [0.002218407779358524, 0.0], 'true': [6.344131569286608e-17, 0.08558053750700695], 'false,true,false': [0.0, nan]}
{'': [0.09177794309115495, 0.15249723274600582], 'false': [0.15035268277110714, 0.18933180609343392], 'false,false': [0.18933180609343392, nan], 'false,false,true': [0.25, 0.17381894013974028], 'false,true': [0.14293912035239925, 0.15603445849485836], 'false,true,false': [0.07090104582799081, 8.22387425648264e-17], 'true': [0.12642950616871396, 0.00022403507642095496]}
{'': [0.09849374078461294, 0.1252289418498395], 'false': [0.12365400051278247, 0.13847444850764445], 'false,false': [0.0, 0.13162644516858335], 'false,false,false': [0.13162644516858335, nan], 'false,true': [0.10583425847208047, 0.10047181558663074], 'false,true,true': [0.14013564222442054, 0.0930591174172492], 'true': [0.10250379404328609, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.09961977716176569, 0.12468714819897604], 'false': [0.11958706845634993, 0.21865604299465521], 'false,false': [0.0, 0.24500817068930342], 'false,false,false': [0.24500817068930342, nan], 'true': [-3.172065784643304e-17, 0.1483531018813927], 'false,false,true': [nan, 0.0], 'true,true': [-3.172065784643304e-17, nan]}
{'': [0.02989166315662805, 0.11735662247728167], 'false': [0.09941369430617111, 0.1226442915314616], 'false,false': [0.0926081134275639, 0.1225898444192829], 'false,false,false': [0.11772729657154697, 0.14868198604344074], 'true': [0.03175777928438184, 0.0], 'true,true': [4.844794434154408e-05, 0.07069104502469183], 'true,false': [nan, 0.0]}
{'': [0.11010341706353072, 0.12131979479864399], 'false': [0.0002797523950331948, 0.12352416129335995], 'false,false': [0.12352416129335995, nan], 'true': [0.06851491849881788, 0.0062429699483626325], 'true,true': [0.03921655403224883, 0.06409880484421016], 'true,true,false': [0.0, 0.0650159220835112], 'true,true,true': [0.005309208420042196, 0.14046473847118873]}
{'': [0.05532149211930476, 0.10125087415339541], 'false': [0.09917708079918051, 0.13642698145992785], 'false,false': [0.0, 0.14128441247584655], 'false,false,false': [0.14128441247584655, nan], 'false,true': [0.10254519481457305, 0.0004093391239212136], 'false,true,true': [nan, 0.10254519481457283], 'true': [0.10830315277277078, 0.0005791739367495885], 'false,false,true': [0.0, nan]}
{'': [0.06476618378958335, 0.08001301339558801], 'false': [0.051852011838027505, 0.09882619508886377], 'false,false': [0.0001649053186287608, 0.10146469315836106], 'false,false,false': [0.0961306054393371, 0.16694069006013057], 'true': [0.0009614242303850391, 0.11806842071197315], 'true,false': [0.060835576764695115, 0.14663220134023247], 'false,true': [0.049518081702835774, 0.05390976302613916], 'false,true,false': [0.15540376201960363, 0.03253343107171646]}
{'': [0.09754595975832223, 0.07506731966824136], 'true': [0.11285020158136562, 0.002628080707531455], 'true,true': [0.11285020158136562, nan], 'true,true,true': [0.109375, 0.1157566628764637], 'false': [0.04170060688194999, 0.09892052806372614], 'false,false': [0.00012734820638956034, 0.10106118351358068], 'false,false,false': [0.09557855904962534, 0.1822876403967039]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 5.247
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( interaction(A, G), complex(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(A, I), interaction(I, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return 0.09047216742274417;  // std dev = 4.202, 99.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=23 */
%   | | | else return 0.1613404244612154;  // std dev = 6.302, 188.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7373269569258906;  // std dev = 0.113, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7449784760894348;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6844142877792978;  // std dev = 3.438, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.158396146340485;  // std dev = 0.103, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.24677503192218583;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.087352463108956;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4701943942264995;  // std dev = 0.277, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5903657100644383;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.04934035628587544;  // std dev = 4.285, 140.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=32 */
%   | | | else return 0.2898791448624566;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5345466555428974;  // std dev = 2.971, 59.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=48 */
%   | | | else return -0.13907010555580515;  // std dev = 0.041, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.5718151663408485;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.011953347439359463;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.0037700416246197604;  // std dev = 0.638, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44039562097490154;  // std dev = 0.036, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.06602965934808869;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.25708087398580803;  // std dev = 0.685, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5085440263796694;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.04601686495071449;  // std dev = 5.589, 249.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=61 */
%   | | | else return 0.1316542303233956;  // std dev = 2.323, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5499930538961999;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.19517346245925637;  // std dev = 1.476, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.1874717002134554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.33443086002137173;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3497739092216688;  // std dev = 0.054, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5691715201079286;  // std dev = 1.769, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.1442142429579742;  // std dev = 0.382, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 9.875132365364772E-4;  // std dev = 3.239, 103.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
%   | | | else return 0.08424676956406024;  // std dev = 1.679, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4135399505591769;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.011950411480277513;  // std dev = 1.218, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.3532767655402595;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15621325173814235;  // std dev = 0.306, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.23202641598183438;  // std dev = 0.660, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.350937111931258;  // std dev = 0.171, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3180190639317;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, G), interaction(A, H) )
%   | then return -0.0036735279848703344;  // std dev = 0.319, 149.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=34 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2796041186767481;  // std dev = 3.049, 68.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=47 */
%   | | | else return -0.1507832890477094;  // std dev = 0.615, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.09682379026894058;  // std dev = 0.925, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.2531063632415811;  // std dev = 0.904, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25593971215317324;  // std dev = 0.056, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.3041266436577764;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4884568978920546;  // std dev = 1.597, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.16622083366498108;  // std dev = 0.093, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.23155149999054397;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.390829343685007;  // std dev = 1.027, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return -0.12790099187166773;  // std dev = 0.265, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.054452561448814;  // std dev = 1.431, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.009722151699846599;  // std dev = 2.103, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19235248264329594;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, E) )
%   | | then return 0.20060447636552442;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.2070565154608901;  // std dev = 1.152, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.2806933210507751;  // std dev = 1.982, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | | else return 0.34542232669178174;  // std dev = 2.028, 36.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=30 */
%   | | else return -0.12975123337102235;  // std dev = 0.046, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20802869221171594;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.06200664971746825;  // std dev = 1.087, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.01785060971500021;  // std dev = 0.921, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return -0.06566207346823555;  // std dev = 0.796, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.16842752743422398;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then return -0.3557411305155283;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.17660542547819866;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(A, J), enzyme(J, K) )
%   | | then return -0.03412947168231096;  // std dev = 0.250, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | else return 0.017046632802305183;  // std dev = 0.222, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.19315276112024976;  // std dev = 0.172, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.02614356289363057;  // std dev = 1.732, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.045518898485695895;  // std dev = 2.512, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.2143430965508739;  // std dev = 0.168, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15033171916404478;  // std dev = 0.024, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.14782441889968823;  // std dev = 0.245, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09504712076911022;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.04485343737545803;  // std dev = 2.049, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return -0.029312084930824517;  // std dev = 1.545, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.0021843522515586264;  // std dev = 0.933, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return -0.17065906548628457;  // std dev = 1.374, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.022078734276884095;  // std dev = 2.941, 142.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.995', 'seconds']
Refined model CLL: -0.177404


******************************************
Best model found
******************************************
Results 

CLL : -0.16434 

AUC ROC : 0.989591 

AUC PR : 0.381416 

Precision : 0.316024 

Recall : 0.803774 

F1 : 0.453674 

Total Learning Time : 5.247 

Total Inference Time : 9.17256760597229 

Total revision time: 23.65169361114502
Best scored revision CLL: -0.177404


Results 

CLL : -0.16434 

AUC ROC : 0.989591 

AUC PR : 0.381416 

Precision : 0.316024 

Recall : 0.803774 

F1 : 0.453674 

Total Learning Time : 23.675339250564576 

Total Inference Time : 9.17256760597229 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.469
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0803711573217346;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.1702056726881637;  // std dev = 5.502, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16460054800273813;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7268735122674133;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8379783172750106;  // std dev = 0.031, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16163100822524692;  // std dev = 0.054, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1536549807608423;  // std dev = 3.510, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.2369079676072364;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.42650449553076764;  // std dev = 0.943, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5650663047861899;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05962053770692583;  // std dev = 2.085, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6569676857292776;  // std dev = 1.011, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14289806206929978;  // std dev = 7.88e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14255561726614202;  // std dev = 3.613, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.33500594718166377;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4419563987890562;  // std dev = 0.074, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.44427419676681046;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.39303080836903315;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40892911003921295;  // std dev = 0.632, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.05146998725628701;  // std dev = 4.231, 192.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5199449199634947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.056544849598956844;  // std dev = 3.638, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.17832569663603065;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3626660108915667;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32410511418914706;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.06434225600792867;  // std dev = 4.190, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.391711688717016;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1263436150101833;  // std dev = 3.517, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.27381483236868387;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2750663908281307;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3470045319437913;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2852703258635566;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30325729910255383;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06523429729496369;  // std dev = 1.010, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2541936836392325;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06738054107184685;  // std dev = 3.939, 155.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=49 */
%   | | | else return 0.03302162799502103;  // std dev = 3.800, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24086156262492095;  // std dev = 0.100, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.11242064342502327;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21919837941563403;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6420984091700633;  // std dev = 0.763, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.1988878522036048;  // std dev = 0.790, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20706952682071716;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07258523331675634;  // std dev = 3.284, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18587377795532586;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17852482620377705;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43488394254662194;  // std dev = 0.763, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14631438546496234;  // std dev = 0.212, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.24675375114433107;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.029729595495467685;  // std dev = 3.119, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.06695242082280697;  // std dev = 0.927, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12845228129873876;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17899403847133008;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07309575902245169;  // std dev = 0.430, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.12626544797571942;  // std dev = 0.784, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04217978899635384;  // std dev = 1.361, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1508310455964146;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.013394929297725061;  // std dev = 2.753, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | | else return 0.062006049983479375;  // std dev = 2.995, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.15501433979816118;  // std dev = 0.000840, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17701012301699712;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.14218762410913954;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13539714697167565;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.04584268086536388;  // std dev = 1.745, 81.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.03472056728535385;  // std dev = 0.916, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.013128498039929942;  // std dev = 2.679, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   | | | else return -0.012021170087983079;  // std dev = 3.148, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.193', 'seconds']
Parameter learned model CLL:-0.17442 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.494, 28, 8], 'false,false,true,false': [5.502, 97, 44], 'false,false,false,true': [3.63, 43, 19], 'false,false,false,false': [0.913, 5, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.027, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.031, 0, 52], 'false,false,true,false': [0.054, 134, 0], 'false,false,false,true': [3.51, 39, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.943, 1, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.085, 27, 8], 'false,true,false,true': [1.011, 1, 48], 'false,true,false,false': [7.88e-08, 109, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.613, 40, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.074, 0, 11], 'true,false': [0.042, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.632, 1, 3], 'false,true,false': [4.231, 140, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.638, 50, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.035, 0, 9], 'false,true': [4.19, 130, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.517, 36, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.025, 0, 7], 'true,true,false': [0.065, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.01, 20, 3], 'false,false,true': [0.027, 0, 6], 'false,false,false,true': [3.939, 106, 49], 'false,false,false,false': [3.8, 52, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.1, 0, 12], 'true,true,true,false': [0.83, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.763, 0, 36], 'true,false': [0.79, 94, 0], 'false,true': [0.021, 0, 5], 'false,false,true': [3.284, 69, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.017, 0, 6], 'true,false': [0.024, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.763, 0, 56], 'false,true,false': [0.212, 123, 0], 'false,false,true,true': [0.025, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.119, 46, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.927, 1, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.049, 0, 4], 'false,true,true': [0.43, 12, 1], 'false,true,false,true': [0.784, 2, 2], 'false,true,false,false': [1.361, 57, 14], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [2.753, 84, 36], 'false,false,false,false': [2.995, 38, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.00084, 0, 5], 'true,true,true,false': [0.02, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.027, 0, 4], 'false,true': [1.745, 64, 17], 'false,false,true': [0.916, 1, 5], 'false,false,false,true': [2.679, 86, 36], 'false,false,false,false': [3.148, 54, 20]}]
{'': [0.06222222222222188, 0.21418707639561335], 'false': [-1.4802973661668753e-16, 0.20751353602665693], 'false,false': [0.20747550193111886, 0.2076124567474044], 'false,false,false': [0.21253902185223675, 0.13888888888888892], 'false,false,true': [0.17283950617283966, 0.2146773301141804], 'true': [0.08999999999999977, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [8.940649933978204e-05, 0.20912542986271127], 'false': [7.401486830834377e-17, 0.2059339343961128], 'false,false': [0.2012740001983471, 0.2185565450047644], 'false,false,false': [0.2161165837436172, 0.24000000000000005], 'false,false,true': [1.855721056383157e-05, 2.163384079148387e-05], 'true': [0.0, 9.126913474255538e-05], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.06414984071853655, 0.16018543114194814], 'false': [0.14019566251927942, 0.21886017677250838], 'false,false': [0.21674465439046312, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.21756341328582546], 'false,true': [0.12424080258656776, 0.14335385557597052], 'false,true,false': [0.020872231974514207, 5.703898108165942e-17], 'true': [0.12707110415885145, 0.0001340268823311619]}
{'': [0.0005204967156064999, 0.1241065778510842], 'false': [0.09602045119329983, 0.19771228379657138], 'false,false': [0.0026230446387086326, 0.19870814460766542], 'false,false,false': [0.19465618598197548, 0.24000000000000007], 'false,true': [0.07988112562933573, 0.09325511319805745], 'false,true,true': [0.0, 0.09980085583747039], 'false,false,true': [0.0, 0.0], 'true': [0.0005029558989213534, 0.0005805920390148378]}
{'': [0.00042772580242316546, 0.12577285122797485], 'false': [0.09436862163971521, 0.22052920169714244], 'false,false': [0.001260244375275027, 0.22651141645070993], 'false,false,false': [0.22489420684336356, 0.25000000000000006], 'false,false,true': [0.0, 0.0], 'true': [8.589022759464271e-07, 0.00013382309653456017], 'true,true': [8.589022759464271e-07, nan]}
{'': [0.0014391501504343873, 0.12342613810452192], 'false': [0.044320018099315565, 0.1297901820977647], 'false,false': [0.00011903111927485943, 0.13221101198114574], 'false,false,false': [0.10008680596421361, 0.2005611967054773], 'true': [0.0016386751043980595, 0.0003935109428961081], 'true,true': [8.946470611572086e-05, 0.0010565502986435021], 'true,false': [0.00022647365449414425, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.14311881646959368, 0.09881155396140215], 'true': [0.07728746566354677, 0.006642073149110682], 'false': [8.461610385777086e-05, 0.10269074466201156], 'false,false': [0.10269074466201156, nan], 'true,true': [0.06661844436483981, 0.020451200088958912], 'true,true,true': [0.0008344573733487978, 0.22990773864159164], 'true,true,false': [0.0, 0.01618565559744563]}
{'': [7.51879302553731e-05, 0.09492962278607527], 'false': [0.07611742078065063, 0.14444971749214383], 'false,false': [0.0003151921972468705, 0.1474321514347179], 'false,false,false': [0.1474321514347179, nan], 'false,true': [0.010389013445194781, 0.00036476271427141207], 'false,true,true': [nan, 0.010389013445194812], 'false,false,true': [0.0003151921972468705, nan], 'true': [4.978944515963516e-05, 7.109089757149217e-05]}
{'': [0.05985303129981381, 0.07308709688945246], 'false': [0.030510966304992768, 0.09131705912338611], 'false,false': [5.1967883772621734e-05, 0.093476703916555], 'false,false,false': [0.0631519223277088, 0.15462456995681587], 'true': [0.08587124961407329, 0.0008896674972580676], 'false,true': [0.014225384985668341, 0.03323059532260668], 'false,true,false': [0.15351958780050384, 0.026076662780178266], 'true,false': [0.0, 0.000601190527953939]}
{'': [0.0003111028238909868, 0.07470580916921592], 'false': [0.03757233391932244, 0.08892723305647286], 'false,false': [0.1398797389465998, 0.08732376902357267], 'false,false,false': [0.05882646366469893, 0.13391211039948944], 'true': [0.00020074057251004974, 0.00018747262770632891], 'true,true': [0.00016209345767496247, 0.0], 'true,true,true': [1.411761246433718e-07, 0.00012962987729422484], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 2.847
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.12481560176617904;  // std dev = 3.425, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.20597502205603313;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.7350122940520397;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5319045176838226;  // std dev = 0.910, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8326737366312909;  // std dev = 0.027, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1648306444593668;  // std dev = 0.140, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return -0.06682509649980832;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.25759121377752836;  // std dev = 3.316, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5623444886578427;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5906875443884917;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.02749202264263991;  // std dev = 1.312, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return 0.2690913235910743;  // std dev = 1.316, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6732919850999632;  // std dev = 0.249, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14488228325697475;  // std dev = 0.041, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.05536643674628447;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.129469071467841;  // std dev = 3.618, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else return 0.12523619684375184;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43833552819830696;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.42640699243564467;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3891433973322497;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.567918800541236;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return -0.02378883313174641;  // std dev = 1.643, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return 0.07653169575911135;  // std dev = 3.732, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5324332377696452;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.06653205944473316;  // std dev = 3.155, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.3767954762067138;  // std dev = 1.558, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31453026452348387;  // std dev = 0.000696, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3443054483046346;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.49285094102498794;  // std dev = 0.683, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.13667692085426042;  // std dev = 0.138, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.014886489676331976;  // std dev = 1.580, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.03503347505087983;  // std dev = 2.820, 95.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4007509619125298;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.06491202765711011;  // std dev = 3.136, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.00567540014280723;  // std dev = 2.055, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2617816294318743;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.19620463036272934;  // std dev = 0.696, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2897304177378425;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.10182002209301272;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.014775438028781535;  // std dev = 0.223, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.27524856901599;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06931329923372224;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.036206079945334244;  // std dev = 3.646, 172.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=49 */
%   | | | else return -0.0019437786966521576;  // std dev = 3.853, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2455410820926501;  // std dev = 0.049, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2481683680931065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5712528022093003;  // std dev = 1.436, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.18245512129826927;  // std dev = 0.069, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2381006250276117;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4021394006591897;  // std dev = 0.157, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1292738434023484;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.010750938592500866;  // std dev = 1.252, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.06467677012208731;  // std dev = 2.513, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16530456485722259;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20004401268219557;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3095326602667156;  // std dev = 0.387, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.41281076675145123;  // std dev = 0.844, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return -0.09206419115826092;  // std dev = 0.076, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.14296529753597667;  // std dev = 0.398, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.12347695649736086;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.024179822585311983;  // std dev = 2.691, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return -0.040953723123462515;  // std dev = 1.760, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1618002455805274;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2050587385984949;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return -0.016183319960498932;  // std dev = 0.597, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.08013633816304067;  // std dev = 0.048, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.061724521224323814;  // std dev = 0.952, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.03512277123060883;  // std dev = 0.485, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.168124528986845;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.050111747646147835;  // std dev = 3.115, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return -0.007284264735413765;  // std dev = 2.584, 126.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1528135496765823;  // std dev = 0.031, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(D, F), complex(E, G) )
%   | | then if ( complex(D, G), enzyme(A, H) )
%   | | | then return 0.07382006031324256;  // std dev = 0.302, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0019611109887414167;  // std dev = 0.958, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.019989055520468143;  // std dev = 0.685, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return -0.08055977693907695;  // std dev = 0.397, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( enzyme(J, K), phenotype(A, L) )
%   | | | then return -0.008473753024661038;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1735505858774626;  // std dev = 1.511, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.05723274533748493;  // std dev = 2.244, 95.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=40 */
%   | | | else return -0.0080096802792995;  // std dev = 2.577, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.975', 'seconds']
Refined model CLL: -0.172025


******************************************
Best model found
******************************************
Results 

CLL : -0.183827 

AUC ROC : 0.985429 

AUC PR : 0.233529 

Precision : 0.150409 

Recall : 0.862816 

F1 : 0.256163 

Total Learning Time : 2.847 

Total Inference Time : 2.990710973739624 

Total revision time: 10.049805894851685
Best scored revision CLL: -0.172025


Results 

CLL : -0.183827 

AUC ROC : 0.985429 

AUC PR : 0.233529 

Precision : 0.150409 

Recall : 0.862816 

F1 : 0.256163 

Total Learning Time : 10.073451534271241 

Total Inference Time : 2.990710973739624 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.47
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.036231126880334294;  // std dev = 3.269, 73.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=13 */
%   | | | else return 0.15360348055405723;  // std dev = 5.242, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7386428608068595;  // std dev = 2.323, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | | else return -0.15646602048615652;  // std dev = 0.084, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( location(A, K) )
%   | | | then return 0.12488718863696206;  // std dev = 2.801, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.14207446911896834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06572348544326975;  // std dev = 2.818, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6804547778224298;  // std dev = 1.002, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14398038064954685;  // std dev = 0.271, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6657342206370368;  // std dev = 0.195, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0620164253325198;  // std dev = 2.550, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1618769129795172;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5699517183367062;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6120549380771702;  // std dev = 0.192, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.034238123760698874;  // std dev = 4.482, 209.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.42107631696574077;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5708601072194873;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.0617287784543068;  // std dev = 2.829, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return -0.07603952376773332;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.057971010737630675;  // std dev = 4.587, 196.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32312816866242566;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3761171699100438;  // std dev = 0.075, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06809841929245558;  // std dev = 2.543, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.025737496983623286;  // std dev = 1.484, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4000112610400933;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25682033830608086;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0642428718899493;  // std dev = 0.879, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.055842823351448655;  // std dev = 1.225, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05639732719467968;  // std dev = 4.135, 162.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=46 */
%   | | | else return 0.07746283692585419;  // std dev = 3.018, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24025944574680064;  // std dev = 0.166, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.27494676531657525;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22848180284984324;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6063242924858637;  // std dev = 0.776, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1766183652786807;  // std dev = 0.965, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.057658912208425346;  // std dev = 3.449, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17269507049984134;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0567019448562886;  // std dev = 0.941, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42209245598410533;  // std dev = 1.755, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.13965848365396424;  // std dev = 0.203, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22444243576969936;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.026431195679488796;  // std dev = 2.586, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15190295550800442;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19644995901888707;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19172520100406393;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09246811790828773;  // std dev = 0.313, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23643369643295328;  // std dev = 0.173, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.022563704753231818;  // std dev = 1.716, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16898384472311145;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01591248723048674;  // std dev = 2.932, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | | else return 0.023249515149792194;  // std dev = 2.502, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13110270241961686;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14242126963909701;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1400261188567251;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16222543706526416;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17409760659974552;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01596957263487697;  // std dev = 1.624, 99.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14656129795053918;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03000842991305716;  // std dev = 2.956, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return -0.0021553846268881184;  // std dev = 2.542, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.799', 'seconds']
Parameter learned model CLL:-0.17058 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.269, 60, 13], 'false,false,true,false': [5.242, 93, 39], 'false,false,false,true': [2.572, 25, 9], 'false,false,false,false': [1.225, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [2.11e-08, 0, 7], 'false,true,true': [0.935, 1, 7], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [2.323, 6, 52], 'false,false,true,false': [0.084, 134, 0], 'false,false,false,true': [2.801, 27, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 4], 'false,true,true': [2.818, 47, 14], 'false,true,false,true': [1.002, 1, 42], 'false,true,false,false': [0.271, 110, 0], 'false,false,true,true': [0.195, 0, 3], 'false,false,true,false': [2.55, 28, 9], 'false,false,false,true': [1.371, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.71e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.192, 0, 6], 'false,true,false': [4.482, 160, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.829, 32, 11], 'false,false,false,false': [0.913, 5, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 6], 'false,true': [4.587, 140, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.075, 0, 2], 'false,false,false,true': [2.543, 25, 9], 'false,false,false,false': [1.484, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.83e-08, 0, 9], 'true,true,false': [0.016, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.879, 1, 2], 'false,true': [1.225, 28, 5], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [4.135, 116, 46], 'false,false,false,false': [3.018, 34, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.166, 0, 13], 'true,true,true,false': [0.104, 0, 3], 'true,true,false,true': [0.046, 0, 3], 'true,true,false,false': [0.776, 0, 33], 'true,false': [0.965, 100, 0], 'false,true': [0.0, 0, 3], 'false,false,true': [3.449, 75, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.941, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.755, 3, 56], 'false,true,false': [0.203, 135, 0], 'false,false,true,true': [0.091, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.586, 46, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.035, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.067, 0, 5], 'false,true,true': [0.313, 23, 1], 'false,true,false,true': [0.173, 0, 6], 'false,true,false,false': [1.716, 48, 17], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [2.932, 84, 31], 'false,false,false,false': [2.502, 34, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.028, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.007, 0, 2], 'true,false': [0.052, 0, 3], 'false,true': [1.624, 75, 24], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [2.956, 69, 31], 'false,false,false,false': [2.542, 39, 12]}]
{'': [-2.3684757858670006e-16, 0.20236520534139626], 'false': [-2.5376526277146434e-16, 0.19298625572678174], 'false,false': [0.18931588340273733, 0.20999999999999946], 'false,false,false': [0.19463667820069216, 0.24999999999999992], 'false,false,true': [0.14636892475135996, 0.20816115702479387], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.0, 0.20316770722710387], 'false': [0.17283950617283964, 0.19893579732043287], 'false,false': [0.1970582122171738, 0.2076054733286542], 'false,false,false': [0.20642990464348668, 0.22222222222222224], 'false,false,true': [0.09302562850185629, 5.206003406577893e-05], 'false,true': [0.10937500000000006, 0.0], 'true': [1.1102230246251565e-16, 6.344131569286608e-17], 'false,true,false': [nan, 0.0]}
{'': [-2.3684757858670006e-16, 0.15097618110646666], 'false': [0.1404393165692168, 0.1969559105608997], 'false,false': [0.18884923279816812, 0.23500666867112344], 'false,false,false': [0.23500666867112344, nan], 'false,false,true': [0.012720985747247893, 0.17579426325042138], 'false,true': [0.13020967800804775, 0.1443798356360565], 'false,true,false': [0.023343808303690254, 0.0006689960898741712], 'true': [-2.0185873175002846e-16, 0.0]}
{'': [1.4802973661668753e-16, 0.1187087638156136], 'false': [0.1034149002400788, 0.18201299589463604], 'false,false': [0.0049855964050619095, 0.18237450757264512], 'false,false,false': [0.1861181738175245, 0.13888888888888884], 'false,true': [0.005492471786930749, 0.09609875046783457], 'false,true,true': [0.0, 0.006154643592488629], 'false,false,true': [0.0, 0.0], 'true': [1.4802973661668753e-16, nan]}
{'': [-1.4802973661668754e-17, 0.12295686697695214], 'false': [0.10736232806275428, 0.1863576525192189], 'false,false': [0.0024958526695289716, 0.19296342519218762], 'false,false,false': [0.19017200316695124, 0.20023565194830725], 'false,false,true': [0.0, 0.002807834253220065], 'true': [-3.700743415417188e-17, 0.0], 'true,true': [-3.700743415417188e-17, nan]}
{'': [0.06791819359633902, 0.1142277687154219], 'false': [0.045486055614012984, 0.12281236183931643], 'false,false': [0.0, 0.12486157129745205], 'false,false,false': [0.10553304488948227, 0.18975302209845588], 'true': [0.0044896630040011185, 0.21250645779650684], 'true,false': [0.0, 0.25757154749333067], 'true,true': [3.700743415417188e-17, 6.793772886881655e-05], 'true,false,true': [0.0, nan]}
{'': [0.11604996944160045, 0.10974474123411126], 'true': [0.04290166110955798, 0.00932075286833229], 'false': [0.0, 0.11221400761411696], 'false,false': [0.11221400761411696, nan], 'true,true': [0.0025697730184010698, 0.027709216948352426], 'true,true,false': [0.0007011828842426923, 0.018267413857833793], 'true,true,true': [0.0021099576409147314, 0.003584698082956713]}
{'': [0.058754435051613776, 0.09038174103479381], 'false': [0.08287962758608342, 0.11268134677042055], 'false,false': [0.0027533290486926507, 0.1152719879531918], 'false,false,false': [0.1152719879531918, nan], 'false,true': [0.05222700502489061, 0.0003054281396468428], 'true': [0.0, 0.11078166750494706], 'false,true,true': [nan, 0.05222700502489061], 'false,false,true': [0.0027533290486926507, nan]}
{'': [0.00075054146767509, 0.07194594215525088], 'false': [0.037815282265175075, 0.09098594002100487], 'false,false': [0.0, 0.09226437649023468], 'false,false,false': [0.07473715902362939, 0.13604396874339889], 'false,true': [0.00408550436066921, 0.047088303811975235], 'false,true,false': [0.004960253938083803, 0.045308343737438056], 'true': [0.00012500075679156009, 0.0007623917231449848], 'true,false': [0.0, 0.0009111495113908851]}
{'': [0.0005160448270947263, 0.07118361631918665], 'false': [0.026641959728195233, 0.09926442036981017], 'false,false': [0.0, 0.10092029740170765], 'false,false,false': [0.08740130226527994, 0.1267430244027052], 'true': [0.00018888865749228315, 0.0008936070952207201], 'true,true': [0.00010133746831980928, 0.00012649568957454985], 'true,true,false': [0.0, 2.5473624720502575e-05], 'true,true,true': [0.0, 0.00040419937047758703]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.244
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.10814893509951237;  // std dev = 3.464, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return 0.18029658610622287;  // std dev = 5.704, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.7401919213324014;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G) )
%   | | then return 0.7350122940520397;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7670719622367216;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7489094047290341;  // std dev = 2.131, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.15780709095362094;  // std dev = 0.177, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.25280395021107704;  // std dev = 2.027, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.049967750145916943;  // std dev = 1.987, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5650587946012525;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3994514829738205;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.1091300510765784;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.1446011237339483;  // std dev = 2.553, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6963409396961524;  // std dev = 0.256, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.1428505455818313;  // std dev = 0.032, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.0344346861705598;  // std dev = 1.976, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.10761218585064262;  // std dev = 2.229, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.43320398386609127;  // std dev = 0.039, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.08979392949212206;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.5818121565522014;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.02173597248753926;  // std dev = 2.008, 51.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=7 */
%   | | | else return 0.05986339991117274;  // std dev = 3.748, 149.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=42 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.08418025082497664;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.05156604978761398;  // std dev = 2.134, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.29607154792871115;  // std dev = 1.738, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32173504021251836;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.28315995388061727;  // std dev = 0.332, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2501035793005126;  // std dev = 1.714, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return -0.1335030070935912;  // std dev = 0.194, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08740083218780931;  // std dev = 3.087, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return 0.021301496346181503;  // std dev = 2.138, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3717001979106544;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.04171798374589129;  // std dev = 2.585, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.24309791395518954;  // std dev = 1.210, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2568159926391015;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.13941471961087357;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2901419986595088;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then return -0.08494741791858314;  // std dev = 0.100, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.06798249697412723;  // std dev = 0.636, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.021606754860410485;  // std dev = 0.855, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3698994215834547;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.15249796036805793;  // std dev = 1.706, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.05191571516767341;  // std dev = 4.561, 182.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23927926768216015;  // std dev = 0.045, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2536515539601538;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5608832481904289;  // std dev = 1.074, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.167875082064702;  // std dev = 0.057, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3161350395922513;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6178678034940884;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19008169574780664;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.016755249513837483;  // std dev = 2.489, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return 0.06005322222551111;  // std dev = 1.385, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17420247705116446;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22213586316355602;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G), interaction(A, H) )
%   | | | then return 0.24282392846213802;  // std dev = 1.371, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | | else return 0.40736996216202265;  // std dev = 1.649, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | else return -0.13708456200557836;  // std dev = 0.032, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.30479938307139565;  // std dev = 0.989, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.02828985012050086;  // std dev = 2.143, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.030255830797582248;  // std dev = 1.052, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.11446531802631235;  // std dev = 0.936, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16174796646605094;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2813772691749049;  // std dev = 0.683, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.21500587592414258;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( enzyme(A, H), complex(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3112990204543672;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11737813987823431;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.02544268853161004;  // std dev = 0.177, 88.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=20 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.03511585121950575;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.0034721889222549584;  // std dev = 2.048, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | | else return 0.08448008506415973;  // std dev = 2.722, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.14109217800037524;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.025008821022462033;  // std dev = 0.283, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.19965763969145264;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07033350252322275;  // std dev = 0.010, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.0046182662681474446;  // std dev = 1.438, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.09977311206387438;  // std dev = 0.636, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21854478716274608;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return 0.017558465114851717;  // std dev = 3.444, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
%   | | | else return 0.1303863828584595;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.402', 'seconds']
Refined model CLL: -0.180185


******************************************
Best model found
******************************************
Results 

CLL : -0.181044 

AUC ROC : 0.983102 

AUC PR : 0.225487 

Precision : 0.146941 

Recall : 0.780919 

F1 : 0.247342 

Total Learning Time : 3.244 

Total Inference Time : 3.7214503288269043 

Total revision time: 11.506461395263672
Best scored revision CLL: -0.17058


Results 

CLL : -0.181044 

AUC ROC : 0.983102 

AUC PR : 0.225487 

Precision : 0.146941 

Recall : 0.780919 

F1 : 0.247342 

Total Learning Time : 11.530107034683228 

Total Inference Time : 3.7214503288269043 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.099
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14020021715079295;  // std dev = 4.867, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | | else return 0.14847151574467235;  // std dev = 5.055, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7567805023276173;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.735750988372246;  // std dev = 2.677, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.16030096989972947;  // std dev = 0.006, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else if ( location(A, I) )
%   | | | then return 0.17123130231663466;  // std dev = 1.635, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5805343499046967;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5958921567850132;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.101362492681781;  // std dev = 4.280, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6127464601433859;  // std dev = 1.898, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.1404171649843443;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05798518647327275;  // std dev = 1.249, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08276732260927477;  // std dev = 1.343, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3519842340387235;  // std dev = 0.933, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.4293869841109079;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5623298347791001;  // std dev = 1.317, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.03526734338997944;  // std dev = 5.094, 233.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5348460021501502;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.13673471357578668;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3466048785102564;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3674550819831627;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.09424789815241034;  // std dev = 5.183, 219.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40245755716142484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.45682828187161945;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.006104369028433908;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2739231499701711;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3759993193675853;  // std dev = 0.170, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31051917562255804;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.03559256810136371;  // std dev = 2.106, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.29418779847354964;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05590873715239447;  // std dev = 4.760, 186.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=55 */
%   | | | else return 0.07427092625224165;  // std dev = 1.805, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24475100338579053;  // std dev = 0.184, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24820430173444052;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5507931727689857;  // std dev = 0.845, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.19030116104406283;  // std dev = 0.606, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.016004245004847678;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07393802539540383;  // std dev = 3.952, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18449596866345674;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21069131449108197;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4209556694644815;  // std dev = 2.270, 77.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=71 */
%   | | else return -0.15473956905678588;  // std dev = 0.250, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20482329858214576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0010826129082190542;  // std dev = 1.431, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1675289908038953;  // std dev = 0.101, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.4395484062401387;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1650406517745089;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0654716095243983;  // std dev = 1.545, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.14372072570671687;  // std dev = 0.592, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.038432527489716144;  // std dev = 1.925, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.04599354180406878;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.010113755868725796;  // std dev = 3.471, 138.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=40 */
%   | | | else return 0.06945970591972785;  // std dev = 1.342, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13381396625990274;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22833528273270287;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.19749626376393037;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02374275501265656;  // std dev = 0.415, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.021645393832644678;  // std dev = 2.311, 116.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2111499299801877;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.027431047283632146;  // std dev = 3.449, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | | else return 0.13865118874909385;  // std dev = 1.204, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.781', 'seconds']
Parameter learned model CLL:-0.198048 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.867, 84, 33], 'false,false,true,false': [5.055, 88, 36], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.028, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.677, 8, 69], 'false,false,true,false': [0.006, 137, 0], 'false,false,false,true': [1.635, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.029, 0, 8], 'true,false': [0.027, 0, 3], 'false,true,true': [4.28, 79, 34], 'false,true,false,true': [1.898, 4, 37], 'false,true,false,false': [0.0, 69, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.249, 6, 2], 'false,false,false,true': [1.343, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.933, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.317, 2, 14], 'false,true,false': [5.094, 176, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.019, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.029, 0, 4], 'false,true': [5.183, 148, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.009, 0, 7], 'true,true,false': [0.17, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.106, 28, 12], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [4.76, 131, 55], 'false,false,false,false': [1.805, 13, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.184, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.845, 1, 33], 'true,false': [0.606, 89, 0], 'false,true': [0.876, 1, 3], 'false,false,true': [3.952, 79, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.081, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.27, 6, 71], 'false,true,false': [0.25, 147, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.431, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.101, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.021, 0, 3], 'false,true,true': [1.545, 43, 11], 'false,true,false,true': [0.592, 2, 1], 'false,true,false,false': [1.925, 58, 17], 'false,false,true': [0.865, 1, 3], 'false,false,false,true': [3.471, 98, 40], 'false,false,false,false': [1.342, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.022, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.415, 1, 3], 'false,true': [2.311, 87, 29], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [3.449, 81, 40], 'false,false,false,false': [1.204, 5, 4]}]
{'': [0.13017751479289916, 0.20780001201850873], 'false': [1.4802973661668753e-16, 0.2043214148404473], 'false,false': [0.20433532480501398, 0.20408163265306106], 'false,false,true': [0.20249835634451155, 0.20603537981269632], 'false,false,false': [0.18750000000000003, 0.22222222222222224], 'true': [0.09876543209876527, 0.18750000000000006], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.00013129852941369663, 0.21982146477357817], 'false': [0.0, 0.21867681915413953], 'false,false': [0.21843678157771107, 0.2228787130088871], 'false,false,false': [0.2228787130088871, nan], 'false,false,true': [0.09307158615560074, 3.0802867458334777e-07], 'true': [0.0, 0.000158871220591017], 'false,true': [0.0, nan]}
{'': [0.00018944467813142296, 0.16596325943017734], 'false': [0.1640872885101049, 0.1869990773531303], 'false,false': [0.19494146018774614, 0.18037221363145403], 'false,false,true': [nan, 0.19494146018774614], 'false,false,false': [0.18037221363145403, nan], 'false,true': [0.16207761552593167, 0.1653832134717042], 'false,true,false': [0.0878871897259062, -1.2872151010146743e-17], 'true': [0.00010222037992491106, 0.0002505066378288845]}
{'': [0.07294009837327108, 0.13272016052939928], 'false': [0.12787004364482163, 0.21644934299905974], 'false,false': [0.0, 0.22229504993433982], 'false,false,false': [0.22229504993433982, nan], 'false,true': [0.10834434745668409, 0.11136059122380472], 'false,true,true': [nan, 0.10834434745668425], 'true': [0.0790717509306433, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.0002099461359613596, 0.12787439557011782], 'false': [0.1226742568326079, 0.21412036866311], 'false,false': [0.0, 0.22536768004818833], 'false,false,false': [0.2222222222222222, 0.17283950617283955], 'true': [5.299574910220896e-05, 0.0002079623225982874], 'true,true': [5.299574910220896e-05, nan], 'false,false,true': [nan, 0.0]}
{'': [0.004633520554959752, 0.12315867941709607], 'false': [0.11090627812209135, 0.12541060476519703], 'false,false': [2.264548071636193e-06, 0.12643860687161115], 'false,false,false': [0.12181189310229606, 0.17142577947353407], 'true': [0.005093629081584161, 0.0], 'true,true': [1.2702462918433102e-05, 0.009655443473942796], 'true,false': [nan, 0.0]}
{'': [0.11316785023217227, 0.13349048940000593], 'false': [0.19200240717533676, 0.13126062543473133], 'false,false': [0.13126062543473133, nan], 'true': [0.03389792475065355, 0.0041313574449762915], 'true,true': [0.003083242087379968, 0.02101921917024964], 'true,true,false': [nan, 0.02101921917024969], 'true,true,true': [0.0033904821807102525, 0.0]}
{'': [0.0007696939643020681, 0.10066941148049904], 'false': [0.09804957768337004, 0.13903150665103883], 'false,false': [0.0, 0.14619497742142565], 'false,false,false': [0.14619497742142565, nan], 'false,true': [0.0669280141680639, 0.0004240026667603964], 'false,true,true': [nan, 0.06692801416806396], 'true': [4.625929269271485e-18, 0.0013190379161760247], 'false,false,true': [0.0, nan]}
{'': [0.028979408669817342, 0.07521579013803752], 'false': [0.0491676235524032, 0.09574387056760429], 'false,false': [0.18687808095634906, 0.09320165801537388], 'false,false,false': [0.08731149937736722, 0.16383444281179535], 'false,true': [0.04417936008568173, 0.05240482450037563], 'false,true,false': [0.11691045136954853, 0.04939823001469401], 'true': [0.0012799449135195845, 0.0686424037337702], 'true,false': [0.0, 0.00014122271060051464]}
{'': [0.02346118677137595, 0.07672639118867987], 'false': [0.046029349160434094, 0.10178064251376888], 'false,false': [1.4584533857275872e-06, 0.10343053507055376], 'false,false,false': [0.09828937776589411, 0.16103699803335964], 'true': [0.012552304288462903, 0.043148968773995974], 'true,true': [0.0010396716125548149, 0.0], 'true,true,true': [7.141122016517716e-05, 0.0], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 10.862
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.10814893509951236;  // std dev = 3.000, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0.19516550968514698;  // std dev = 6.359, 181.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=61 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, E), location(A, F) )
%   | | then return 0.10168725978835065;  // std dev = 0.848, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7561337978940016;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7424468482369369;  // std dev = 2.522, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.16195663786149828;  // std dev = 0.161, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.4350478777168768;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.035047877716876744;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.371862515489032;  // std dev = 0.388, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.27644902978635777;  // std dev = 1.053, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.04202001996950821;  // std dev = 2.986, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.14101631181286584;  // std dev = 3.037, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6277625457845193;  // std dev = 1.668, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14456277013065752;  // std dev = 0.028, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return 0.10516484577687409;  // std dev = 1.034, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2018944887603075;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.01310644278507489;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.5107354367191933;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4535975977090686;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.36444715919357595;  // std dev = 3.878, 98.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=68 */
%   | | | else return -0.15370380713031148;  // std dev = 0.530, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.04491973686943218;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0035401709881123537;  // std dev = 0.885, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5907853230316749;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1787436100633317;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.008283721902086077;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3413493468572062;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4603696332761659;  // std dev = 0.188, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(F, H), complex(A, I) )
%   | | | then return -0.021129652726670587;  // std dev = 1.420, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.06280473126103947;  // std dev = 4.594, 199.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=62 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.08083686129568242;  // std dev = 0.474, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3450389479155055;  // std dev = 0.533, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4443385297344076;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.020981804077355615;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13947867338414105;  // std dev = 1.340, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.3000533775886463;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3389647502674915;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.11056048705594118;  // std dev = 0.856, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.034413307441549475;  // std dev = 1.473, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.01787114436368686;  // std dev = 0.988, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.16922883354424145;  // std dev = 1.158, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.3859076991234283;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.09978417951739074;  // std dev = 2.013, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.02282650720878697;  // std dev = 4.208, 166.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2446506051120705;  // std dev = 0.063, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), location(A, F) )
%   | | | then return 0.422298792422767;  // std dev = 1.709, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | | else return 0.6423366976731945;  // std dev = 0.246, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.19366273982262602;  // std dev = 0.099, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(G, I) )
%   | | | then return 0.353690367438532;  // std dev = 2.066, 40.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | | | else return -0.12789924368947975;  // std dev = 1.255, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( location(A, H) )
%   | | | then return -0.1389196617097764;  // std dev = 0.097, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.0063420345050338185;  // std dev = 0.970, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else return 0.2571027191716429;  // std dev = 0.464, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17562512368732908;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.0802797492782699;  // std dev = 0.719, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.446609408450222;  // std dev = 0.189, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2901706114648612;  // std dev = 2.665, 70.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=60 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.1075380536544878;  // std dev = 0.123, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.1425379025292761;  // std dev = 0.349, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.22243602330868728;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.09567037015194435;  // std dev = 1.010, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.024255161010330033;  // std dev = 0.951, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17434121601399838;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.3427761692827444;  // std dev = 0.200, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5448814222426583;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.11201438463199576;  // std dev = 0.121, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.2948722422384852;  // std dev = 0.174, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, J), location(J, K) )
%   | | then if ( interaction(J, J), location(A, K) )
%   | | | then return -0.06454055389331204;  // std dev = 1.294, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return -0.01830360261670169;  // std dev = 2.019, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.031232322278578476;  // std dev = 1.672, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.030593599706429116;  // std dev = 2.195, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1494001508614329;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.15500981774357672;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.34021109144873657;  // std dev = 0.295, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.11713750691534411;  // std dev = 0.570, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10838278363688843;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.03838476299769016;  // std dev = 1.495, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1947830348382068;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.03537516207304672;  // std dev = 1.974, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return 0.038321023447253376;  // std dev = 2.078, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '23.389', 'seconds']
Refined model CLL: -0.172564


******************************************
Best model found
******************************************
Results 

CLL : -0.173596 

AUC ROC : 0.98832 

AUC PR : 0.291603 

Precision : 0.173234 

Recall : 0.904255 

F1 : 0.290764 

Total Learning Time : 10.862 

Total Inference Time : 20.978748559951782 

Total revision time: 39.95480254745483
Best scored revision CLL: -0.172564


Results 

CLL : -0.173596 

AUC ROC : 0.98832 

AUC PR : 0.291603 

Precision : 0.173234 

Recall : 0.904255 

F1 : 0.290764 

Total Learning Time : 45.479926858901976 

Total Inference Time : 20.978748559951782 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.198
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6081489350995123;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09299741994799608;  // std dev = 4.870, 132.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=31 */
%   | | | else return 0.19396983062189957;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.058148935099512286;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7670719622367218;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6859744015419904;  // std dev = 0.964, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6177817349725823;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6477302907489009;  // std dev = 3.799, 94.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=76 */
%   | | | else return -0.1595030259593764;  // std dev = 0.083, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07314425473577645;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41093853826404575;  // std dev = 1.515, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else return 0.6286475125487407;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09566590790819371;  // std dev = 4.360, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6066576758332691;  // std dev = 2.302, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.14609869966309358;  // std dev = 1.49e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8414033292113452;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21529456205472758;  // std dev = 1.466, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4465036825820836;  // std dev = 0.927, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.5547639520010572;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5274069857199034;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5106553082616234;  // std dev = 1.920, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else return 0.013956024338175256;  // std dev = 5.294, 270.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5271669107879483;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.10938929120801143;  // std dev = 1.619, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.1734363882595681;  // std dev = 1.235, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3945609993827338;  // std dev = 0.115, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.0644209871388243;  // std dev = 5.853, 279.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.396901560158162;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0517505238238723;  // std dev = 1.664, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3358742323544486;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.43860015515297884;  // std dev = 0.176, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.30676358832529493;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.0010424032497430384;  // std dev = 2.902, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.31300224582208636;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.04754633808160763;  // std dev = 4.722, 192.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=51 */
%   | | | else return 0.06159333597295509;  // std dev = 2.240, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.29428447028650545;  // std dev = 0.227, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.24562987655178647;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21808898465160065;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5616995928528787;  // std dev = 0.875, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18152471438876516;  // std dev = 0.695, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2694212626581126;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08212474307397291;  // std dev = 4.375, 146.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.22508797010117038;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.10753374317264708;  // std dev = 0.959, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.368998846781113;  // std dev = 3.344, 96.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=82 */
%   | | else return -0.15111710337264206;  // std dev = 0.657, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.3047753486396689;  // std dev = 0.718, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.10212118715207068;  // std dev = 1.314, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19826379053389181;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.16206182025101645;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.20629066713487781;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.00990962730159477;  // std dev = 1.745, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1643588570098546;  // std dev = 0.845, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.06650060520335911;  // std dev = 1.636, 64.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2019702875127675;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02356470983632157;  // std dev = 4.019, 157.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=47 */
%   | | | else return 0.058293447505972984;  // std dev = 1.333, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.15981436081635772;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.04586530994565124;  // std dev = 0.853, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1658187481425317;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.023383683364294264;  // std dev = 2.476, 126.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.003666203041768734;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.010403916013035518;  // std dev = 4.095, 161.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=47 */
%   | | | else return -0.013343543675768097;  // std dev = 1.454, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.578', 'seconds']
Parameter learned model CLL:-0.196149 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.732, 4, 12], 'true,false': [1.369, 3, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.87, 101, 31], 'false,false,true,false': [5.467, 89, 45], 'false,false,false,true': [1.789, 16, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.964, 1, 10], 'false,true,true': [0.897, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.799, 18, 76], 'false,false,true,false': [0.083, 153, 0], 'false,false,false,true': [1.764, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.515, 3, 11], 'true,false': [0.026, 0, 6], 'false,true,true': [4.36, 89, 34], 'false,true,false,true': [2.302, 6, 48], 'false,true,false,false': [1.49e-08, 93, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.466, 6, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.927, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.036, 0, 3], 'false,true,true,false': [1.92, 5, 21], 'false,true,false': [5.294, 212, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.619, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.235, 2, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.115, 0, 10], 'false,true': [5.853, 197, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.664, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.096, 0, 9], 'true,true,false': [0.176, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.902, 59, 19], 'false,false,true': [0.091, 0, 8], 'false,false,false,true': [4.722, 141, 51], 'false,false,false,false': [2.24, 23, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.227, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [0.875, 1, 33], 'true,false': [0.695, 104, 0], 'false,true': [0.038, 0, 5], 'false,false,true': [4.375, 99, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [1.29e-08, 0, 7], 'true,false': [0.959, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.344, 14, 82], 'false,true,false': [0.657, 200, 0], 'false,false,true,true': [0.718, 1, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.314, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.085, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.116, 0, 5], 'false,true,true': [1.745, 31, 13], 'false,true,false,true': [0.845, 1, 8], 'false,true,false,false': [1.636, 53, 11], 'false,false,true': [0.031, 0, 5], 'false,false,false,true': [4.019, 110, 47], 'false,false,false,false': [1.333, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.853, 1, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.09, 0, 3], 'false,true': [2.476, 94, 32], 'false,false,true': [0.919, 1, 5], 'false,false,false,true': [4.095, 114, 47], 'false,false,false,false': [1.454, 10, 4]}]
{'': [0.2065972222222218, 0.20835068721366148], 'false': [0.10937499999999978, 0.20147684483348924], 'true': [0.18749999999999967, 0.23437499999999983], 'false,false': [0.20408163265306153, 0.15999999999999986], 'false,false,true': [0.179694674012857, 0.22304522165293056], 'false,false,false': [0.15999999999999986, nan], 'false,true': [0.22222222222222224, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.0532288240360717, 0.2129826513907914], 'false': [0.1005686620325889, 0.20976057979471624], 'false,false': [0.21207358967812176, 0.1728395061728395], 'false,false,true': [0.15354468447408715, 4.544395106452937e-05], 'false,false,false': [0.1728395061728395, nan], 'false,true': [0.1005686620325889, nan], 'true': [-1.2688263138573217e-16, 0.0845440620337791]}
{'': [0.12480822756522114, 0.165543833848173], 'false': [0.16203999430564478, 0.2276745096168958], 'false,false': [0.2276745096168958, nan], 'false,false,true': [0.0, 0.21480448891400544], 'false,true': [0.15456264861471616, 0.16774617922348628], 'false,true,false': [0.09815447909416665, 2.3875763970433476e-18], 'true': [0.16402876966737476, 0.00011559108799715408]}
{'': [0.04831492147632664, 0.13124625778204477], 'false': [0.12781384901032283, 0.19889895491899798], 'false,false': [0.0, 0.20173186456944608], 'false,false,false': [0.20173186456944608, nan], 'false,true': [0.12720726171745286, 0.10378333025439641], 'false,true,true': [0.000433560576779272, 0.14180596694400546], 'true': [0.050505848684446, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.09317827079318504, 0.12589293717551783], 'false': [0.12278138405230513, 0.1800757060395608], 'false,false': [0.0, 0.18463517574120022], 'false,false,false': [0.18463517574120022, nan], 'true': [0.16950462197402424, 0.0013232472146749163], 'true,true': [0.16950462197402424, nan], 'false,false,true': [nan, 0.0]}
{'': [0.005181591256237628, 0.11729884209021874], 'false': [0.10795862748805433, 0.11959327711967047], 'false,false': [0.001045324904080644, 0.12142626271779346], 'false,false,false': [0.11612246160387989, 0.1521163637715563], 'true': [0.00521901928287735, 0.0], 'true,true': [0.0010204725931903802, 0.005185270188521922], 'true,false': [nan, 0.0]}
{'': [0.10675863709766957, 0.1278942227857437], 'false': [0.0002828341309756621, 0.13110288687324562], 'false,false': [0.13110288687324562, nan], 'true': [0.03399289822880171, 0.004647721178070168], 'true,true': [0.0033572126693605653, 0.02947391516606285], 'true,true,false': [0.0, 0.022501453382637628], 'true,true,true': [0.0034330725040997803, 0.0]}
{'': [0.05432853234933192, 0.10255628154421718], 'false': [0.09851849946809227, 0.19403183288297926], 'false,false': [0.2578294842037159, 0.1569607536326005], 'false,false,true': [0.2578294842037159, nan], 'false,false,false': [0.1569607536326005, nan], 'false,true': [0.11648501025382979, 0.0021581629597997275], 'false,true,true': [nan, 0.11648501025382989], 'true': [2.3790493384824782e-17, 0.08352718064893333]}
{'': [0.0014778542961565513, 0.08662729822900783], 'false': [0.05876048691600105, 0.10398718204730228], 'false,false': [0.00018776241449159348, 0.10616866636739335], 'false,false,false': [0.10287891906041659, 0.14808908093410642], 'false,true': [0.06919014999655539, 0.05217655718757741], 'false,true,false': [0.07925676147268233, 0.0417976524786096], 'true': [0.0008049670869831697, 0.002331041015212968], 'true,false': [0.0, 0.002704545736533559]}
{'': [0.046540936793632595, 0.08451030608663958], 'false': [0.04866614810397983, 0.10904944838309352], 'false,false': [0.1407851861869813, 0.10796059007339198], 'false,false,false': [0.10417144646673682, 0.1510169150555885], 'true': [0.0552401856434329, 0.0026780416708349123], 'true,true': [0.0552401856434329, nan], 'true,true,true': [-3.96508223080413e-18, 0.10398817818969834]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 5.135
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.07627729440868446;  // std dev = 1.933, 61.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.32243464938522665;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.16224250235097437;  // std dev = 6.016, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7379758438173819;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.39693316398137046;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7235208191248603;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7078230926373624;  // std dev = 2.931, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return -0.15744037283318377;  // std dev = 0.254, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.024920041656753492;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.19168654606154756;  // std dev = 1.125, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.36336655819893704;  // std dev = 0.405, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else return 0.5742500851875856;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14014469080576175;  // std dev = 0.189, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.09478494895318545;  // std dev = 4.053, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6387905867628091;  // std dev = 1.748, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.13856199134405142;  // std dev = 0.121, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.560397307897243;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20190108541326737;  // std dev = 0.992, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.17452784138380434;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.46587295969546333;  // std dev = 0.039, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.463804349224328;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4905804988251694;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4873974089457951;  // std dev = 1.434, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return -0.06176947068663055;  // std dev = 2.092, 85.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=10 */
%   | | | else return 0.09039465709547177;  // std dev = 4.424, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5875411639861676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.23258979297689497;  // std dev = 1.037, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03429182068708267;  // std dev = 1.106, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.37069522055002996;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E) )
%   | | then return 0.31267364610632586;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.37281801056864505;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10284435479595434;  // std dev = 0.010, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4481091888860063;  // std dev = 0.249, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.056652381263814076;  // std dev = 5.342, 252.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=76 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4418317557589989;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.42069168690733844;  // std dev = 0.831, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 7.104884194258677E-4;  // std dev = 1.133, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2825446132846172;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.22670237606505303;  // std dev = 0.305, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.33725230909873805;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11088194844765427;  // std dev = 0.125, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.03180040870638122;  // std dev = 1.792, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.11538837940420132;  // std dev = 1.282, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.27299125591160966;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, J), complex(A, K) )
%   | | | then return -0.006513368433778192;  // std dev = 2.358, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | | | else return 0.07106066619694318;  // std dev = 4.419, 149.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2573337789173896;  // std dev = 0.066, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.18233893851983654;  // std dev = 1.038, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.39524417209004886;  // std dev = 1.786, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.1572612532727776;  // std dev = 0.058, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.06859107678085376;  // std dev = 0.929, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5333558851818907;  // std dev = 1.104, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return -0.1888178886944132;  // std dev = 0.473, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( location(A, I) )
%   | | | then return 0.010233780261462338;  // std dev = 2.444, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.0579094374399064;  // std dev = 1.051, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.18737098102190064;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1304841978389465;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1286824705133172;  // std dev = 0.274, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return 0.058782429370198924;  // std dev = 1.825, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return 0.2887524390441087;  // std dev = 3.262, 80.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=64 */
%   | | else return -0.1428187144308871;  // std dev = 0.036, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5714122322150289;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2371086623017189;  // std dev = 0.261, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.2204221389659384;  // std dev = 0.548, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19851660704546548;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.37150825463189274;  // std dev = 0.992, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.1987772238409079;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.17777165932429423;  // std dev = 1.051, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, I) )
%   | | | then return -0.014323977617969975;  // std dev = 2.256, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | | else return 0.10626651574268846;  // std dev = 0.557, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.08575862208934737;  // std dev = 0.459, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.043802396708827705;  // std dev = 1.954, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return 0.008886519850238247;  // std dev = 2.912, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.17749145615804404;  // std dev = 0.046, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.17355189863388723;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F), complex(E, G) )
%   | | then if ( complex(F, G), phenotype(F, H) )
%   | | | then return -0.11652636136922394;  // std dev = 1.347, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return -0.028260415851656062;  // std dev = 0.643, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( phenotype(A, I), phenotype(E, J) )
%   | | | then return 0.05526424970899468;  // std dev = 0.867, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.03608955104111347;  // std dev = 1.384, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2280773244551238;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.00396192254397953;  // std dev = 2.025, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | | else return 0.023567990760359172;  // std dev = 3.078, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.547', 'seconds']
Refined model CLL: -0.186699


******************************************
Best model found
******************************************
Results 

CLL : -0.166746 

AUC ROC : 0.99053 

AUC PR : 0.341555 

Precision : 0.2607 

Recall : 0.758491 

F1 : 0.388031 

Total Learning Time : 5.135 

Total Inference Time : 10.18009352684021 

Total revision time: 24.41570001411438
Best scored revision CLL: -0.186699


Results 

CLL : -0.166746 

AUC ROC : 0.99053 

AUC PR : 0.341555 

Precision : 0.2607 

Recall : 0.758491 

F1 : 0.388031 

Total Learning Time : 29.940824325561522 

Total Inference Time : 10.18009352684021 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.376
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07436515131572859;  // std dev = 2.504, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.14020021715079337;  // std dev = 5.620, 156.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15502393509951232;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8415406772355094;  // std dev = 0.022, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15833578024950995;  // std dev = 0.034, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1714515353438564;  // std dev = 3.463, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.17154422800006305;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04029286995248231;  // std dev = 2.117, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6427866528499783;  // std dev = 1.395, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return -0.13965774103223783;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18447947145542937;  // std dev = 0.525, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1725315499319697;  // std dev = 3.530, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.30799992394145936;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3964188841326387;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5955923353785791;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05727071598067422;  // std dev = 4.237, 193.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.509473411469253;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5124589461361535;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08903015342656247;  // std dev = 3.539, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.035986460874548265;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.03906246779400564;  // std dev = 4.331, 217.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.384243475567849;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3863661681143382;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07311191550088426;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.238856975181617;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.19701583792049382;  // std dev = 0.708, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.29821367746627137;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2996470770142927;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.10603238256334391;  // std dev = 1.168, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.059852321629945554;  // std dev = 4.054, 167.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=49 */
%   | | | else return 0.05568846711707118;  // std dev = 3.735, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2435863424691697;  // std dev = 0.176, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.24024672288687066;  // std dev = 0.000698, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.643888506729402;  // std dev = 0.730, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19757511467884906;  // std dev = 0.813, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05576926245563632;  // std dev = 3.391, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17222026928449508;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07237778389323832;  // std dev = 0.878, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45257812473001585;  // std dev = 0.767, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.135734604853882;  // std dev = 0.245, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19915663379638748;  // std dev = 0.000610, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0027192161434565695;  // std dev = 3.157, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15794448267236375;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.22119612677505301;  // std dev = 0.522, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.18107483926561382;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07130992895758327;  // std dev = 0.400, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1900605787676929;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.01325856871590734;  // std dev = 1.231, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1667939214781654;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.032470529065119026;  // std dev = 2.699, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | | else return 0.02162279175606143;  // std dev = 3.106, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13243735563115605;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15534921195544882;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13009290694210307;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16395387228270644;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01886491759264855;  // std dev = 1.428, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1448824923633686;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.008526253690867574;  // std dev = 2.747, 131.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=36 */
%   | | | else return 0.06086933869441285;  // std dev = 2.977, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.710', 'seconds']
Parameter learned model CLL:-0.17334 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.504, 29, 8], 'false,false,true,false': [5.62, 112, 44], 'false,false,false,true': [3.655, 45, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.022, 0, 52], 'false,false,true,false': [0.034, 113, 0], 'false,false,false,true': [3.463, 36, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.117, 31, 8], 'false,true,false,true': [1.395, 2, 48], 'false,true,false,false': [0.0, 120, 0], 'false,false,true,true': [0.525, 1, 1], 'false,false,true,false': [3.53, 35, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.127, 0, 3], 'false,true,false': [4.237, 141, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.539, 41, 18], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.331, 161, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.643, 44, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.708, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.168, 29, 3], 'false,false,true': [7.45e-09, 0, 6], 'false,false,false,true': [4.054, 118, 49], 'false,false,false,false': [3.735, 47, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.176, 0, 12], 'true,true,true,false': [0.000698, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.73, 0, 36], 'true,false': [0.813, 93, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.391, 85, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.878, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.767, 0, 56], 'false,true,false': [0.245, 142, 0], 'false,false,true,true': [0.00061, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.157, 54, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.046, 0, 9], 'true,false,true': [0.522, 1, 1], 'true,false,false': [0.031, 0, 4], 'false,true,true': [0.4, 13, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.231, 44, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.699, 80, 36], 'false,false,false,false': [3.106, 48, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.01, 0, 5], 'true,true,true,false': [0.021, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.03, 0, 4], 'false,true': [1.428, 54, 17], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.747, 95, 36], 'false,false,false,false': [2.977, 38, 20]}]
{'': [-2.5376526277146434e-16, 0.20724744191305397], 'false': [-1.4802973661668753e-16, 0.20023668639053388], 'false,false': [0.19683749899326236, 0.2094007574069944], 'false,false,false': [0.2087402343749995, 0.22222222222222224], 'false,false,true': [0.16946676406135883, 0.20249835634451102], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [3.1720657846433045e-16, 0.21976595738430985], 'false': [7.401486830834377e-17, 0.2175163551486658], 'false,false': [0.21578793048862688, 0.22211140164303694], 'false,false,false': [0.22209908738615688, 0.22222222222222224], 'false,false,true': [9.722408276065135e-06, 1.0446298846365788e-05], 'true': [7.401486830834377e-17, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-1.9032394707859825e-16, 0.15604123273708023], 'false': [0.1345289142782067, 0.22499583241615304], 'false,false': [0.22350024667513657, 0.24999999999999994], 'false,false,false': [0.24999999999999994, nan], 'false,false,true': [0.13755714102266, 0.2266204416458613], 'false,true': [0.11493990201014596, 0.13855299033333054], 'false,true,false': [0.03892541688553173, -9.62193288008469e-17], 'true': [0.0, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.12545227256113975], 'false': [0.09608716842299654, 0.20871444946260423], 'false,false': [2.2283543117951332e-06, 0.20962829253101994], 'false,false,false': [0.21229278275864397, 0.1875], 'false,true': [0.011468661253588142, 0.09299503443578915], 'false,true,true': [0.0, 0.00537403241781272], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, -3.700743415417188e-17]}
{'': [-3.172065784643304e-17, 0.11580036873305295], 'false': [0.08644120323122138, 0.2091052843133267], 'false,false': [1.1264559117152295e-06, 0.21272414955089558], 'false,false,false': [0.21069551460968358, 0.24999999999999994], 'false,false,true': [0.0, 0.0], 'true': [-2.2204460492503132e-17, -3.700743415417188e-17], 'true,true': [-2.2204460492503132e-17, nan]}
{'': [0.03466131106213412, 0.12055417887194425], 'false': [0.0426616483631717, 0.12755561956449368], 'false,false': [9.25185853854297e-18, 0.1298608509895363], 'false,false,false': [0.09842146595165395, 0.20821231783221802], 'true': [0.04264978102296688, 0.0004258478501256528], 'true,true': [2.3790493384824782e-17, 0.10038654347079681], 'true,false': [0.00046314127949348416, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1399963651602801, 0.09216911543086251], 'true': [0.04479665651970718, 0.007103565791153993], 'false': [-5.551115123125783e-18, 0.0950367865758052], 'false,false': [0.0950367865758052, nan], 'true,true': [0.0022264501582000868, 0.01935538192463408], 'true,true,false': [0.0, 0.014799259969070475], 'true,true,true': [0.0025958913164746966, 2.4344373445589484e-07]}
{'': [0.05381328194807824, 0.089851682809391], 'false': [0.07347757556345524, 0.1321359357724068], 'false,false': [1.8587589199758892e-07, 0.13469170754414506], 'false,false,false': [0.13469170754414506, nan], 'false,true': [0.010506271766542794, 0.00042110393984117996], 'true': [0.0, 0.08570139449115571], 'false,true,true': [nan, 0.010506271766542794], 'false,false,true': [1.8587589199758892e-07, nan]}
{'': [0.0357313756797862, 0.07212332297304902], 'false': [0.024350449632592492, 0.09010000862674075], 'false,false': [0.0, 0.09204213937980352], 'false,false,false': [0.06279442552861293, 0.14186111289509523], 'true': [0.00023122667748982762, 0.08159433082758553], 'true,false': [0.13642723838096488, 0.00023723367779875798], 'false,true': [0.011422802094804164, 0.026571784757635202], 'false,true,false': [0.0, 0.026110097339771755]}
{'': [0.0003153935179290262, 0.0707235524670934], 'false': [0.028739074470278892, 0.08550832789818705], 'false,false': [-2.7755575615628915e-18, 0.08739750262581947], 'false,false,false': [0.05758899951136901, 0.15282459067958182], 'true': [0.00017303356974904816, 0.0002208612562986101], 'true,true': [0.0001923710158953755, 0.0], 'true,true,true': [2.19857586224087e-05, 0.0001482507195430157], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.751
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( enzyme(H, J), enzyme(A, K) )
%   | | | then return -0.08629550934493224;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.10814893509951194;  // std dev = 4.243, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.10557161551188284;  // std dev = 4.250, 97.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | | | else return 0.21199508894566577;  // std dev = 3.855, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8389798888712785;  // std dev = 0.058, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15757270532946563;  // std dev = 0.125, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( location(A, J) )
%   | | | then return 0.16494221733706269;  // std dev = 3.498, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.34480564816870496;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.44425532563517345;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13156616016444897;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.12823551671318742;  // std dev = 1.947, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6618927812089177;  // std dev = 1.004, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.1404407661540153;  // std dev = 0.108, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, H), phenotype(H, J) )
%   | | | then return 0.32193112189660134;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.11742727301454357;  // std dev = 3.129, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else return -0.027515232129597316;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3523425473499974;  // std dev = 0.274, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.42659473242082036;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38594791238061654;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4122985606347783;  // std dev = 0.623, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.08967861015067345;  // std dev = 1.700, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.0481472472765782;  // std dev = 3.834, 163.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=43 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5609596767339;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return -0.044453706952941506;  // std dev = 1.568, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.09938763215262693;  // std dev = 3.428, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.33180529545366805;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3537684192046094;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.44181156536860966;  // std dev = 0.197, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12428360969754894;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.0699408676546913;  // std dev = 0.308, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.4631822180774915;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3820463524354255;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.04181057583065945;  // std dev = 2.572, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.13140551764965586;  // std dev = 2.664, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2731915666191097;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3439990428549585;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2999939373619792;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.10268602331093239;  // std dev = 0.010, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.05766744416312716;  // std dev = 0.563, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.015226226675505028;  // std dev = 0.544, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2748465675509777;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, K) )
%   | | | then return 0.07866491876948951;  // std dev = 5.207, 204.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=67 */
%   | | | else return -0.01866579915257227;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24088832905234753;  // std dev = 0.046, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2309712329605308;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5952898072353711;  // std dev = 1.335, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.1897388246832472;  // std dev = 0.064, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.22213112638047167;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.023863374661746123;  // std dev = 1.835, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.005718748644593695;  // std dev = 1.349, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.20493974213169297;  // std dev = 0.799, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.060955115968356705;  // std dev = 2.215, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18228558529691727;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1847485702941118;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.32746915165618007;  // std dev = 0.370, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.487695741976937;  // std dev = 0.287, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return -0.11120126463918859;  // std dev = 0.189, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.16411195261837927;  // std dev = 0.224, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.21870512683761778;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.0024229260837034037;  // std dev = 1.928, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.04927567561310238;  // std dev = 2.504, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16897883603312044;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.09934771069687931;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -6.164420797792891E-4;  // std dev = 0.785, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05101524492842237;  // std dev = 0.093, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1680056967578194;  // std dev = 0.000255, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.03442018069602189;  // std dev = 1.545, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.005744179798512068;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.0011992712140488982;  // std dev = 2.646, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
%   | | | else return 0.06920849274852699;  // std dev = 3.019, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.14997038895999415;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.1426645791988327;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15637265687311608;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return -0.45123274239977973;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.04614799858471352;  // std dev = 0.455, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.0021011573162398414;  // std dev = 1.302, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16055349418410733;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.08042674516640981;  // std dev = 1.991, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.008101491562820399;  // std dev = 3.498, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.253', 'seconds']
Refined model CLL: -0.17546


******************************************
Best model found
******************************************
Results 

CLL : -0.19055 

AUC ROC : 0.98253 

AUC PR : 0.232309 

Precision : 0.134769 

Recall : 0.790614 

F1 : 0.230284 

Total Learning Time : 2.751 

Total Inference Time : 2.9722344875335693 

Total revision time: 9.801753665924071
Best scored revision CLL: -0.17334


Results 

CLL : -0.19055 

AUC ROC : 0.98253 

AUC PR : 0.232309 

Precision : 0.134769 

Recall : 0.790614 

F1 : 0.230284 

Total Learning Time : 15.326877977371215 

Total Inference Time : 2.9722344875335693 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.513
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.036231126880334294;  // std dev = 3.269, 73.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=13 */
%   | | | else return 0.12898226843284516;  // std dev = 5.333, 144.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.06269438964496693;  // std dev = 2.676, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7281936043102514;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6123228684706172;  // std dev = 0.957, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7739165189907621;  // std dev = 1.910, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.15499918222053308;  // std dev = 0.061, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else if ( location(A, I) )
%   | | | then return 0.11806391492744109;  // std dev = 2.825, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.058741135785635;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5692527820673249;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3642474383908729;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.041688707381652965;  // std dev = 2.844, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6794973363143071;  // std dev = 0.999, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.13871345614743613;  // std dev = 5.37e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.487824680452573;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2720382263670317;  // std dev = 2.175, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2211479294127998;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.32173385999951853;  // std dev = 1.335, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return -0.5375765099959324;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5714671219982366;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6097067855227873;  // std dev = 0.192, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.07203064529370033;  // std dev = 4.319, 170.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5229098261623576;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5143685352838598;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.19015063393338127;  // std dev = 2.554, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.0950223709349995;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3529221891708623;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.37734615063332666;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.03951375281867928;  // std dev = 4.534, 217.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.39383831265440383;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05846773365776755;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.029756660177699505;  // std dev = 2.556, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.0961354714505109;  // std dev = 1.375, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18030478679549328;  // std dev = 0.913, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.4101204750920455;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3046938769752633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.044627260722327255;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0628331074893231;  // std dev = 1.246, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.00904520008728858;  // std dev = 1.210, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06869466120862475;  // std dev = 4.045, 151.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=46 */
%   | | | else return 0.08429510860784986;  // std dev = 2.949, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26469592720522017;  // std dev = 0.131, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3257590592018064;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.3062917320281304;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5612017098609646;  // std dev = 1.133, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.19345655913121373;  // std dev = 0.921, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.08799089817361064;  // std dev = 0.680, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.035648603719635505;  // std dev = 3.487, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.009071700027959661;  // std dev = 1.192, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.24707261599588268;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40128207251481846;  // std dev = 2.080, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return -0.13653036238403768;  // std dev = 0.199, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2594916371689155;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.012876666580586085;  // std dev = 2.476, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19336807866257177;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1979367617950435;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19993393430498435;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.11440749438921649;  // std dev = 0.617, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.25039061126393763;  // std dev = 0.181, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -6.605960451336315E-4;  // std dev = 1.443, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.2424169766588374;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03131517834714654;  // std dev = 2.813, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | | else return -0.031714672096882945;  // std dev = 2.549, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.16696256848143942;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1572224720879119;  // std dev = 0.040, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1335695505840565;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.054283474471998404;  // std dev = 0.523, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.010442488993445381;  // std dev = 0.621, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.0018337029194045783;  // std dev = 1.602, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2655167116034802;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.022729709841185643;  // std dev = 2.909, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return 0.03823632979963444;  // std dev = 2.393, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.710', 'seconds']
Parameter learned model CLL:-0.177018 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.269, 60, 13], 'false,false,true,false': [5.333, 105, 39], 'false,false,false,true': [2.676, 35, 9], 'false,false,false,false': [1.225, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.02, 0, 7], 'false,true,true': [0.957, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.91, 4, 52], 'false,false,true,false': [0.061, 131, 0], 'false,false,false,true': [2.825, 29, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.017, 0, 11], 'true,false': [0.888, 1, 4], 'false,true,true': [2.844, 55, 14], 'false,true,false,true': [0.999, 1, 42], 'false,true,false,false': [5.37e-08, 74, 0], 'false,false,true,true': [0.771, 1, 3], 'false,false,true,false': [2.175, 11, 9], 'false,false,false,true': [1.31, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.335, 2, 15], 'true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.192, 0, 6], 'false,true,false': [4.319, 121, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.554, 16, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.001, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.059, 0, 6], 'false,true': [4.534, 161, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.814, 1, 2], 'false,false,false,true': [2.556, 24, 9], 'false,false,false,false': [1.375, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.913, 1, 9], 'true,true,false': [0.051, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.814, 1, 2], 'false,true': [1.246, 31, 5], 'false,false,true': [1.21, 2, 5], 'false,false,false,true': [4.045, 105, 46], 'false,false,false,false': [2.949, 27, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.131, 0, 13], 'true,true,true,false': [0.1, 0, 3], 'true,true,false,true': [0.019, 0, 3], 'true,true,false,false': [1.133, 1, 33], 'true,false': [0.921, 99, 0], 'false,true': [0.68, 1, 3], 'false,false,true': [3.487, 84, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [1.192, 2, 8], 'true,false': [0.072, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.08, 4, 56], 'false,true,false': [0.199, 145, 0], 'false,false,true,true': [0.086, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.476, 33, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.047, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.081, 0, 5], 'false,true,true': [0.617, 22, 1], 'false,true,false,true': [0.181, 0, 6], 'false,true,false,false': [1.443, 47, 17], 'false,false,true': [1.146, 3, 3], 'false,false,false,true': [2.813, 79, 31], 'false,false,false,false': [2.549, 36, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 8], 'true,true,true,false': [0.04, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.523, 1, 2], 'true,false': [0.621, 1, 3], 'false,true': [1.602, 63, 24], 'false,false,true': [0.032, 0, 3], 'false,false,false,true': [2.909, 76, 31], 'false,false,false,false': [2.393, 26, 12]}]
{'': [0.05859374999999978, 0.19152396694214927], 'false': [0.10937499999999978, 0.18224410498113433], 'false,false': [0.1822081590180306, 0.18239999999999948], 'false,false,false': [0.1627066115702481, 0.24999999999999992], 'false,false,true': [0.14636892475135996, 0.1974826388888895], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [0.18750000000000006, 1.4802973661668753e-16], 'true': [0.07100591715976314, 1.4802973661668753e-16]}
{'': [3.7260457621949665e-05, 0.20514464833653917], 'false': [0.11436836921285842, 0.2002139726652536], 'false,false': [0.20055584307209454, 0.19867163999118914], 'false,false,true': [0.0651659680525062, 2.8552376970323667e-05], 'false,false,false': [0.19946887743348013, 0.18750000000000003], 'false,true': [0.11436836921285842, nan], 'true': [-2.220446049250313e-16, 5.703131268651264e-05]}
{'': [0.05828657020604794, 0.165601906865754], 'false': [0.15010139506421694, 0.23353419907177614], 'false,false': [0.22839554257363828, 0.24531213512340902], 'false,false,false': [0.24531213512340902, nan], 'false,false,true': [0.14845006993689486, 0.2366240048065186], 'false,true': [0.11719377047872066, 0.16413908222268417], 'false,true,false': [0.023186216235291327, 3.900783600034334e-17], 'true': [2.610354836572106e-05, 0.15756590308451748]}
{'': [0.16328089767971124, 0.1357773353102865], 'true': [0.10476259273992981, 0.0], 'false': [0.11636433079753074, 0.228082797467711], 'false,false': [1.621192219355046e-05, 0.24041588535114108], 'false,false,false': [0.24153246483446753, 0.2222222222222222], 'false,true': [0.005463187507480427, 0.10972883033242958], 'false,true,true': [0.0, 0.006164822777802836], 'false,false,true': [0.0, 0.0]}
{'': [0.00037798069544897985, 0.11375502090809626], 'false': [0.09474741777808925, 0.20529367670933074], 'false,false': [0.18674303662545522, 0.20622167217766846], 'false,false,false': [0.19803238592953964, 0.23645606728442697], 'false,false,true': [0.0, 0.2208723591864722], 'true': [2.2064717134876824e-07, 0.000586702831753568], 'true,true': [2.2064717134876824e-07, nan]}
{'': [0.09764826600200993, 0.12191039557803933], 'false': [0.04309661326989494, 0.13347286002002978], 'false,false': [0.20903152501806269, 0.13057858901499547], 'false,false,false': [0.10838271465049049, 0.2121329667328834], 'true': [0.07046107792079956, 0.17834933953385607], 'true,false': [0.0, 0.2208904581561618], 'true,true': [0.08329709838689872, 0.000645847764681573], 'true,false,true': [0.0, nan]}
{'': [0.117771658577632, 0.1061729198105139], 'true': [0.0430328536344958, 0.008565872207471814], 'false': [0.11546639888933699, 0.10575757707727865], 'false,false': [0.10575757707727865, nan], 'true,true': [0.002270924587588319, 0.039557429706376136], 'true,true,false': [0.00011680159777786396, 0.037768909711609115], 'true,true,true': [0.0013271367822072627, 0.003331098046738238]}
{'': [0.09759115630378373, 0.09089930187778388], 'true': [0.1420584826226728, 0.0007461479481445059], 'false': [0.0811673600721717, 0.1322359637711686], 'false,false': [0.002478230227591018, 0.13624994853527916], 'false,false,false': [0.13624994853527916, nan], 'false,true': [0.07207330562259132, 0.00027415899842445903], 'false,true,true': [nan, 0.07207330562259132], 'false,false,true': [0.002478230227591018, nan]}
{'': [0.0005633104280150722, 0.07549320223981174], 'false': [0.0339494002840582, 0.0989652267025041], 'false,false': [0.21872784269586734, 0.09204607433352026], 'false,false,false': [0.07192809128056285, 0.1353839385018031], 'false,true': [0.016527141876849227, 0.035148847670628536], 'false,true,false': [0.00545917726421367, 0.032529964954829176], 'true': [0.00022329931765844302, 0.0011057142315135289], 'true,false': [0.0, 0.0013261922948104798]}
{'': [0.04477180453925392, 0.07231673589172088], 'false': [0.02950204061425694, 0.09707020046684696], 'false,false': [0.0003429234142393693, 0.09791627680143514], 'false,false,false': [0.07909411794884816, 0.1507380741699317], 'true': [0.027583184948509955, 0.09630240588365616], 'true,true': [0.00017261767039842836, 0.07489583738771276], 'true,true,false': [0.0, 0.09103892676127263], 'true,true,true': [3.469446951953614e-18, 0.0007871927697880067]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.852
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.016851064900487777;  // std dev = 1.620, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.09952824544433996;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.09814893509951236;  // std dev = 3.020, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return 0.1914822684328445;  // std dev = 5.292, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.7655896181175083;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.49327268722383816;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7665109998270027;  // std dev = 1.918, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.15919277912545868;  // std dev = 0.107, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.3430487929535253;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.06446037562619844;  // std dev = 2.487, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462844;  // std dev = 1.49e-08, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.1288917263106949;  // std dev = 0.029, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.09355046094380473;  // std dev = 2.686, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6536561841498689;  // std dev = 1.370, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14158159069106654;  // std dev = 0.063, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.629491619883121;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.06256566176933803;  // std dev = 2.123, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.1681434651787297;  // std dev = 1.983, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3550135841583098;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6416909652901781;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4945859724448101;  // std dev = 0.688, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.12480990405019171;  // std dev = 0.085, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.08191559160663886;  // std dev = 4.178, 162.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4756847048112706;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.004854148254487869;  // std dev = 2.194, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.09392748570539873;  // std dev = 2.047, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.33447760361752854;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20348274369478303;  // std dev = 0.321, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.14932781569138914;  // std dev = 0.870, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.03402065034502323;  // std dev = 1.371, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.09373851120822842;  // std dev = 2.487, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.04829420587000912;  // std dev = 3.202, 105.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=29 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3609122159040936;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.34896659439736266;  // std dev = 1.293, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.10385404767136948;  // std dev = 2.357, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.25011746673038665;  // std dev = 0.237, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.2826811008340866;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( enzyme(A, H) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.0070855182154902566;  // std dev = 1.400, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.11985661949276769;  // std dev = 1.558, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(F, K), recursion_proteinclass(K, B) )
%   | | | then return 0.36976190299219636;  // std dev = 0.694, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.08747232860618616;  // std dev = 1.732, 47.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.2908034475724366;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.11078823798003574;  // std dev = 2.488, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.04331027951484146;  // std dev = 3.362, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4542531304681353;  // std dev = 0.220, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | else return -0.17333007729153047;  // std dev = 0.072, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(E, E), enzyme(A, G) )
%   | | then return -0.03711952378232096;  // std dev = 0.325, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( phenotype(E, H), phenotype(F, H) )
%   | | | then return 0.1390639505212888;  // std dev = 1.785, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.025308534578124164;  // std dev = 1.745, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5002524814496973;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15181142400219105;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( location(A, K) )
%   | | | then return 0.08463776626519662;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.027994990783903828;  // std dev = 0.576, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.15099086995380928;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18872834763871996;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.43554395587443545;  // std dev = 1.179, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return 0.3334972729223739;  // std dev = 0.921, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.11504996171599724;  // std dev = 0.338, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.1632120204467652;  // std dev = 0.219, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.15891286879862776;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.034842376967425384;  // std dev = 2.186, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.11302037709324866;  // std dev = 1.439, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13628942336836358;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1720949903948036;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07659185759684156;  // std dev = 0.006, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( phenotype(A, F), complex(E, G) )
%   | | | then return -0.06123058907509114;  // std dev = 1.191, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.0035061083321809984;  // std dev = 1.543, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return 0.019727544280505688;  // std dev = 2.288, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
%   | | | else return -0.03475141650292596;  // std dev = 1.696, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.015587367943077694;  // std dev = 1.763, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.13531897076138916;  // std dev = 1.277, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1286277558858864;  // std dev = 0.020, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.14424808215179416;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return -0.057284565081985615;  // std dev = 0.623, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return 0.032465046920409975;  // std dev = 0.366, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.039768824620540884;  // std dev = 1.015, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.020131112906020224;  // std dev = 1.170, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.19549824157761053;  // std dev = 0.000532, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return -8.839092938185155E-4;  // std dev = 2.672, 104.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=30 */
%   | | | else return 0.07093612954896208;  // std dev = 2.480, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.377', 'seconds']
Refined model CLL: -0.177473


******************************************
Best model found
******************************************
Results 

CLL : -0.184741 

AUC ROC : 0.983713 

AUC PR : 0.227727 

Precision : 0.148123 

Recall : 0.780919 

F1 : 0.249014 

Total Learning Time : 3.852 

Total Inference Time : 3.1217758655548096 

Total revision time: 11.73207854270935
Best scored revision CLL: -0.177018


Results 

CLL : -0.184741 

AUC ROC : 0.983713 

AUC PR : 0.227727 

Precision : 0.148123 

Recall : 0.780919 

F1 : 0.249014 

Total Learning Time : 17.257202854156496 

Total Inference Time : 3.1217758655548096 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.124
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10814893509951104;  // std dev = 4.975, 132.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=33 */
%   | | | else return 0.2217852987358748;  // std dev = 4.786, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6016872597883507;  // std dev = 0.890, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6302587904451087;  // std dev = 3.765, 87.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=69 */
%   | | | else return -0.16334189450909123;  // std dev = 0.095, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( location(A, K) )
%   | | | then return 0.17329856666776866;  // std dev = 1.624, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.47449914253558834;  // std dev = 0.853, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.646097887447529;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09698978223209004;  // std dev = 4.406, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6433315081139963;  // std dev = 1.664, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14911532585293816;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0466052997805081;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11144192825396505;  // std dev = 1.341, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.46609424624691476;  // std dev = 0.153, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.46646657911168843;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.647477703503766;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.06093950224088816;  // std dev = 5.062, 209.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5993678974685506;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07817300260343428;  // std dev = 1.705, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.331553759290686;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18728951784077347;  // std dev = 0.937, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.05930467475647667;  // std dev = 5.471, 250.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4510235824451194;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1389149349551729;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16475672178087683;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.261804427585368;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.22969279696496586;  // std dev = 0.622, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.34353972241171327;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.014376976300435053;  // std dev = 2.272, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.04553546677502927;  // std dev = 1.160, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07588370876281517;  // std dev = 4.767, 174.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=55 */
%   | | | else return 0.03973585264708509;  // std dev = 1.906, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25557581565443693;  // std dev = 0.245, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.27069502709352666;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5693800751541864;  // std dev = 0.914, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18833053613706688;  // std dev = 0.780, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.38796455917941053;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06900802227259518;  // std dev = 3.983, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17262309872608117;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.014662817450579482;  // std dev = 1.142, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4090062833348478;  // std dev = 2.569, 80.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | | else return -0.1552902510324112;  // std dev = 0.272, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22066518705024296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.01519104480138175;  // std dev = 1.495, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17202584806795573;  // std dev = 0.126, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20495892037361071;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.02912225226376232;  // std dev = 1.489, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.33044141872233335;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.005084796748263699;  // std dev = 1.765, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3039372549644785;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.021201137805884982;  // std dev = 3.499, 135.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=40 */
%   | | | else return -0.032107844400366556;  // std dev = 1.515, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1348828651393207;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2492541596528136;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.24371892283070962;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1736836335927613;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.010683042142717567;  // std dev = 2.337, 105.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.24376416885964766;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05358649098276146;  // std dev = 3.234, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | | else return 0.16751274980986264;  // std dev = 1.276, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.946', 'seconds']
Parameter learned model CLL:-0.200476 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.095, 2, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.975, 99, 33], 'false,false,true,false': [4.786, 63, 36], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.89, 1, 5], 'false,true,true': [0.051, 0, 3], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [3.765, 18, 69], 'false,false,true,false': [0.095, 151, 0], 'false,false,false,true': [1.624, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.853, 1, 8], 'true,false': [0.076, 0, 3], 'false,true,true': [4.406, 89, 34], 'false,true,false,true': [1.664, 3, 37], 'false,true,false,false': [0.0, 76, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.247, 7, 2], 'false,false,false,true': [1.341, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.153, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.966, 1, 14], 'false,true,false': [5.062, 152, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.705, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.024, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.937, 1, 4], 'false,true': [5.471, 179, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.016, 0, 7], 'true,true,false': [0.622, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.272, 44, 12], 'false,false,true': [1.16, 2, 3], 'false,false,false,true': [4.767, 119, 55], 'false,false,false,false': [1.906, 15, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.245, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.914, 1, 33], 'true,false': [0.78, 89, 0], 'false,true': [0.033, 0, 3], 'false,false,true': [3.983, 86, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [1.142, 2, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.569, 9, 71], 'false,true,false': [0.272, 182, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.495, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.126, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.045, 0, 3], 'false,true,true': [1.489, 35, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.765, 38, 17], 'false,false,true': [0.03, 0, 3], 'false,false,false,true': [3.499, 95, 40], 'false,false,false,false': [1.515, 14, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.04, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.04, 0, 3], 'false,true': [2.337, 76, 29], 'false,false,true': [0.026, 0, 3], 'false,false,false,true': [3.234, 78, 40], 'false,false,false,false': [1.276, 5, 4]}]
{'': [0.13017751479289916, 0.21206109578877777], 'false': [0.18750000000000006, 0.20917950853811043], 'false,false': [0.2094788328554565, 0.20408163265306106], 'false,false,true': [0.18750000000000125, 0.23140495867768718], 'false,false,false': [0.17283950617283952, 0.24000000000000005], 'false,true': [nan, 0.18750000000000006], 'false,true,false': [0.0, 0.22222222222222224], 'true': [-2.220446049250313e-16, 0.23999999999999994]}
{'': [0.06943678885126052, 0.20814808950447602], 'false': [0.15345231946052268, 0.20642443518698897], 'false,false': [0.2056536871360271, 0.21964869115648789], 'false,false,false': [0.21964869115648789, nan], 'false,false,true': [0.1629080988952394, 6.018322862399564e-05], 'false,true': [0.0008585132404309951, 0.0], 'true': [7.401486830834377e-17, 0.13193678885126028], 'false,true,false': [nan, 0.0]}
{'': [0.06668725166781149, 0.16371490938278527], 'false': [0.1618676912876952, 0.18733980278334758], 'false,false': [0.1728395061728396, 0.1997382051979531], 'false,false,false': [0.1997382051979531, nan], 'false,false,true': [nan, 0.1728395061728396], 'false,true': [0.15785058960125367, 0.16574778069718302], 'false,true,false': [0.06923864303492681, -5.843279076974508e-18], 'true': [0.08091687044046392, 0.0019137984083395694]}
{'': [0.002119512740318791, 0.14451239474283645], 'false': [0.14007164718463286, 0.21067632644232592], 'false,false': [0.0, 0.20761502757835665], 'false,false,false': [0.20761502757835665, nan], 'false,true': [0.06227407218976951, 0.1226176787561612], 'false,true,true': [nan, 0.06227407218976951], 'true': [0.002331451411463137, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.07819642507065024, 0.1248459635872285], 'false': [0.11974673219930979, 0.21815450252077206], 'false,false': [0.0, 0.23046860004179354], 'false,false,false': [0.2222222222222222, 0.24], 'true': [8.517556543463645e-05, 0.17541174108396612], 'true,true': [8.517556543463645e-05, nan], 'false,false,true': [nan, 0.0]}
{'': [0.03317488485429367, 0.12994082758037293], 'false': [0.09221329757778496, 0.13898192406083276], 'false,false': [0.2690626956684946, 0.13530120870752485], 'false,false,false': [0.13061216717873078, 0.17298731762584937], 'true': [0.03546362941786729, 0.0], 'true,true': [3.855920861668892e-05, 0.09680131157971873], 'true,false': [nan, 0.0]}
{'': [0.12082936268801155, 0.12527502513751906], 'false': [0.0003730432661672352, 0.12588299179210016], 'false,false': [0.12588299179210016, nan], 'true': [0.037952185793334, 0.006837877997812558], 'true,true': [0.005496531398118746, 0.024591742765104667], 'true,true,false': [nan, 0.024591742765104615], 'true,true,true': [0.00602540357842698, 0.0]}
{'': [0.10909280306900913, 0.09556404211231592], 'true': [4.625929269271485e-18, 0.18641199026308833], 'false': [0.0930139970991269, 0.13454917865659954], 'false,false': [0.0, 0.1396862574930342], 'false,false,false': [0.1396862574930342, nan], 'false,true': [0.082496880259407, 0.0004061945470034488], 'false,true,true': [nan, 0.08249688025940674], 'false,false,true': [0.0, nan]}
{'': [0.0018539681002054437, 0.07888907981172126], 'false': [0.05370265085880745, 0.09505510648701335], 'false,false': [0.000298917202861404, 0.09530681162570522], 'false,false,false': [0.09067491115922212, 0.12753855255032864], 'false,true': [0.048210946103333416, 0.05749151236790175], 'false,true,false': [0.0, 0.05664651024523024], 'true': [0.0020001931291797337, 0.0006752439612513114], 'true,false': [nan, 0.0006752439612513114]}
{'': [0.013521768187598602, 0.07698693237543894], 'false': [0.05200744506312331, 0.09454472896984921], 'false,false': [0.00022846051740499362, 0.09600739709557099], 'false,false,false': [0.08862142930768131, 0.18078623426709675], 'true': [0.016691935987102016, 0.0005269550166801853], 'true,true': [0.0016263173861921533, 0.0], 'true,true,true': [0.00022354931527594966, 0.0], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 5.842
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(G, A), location(G, H) )
%   | | | then return 0.15859736559278728;  // std dev = 6.846, 223.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=67 */
%   | | | else return 0.28672036367094084;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5998263857880585;  // std dev = 0.966, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7111493965625196;  // std dev = 2.943, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.16114013239426123;  // std dev = 0.122, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.15288007360931777;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.019546740275984503;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5824014814323752;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6725262485975638;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.07333197714708084;  // std dev = 3.807, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | | else return 0.17070126499609198;  // std dev = 1.937, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6603278491490026;  // std dev = 1.379, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.1421766477911022;  // std dev = 0.028, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.09601935381637487;  // std dev = 1.018, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.00623126417480393;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.004175370547250879;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.4466903229426535;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.31092206328537925;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.44019349581471123;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 4.832771277584499E-4;  // std dev = 2.204, 50.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | | else return 0.09628843391897475;  // std dev = 4.896, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
%   | | else return 0.27041535248431403;  // std dev = 0.343, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5315476106845611;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.22589383682585829;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.06064061891477373;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3297998946733828;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.433142030605964;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.025358338944898647;  // std dev = 1.117, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.16371931607973797;  // std dev = 2.700, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.05402651619122539;  // std dev = 3.595, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return 0.09794554304156775;  // std dev = 2.648, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4000661929363799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.19413342690009436;  // std dev = 1.292, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1394880819144617;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2695115196814499;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.14700139985042293;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.30890243932756867;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), complex(A, G) )
%   | then if ( complex(F, G), phenotype(A, H) )
%   | | then return -0.08174553658589813;  // std dev = 0.170, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( enzyme(F, I), phenotype(A, J) )
%   | | | then return 0.45362670620266204;  // std dev = 0.740, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15343558808984498;  // std dev = 2.780, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1425661022276206;  // std dev = 0.043, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.015287429653631321;  // std dev = 2.930, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.0889292737653445;  // std dev = 3.378, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25479295312025096;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), enzyme(E, F) )
%   | | | then return 0.4531145010762758;  // std dev = 1.084, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.60026627763525;  // std dev = 0.419, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.18723496007084692;  // std dev = 0.067, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.34549259520029646;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.10344673864143063;  // std dev = 1.110, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.00230254238871818;  // std dev = 1.800, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.03394788684959211;  // std dev = 2.075, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.06378715978311944;  // std dev = 2.556, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.17540069474145484;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.16216236722477564;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.24648100746736706;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.18927812042898284;  // std dev = 1.658, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return 0.4885782627723403;  // std dev = 1.097, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | else return -0.16141579492048055;  // std dev = 0.033, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20278939765359816;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.04453784591902112;  // std dev = 0.720, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0927643426979358;  // std dev = 1.125, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18691049203191318;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.17941388404850625;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.030316998952590477;  // std dev = 1.206, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.028681940542561988;  // std dev = 1.129, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.39324111816484053;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.014632305501980103;  // std dev = 1.710, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.03414577689553658;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0032066151806425434;  // std dev = 3.342, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | | else return -0.06310288944078009;  // std dev = 1.668, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.16079786821374825;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.002485396551961727;  // std dev = 0.527, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.21258211884690043;  // std dev = 1.707, 35.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=26 */
%   | | | else return -0.14413384681847158;  // std dev = 0.472, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.024505905830275405;  // std dev = 0.313, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.17579662075211827;  // std dev = 0.946, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.02578854885048129;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.003988609185334332;  // std dev = 2.010, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.07516553244020518;  // std dev = 2.675, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '56.943', 'seconds']
Refined model CLL: -0.205535


******************************************
Best model found
******************************************
Results 

CLL : -0.194311 

AUC ROC : 0.98633 

AUC PR : 0.301193 

Precision : 0.16834 

Recall : 0.77305 

F1 : 0.276474 

Total Learning Time : 5.842 

Total Inference Time : 34.438644886016846 

Total revision time: 48.541995445251466
Best scored revision CLL: -0.200476


Results 

CLL : -0.194311 

AUC ROC : 0.98633 

AUC PR : 0.301193 

Precision : 0.16834 

Recall : 0.77305 

F1 : 0.276474 

Total Learning Time : 48.55563203430176 

Total Inference Time : 34.438644886016846 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.12
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1101814554247144;  // std dev = 4.815, 123.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=31 */
%   | | | else return 0.1684937626857184;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.5944734122109543;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.7356630398665784;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7034798787088035;  // std dev = 3.213, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.15959454920083382;  // std dev = 0.055, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1873700181204695;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.37433883798294554;  // std dev = 1.532, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else return 0.41927941564430293;  // std dev = 0.901, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07722788942620118;  // std dev = 4.344, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5101400458247226;  // std dev = 3.081, 60.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=48 */
%   | | | else return -0.14293781685836085;  // std dev = 5.37e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7948612589877714;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08648589463605404;  // std dev = 1.588, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4213610945379246;  // std dev = 0.966, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.4996289634975142;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.49530921994513366;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5068083103154847;  // std dev = 1.905, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else return 0.041978463222308714;  // std dev = 5.199, 237.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5648554930355499;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.20883993609154586;  // std dev = 1.442, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3897597330164349;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27720150416584866;  // std dev = 0.957, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.0772312873403367;  // std dev = 5.779, 262.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42458880232395324;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.017203576775205405;  // std dev = 1.670, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.29854391266835545;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4297224646325883;  // std dev = 0.214, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32551244347687835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.022042376107274116;  // std dev = 2.810, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.31149848074775377;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.032038639750140624;  // std dev = 4.835, 198.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=51 */
%   | | | else return 0.05891961640361048;  // std dev = 2.234, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.27672571518935063;  // std dev = 0.261, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2584452772547441;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.022254313295477307;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4526885948243667;  // std dev = 1.978, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.18864115282071428;  // std dev = 0.756, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26193354796242174;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07762996430126243;  // std dev = 4.387, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19570595280512806;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.13471974943461668;  // std dev = 0.828, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34732645324054473;  // std dev = 3.630, 100.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=82 */
%   | | else return -0.15349042164651158;  // std dev = 0.451, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2120670902889401;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.019306252376794626;  // std dev = 1.446, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1848572409210029;  // std dev = 0.117, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.15981278883923397;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20041554914061255;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.012876647761613404;  // std dev = 1.775, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2400749116595683;  // std dev = 0.450, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.05526502729577082;  // std dev = 1.651, 65.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19270533533882095;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.024073775639877084;  // std dev = 4.090, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | | else return 0.07327564251358452;  // std dev = 1.326, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.039586323971332354;  // std dev = 0.771, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.18077582468458367;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.6778453827879173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17583513717698715;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01961878984195955;  // std dev = 2.548, 126.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1644885064775717;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03601178813013451;  // std dev = 3.936, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
%   | | | else return -0.02102737566009505;  // std dev = 1.415, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.675', 'seconds']
Parameter learned model CLL:-0.200326 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.815, 92, 31], 'false,false,true,false': [5.571, 100, 45], 'false,false,false,true': [1.549, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.051, 0, 10], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.213, 12, 76], 'false,false,true,false': [0.055, 200, 0], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.532, 3, 11], 'true,false': [0.901, 1, 6], 'false,true,true': [4.344, 98, 34], 'false,true,false,true': [3.081, 12, 48], 'false,true,false,false': [5.37e-08, 81, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.588, 9, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.966, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.088, 0, 3], 'false,true,true,false': [1.905, 5, 21], 'false,true,false': [5.199, 179, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.442, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [2.11e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.957, 1, 10], 'false,true': [5.779, 180, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.67, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.019, 0, 9], 'true,true,false': [0.214, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.81, 48, 19], 'false,false,true': [0.057, 0, 8], 'false,false,false,true': [4.835, 147, 51], 'false,false,false,false': [2.234, 21, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.261, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.865, 1, 3], 'true,true,false,false': [1.978, 5, 33], 'true,false': [0.756, 106, 0], 'false,true': [0.014, 0, 5], 'false,false,true': [4.387, 101, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.828, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.63, 18, 82], 'false,true,false': [0.451, 178, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.446, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.117, 0, 9], 'true,false,true': [0.742, 1, 2], 'true,false,false': [0.104, 0, 5], 'false,true,true': [1.775, 33, 13], 'false,true,false,true': [0.45, 1, 8], 'false,true,false,false': [1.651, 54, 11], 'false,false,true': [0.011, 0, 5], 'false,false,false,true': [4.09, 108, 47], 'false,false,false,false': [1.326, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.771, 1, 7], 'true,true,true,false': [0.081, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.09, 0, 3], 'false,true': [2.548, 94, 32], 'false,false,true': [0.01, 0, 5], 'false,false,false,true': [3.936, 101, 47], 'false,false,false,false': [1.415, 11, 4]}]
{'': [0.05246913580246885, 0.21207756232687033], 'false': [-2.5376526277146434e-16, 0.20495833548988254], 'false,false': [0.20316328803742514, 0.23999999999999985], 'false,false,false': [0.23999999999999985, nan], 'false,false,true': [0.18851212902373046, 0.21403091557669557], 'true': [-1.4802973661668753e-16, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05367882593967829, 0.1993210009607954], 'false': [0.10937500000000006, 0.19553996720666464], 'false,false': [0.193915169297791, 0.23140495867768587], 'false,false,false': [0.23140495867768587, nan], 'false,false,true': [0.11730680106801174, 1.529161814320723e-05], 'false,true': [0.10937500000000006, nan], 'true': [0.10937500000000011, 0.00026210404362787544]}
{'': [0.15092336017787245, 0.16129759562381524], 'false': [0.15858665419191018, 0.21330287968497436], 'false,false': [0.21330287968497436, nan], 'false,false,true': [0.0, 0.1938682465911506], 'false,true': [0.1429849348909271, 0.17158053278914392], 'false,true,false': [0.1581974699774454, 3.563678844475811e-17], 'true': [0.16774736825898867, 0.11592890700194888]}
{'': [0.052140855294350724, 0.1399940061149658], 'false': [0.13617002462468014, 0.2194696838037214], 'false,false': [0.0, 0.23118049654774214], 'false,false,false': [0.23118049654774214, nan], 'false,true': [0.12541951934062906, 0.11404974620705378], 'false,true,true': [0.0025790886134468005, 0.1395797363234883], 'true': [0.05486763891200838, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.05394247466407793, 0.13063265624513368], 'false': [0.12747660074513636, 0.1748735047388518], 'false,false': [0.0, 0.1743218925362009], 'false,false,false': [0.1743218925362009, nan], 'true': [6.344131569286608e-17, 0.08334253265277126], 'true,true': [6.344131569286608e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.006786687217162302, 0.1213755485279567], 'false': [0.11783180977261759, 0.12226132717554221], 'false,false': [0.00040074319802829717, 0.12395045919350062], 'false,false,false': [0.11805885909948113, 0.1609559096844085], 'true': [0.00719848319431556, 0.0], 'true,true': [4.034050030066183e-05, 0.007611009738078119], 'true,false': [nan, 0.0]}
{'': [0.11013218363835271, 0.12687023015100637], 'false': [3.776293491408733e-05, 0.13004505161881486], 'false,false': [0.13004505161881486, nan], 'true': [0.09905640183498934, 0.005396712904714526], 'true,true': [0.00426744112595627, 0.1303691243251001], 'true,true,false': [0.186955091818795, 0.10292977660148618], 'true,true,true': [0.004531051300327441, 0.0]}
{'': [0.039002214556900575, 0.10746937036182988], 'false': [0.1058968989072503, 0.13385251687562666], 'false,false': [0.0, 0.1394301665196487], 'false,false,false': [0.1394301665196487, nan], 'false,true': [0.1317655896496998, 0.001141789108219296], 'false,true,true': [nan, 0.13176558964969992], 'true': [-1.586032892321652e-17, 0.06237540458240649], 'false,false,true': [0.0, nan]}
{'': [0.051706001317302686, 0.08793218331809395], 'false': [0.05643262372540088, 0.10904561095835189], 'false,false': [2.4375313696073376e-05, 0.11152974474952455], 'false,false,false': [0.10794224268241831, 0.15982050256527772], 'false,true': [0.06852125515507074, 0.04890202903447181], 'true': [0.00150927457687253, 0.10061372955562022], 'true,false': [0.1836163597423274, 0.002150480637199964], 'false,true,false': [0.022526178753788866, 0.04194554124960302]}
{'': [0.07126169387818619, 0.08276026160643118], 'false': [0.051528761726841434, 0.10491738359570651], 'false,false': [1.8997905815559822e-05, 0.10760290618752417], 'false,false,false': [0.10467854899911531, 0.13350249630453945], 'true': [0.0822630954061005, 0.002686171512374755], 'true,true': [0.047792833046413685, 0.0], 'true,true,true': [0.07427323815203782, 0.0010944976036821412], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 9.536
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, E), interaction(E, E) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return 0.08814893509951185;  // std dev = 4.208, 100.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=23 */
%   | | | else return 0.16625704320762147;  // std dev = 6.280, 185.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.739708069394414;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, E) )
%   | | then return 0.7354222815044533;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4764510425268603;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.2194734122109545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6939596697895688;  // std dev = 3.321, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.15874316356811802;  // std dev = 0.117, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.24707622174014107;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.061213848118753064;  // std dev = 1.244, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.35827589142110167;  // std dev = 0.380, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.5874171235577008;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.043309403928237906;  // std dev = 4.319, 140.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=31 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6063711245030786;  // std dev = 2.313, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.14082267961885414;  // std dev = 0.035, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.5741733625235225;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.39329673791020703;  // std dev = 0.734, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.17311831256962884;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.361933260244377;  // std dev = 0.277, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.04723255448741062;  // std dev = 0.597, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F), phenotype(A, G) )
%   | | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.4051923696531758;  // std dev = 3.282, 72.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=51 */
%   | | | else return -0.13267767370417874;  // std dev = 0.113, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.1526840605453284;  // std dev = 1.930, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.005535894216103674;  // std dev = 2.947, 105.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=21 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4573739489595413;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.14451370741342254;  // std dev = 0.718, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.016347600277067588;  // std dev = 1.399, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.39385052630158385;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.12392936160094924;  // std dev = 1.174, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.36801110535361525;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, G), enzyme(A, H) )
%   | | | then return -0.21519700320237892;  // std dev = 0.969, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.0456834386328232;  // std dev = 2.783, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | else return 0.07624225140303219;  // std dev = 0.325, 203.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=64 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3478976878033402;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.49237930293825716;  // std dev = 0.759, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.025974366922385722;  // std dev = 0.801, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.21295534299581137;  // std dev = 0.317, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.27583309091740565;  // std dev = 0.722, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3932450364640142;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2736482812259471;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.08385440260048137;  // std dev = 1.176, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.03528673622453683;  // std dev = 2.008, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.04349556577899574;  // std dev = 1.069, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.14285355707832645;  // std dev = 1.435, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0.03238290041953406;  // std dev = 0.322, 241.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=69 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.22451199980011166;  // std dev = 0.252, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( interaction(E, A), interaction(E, E) )
%   | | | then return 0.2636681876348308;  // std dev = 1.873, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.5168651546426178;  // std dev = 0.488, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.17267537414320341;  // std dev = 0.068, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.27574675535945914;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5602624861126709;  // std dev = 0.187, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.15369173895962143;  // std dev = 0.218, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.034219395121374487;  // std dev = 3.190, 94.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | | | else return -0.04382057416481714;  // std dev = 1.526, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.20597109437840122;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.25301160111896615;  // std dev = 1.041, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.14928923931622495;  // std dev = 0.277, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.14137453131047972;  // std dev = 2.067, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | | | else return 0.37194005507040473;  // std dev = 2.598, 72.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=63 */
%   | | else return -0.13673478349819349;  // std dev = 0.030, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.18628218357089654;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.011365898646867907;  // std dev = 1.261, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.1534472919903427;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.21108218171914675;  // std dev = 0.068, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12224900545401697;  // std dev = 0.303, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.325556555907644;  // std dev = 0.957, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.07929713112038086;  // std dev = 1.731, 68.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=9 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.019719570055402265;  // std dev = 1.066, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.0731976786248275;  // std dev = 1.226, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.19998676662268827;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.03988028757860275;  // std dev = 2.463, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return -0.005107385899150672;  // std dev = 2.473, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.18578844187354537;  // std dev = 0.055, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.03593368452129292;  // std dev = 0.933, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( location(A, G) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.004944100610426988;  // std dev = 2.503, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return -0.06497577094085609;  // std dev = 0.520, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return 0.1214897766744567;  // std dev = 0.481, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.019372370628626418;  // std dev = 0.829, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return -0.02549518161087135;  // std dev = 1.253, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.04073757592039358;  // std dev = 3.187, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.528', 'seconds']
Refined model CLL: -0.186147


******************************************
Best model found
******************************************
Results 

CLL : -0.165819 

AUC ROC : 0.990476 

AUC PR : 0.373103 

Precision : 0.291498 

Recall : 0.815094 

F1 : 0.429423 

Total Learning Time : 9.536 

Total Inference Time : 29.478113412857056 

Total revision time: 47.971441608428954
Best scored revision CLL: -0.186147


Results 

CLL : -0.165819 

AUC ROC : 0.990476 

AUC PR : 0.373103 

Precision : 0.291498 

Recall : 0.815094 

F1 : 0.429423 

Total Learning Time : 47.98507819747925 

Total Inference Time : 29.478113412857056 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.371
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08672036367094095;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.16159721096158036;  // std dev = 5.536, 145.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1504566274072046;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6171327900556461;  // std dev = 0.932, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8199504983345949;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16051529652394095;  // std dev = 0.051, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( location(A, K) )
%   | | | then return 0.17887748573024528;  // std dev = 3.447, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.1245436120889797;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5809067395790397;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.585161971862008;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0490978404207613;  // std dev = 2.110, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6823625999111819;  // std dev = 0.265, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1419828166704099;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15438094970930918;  // std dev = 3.582, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3195014730924979;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4371732636136945;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.19840491945460015;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38698939480417116;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4071061088461913;  // std dev = 0.645, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.040162069728453154;  // std dev = 4.280, 206.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5169926290580598;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08260222429862428;  // std dev = 3.562, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.08319439907856423;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3451728431439827;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.348583413725592;  // std dev = 0.070, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.03557057062369147;  // std dev = 4.352, 219.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38959952012530996;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.09205399577350783;  // std dev = 3.604, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.7522912487216759;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25998354495303033;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.19437277655879465;  // std dev = 0.699, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3318640602792772;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.301830681695303;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06893156478528312;  // std dev = 1.026, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2795500276896891;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05555483389913491;  // std dev = 4.024, 172.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=49 */
%   | | | else return 0.043772248597891326;  // std dev = 3.758, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24871115704553773;  // std dev = 0.164, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22599992381242445;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.2392231517388545;  // std dev = 0.659, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6443830482612821;  // std dev = 0.729, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18640818147762636;  // std dev = 0.620, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.05755608090351649;  // std dev = 0.929, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06124011590159518;  // std dev = 3.386, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17195218158241463;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2204415042188166;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45096666775335087;  // std dev = 0.765, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1376971148451062;  // std dev = 0.192, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1889698764914488;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06453394258058563;  // std dev = 3.004, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15750721528299005;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.14472402841608556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17957296901341813;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06726794206250451;  // std dev = 0.434, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20866271429179062;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.01713149476249319;  // std dev = 1.250, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1819860128709812;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02139448957937506;  // std dev = 2.778, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else return 0.032920651842820184;  // std dev = 3.025, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13619717478132207;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1499859469527183;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12938260150411418;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.149093048090888;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.005982867156852987;  // std dev = 1.342, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15649123824274294;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02186613858341802;  // std dev = 2.695, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else return -0.02093748089761748;  // std dev = 3.190, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.153', 'seconds']
Parameter learned model CLL:-0.175152 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.484, 27, 8], 'false,false,true,false': [5.536, 101, 44], 'false,false,false,true': [3.667, 46, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.932, 1, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.992, 1, 52], 'false,false,true,false': [0.051, 156, 0], 'false,false,false,true': [3.447, 35, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.026, 0, 6], 'true,false': [0.032, 0, 8], 'false,true,true': [2.11, 29, 8], 'false,true,false,true': [0.265, 0, 48], 'false,true,false,false': [0.0, 104, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.582, 38, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.036, 0, 11], 'true,false': [0.852, 1, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.645, 1, 3], 'false,true,false': [4.28, 154, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.562, 43, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.075, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.07, 0, 9], 'false,true': [4.352, 163, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.604, 41, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.021, 0, 7], 'true,true,false': [0.699, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.026, 23, 3], 'false,false,true': [0.054, 0, 6], 'false,false,false,true': [4.024, 123, 49], 'false,false,false,false': [3.758, 49, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.164, 0, 12], 'true,true,true,false': [0.023, 0, 2], 'true,true,false,true': [0.659, 1, 1], 'true,true,false,false': [0.729, 0, 36], 'true,false': [0.62, 97, 0], 'false,true': [0.929, 1, 5], 'false,false,true': [3.386, 80, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.001, 0, 6], 'true,false': [0.076, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.765, 0, 56], 'false,true,false': [0.192, 136, 0], 'false,false,true,true': [0.02, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.004, 37, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.049, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.03, 0, 4], 'false,true,true': [0.434, 11, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.25, 47, 14], 'false,false,true': [0.04, 0, 5], 'false,false,false,true': [2.778, 85, 36], 'false,false,false,false': [3.025, 42, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.027, 0, 5], 'true,true,true,false': [0.028, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.036, 0, 4], 'false,true': [1.342, 49, 17], 'false,false,true': [0.035, 0, 5], 'false,false,false,true': [2.695, 85, 36], 'false,false,false,false': [3.19, 52, 20]}]
{'': [0.06222222222222188, 0.21231833910034661], 'false': [-1.4802973661668753e-16, 0.20554507185368115], 'false,false': [0.20543209876543284, 0.2058391094307914], 'false,false,false': [0.20686390532544327, 0.18750000000000003], 'false,false,true': [0.17632653061224507, 0.21136741973840742], 'true': [0.08999999999999977, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [0.06143170998773133, 0.19956623230292053], 'false': [7.401486830834377e-17, 0.1958316460769183], 'false,false': [0.18668325309326575, 0.22216155447804134], 'false,false,false': [0.22420504886843956, 0.20408163265306123], 'false,false,true': [0.01858123706316165, 1.6853313945212142e-05], 'true': [0.0, 0.09642533701225295], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.00012907412152664475, 0.16278162083981895], 'false': [0.14276883487892403, 0.22192104765421258], 'false,false': [0.220147365010802, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.22121776583149436], 'false,true': [0.120339955702458, 0.14728998206804644], 'false,true,false': [0.0014661841326012819, -6.832141690000964e-17], 'true': [0.00011625175254244742, 0.00013093075464409853]}
{'': [0.05959541763067001, 0.12058789877044482], 'false': [0.09181731852034432, 0.20579756267659005], 'false,false': [0.0024740200935416123, 0.20755168375644825], 'false,false,false': [0.20794985024360055, 0.20408163265306117], 'false,true': [0.0832027323837917, 0.08890528644033047], 'false,true,true': [0.0, 0.10392247904296997], 'true': [0.0001197235877052288, 0.1813460066556743], 'false,false,true': [0.0, 0.0]}
{'': [0.0007499158105363898, 0.11615058670086069], 'false': [0.08646988292614732, 0.21492114875408638], 'false,false': [0.0011863778716386941, 0.2199083936828496], 'false,false,false': [0.21642741505001387, 0.0], 'false,false,true': [0.0, 0.0], 'true': [0.0011254729738102488, 0.0005371186593038492], 'true,true': [0.0011254729738102488, nan]}
{'': [0.03432162926211758, 0.11743205422789557], 'false': [0.040466170685160646, 0.12400642158093751], 'false,false': [0.00047903248244238195, 0.1258260069748828], 'false,false,false': [0.0941558935251166, 0.20467271551976815], 'true': [0.04184303650525604, 0.0009956276304952105], 'true,true': [6.486595883501265e-05, 0.09782135772816429], 'true,false': [0.0014704087259078125, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1356838606524253, 0.10107625669545853], 'true': [0.07199360124023262, 0.003957428403672592], 'false': [0.14384235243576704, 0.09886354977960511], 'false,false': [0.09886354977960511, nan], 'true,true': [0.0020265187937921836, 0.06433427724054588], 'true,true,false': [0.21729509704458333, 0.0147438267244845], 'true,true,true': [0.0022466179742879253, 0.0002638093265588462]}
{'': [0.0009840375918962, 0.09354209227231212], 'false': [0.07483316173511521, 0.15350137962256627], 'false,false': [0.00020243623412624645, 0.15835539833560025], 'false,false,false': [0.15835539833560025, nan], 'false,true': [0.010454512671408496, 0.00027221129019177844], 'false,true,true': [nan, 0.010454512671408464], 'true': [2.643008544430299e-07, 0.0007142042417187036], 'false,false,true': [0.00020243623412624645, nan]}
{'': [0.0003560632587176006, 0.07224796933233464], 'false': [0.025112155533985374, 0.09037861897166304], 'false,false': [0.0003166235060344302, 0.0921863862916977], 'false,false,false': [0.06377100802396801, 0.14755436286084816], 'false,true': [0.015728133467883137, 0.0263741790736429], 'false,true,false': [0.0, 0.02562039753122814], 'true': [0.00026749439266455296, 0.00036898767478834026], 'true,false': [0.0, 0.00021834486133414516]}
{'': [0.00025957778801449387, 0.07367337327859047], 'false': [0.027282008499571887, 0.08907566710774842], 'false,false': [0.000249447722385962, 0.09080417917829073], 'false,false,false': [0.06004568539869926, 0.14134688325304742], 'true': [0.00020753825146569983, 0.0003164923090745418], 'true,true': [0.00023069302984373222, 0.0], 'true,true,true': [0.00014154432946041906, 0.00026044279840259366], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.179
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, H), complex(H, J) )
%   | | | then return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.05361577078284072;  // std dev = 1.654, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.21431331866115497;  // std dev = 4.091, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | | | else return 0.12765248119880288;  // std dev = 5.269, 141.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8176989753378039;  // std dev = 0.999, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16252479753949403;  // std dev = 0.110, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( location(A, J), enzyme(A, K) )
%   | | | then return 0.39487427455611956;  // std dev = 1.493, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.19283390630166966;  // std dev = 3.123, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13754700166976402;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.1258113132875408;  // std dev = 1.997, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6595728709637215;  // std dev = 1.022, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14159383770720121;  // std dev = 0.082, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10399348021255289;  // std dev = 3.704, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | else return 0.11535269307405645;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3924094951482726;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40474385761814247;  // std dev = 0.629, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.016272001702478577;  // std dev = 1.894, 58.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=9 */
%   | | | else return 0.08323902256270503;  // std dev = 3.685, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5295615262441131;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.0966690314703048;  // std dev = 3.116, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.3437250955245796;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( phenotype(E, G), complex(E, H) )
%   | | | then return 0.0268781988031896;  // std dev = 1.363, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.10228064703109299;  // std dev = 0.000668, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0.13386880024685135;  // std dev = 1.321, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.05336859580994082;  // std dev = 3.729, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(K, L), interaction(L, K) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3986298474322961;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.06770796851967587;  // std dev = 3.634, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.07706429205632918;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.34922063920319346;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2727586888715142;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.10828187511043638;  // std dev = 0.032, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.02603793521474838;  // std dev = 0.491, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11695338868374214;  // std dev = 0.672, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.13644849332309938;  // std dev = 3.344, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | | | else return 0.05729891783946987;  // std dev = 4.121, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4926474662529267;  // std dev = 0.235, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | else return -0.20821622936609047;  // std dev = 0.070, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(E, G), enzyme(F, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.06895705423009148;  // std dev = 0.848, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3310557458850477;  // std dev = 0.562, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(E, J), location(F, J) )
%   | | | then return 0.03525662838619548;  // std dev = 2.679, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | | | else return -0.05583049146020597;  // std dev = 0.960, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.4941059408248599;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14699126259062642;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.04009253771510527;  // std dev = 0.291, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.13954983477950234;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18334943839777212;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.4052235257252908;  // std dev = 0.488, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.43859841366581875;  // std dev = 0.606, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.11641279825363493;  // std dev = 0.149, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.15215184311083785;  // std dev = 0.199, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.15446297100730977;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.08394991481402266;  // std dev = 2.861, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return -0.060947234715176844;  // std dev = 1.098, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.12563109530378386;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12947257278972785;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.06611681322453815;  // std dev = 0.429, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.0859898062781783;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.2131794349783721;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.01494843892620772;  // std dev = 1.322, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18124690734234677;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.005319717826770974;  // std dev = 3.224, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.03952216137514522;  // std dev = 2.509, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1147095241671909;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.11079610983367547;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.0637394697457062;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0963721780091888;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.05442548719408154;  // std dev = 0.794, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.012289091026926763;  // std dev = 1.119, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.15589184517276966;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.05500206577136764;  // std dev = 2.319, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.01073812452649999;  // std dev = 3.268, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.462', 'seconds']
Refined model CLL: -0.183725


******************************************
Best model found
******************************************
Results 

CLL : -0.194135 

AUC ROC : 0.98259 

AUC PR : 0.226741 

Precision : 0.135981 

Recall : 0.815884 

F1 : 0.23311 

Total Learning Time : 3.179 

Total Inference Time : 2.749436855316162 

Total revision time: 10.06480531692505
Best scored revision CLL: -0.175152


Results 

CLL : -0.194135 

AUC ROC : 0.98259 

AUC PR : 0.226741 

Precision : 0.135981 

Recall : 0.815884 

F1 : 0.23311 

Total Learning Time : 10.078441905975343 

Total Inference Time : 2.749436855316162 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.546
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.05511863206920934;  // std dev = 3.231, 66.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | | | else return 0.15360348055405723;  // std dev = 5.242, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.058148935099512224;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5184061011112954;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7398727907934263;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8049504517331444;  // std dev = 1.375, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15692171219323103;  // std dev = 0.073, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1881127384123264;  // std dev = 2.686, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.35092203251355425;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5739836562006926;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.43908739065837954;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.030735622382687344;  // std dev = 2.828, 72.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6034533312912259;  // std dev = 1.906, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.141447618586439;  // std dev = 8.16e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6793839899517122;  // std dev = 0.167, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05855496447060387;  // std dev = 2.534, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.147803011021792;  // std dev = 1.421, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4574990570528172;  // std dev = 0.209, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5427063536441812;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4821974466561402;  // std dev = 0.850, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.078464463390001;  // std dev = 4.255, 168.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.44339230886533487;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5357944899801849;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07180734281623997;  // std dev = 2.809, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return -0.08103518237122834;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31301742453447695;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4034295734708831;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.05170421078811082;  // std dev = 4.487, 203.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.33831817275072074;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04820380282673716;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.12446866440661583;  // std dev = 2.420, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.12412287863412755;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.24795946272745223;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.39151924399678506;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return -0.1498771525137652;  // std dev = 0.590, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3596083979889621;  // std dev = 0.045, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.062167270661800375;  // std dev = 1.296, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15849513416121158;  // std dev = 0.889, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.048023550589643395;  // std dev = 4.137, 164.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=46 */
%   | | | else return 0.06229636415669182;  // std dev = 3.031, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23501805380627333;  // std dev = 0.171, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2870845857945808;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.27392598017476416;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5809152367040058;  // std dev = 1.096, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17511402461973874;  // std dev = 0.470, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.04909728913186562;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08103691348101008;  // std dev = 3.288, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16727002577122962;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.24754394608139055;  // std dev = 0.116, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.415065718037635;  // std dev = 1.775, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14081383908271006;  // std dev = 0.227, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2322035398282902;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.034911208334149915;  // std dev = 2.456, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1573506996731895;  // std dev = 0.077, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18773870845754237;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.006313502182671349;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09912124304078979;  // std dev = 0.320, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.26588141238758783;  // std dev = 0.171, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.012377646169477426;  // std dev = 1.479, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2449669219542859;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02048240438139613;  // std dev = 2.885, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | | else return -0.02282345112482818;  // std dev = 2.564, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12678149463179855;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1574232040009348;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.14826145713599626;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1658139119119585;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18270299083495198;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01987119155358772;  // std dev = 1.648, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2025490731382272;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.060246280603802;  // std dev = 2.631, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | | | else return 0.05867611888631983;  // std dev = 2.401, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.722', 'seconds']
Parameter learned model CLL:-0.180601 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.231, 53, 13], 'false,false,true,false': [5.242, 93, 39], 'false,false,false,true': [2.572, 25, 9], 'false,false,false,false': [1.549, 12, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.245, 2, 7], 'false,true,true': [0.062, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.375, 2, 52], 'false,false,true,false': [0.073, 138, 0], 'false,false,false,true': [2.686, 21, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.111, 0, 11], 'true,false': [0.87, 1, 4], 'false,true,true': [2.828, 58, 14], 'false,true,false,true': [1.906, 4, 42], 'false,true,false,false': [8.16e-08, 82, 0], 'false,false,true,true': [0.167, 0, 3], 'false,false,true,false': [2.534, 27, 9], 'false,false,false,true': [1.421, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.209, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.85, 1, 6], 'false,true,false': [4.255, 119, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.809, 30, 11], 'false,false,false,false': [0.926, 6, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.042, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.082, 0, 6], 'false,true': [4.487, 147, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.791, 1, 2], 'false,false,false,true': [2.42, 18, 9], 'false,false,false,false': [1.415, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.02, 0, 9], 'true,true,false': [0.049, 0, 4], 'true,false,true,true': [0.59, 1, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.045, 0, 2], 'false,true': [1.296, 31, 5], 'false,false,true': [0.889, 1, 5], 'false,false,false,true': [4.137, 118, 46], 'false,false,false,false': [3.031, 34, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.171, 0, 13], 'true,true,true,false': [0.042, 0, 3], 'true,true,false,true': [0.029, 0, 3], 'true,true,false,false': [1.096, 1, 33], 'true,false': [0.47, 115, 0], 'false,true': [0.883, 1, 3], 'false,false,true': [3.288, 64, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.116, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.775, 3, 56], 'false,true,false': [0.227, 143, 0], 'false,false,true,true': [0.036, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.456, 29, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.077, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.921, 1, 5], 'false,true,true': [0.32, 25, 1], 'false,true,false,true': [0.171, 0, 6], 'false,true,false,false': [1.479, 49, 17], 'false,false,true': [0.02, 0, 3], 'false,false,false,true': [2.885, 74, 31], 'false,false,false,false': [2.564, 39, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.83, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.007, 0, 2], 'true,false': [0.033, 0, 3], 'false,true': [1.648, 80, 24], 'false,false,true': [0.018, 0, 3], 'false,false,false,true': [2.631, 57, 31], 'false,false,false,false': [2.401, 25, 12]}]
{'': [0.05859374999999978, 0.20090734332948906], 'false': [0.10937499999999978, 0.19197167631005385], 'false,false': [0.19365370880522478, 0.18492294877134477], 'false,false,true': [0.15817263544536217, 0.20816115702479385], 'false,false,false': [0.19463667820069216, 0.15999999999999986], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [0.18750000000000006, 1.4802973661668753e-16], 'true': [-1.4802973661668753e-16, 0.18750000000000006]}
{'': [0.10124926796433605, 0.2074327732292], 'false': [0.0005548461954012802, 0.20252852470053756], 'false,false': [0.1969011089514392, 0.2283002679368286], 'false,false,false': [0.2253848072566602, 0.25], 'false,false,true': [0.03500843082863572, 3.846348123553115e-05], 'true': [1.1102230246251565e-16, 0.17222364616345162], 'false,true': [0.0005548461954012802, nan]}
{'': [0.052038624292874036, 0.15309894564308088], 'false': [0.14201756143465155, 0.1988730246567555], 'false,false': [0.19270471755204757, 0.22420356894678978], 'false,false,false': [0.22420356894678978, nan], 'false,false,true': [0.009322816526824354, 0.17833818272365035], 'false,true': [0.11107962561555661, 0.1561357918604444], 'false,true,false': [0.07899646166037153, 8.12358310701334e-17], 'true': [0.0011279144771500443, 0.15153174669809932]}
{'': [0.002915983757167388, 0.13016249091317386], 'false': [0.11433174367092157, 0.18439593876652466], 'false,false': [0.0018973695721736423, 0.18519333173612362], 'false,false,false': [0.1924989932993092, 0.12244897959183669], 'false,true': [0.09065481839422004, 0.10776990310281079], 'false,true,true': [0.0, 0.10314784075814044], 'true': [0.002915983757167388, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.002531244949554553, 0.11873965952055962], 'false': [0.09917992355754361, 0.21363691527345802], 'false,false': [0.17234357054546937, 0.21822373256713734], 'false,false,false': [0.21684992193439806, 0.22234507478950555], 'false,false,true': [0.0, 0.20874984048486164], 'true': [0.0001949277647984212, 0.0011311067215093822], 'true,true': [0.0001949277647984212, nan]}
{'': [0.04568258734190118, 0.11521504840860826], 'false': [0.046670443195837207, 0.12461487502782971], 'false,false': [0.13178121124440462, 0.12409552891792154], 'false,false,false': [0.10436588970369134, 0.1913475401044307], 'true': [0.004606490013793174, 0.15236275052921763], 'true,false': [0.1739140212930523, 0.0010237166798494068], 'true,false,true': [0.1739140212930523, nan], 'true,true': [4.3867200871313315e-05, 0.000604337713414338]}
{'': [0.10435711327449243, 0.11709665581093746], 'false': [0.1947655787937221, 0.11378516760779686], 'false,false': [0.11378516760779686, nan], 'true': [0.04870777765951975, 0.0019222362962227496], 'true,true': [0.002346074003313922, 0.039511513515998783], 'true,true,false': [0.0002795611414014761, 0.03533188040303692], 'true,true,true': [0.002245111660403523, 0.000580951939711379]}
{'': [0.0024997507704067243, 0.09055485494521696], 'false': [0.07975148515787663, 0.13956166758144598], 'false,false': [0.00043729978487188254, 0.14708757227600328], 'false,false,false': [0.14708757227600328, nan], 'false,true': [0.05342874352580609, 0.0003588336565232275], 'false,true,true': [nan, 0.053428743525806], 'true': [-3.469446951953614e-18, 0.00191986091001559], 'false,false,true': [0.00043729978487188254, nan]}
{'': [0.05574641041285036, 0.07066645292281507], 'false': [0.030377068791249167, 0.09517416439017884], 'false,false': [0.00013500912603887452, 0.09592731026148558], 'false,false,false': [0.07928912460645003, 0.12892011185095933], 'true': [0.0005899965436544253, 0.12533255680705535], 'true,false': [0.0, 0.1415191583503437], 'false,true': [0.003945544780544709, 0.03671555811384025], 'false,true,false': [0.0048611549254880355, 0.033159070976722944]}
{'': [0.05437606372205678, 0.06834934680290804], 'false': [0.02609985493876539, 0.09958897441184034], 'false,false': [0.00010255771876257573, 0.10149893178036405], 'false,false,false': [0.07868517190725469, 0.15575694934497894], 'true': [0.06382451180894606, 0.00037068163194761694], 'true,true': [0.07858231800434096, 8.54244878873885e-05], 'true,true,true': [0.0, 0.2293916673068821], 'true,true,false': [0.0, 2.544050894368044e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.399
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( location(A, H), interaction(A, I) )
%   | | | then return 0.10033643509951119;  // std dev = 4.847, 128.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=31 */
%   | | | else return 0.19835512066652142;  // std dev = 4.666, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8003610308540046;  // std dev = 1.386, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1576012587293364;  // std dev = 0.159, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.10184657844693404;  // std dev = 2.437, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.28993523389518594;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4928664367462846;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.07798183910182167;  // std dev = 0.653, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.06717046909108275;  // std dev = 2.621, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6444748890546119;  // std dev = 1.374, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1410824205904654;  // std dev = 0.057, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6872978801216615;  // std dev = 0.958, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1815453476884721;  // std dev = 0.061, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.2829617248315925;  // std dev = 1.463, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.4749968576971269;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.43278710319860436;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5745303952153383;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.45517011112381106;  // std dev = 1.001, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, G), interaction(A, H) )
%   | | | then return 0.0024548288299277308;  // std dev = 2.496, 90.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | | | else return 0.07046148934433615;  // std dev = 3.518, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.547212906033203;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4464758113711179;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.21031163081357768;  // std dev = 1.122, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.009200349027161187;  // std dev = 2.495, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33108632205311395;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5551027708977957;  // std dev = 0.301, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.1459549467768878;  // std dev = 0.372, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.10021289040534634;  // std dev = 2.838, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
%   | | | else return 0.05276716460254458;  // std dev = 2.247, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.4114929598160768;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.37595952018593876;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.31355595445734524;  // std dev = 1.333, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.022673282090742593;  // std dev = 2.214, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2871375426562976;  // std dev = 0.040, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.012571417029849031;  // std dev = 0.588, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1434889278818157;  // std dev = 0.902, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(H, A), complex(D, I) )
%   | | | then return -0.10478592140771864;  // std dev = 0.047, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.037529778348396915;  // std dev = 1.842, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( complex(A, L), complex(J, L) )
%   | | | then return -0.0024677107777118876;  // std dev = 0.893, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.23064011275159493;  // std dev = 1.733, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | else if ( location(A, M) )
%   | | | then return 0.06814887756897767;  // std dev = 3.483, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | | else return 0.1704298375750051;  // std dev = 0.981, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2324804247637353;  // std dev = 0.035, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.25079853741639774;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5062351847457899;  // std dev = 1.126, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.16409629144634763;  // std dev = 0.102, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.24926968809553518;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6102075009967801;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17857590872369986;  // std dev = 0.039, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.02077081811175753;  // std dev = 1.714, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.05585077749688434;  // std dev = 1.938, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.174512150208176;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.13625350818906812;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20517471717276498;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.320909107329225;  // std dev = 0.296, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.429679597786162;  // std dev = 1.025, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.13751472484889654;  // std dev = 0.029, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20407854037078885;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.0018070317312201154;  // std dev = 1.728, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.16938328533004926;  // std dev = 1.218, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.15078052926480057;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.09951545609369272;  // std dev = 0.640, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.17590352773537354;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.07675018967100462;  // std dev = 0.848, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.060246197016314756;  // std dev = 0.526, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.006609632061207791;  // std dev = 0.183, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.21498793617302508;  // std dev = 1.116, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return -0.009193427010578337;  // std dev = 1.975, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return 0.00567308810734518;  // std dev = 2.627, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.141041888804568;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.14631044739864837;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15757111039561403;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(H, I), complex(H, J) )
%   | | | then return -0.03871127313748562;  // std dev = 1.135, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | | else return -8.793940253898346E-6;  // std dev = 1.085, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else return -0.08314210314765966;  // std dev = 0.299, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.22773625252021545;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.05472894008686913;  // std dev = 1.680, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.011152452107053255;  // std dev = 2.734, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.941', 'seconds']
Refined model CLL: -0.17275


******************************************
Best model found
******************************************
Results 

CLL : -0.185395 

AUC ROC : 0.987712 

AUC PR : 0.273846 

Precision : 0.171927 

Recall : 0.904594 

F1 : 0.288939 

Total Learning Time : 3.399 

Total Inference Time : 3.583418607711792 

Total revision time: 11.583894557952881
Best scored revision CLL: -0.17275


Results 

CLL : -0.185395 

AUC ROC : 0.987712 

AUC PR : 0.273846 

Precision : 0.171927 

Recall : 0.904594 

F1 : 0.288939 

Total Learning Time : 11.597531147003174 

Total Inference Time : 3.583418607711792 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.139
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18037115732173445;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16807726965131756;  // std dev = 5.416, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | | else return 0.18433743225294355;  // std dev = 5.288, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15243827079898176;  // std dev = 4.794, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.1555636850342287;  // std dev = 5.829, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13051330164443578;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.1136381346084952;  // std dev = 6.699, 203.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09173169013000378;  // std dev = 7.645, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07841998969715229;  // std dev = 7.624, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7308052420662383;  // std dev = 0.000354, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2691938715841969;  // std dev = 0.000530, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05777441970774788;  // std dev = 4.027, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | | else return 0.05967093894967104;  // std dev = 4.333, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04245200682054198;  // std dev = 3.798, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return 0.029763611245303113;  // std dev = 5.990, 168.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03965227779656003;  // std dev = 7.006, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04027750336305935;  // std dev = 6.940, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.585', 'seconds']
Parameter learned model CLL:-0.331863 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.416, 88, 44], 'false,false,false,false': [5.288, 80, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.794, 67, 35], 'false,false,false,false': [5.829, 98, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.62, 38, 20], 'false,false,false,false': [6.699, 136, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.645, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.624, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.000354, 0, 35], 'true,false': [0.00053, 78, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.027, 50, 24], 'false,false,false,false': [4.333, 57, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.798, 70, 35], 'false,false,false,false': [5.99, 116, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.006, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.94, 171, 87]}]
{'': [nan, 0.2183950617283959], 'false': [nan, 0.21839506172839596], 'false,false': [nan, 0.2183950617283959], 'false,false,false': [nan, 0.21839506172839596]}
{'': [nan, 0.22477508650518968], 'false': [nan, 0.2247750865051899], 'false,false': [nan, 0.22477508650518968], 'false,false,false': [0.2222222222222217, 0.2273778835349324]}
{'': [nan, 0.2260052183801804], 'false': [nan, 0.2260052183801804], 'false,false': [nan, 0.22600521838017926], 'false,false,false': [0.2252989511152718, 0.22648152631935417]}
{'': [nan, 0.2221942233429126], 'false': [nan, 0.2221942233429126], 'false,false': [nan, 0.22219422334291355], 'false,false,false': [0.2259215219976213, 0.2210659983673639]}
{'': [nan, 0.22053341347148692], 'false': [nan, 0.22053341347148692], 'false,false': [nan, 0.22053341347148683], 'false,false,false': [nan, 0.22053341347148683]}
{'': [nan, 0.22188114225557662], 'false': [nan, 0.22188114225557662], 'false,false': [nan, 0.22188114225557698], 'false,false,false': [nan, 0.22188114225557634]}
{'': [0.2137986691546294, 0.22008068611553844], 'false': [nan, 0.22008068611553844], 'false,false': [nan, 0.22008068611553844], 'false,false,false': [0.21913805697589497, 0.2208996539792383], 'true': [3.584763419439696e-09, 3.5992978170567698e-09], 'true,true': [nan, 3.584763419439696e-09], 'true,true,false': [nan, 3.584763419439696e-09]}
{'': [nan, 0.1843095938225382], 'false': [nan, 0.1843095938225382], 'false,false': [nan, 0.18430959382253786], 'false,false,false': [0.13735451299454127, 0.21359459803916123]}
{'': [nan, 0.1859428614010222], 'false': [nan, 0.18594286140102156], 'false,false': [nan, 0.18594286140102156], 'false,false,false': [nan, 0.18594286140102156]}
{'': [nan, 0.18666509984881152], 'false': [nan, 0.18666509984881152], 'false,false': [nan, 0.18666509984881222], 'false,false,false': [nan, 0.18666509984881222]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.99
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( enzyme(C, F) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(E, C), interaction(A, C) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2867203636709409;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( complex(C, G) )
%   | | then return 0.1237739350995109;  // std dev = 0.442, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
%   | | else return 0.21814893509951236;  // std dev = 0.480, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.224815601766179;  // std dev = 3.733, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( location(C, E) )
%   | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.6790775425847949;  // std dev = 0.319, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(A, G), interaction(G, C) )
%   | | | then return -0.17193745045397935;  // std dev = 0.166, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.13489706367561916;  // std dev = 3.232, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else return 0.45946881352139474;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.8152304770523898;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( complex(J, K), interaction(A, L) )
%   | | | then return 0.42868970534884115;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.23690017108526862;  // std dev = 2.987, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | else if ( location(A, M) )
%   | | | then return 0.1658391261276672;  // std dev = 4.989, 113.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=38 */
%   | | | else return 0.010339611563710598;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(C, D), interaction(A, C) )
%   | then return 0.04810905398780877;  // std dev = 0.403, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( enzyme(A, E), location(A, F) )
%   | | then if ( location(C, F), complex(C, G) )
%   | | | then return 0.2175348001170881;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7623575539172033;  // std dev = 0.223, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), location(C, I) )
%   | | | then return 0.40931516517487043;  // std dev = 1.315, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.056384269938074064;  // std dev = 1.871, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   else if ( interaction(A, J), interaction(J, J) )
%   | then return 0.04202995488238165;  // std dev = 0.420, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.7240415945754095;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.10474585648223932;  // std dev = 5.606, 152.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=46 */
%   | | | else return 0.18717512021514343;  // std dev = 2.069, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( phenotype(A, E), interaction(C, C) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then return 0.056641453664800716;  // std dev = 0.449, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.12037474837072361;  // std dev = 0.420, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(C, C) )
%   | | then return 0.21866665945954475;  // std dev = 0.439, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.017374034227694637;  // std dev = 2.595, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.08337025867486271;  // std dev = 2.768, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   else if ( interaction(A, I), phenotype(A, J) )
%   | then return 0.06685091956258554;  // std dev = 0.430, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.5900045468035583;  // std dev = 0.197, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.2599307094920621;  // std dev = 1.652, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.10585998597317314;  // std dev = 4.465, 92.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6479181321107671;  // std dev = 0.237, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(A, C) )
%   | | then return -0.20925285440577931;  // std dev = 0.158, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(F, C), complex(F, G) )
%   | | | then return 0.07669184913873318;  // std dev = 4.932, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
%   | | | else return 0.3173090228496302;  // std dev = 1.279, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4237191273820332;  // std dev = 0.219, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), location(I, J) )
%   | | then if ( location(A, J), enzyme(I, K) )
%   | | | then return -0.26823536388796926;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0434457247874003;  // std dev = 2.353, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.03670921352616135;  // std dev = 1.989, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.07236267690940687;  // std dev = 3.120, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.7008704683494179;  // std dev = 0.108, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.2619729981691446;  // std dev = 0.287, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5135228430791313;  // std dev = 0.183, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, F), enzyme(F, I) )
%   | | | then return -0.1882414752187175;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.1190615161443698;  // std dev = 4.736, 107.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=41 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.32372878811147876;  // std dev = 0.195, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15344193822002689;  // std dev = 0.954, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return -0.07247223965966394;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.05776803581043483;  // std dev = 3.748, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.17935462341921596;  // std dev = 0.881, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.5727468450426554;  // std dev = 0.209, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.6783975497208248;  // std dev = 0.412, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.22675345463029614;  // std dev = 0.329, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3164747582369842;  // std dev = 0.304, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.30812415586518116;  // std dev = 1.124, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.040153460778337126;  // std dev = 3.376, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.31793467752226034;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.07256841485075803;  // std dev = 3.692, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2760138248757775;  // std dev = 0.095, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( enzyme(D, G), interaction(F, F) )
%   | | | then return -0.1917163967042412;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.13717950106592994;  // std dev = 0.986, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1559812110432591;  // std dev = 0.073, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.017173805523230026;  // std dev = 1.801, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4828778853284294;  // std dev = 0.417, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1926570343877327;  // std dev = 0.152, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.005371304436587017;  // std dev = 5.661, 171.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=51 */
%   | | | else return -0.17672302475135634;  // std dev = 0.913, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.27814422433233754;  // std dev = 0.089, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.38520375807975143;  // std dev = 0.232, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.4931230365822966;  // std dev = 0.341, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.16496555770922372;  // std dev = 0.286, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.1655175763156456;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.16243214505272954;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.37443224105684125;  // std dev = 0.963, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.08036053325150111;  // std dev = 4.775, 101.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=37 */
%   | | else return 0.5196139968267426;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.12731471992008264;  // std dev = 0.257, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then return -0.08263559058229994;  // std dev = 0.259, 78.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=15 */
%   | | else return -0.014343414569273292;  // std dev = 0.363, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( enzyme(H, J), interaction(A, K) )
%   | | then return -0.05882240602078126;  // std dev = 0.267, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 0.23857907808817733;  // std dev = 1.626, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.055550970584652;  // std dev = 3.213, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | else if ( enzyme(A, N), phenotype(A, P) )
%   | | then return 0.0773725388518829;  // std dev = 0.538, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, Q) )
%   | | | then return -0.13742702202776427;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.06565324902342974;  // std dev = 1.476, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.681', 'seconds']
Refined model CLL: -0.28804


******************************************
Best model found
******************************************
Results 

CLL : -0.291821 

AUC ROC : 0.863091 

AUC PR : 0.222095 

Precision : 0.224756 

Recall : 0.489362 

F1 : 0.308036 

Total Learning Time : 8.99 

Total Inference Time : 5.017611265182495 

Total revision time: 16.827473930358888
Best scored revision CLL: -0.28804


Results 

CLL : -0.291821 

AUC ROC : 0.863091 

AUC PR : 0.222095 

Precision : 0.224756 

Recall : 0.489362 

F1 : 0.308036 

Total Learning Time : 16.85632949256897 

Total Inference Time : 5.017611265182495 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.172
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284613;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.189369874793191;  // std dev = 5.786, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
%   | | | else return 0.15222389613952284;  // std dev = 5.951, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16971888560869766;  // std dev = 5.111, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
%   | | | else return 0.153118475667417;  // std dev = 6.428, 183.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12659858805936264;  // std dev = 4.344, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return 0.14986756907546228;  // std dev = 6.896, 205.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09660721233215075;  // std dev = 8.285, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0720391004108857;  // std dev = 8.324, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7227686326518078;  // std dev = 0.008, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27714252415602075;  // std dev = 0.011, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05885054459397524;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.022149822682735316;  // std dev = 5.314, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0338474682216885;  // std dev = 4.107, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.04788776779990658;  // std dev = 6.499, 191.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06485648876316795;  // std dev = 7.490, 285.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029044694289309975;  // std dev = 7.616, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.125', 'seconds']
Parameter learned model CLL:-0.343214 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.786, 94, 52], 'false,false,false,false': [5.951, 111, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.111, 72, 41], 'false,false,false,false': [6.428, 120, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.344, 54, 29], 'false,false,false,false': [6.896, 130, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.285, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.324, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.008, 0, 41], 'true,false': [0.011, 77, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.901, 45, 23], 'false,false,false,false': [5.314, 96, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.107, 83, 41], 'false,false,false,false': [6.499, 128, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.49, 181, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.616, 202, 104]}]
{'': [nan, 0.22222222222222426], 'false': [nan, 0.22222222222222285], 'false,false': [nan, 0.22222222222222426], 'false,false,false': [nan, 0.22222222222222285]}
{'': [nan, 0.22329049758590547], 'false': [nan, 0.22329049758590694], 'false,false': [nan, 0.22329049758590547], 'false,false,false': [0.22931131544379715, 0.21724566223794534]}
{'': [nan, 0.22789819925352645], 'false': [nan, 0.22789819925352645], 'false,false': [nan, 0.2278981992535294], 'false,false,false': [0.23119446806200658, 0.22575759620760455]}
{'': [nan, 0.23075657875993047], 'false': [nan, 0.23075657875993047], 'false,false': [nan, 0.23075657875993144], 'false,false,false': [0.22731891421106193, 0.23199237209624596]}
{'': [nan, 0.22433392655665993], 'false': [nan, 0.22433392655665993], 'false,false': [nan, 0.22433392655665793], 'false,false,false': [nan, 0.22433392655665793]}
{'': [nan, 0.22207224011437526], 'false': [nan, 0.22207224011437526], 'false,false': [nan, 0.22207224011437512], 'false,false,false': [nan, 0.2220722401143755]}
{'': [0.226692197378216, 0.213318351806047], 'true': [1.596490196064684e-06, 1.690894950556022e-06], 'false': [nan, 0.213318351806047], 'false,false': [nan, 0.213318351806047], 'false,false,false': [0.22383217993079574, 0.20761245674740514], 'true,true': [nan, 1.596490196064684e-06], 'true,true,false': [nan, 1.596490196064684e-06]}
{'': [nan, 0.18769637596332983], 'false': [nan, 0.18769637596332983], 'false,false': [nan, 0.18769637596332947], 'false,false,false': [0.13602433890609364, 0.2211650195309451]}
{'': [nan, 0.19682883019363767], 'false': [nan, 0.19682883019363828], 'false,false': [nan, 0.19682883019363828], 'false,false,false': [nan, 0.19682883019363828]}
{'': [nan, 0.18956798548872564], 'false': [nan, 0.18956798548872564], 'false,false': [nan, 0.18956798548872505], 'false,false,false': [nan, 0.18956798548872505]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.678
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.13153023006354234;  // std dev = 7.431, 278.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=76 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7384298198969819;  // std dev = 0.133, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(C, E) )
%   | | then return 0.08756015963533821;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7443356231566908;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( complex(H, G), interaction(H, H) )
%   | | | then return -0.13374055511866362;  // std dev = 0.057, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.06359391733274172;  // std dev = 4.137, 99.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=22 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.10803457273991399;  // std dev = 3.922, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | | | else return 0.21181305275447143;  // std dev = 4.813, 99.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then return 0.40983171116094513;  // std dev = 0.349, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5685312861993685;  // std dev = 0.097, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( location(A, F), interaction(A, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), complex(H, I) )
%   | | | then return 0.8326987500106842;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.46224537284681916;  // std dev = 1.776, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.16698372375416004;  // std dev = 0.130, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0.016328120586093006;  // std dev = 3.198, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5805454870921941;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.17805191222447064;  // std dev = 5.066, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
%   | | | else return 0.08640348942467985;  // std dev = 2.562, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.4766504781789047;  // std dev = 0.346, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return -0.0017770054061599415;  // std dev = 0.336, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   else if ( phenotype(A, F), interaction(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return 0.012922501692876297;  // std dev = 0.218, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( phenotype(G, F), location(G, H) )
%   | | | then return 0.16502244265511049;  // std dev = 1.942, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.28740504520515797;  // std dev = 1.541, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.32017822852133504;  // std dev = 0.990, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.08714245439884079;  // std dev = 5.845, 172.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=50 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.009403916050006008;  // std dev = 1.351, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.11913654484914557;  // std dev = 1.250, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.4614771625873068;  // std dev = 0.256, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, F), enzyme(F, D) )
%   | | then return -0.10637074752565831;  // std dev = 0.304, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( phenotype(A, G), interaction(H, C) )
%   | | | then return 0.16405912074337645;  // std dev = 2.864, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.054182406867413185;  // std dev = 2.710, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.3142156946628637;  // std dev = 0.291, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( enzyme(J, L), interaction(M, A) )
%   | | | then return -0.10304501864435324;  // std dev = 1.349, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.013720329087808307;  // std dev = 3.096, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.07385314688615133;  // std dev = 4.758, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
%   | | | else return 0.23018308499194992;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(D, A), location(E, C) )
%   | | then return 0.5017097933965415;  // std dev = 0.206, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else if ( interaction(E, D) )
%   | | | then return -0.33942789255853767;  // std dev = 0.371, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.29758855945323687;  // std dev = 0.586, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.06220070685828189;  // std dev = 0.301, 122.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=17 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.72992998538658;  // std dev = 0.117, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.22973524548441668;  // std dev = 0.083, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.31658934434575;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.2715534987007997;  // std dev = 1.006, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05721209270756209;  // std dev = 4.601, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4888333839898255;  // std dev = 0.193, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.18268778680841066;  // std dev = 0.055, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then return 0.022140337166699133;  // std dev = 0.313, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.35263154739403496;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.25975769523417797;  // std dev = 0.154, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5670025961775672;  // std dev = 1.256, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.2154087508395982;  // std dev = 0.189, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return 0.010919364386965044;  // std dev = 1.130, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.10025657411976725;  // std dev = 4.164, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then return 0.1998741438937889;  // std dev = 0.297, 59.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=40 */
%   | else return -0.16424543717685783;  // std dev = 0.083, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, A), phenotype(F, H) )
%   | | then return 0.0790123776351912;  // std dev = 0.219, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(F, I), interaction(I, F) )
%   | | | then return 0.16607011902086657;  // std dev = 1.517, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.4625494490986901;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5321733569152457;  // std dev = 0.444, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.2106655230272417;  // std dev = 0.200, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.21810384141087347;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03151772618444451;  // std dev = 4.398, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.18650460591990634;  // std dev = 0.277, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | else return -0.057311858220611654;  // std dev = 0.271, 102.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=16 */
%   else if ( phenotype(A, F), interaction(G, A) )
%   | then if ( interaction(G, G), enzyme(A, H) )
%   | | then return -0.011082327829251998;  // std dev = 0.240, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( phenotype(G, F), enzyme(G, I) )
%   | | | then return -0.016527709010464107;  // std dev = 1.481, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.15417688295989102;  // std dev = 2.989, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return -0.019414822309807078;  // std dev = 0.846, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.33995150008322933;  // std dev = 0.948, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.016317764904369383;  // std dev = 1.644, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.03457635138587087;  // std dev = 2.530, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.15256919280171233;  // std dev = 1.609, 34.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=28 */
%   | | | else return 0.4240780797663817;  // std dev = 2.680, 72.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=64 */
%   | | else if ( interaction(G, D) )
%   | | | then return -0.20332216200738218;  // std dev = 0.847, 47.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.6296154917095821;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then return -0.1285935299568606;  // std dev = 0.333, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.22797301190909972;  // std dev = 0.075, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(A, J) )
%   | then return 0.2673232527735189;  // std dev = 0.946, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.1301006487879727;  // std dev = 0.620, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.08137261832703495;  // std dev = 0.381, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '59.175', 'seconds']
Refined model CLL: -0.2105


******************************************
Best model found
******************************************
Results 

CLL : -0.222197 

AUC ROC : 0.980943 

AUC PR : 0.374953 

Precision : 0.271318 

Recall : 0.528302 

F1 : 0.358515 

Total Learning Time : 14.678 

Total Inference Time : 15.361331224441528 

Total revision time: 33.19139060974121
Best scored revision CLL: -0.2105


Results 

CLL : -0.222197 

AUC ROC : 0.980943 

AUC PR : 0.374953 

Precision : 0.271318 

Recall : 0.528302 

F1 : 0.358515 

Total Learning Time : 33.220246171951295 

Total Inference Time : 15.361331224441528 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.143
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18908418689807358;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1445141059636143;  // std dev = 5.928, 164.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=51 */
%   | | | else return 0.1668718295408501;  // std dev = 5.228, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12099227430494378;  // std dev = 5.510, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
%   | | | else return 0.18292787972025876;  // std dev = 5.490, 129.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11045128398709458;  // std dev = 4.214, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | | else return 0.10246502729694618;  // std dev = 6.704, 207.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12052598950011167;  // std dev = 7.721, 261.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06421683661205031;  // std dev = 7.922, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7174864365495425;  // std dev = 0.988, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.26028037502881163;  // std dev = 0.014, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09264263203584684;  // std dev = 3.993, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   | | | else return 0.1157283177088433;  // std dev = 3.746, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05339825288769776;  // std dev = 4.294, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.036011911863303644;  // std dev = 5.676, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03602314931715024;  // std dev = 7.104, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0252960539495044;  // std dev = 7.122, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.473', 'seconds']
Parameter learned model CLL:-0.328424 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.928, 113, 51], 'false,false,false,false': [5.228, 82, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.51, 98, 44], 'false,false,false,false': [5.49, 81, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.214, 56, 26], 'false,false,false,false': [6.704, 141, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.721, 169, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.922, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.988, 1, 44], 'true,false': [0.014, 101, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.993, 44, 25], 'false,false,false,false': [3.746, 36, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.294, 87, 44], 'false,false,false,false': [5.676, 98, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.104, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.122, 186, 92]}]
{'': [nan, 0.22141711091558536], 'false': [nan, 0.221417110915585], 'false,false': [nan, 0.22141711091558536], 'false,false,false': [nan, 0.221417110915585]}
{'': [nan, 0.21780038606757907], 'false': [nan, 0.21780038606757385], 'false,false': [nan, 0.21780038606757907], 'false,false,false': [0.2142697798929208, 0.22222222222222213]}
{'': [nan, 0.22423069027578413], 'false': [nan, 0.22423069027578413], 'false,false': [nan, 0.22423069027578452], 'false,false,false': [0.21383295661051932, 0.23366624011612475]}
{'': [nan, 0.21697708821203443], 'false': [nan, 0.21697708821203443], 'false,false': [nan, 0.2169770882120341], 'false,false,false': [0.216537775133849, 0.2171330187836186]}
{'': [nan, 0.22838392058190185], 'false': [nan, 0.22838392058190185], 'false,false': [nan, 0.22838392058190266], 'false,false,false': [nan, 0.22838392058190266]}
{'': [nan, 0.2171421355386486], 'false': [nan, 0.2171421355386486], 'false,false': [nan, 0.21714213553864767], 'false,false,false': [nan, 0.21714213553864867]}
{'': [0.21052815962175714, 0.23431935596303946], 'false': [nan, 0.23431935596303946], 'false,false': [nan, 0.23431935596303946], 'false,false,false': [0.23104389834068484, 0.23786268313703007], 'true': [0.021681009131573444, 1.833927329434403e-06], 'true,true': [nan, 0.021681009131573444], 'true,true,false': [nan, 0.021681009131573444]}
{'': [nan, 0.18295813437164662], 'false': [nan, 0.18295813437164662], 'false,false': [nan, 0.1829581343716488], 'false,false,false': [0.1407790870571378, 0.22066076010182822]}
{'': [nan, 0.1828443379287478], 'false': [nan, 0.18284433792874727], 'false,false': [nan, 0.18284433792874727], 'false,false,false': [nan, 0.18284433792874727]}
{'': [nan, 0.18244754326427295], 'false': [nan, 0.18244754326427295], 'false,false': [nan, 0.1824475432642742], 'false,false,false': [nan, 0.1824475432642742]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 5.889
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, D) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(F, D), phenotype(A, G) )
%   | | | then return 0.2905813675319448;  // std dev = 3.013, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.14386322081379804;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.09814893509951238;  // std dev = 3.699, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | | else return 0.16341209299424903;  // std dev = 4.489, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, C) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(F, C) )
%   | | | then return 0.24470001313997594;  // std dev = 3.651, 55.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=23 */
%   | | | else return 0.8397187297348978;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( phenotype(A, J), phenotype(I, K) )
%   | | | then return 0.01703326584496127;  // std dev = 0.785, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3342672104560167;  // std dev = 1.841, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.3270516921613861;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.11631662081678357;  // std dev = 5.227, 137.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=38 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then return 0.6676018795007688;  // std dev = 0.224, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), complex(A, H) )
%   | | then return 0.4076291269359771;  // std dev = 0.656, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6769642267085674;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1261108119783146;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.03889907606298243;  // std dev = 4.196, 98.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=25 */
%   | | | else return 0.11838480402861834;  // std dev = 5.733, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(C, E), phenotype(C, F) )
%   | then return 0.22908803347322784;  // std dev = 0.459, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else return 0.05313260878243649;  // std dev = 0.400, 154.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=43 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.390667515249484;  // std dev = 1.048, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(G, G) )
%   | | | then return 0.016946929887205038;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1494013360825938;  // std dev = 0.968, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6836053737925852;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2453011408482688;  // std dev = 0.211, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( location(A, L) )
%   | | | then return 0.17166297945301912;  // std dev = 3.708, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.08819735985729589;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4246764637237681;  // std dev = 0.088, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), complex(E, D) )
%   | | then if ( enzyme(E, F), enzyme(A, F) )
%   | | | then return -0.15374118206925122;  // std dev = 0.157, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.003782587900467304;  // std dev = 2.164, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( complex(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6962436883320243;  // std dev = 0.632, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.23340213989626027;  // std dev = 0.311, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( location(A, I) )
%   | | | then return 0.07609243745491198;  // std dev = 3.358, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return 0.23810598007107336;  // std dev = 2.422, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return -0.09648353086863544;  // std dev = 1.281, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.08912264982275021;  // std dev = 2.984, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( phenotype(A, E), interaction(C, F) )
%   | then return -0.031130783207922598;  // std dev = 0.323, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else return 0.05706810050910923;  // std dev = 0.336, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.41078288495710186;  // std dev = 0.252, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.3865773432444974;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13290155728105124;  // std dev = 1.358, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6521405457602533;  // std dev = 0.637, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.2317953594998532;  // std dev = 0.151, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.09292785656000221;  // std dev = 3.239, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.03364159868521819;  // std dev = 3.591, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4885736425806399;  // std dev = 0.169, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.20534157567273106;  // std dev = 0.059, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.27407638002575363;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.1008713629379343;  // std dev = 1.665, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 8.745055330671348E-4;  // std dev = 2.713, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7205517898616479;  // std dev = 0.175, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.24630084930470436;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( location(A, K) )
%   | | | then return 0.06673343626191633;  // std dev = 3.488, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | | | else return -0.033093563638195225;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22780896838508014;  // std dev = 0.081, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.08941310726567275;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1678094795717416;  // std dev = 0.644, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.021937808081432298;  // std dev = 1.693, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.14567895703603967;  // std dev = 0.457, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, A), interaction(A, K) )
%   | | | then return -0.011262667347997328;  // std dev = 0.945, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.24066472099859532;  // std dev = 2.261, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.08726831654046577;  // std dev = 2.963, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | | else return 0.02190382345781949;  // std dev = 3.645, 87.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20623450766857515;  // std dev = 0.074, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D), phenotype(F, G) )
%   | | then if ( phenotype(D, H), interaction(A, I) )
%   | | | then return -0.10673641123397966;  // std dev = 0.738, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.0015793470093469863;  // std dev = 1.710, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( interaction(A, J), complex(D, K) )
%   | | | then return -0.023917239607226606;  // std dev = 1.119, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.09040255637493191;  // std dev = 1.725, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then if ( interaction(N, L), complex(N, P) )
%   | | | then return -0.04480641226940033;  // std dev = 2.530, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return 0.0889284443615491;  // std dev = 1.679, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(A, Q), interaction(Q, Q) )
%   | | | then return 0.02646795142003579;  // std dev = 1.928, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.10832256587840283;  // std dev = 3.539, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1952995775998064;  // std dev = 0.137, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, C) )
%   | | then return -0.10638470531020945;  // std dev = 0.177, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(E, D), phenotype(E, F) )
%   | | | then return 0.037266995376412045;  // std dev = 3.129, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | | else return -0.04453028698538099;  // std dev = 3.050, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   else if ( complex(A, G) )
%   | then return -0.02301725537863657;  // std dev = 0.255, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4037655905922946;  // std dev = 0.906, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.2132595668136497;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.03465514433109904;  // std dev = 1.816, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.08595681222725757;  // std dev = 2.627, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.545', 'seconds']
Refined model CLL: -0.257619


******************************************
Best model found
******************************************
Results 

CLL : -0.269369 

AUC ROC : 0.901075 

AUC PR : 0.220817 

Precision : 0.291284 

Recall : 0.458484 

F1 : 0.356241 

Total Learning Time : 5.889 

Total Inference Time : 2.5456926822662354 

Total revision time: 11.29028218460083
Best scored revision CLL: -0.257619


Results 

CLL : -0.269369 

AUC ROC : 0.901075 

AUC PR : 0.220817 

Precision : 0.291284 

Recall : 0.458484 

F1 : 0.356241 

Total Learning Time : 11.319137746810913 

Total Inference Time : 2.5456926822662354 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.057
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1876508508083251;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17360656053803616;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
%   | | | else return 0.16707061282561972;  // std dev = 4.761, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13414686693306063;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   | | | else return 0.17806649268088287;  // std dev = 6.048, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1384592712884352;  // std dev = 3.509, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.1448508415766108;  // std dev = 6.527, 184.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.100369354986726;  // std dev = 7.514, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037355692870705726;  // std dev = 7.760, 287.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7366168006280679;  // std dev = 6.92e-05, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2633835098351534;  // std dev = 9.87e-05, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06006442652628622;  // std dev = 4.690, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | | | else return 0.04052716147061938;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06732649990389082;  // std dev = 3.338, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.05617286378132929;  // std dev = 6.190, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0363878595510793;  // std dev = 7.088, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015323569973278463;  // std dev = 7.152, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.603', 'seconds']
Parameter learned model CLL:-0.33964 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.594, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.859, 101, 52], 'false,false,false,false': [4.761, 68, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.346, 58, 28], 'false,false,false,false': [6.048, 99, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.509, 35, 19], 'false,false,false,false': [6.527, 117, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.514, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.76, 201, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.92e-05, 0, 28], 'true,false': [9.87e-05, 58, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.69, 66, 33], 'false,false,false,false': [4.146, 55, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.338, 50, 28], 'false,false,false,false': [6.19, 113, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.088, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.152, 185, 86]}]
{'': [nan, 0.22093040325303584], 'false': [nan, 0.22093040325303562], 'false,false': [nan, 0.22093040325303584], 'false,false,false': [nan, 0.22093040325303562]}
{'': [nan, 0.22351403306420847], 'false': [nan, 0.22351403306420725], 'false,false': [nan, 0.22351403306420847], 'false,false,false': [0.22435815284719765, 0.22222222222222132]}
{'': [nan, 0.22869038302844374], 'false': [nan, 0.22869038302844374], 'false,false': [nan, 0.22869038302844313], 'false,false,false': [0.21959094030609916, 0.2329921233116809]}
{'': [nan, 0.2307563431687911], 'false': [nan, 0.2307563431687911], 'false,false': [nan, 0.23075634316879162], 'false,false,false': [0.2280521262002742, 0.23154070308180752]}
{'': [nan, 0.2258214453061953], 'false': [nan, 0.2258214453061953], 'false,false': [nan, 0.22582144530619552], 'false,false,false': [nan, 0.22582144530619552]}
{'': [nan, 0.20982864145803504], 'false': [nan, 0.20982864145803504], 'false,false': [nan, 0.2098286414580346], 'false,false,false': [nan, 0.2098286414580347]}
{'': [0.21957828686241312, 0.21901893203797573], 'true': [1.7113066519414133e-10, 1.6792826133480738e-10], 'false': [nan, 0.21901893203797573], 'false,false': [nan, 0.21901893203797573], 'false,false,false': [0.22222222222222165, 0.21484374999999972], 'true,true': [nan, 1.7113066519414133e-10], 'true,true,false': [nan, 1.7113066519414133e-10]}
{'': [nan, 0.19868234585746308], 'false': [nan, 0.19868234585746308], 'false,false': [nan, 0.19868234585746283], 'false,false,false': [0.14288204010524608, 0.22409614710031414]}
{'': [nan, 0.19470504468770788], 'false': [nan, 0.19470504468770836], 'false,false': [nan, 0.19470504468770836], 'false,false,false': [nan, 0.19470504468770836]}
{'': [nan, 0.18877550038996038], 'false': [nan, 0.18877550038996038], 'false,false': [nan, 0.18877550038996027], 'false,false,false': [nan, 0.18877550038996027]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.388
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( phenotype(A, D) )
%   | | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | | then return 0.7427643197148969;  // std dev = 2.304, 52.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=46 */
%   | | | else return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.17560925255982981;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), enzyme(E, D) )
%   | then return 0.5195881563772333;  // std dev = 0.745, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then if ( complex(A, G), complex(C, G) )
%   | | | then return 0.5252602848027911;  // std dev = 0.751, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23289531304919744;  // std dev = 1.897, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7967576558947064;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16460022226341764;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( phenotype(A, I), complex(A, J) )
%   | then return 0.07380411732442016;  // std dev = 0.371, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | else if ( interaction(K, A), enzyme(A, L) )
%   | | then return 0.10435066235289213;  // std dev = 0.416, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.15658581678336905;  // std dev = 4.261, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.6274582180265896;  // std dev = 0.077, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14035875589705146;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( complex(E, C), recursion_proteinclass(E, B) )
%   | | | then return 0.730620746914227;  // std dev = 0.280, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.16615207957526332;  // std dev = 0.288, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.5614487092773188;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.3942632632884913;  // std dev = 1.346, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.194383794861048;  // std dev = 2.273, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.012955735704727002;  // std dev = 1.476, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.13978690460460944;  // std dev = 4.091, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.5238744343814168;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4136062154410381;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6429127075071539;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H), phenotype(G, H) )
%   | | then return 0.5119175335898598;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.41204943307226394;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7074991896075526;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.016096576870331124;  // std dev = 3.433, 106.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=21 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.09248010711802157;  // std dev = 4.044, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | | | else return 0.2587288770947738;  // std dev = 1.404, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(A, A) )
%   | then return -0.09290448673940671;  // std dev = 0.211, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( interaction(C, E), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.41831075074853263;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.061303776074751994;  // std dev = 1.602, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.06085112821257843;  // std dev = 1.199, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.0011747280168404677;  // std dev = 1.526, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.3421314932778864;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then return -0.06943409342678179;  // std dev = 0.222, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4706953087046705;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11662538921523576;  // std dev = 4.849, 137.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=49 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.1552234934319921;  // std dev = 0.564, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(F, C), interaction(F, A) )
%   | | then return -0.14747709855934693;  // std dev = 0.171, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.09263614504125273;  // std dev = 1.261, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.03539671401541635;  // std dev = 1.829, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then return 0.010231600440387267;  // std dev = 0.308, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3810655592105414;  // std dev = 0.804, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.04488590525101725;  // std dev = 2.757, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.06990094350931388;  // std dev = 2.429, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.0128304993842434;  // std dev = 2.833, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.3132508169411252;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.04945152589671938;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.48763667895019486;  // std dev = 0.130, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.15708016715230486;  // std dev = 0.041, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.36441891003790194;  // std dev = 0.087, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.14330381675718767;  // std dev = 1.050, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.07668563825111852;  // std dev = 1.515, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.2490684044596003;  // std dev = 1.026, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.04612112988276252;  // std dev = 4.423, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.12068813992297883;  // std dev = 0.275, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.30385293517717793;  // std dev = 0.068, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), interaction(I, A) )
%   | | then return -0.10379758226841669;  // std dev = 0.205, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | else if ( interaction(F, J) )
%   | | | then return 0.08636566489809279;  // std dev = 1.147, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.013554305048423355;  // std dev = 1.457, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( phenotype(K, L) )
%   | | | then return -0.07761689954278873;  // std dev = 1.306, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.18271971145756916;  // std dev = 0.744, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.13094378612372096;  // std dev = 2.786, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.031046599368685122;  // std dev = 3.540, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then return -0.08272200076933663;  // std dev = 0.841, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.21313323283458863;  // std dev = 0.057, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.4059687941077838;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11597514098648236;  // std dev = 0.843, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(E, I), enzyme(F, J) )
%   | | | then return -0.12733561077001757;  // std dev = 1.625, 48.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | | else return 0.026526755214421938;  // std dev = 2.763, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.28447808266486824;  // std dev = 2.921, 53.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=34 */
%   | | | else return -0.22071478215138668;  // std dev = 0.336, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0.35660808145525386;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.192916252581735;  // std dev = 0.060, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.10476731177436356;  // std dev = 0.612, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.1965955093178709;  // std dev = 0.817, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.46924092727276007;  // std dev = 0.857, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.23367927471872205;  // std dev = 0.265, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4002728652354093;  // std dev = 0.408, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.02698537624310682;  // std dev = 3.519, 136.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=33 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.0032932332299353286;  // std dev = 1.980, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.19122564665086664;  // std dev = 1.832, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.390', 'seconds']
Refined model CLL: -0.230077


******************************************
Best model found
******************************************
Results 

CLL : -0.245966 

AUC ROC : 0.966872 

AUC PR : 0.287127 

Precision : 0.23057 

Recall : 0.628975 

F1 : 0.337441 

Total Learning Time : 6.388 

Total Inference Time : 3.373004198074341 

Total revision time: 12.444521970748902
Best scored revision CLL: -0.230077


Results 

CLL : -0.245966 

AUC ROC : 0.966872 

AUC PR : 0.287127 

Precision : 0.23057 

Recall : 0.628975 

F1 : 0.337441 

Total Learning Time : 12.473377532958985 

Total Inference Time : 3.373004198074341 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.511
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.13087620782678364;  // std dev = 4.899, 121.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=33 */
%   | | | else return 0.17119241336038063;  // std dev = 4.973, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2750289677665101;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.734659453858334;  // std dev = 2.679, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.1613874340971067;  // std dev = 0.034, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | | else if ( location(A, I) )
%   | | | then return 0.2556076432127641;  // std dev = 1.504, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5817226297554842;  // std dev = 0.129, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6607912087830827;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08462664276264018;  // std dev = 4.315, 125.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6545049714637302;  // std dev = 1.380, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14304881503273895;  // std dev = 6.83e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09786122213881154;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.03007016101742081;  // std dev = 1.418, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44924940160436383;  // std dev = 0.149, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5212620368967356;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5667263827916751;  // std dev = 1.317, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.05123199142214621;  // std dev = 4.983, 211.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5627788992835623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return -0.03678703791492538;  // std dev = 1.795, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3202566238078523;  // std dev = 0.078, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06113362119389515;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06314132513320572;  // std dev = 5.344, 240.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42303392669219353;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.20265111894436832;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08104295062000116;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.13425991289559944;  // std dev = 0.973, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.12300731792352035;  // std dev = 0.765, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32445673343835146;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.006147835539265256;  // std dev = 2.223, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.019337469120365845;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06265549359967469;  // std dev = 4.710, 181.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=55 */
%   | | | else return 0.030089243250490005;  // std dev = 1.905, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.277521017454197;  // std dev = 0.259, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.25772594193055964;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5495793946704515;  // std dev = 1.106, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1815271357522623;  // std dev = 0.576, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.018534761342495674;  // std dev = 1.112, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08351156857929463;  // std dev = 3.841, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.03987134358012877;  // std dev = 0.885, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.34004178987260847;  // std dev = 0.146, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4153400042519618;  // std dev = 2.267, 78.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=71 */
%   | | else return -0.15458596103448774;  // std dev = 0.220, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21155999596725872;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.02735988737807736;  // std dev = 1.500, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1898568026357051;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.20004215404499787;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2013019614544883;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.016668207057906385;  // std dev = 1.353, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.32058226325203687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.013204862332012141;  // std dev = 1.680, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3143394218380368;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03844162124046451;  // std dev = 3.247, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | | else return 0.025613193202050338;  // std dev = 1.441, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14702519830696945;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2724262468906654;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17092172735703334;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.032128787949144436;  // std dev = 2.498, 108.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.25083581720220904;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.005032575071778901;  // std dev = 3.599, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | | else return -0.05376972858115965;  // std dev = 1.527, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.544', 'seconds']
Parameter learned model CLL:-0.194149 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.899, 88, 33], 'false,false,true,false': [4.973, 79, 36], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.491, 4, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.679, 8, 69], 'false,false,true,false': [0.034, 159, 0], 'false,false,false,true': [1.504, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.129, 0, 8], 'true,false': [1.49e-08, 0, 3], 'false,true,true': [4.315, 91, 34], 'false,true,false,true': [1.38, 2, 37], 'false,true,false,false': [6.83e-08, 82, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [1.418, 9, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.149, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.317, 2, 14], 'false,true,false': [4.983, 154, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.795, 17, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.078, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.159, 2, 4], 'false,true': [5.344, 169, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.973, 1, 7], 'true,true,false': [0.765, 2, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.223, 35, 12], 'false,false,true': [1.102, 2, 3], 'false,false,false,true': [4.71, 126, 55], 'false,false,false,false': [1.905, 15, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.259, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.106, 1, 33], 'true,false': [0.576, 87, 0], 'false,true': [1.112, 2, 3], 'false,false,true': [3.841, 78, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.885, 1, 6], 'true,false': [0.146, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.267, 7, 71], 'false,true,false': [0.22, 139, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.5, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.131, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.031, 0, 3], 'false,true,true': [1.353, 30, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.68, 36, 17], 'false,false,true': [0.014, 0, 3], 'false,false,false,true': [3.247, 82, 40], 'false,false,false,false': [1.441, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.01, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.027, 0, 3], 'false,true': [2.498, 79, 29], 'false,false,true': [0.012, 0, 3], 'false,false,false,true': [3.599, 92, 40], 'false,false,false,false': [1.527, 16, 4]}]
{'': [-1.6148698540002277e-16, 0.2106324011085918], 'false': [0.18750000000000006, 0.20771006763787855], 'false,false': [0.20689097960356248, 0.22222222222222207], 'false,false,false': [0.17283950617283952, 0.22222222222222224], 'false,false,true': [0.1983471074380178, 0.2150472589792073], 'false,true': [0.0, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.19555555555555548, 0.2106354284392013], 'false': [0.0, 0.20908997865489218], 'false,false': [0.2069101416994288, 0.25128550518429504], 'false,false,false': [0.25128550518429504, nan], 'false,false,true': [0.09321394794830733, 7.418687330760218e-06], 'true': [7.401486830834377e-17, 0.24691358024691365], 'false,true': [0.0, nan]}
{'': [0.002755632039423972, 0.15478232639418915], 'false': [0.1519816252144376, 0.1847992516493174], 'false,false': [0.20408163265306126, 0.16752145545464933], 'false,false,true': [nan, 0.20408163265306126], 'false,false,false': [0.16752145545464933, nan], 'false,true': [0.14894242077570757, 0.1546824702912035], 'false,true,false': [0.048841639347889244, 5.686508174909338e-17], 'true': [0.0020839467298143233, 7.401486830834377e-17]}
{'': [0.002437905052025427, 0.13761475814236498], 'false': [0.1344123873300475, 0.16206194698560145], 'false,false': [0.0, 0.1534392137814034], 'false,false,false': [0.1534392137814034, nan], 'false,true': [0.1083366946368351, 0.11765950830774638], 'false,true,true': [nan, 0.1083366946368351], 'true': [0.0022102574079778227, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.1205642566253505, 0.12427686236467383], 'false': [0.11900441672834774, 0.22075171023707754], 'false,false': [0.0, 0.23396961210547843], 'false,false,false': [0.2399999999999999, 0.2222222222222222], 'true': [0.0008736051209368632, 0.22404849517134248], 'true,true': [0.0008736051209368632, nan], 'false,false,true': [nan, 0.0]}
{'': [0.1119774755212292, 0.12645537916448896], 'false': [0.10513472316039789, 0.13081078930942364], 'false,false': [0.24270030265372014, 0.12789199285572878], 'false,false,false': [0.12256593030742237, 0.1728472752262271], 'true': [0.11788827926097566, 0.0], 'true,true': [0.11834204884438054, 0.11708432737761668], 'true,false': [nan, 0.0]}
{'': [0.11612284668194753, 0.13038805594860728], 'false': [0.2471778120167007, 0.12501602635527145], 'false,false': [0.12501602635527145, nan], 'true': [0.04252255245446715, 0.0038124884307985324], 'true,true': [0.006141714779227728, 0.035959938549917754], 'true,true,false': [nan, 0.03595993854991802], 'true,true,true': [0.0067202639830608035, 0.0]}
{'': [0.08896252146294524, 0.10122783410699507], 'false': [0.09869435506588373, 0.1279455424066654], 'false,false': [0.0, 0.13230048908031974], 'false,false,false': [0.13230048908031974, nan], 'false,true': [0.06589211834322163, 0.0003473690073554039], 'true': [0.1119116072919059, 0.00427412815306818], 'false,true,true': [nan, 0.0658921183432217], 'false,false,true': [0.0, nan]}
{'': [0.013324758734743513, 0.07569259668563899], 'false': [0.05026755148076541, 0.09243418266396033], 'false,false': [6.514484163139267e-05, 0.09281310129426348], 'false,false,false': [0.0864198114078952, 0.14837842833418072], 'false,true': [0.04467112754362259, 0.05397078977063966], 'false,true,false': [0.0, 0.053239460881054745], 'true': [0.0021343497519032487, 0.030437852180871798], 'true,false': [0.0, 0.00031452814631283593]}
{'': [0.0013397144123673997, 0.08292874784621039], 'false': [0.05779213911835394, 0.10017079577493791], 'false,false': [4.968503425853421e-05, 0.10081542358535073], 'false,false,false': [0.0981213997166023, 0.11653321179376146], 'true': [0.0017322200280139866, 0.00024387539995375981], 'true,true': [0.0017322200280139866, nan], 'true,true,true': [1.4002158779661108e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 10.731
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.14246266058970722;  // std dev = 4.556, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | | | else return 0.21880467280442978;  // std dev = 5.304, 122.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7537275459455683;  // std dev = 2.352, 75.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=69 */
%   | | | else return -0.16336250247497813;  // std dev = 0.151, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.04365945313293183;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.07937373884721755;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.018626305123912786;  // std dev = 2.679, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return 0.07817804116774216;  // std dev = 3.448, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6458320026176513;  // std dev = 1.376, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14525489063202074;  // std dev = 0.039, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), interaction(K, J) )
%   | | | then return 0.050794578970510464;  // std dev = 1.384, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.02310622826362193;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.15117933581595175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.33248641584169014;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11040731968578833;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.11892201171323297;  // std dev = 4.138, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   | | | else return 0.07032101240697788;  // std dev = 3.432, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5427908370410468;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.06696468747309876;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.028421701468032596;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.34630649870139635;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.15654435931789495;  // std dev = 0.734, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(G, H), interaction(A, G) )
%   | | | then return -0.05694620931942718;  // std dev = 1.121, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.05988675474137683;  // std dev = 5.241, 217.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=65 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.14751725782969116;  // std dev = 0.817, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.01731983009867532;  // std dev = 1.091, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.40824921563719174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.06243575213436314;  // std dev = 0.928, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.4022866500757096;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( complex(A, H), phenotype(A, G) )
%   | | | then return -0.08299503932489212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.28552680884030335;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3515454096647702;  // std dev = 0.210, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3144369313272465;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, J), interaction(A, K) )
%   | | | then return 0.6683166335097263;  // std dev = 0.047, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.24408424344810944;  // std dev = 3.999, 105.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=61 */
%   | | else return -0.16419098267259608;  // std dev = 0.045, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( interaction(A, L), interaction(L, M) )
%   | | then return -0.056324772027690366;  // std dev = 0.227, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return 0.07570487638667776;  // std dev = 0.766, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.256937991894623;  // std dev = 0.064, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.4784921703503527;  // std dev = 0.231, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.15687930203146203;  // std dev = 0.051, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(E, G), phenotype(G, F) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.28944610366913215;  // std dev = 1.583, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.0011916400912136754;  // std dev = 2.071, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | else return -0.035908188289586064;  // std dev = 0.203, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( complex(A, I) )
%   | | then return 0.30573718276684697;  // std dev = 0.540, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.014700767781247636;  // std dev = 1.100, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.12078283013205601;  // std dev = 1.573, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then return -0.18842944048926322;  // std dev = 1.033, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( location(A, F), interaction(A, G) )
%   | | then return 0.18893463212724104;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2572062389169125;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.1858631211571925;  // std dev = 2.500, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return 0.3054097906871632;  // std dev = 2.407, 53.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | | else return -0.13705952767022483;  // std dev = 0.031, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.20573439925387937;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.1365211868193588;  // std dev = 0.667, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0017878252363932993;  // std dev = 1.168, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1936458148622061;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.17559896364317984;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.05074606127775607;  // std dev = 1.472, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.04364601407930604;  // std dev = 0.787, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.47563319779439384;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -1.8321230940738942E-4;  // std dev = 1.676, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2293436994299455;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.01223009850261384;  // std dev = 2.728, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | | else return 0.036053945605820675;  // std dev = 2.399, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1656054230857082;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.017202989094225976;  // std dev = 0.466, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(G, A) )
%   | | | then return -0.07097827563915167;  // std dev = 1.222, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return 0.03486873555196117;  // std dev = 0.797, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.053957564108442935;  // std dev = 1.563, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.003871010793432799;  // std dev = 0.778, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.07452329308812561;  // std dev = 0.924, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.09176137267278357;  // std dev = 1.366, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.0076690095700728805;  // std dev = 3.021, 131.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.011', 'seconds']
Refined model CLL: -0.183618


******************************************
Best model found
******************************************
Results 

CLL : -0.183452 

AUC ROC : 0.98716 

AUC PR : 0.253201 

Precision : 0.176871 

Recall : 0.829787 

F1 : 0.291589 

Total Learning Time : 10.731 

Total Inference Time : 13.204365015029907 

Total revision time: 32.568992511749265
Best scored revision CLL: -0.183618


Results 

CLL : -0.183452 

AUC ROC : 0.98716 

AUC PR : 0.253201 

Precision : 0.176871 

Recall : 0.829787 

F1 : 0.291589 

Total Learning Time : 32.59202279281616 

Total Inference Time : 13.204365015029907 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.267
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10814893509951115;  // std dev = 4.822, 124.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=31 */
%   | | | else return 0.21814893509951158;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.04862512557570276;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.609733748384724;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.6368881410330105;  // std dev = 0.946, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.49725118998873225;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.644041355655842;  // std dev = 3.817, 94.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=76 */
%   | | | else return -0.16291006560316562;  // std dev = 0.101, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else if ( location(A, I) )
%   | | | then return 0.06265244570452945;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4373183506442378;  // std dev = 1.306, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.44613572888335745;  // std dev = 0.940, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07678706284070987;  // std dev = 4.411, 135.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5699443840442724;  // std dev = 2.607, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.1487091916749575;  // std dev = 7.88e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8440560729281124;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.053239321175831314;  // std dev = 1.673, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.42522392332075837;  // std dev = 0.962, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.46695936293951745;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5094466809474089;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5831710098196027;  // std dev = 1.456, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return 0.029158465285247567;  // std dev = 5.254, 248.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5966101819602874;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09442123286207202;  // std dev = 1.658, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3885284858927797;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3708980208142324;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.06887646623986776;  // std dev = 5.860, 266.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44886697552313837;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05557067132722811;  // std dev = 1.701, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3002527512569656;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.22730897008553225;  // std dev = 1.119, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.34206247059869643;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.008137680087441637;  // std dev = 2.790, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.17566724406908263;  // std dev = 0.947, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.0618238466895293;  // std dev = 4.700, 173.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=51 */
%   | | | else return 0.161674656465231;  // std dev = 2.032, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.30257066478552236;  // std dev = 0.370, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.26969332385764344;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.13535779493432087;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3574544050925468;  // std dev = 2.644, 43.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=33 */
%   | else return -0.17637967242161648;  // std dev = 0.775, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24709077574111013;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06989280244298972;  // std dev = 4.345, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19079483766201122;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1418428635605853;  // std dev = 0.895, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40783262030159534;  // std dev = 3.008, 93.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=82 */
%   | | else return -0.15115799975488975;  // std dev = 0.265, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21996464817133243;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1048154430929248;  // std dev = 1.416, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.08907432744275054;  // std dev = 0.982, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.162277385238769;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21977562622714455;  // std dev = 0.146, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.02694133980996244;  // std dev = 1.917, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1737331170952841;  // std dev = 0.995, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.039570779545838826;  // std dev = 1.510, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.181962777344495;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03054678623577275;  // std dev = 3.811, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | | else return 0.2290532104626672;  // std dev = 1.220, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.03288592832427366;  // std dev = 0.886, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19690957547379492;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.3933563870301738;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18976573202712177;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.019758932727809615;  // std dev = 2.660, 125.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15642635474505875;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04379880282804477;  // std dev = 3.697, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
%   | | | else return -0.05031147365877691;  // std dev = 1.495, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.107', 'seconds']
Parameter learned model CLL:-0.205951 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.822, 93, 31], 'false,false,true,false': [5.367, 80, 45], 'false,false,false,true': [1.799, 17, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.946, 1, 10], 'false,true,true': [1.247, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.817, 18, 76], 'false,false,true,false': [0.101, 183, 0], 'false,false,false,true': [1.777, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.306, 2, 11], 'true,false': [0.94, 1, 6], 'false,true,true': [4.411, 101, 34], 'false,true,false,true': [2.607, 8, 48], 'false,true,false,false': [7.88e-08, 92, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.673, 14, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.962, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.1, 0, 3], 'false,true,true,false': [1.456, 3, 21], 'false,true,false': [5.254, 190, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.658, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 10], 'false,true': [5.86, 184, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.701, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.005, 0, 9], 'true,true,false': [1.119, 2, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.79, 57, 19], 'false,false,true': [0.947, 1, 8], 'false,false,false,true': [4.7, 122, 51], 'false,false,false,false': [2.032, 15, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.37, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [1.089, 2, 3], 'true,true,false,false': [2.644, 10, 33], 'true,false': [0.775, 95, 0], 'false,true': [0.007, 0, 5], 'false,false,true': [4.345, 105, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.895, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.008, 11, 82], 'false,true,false': [0.265, 192, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.416, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.982, 1, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.146, 0, 5], 'false,true,true': [1.917, 39, 13], 'false,true,false,true': [0.995, 1, 8], 'false,true,false,false': [1.51, 50, 11], 'false,false,true': [0.005, 0, 5], 'false,false,false,true': [3.811, 106, 47], 'false,false,false,false': [1.22, 4, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.886, 1, 7], 'true,true,true,false': [0.154, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.125, 0, 3], 'false,true': [2.66, 93, 32], 'false,false,true': [0.005, 0, 5], 'false,false,false,true': [3.697, 94, 47], 'false,false,false,false': [1.495, 14, 4]}]
{'': [0.05246913580246885, 0.2154335388184394], 'false': [-2.5376526277146434e-16, 0.20850480109739478], 'false,false': [0.21206109578877788, 0.15419501133786834], 'false,false,true': [0.1875000000000012, 0.23040000000000113], 'false,false,false': [0.15419501133786834, nan], 'true': [0.07100591715976314, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09338253386906992, 0.20031058970682636], 'false': [0.17283950617283964, 0.1966709794560387], 'false,false': [0.19861110337701257, 0.16620498614958434], 'false,false,true': [0.15496366081920462, 5.6241808891058856e-05], 'false,true': [0.17283950617283964, nan], 'false,false,false': [0.16620498614958434, nan], 'true': [0.10937499999999989, 0.08144118160385466]}
{'': [0.1295281901817109, 0.15818874917329898], 'false': [0.15682613579707444, 0.17844843123875131], 'false,false': [0.17844843123875131, nan], 'false,false,true': [0.0, 0.15544691008728864], 'false,true': [0.1441018541203962, 0.1674045304946924], 'false,true,false': [0.12138171528446692, 6.75787928032704e-17], 'true': [0.1312226116737048, 0.12633087240750696]}
{'': [0.05149631618360644, 0.1375164361796323], 'false': [0.1345580725743489, 0.18661110367577274], 'false,false': [0.0, 0.18328973513355115], 'false,false,false': [0.18328973513355115, nan], 'false,true': [0.07937556921121997, 0.1113154675643405], 'false,true,true': [0.003319795887650079, 0.0882786212469268], 'true': [0.05442874197988761, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.00012828784870259658, 0.13209976679494326], 'false': [0.1291165820572377, 0.1786870228012279], 'false,false': [0.0, 0.18075602155605985], 'false,false,false': [0.18075602155605985, nan], 'true': [-3.172065784643304e-17, 9.00991609001478e-05], 'false,false,true': [nan, 0.0], 'true,true': [-3.172065784643304e-17, nan]}
{'': [0.07113380787349027, 0.12538677693492073], 'false': [0.10239766963413058, 0.13248505538888355], 'false,false': [0.09961434449293034, 0.13353358200242202], 'false,false,false': [0.1276991004130706, 0.16519687203090888], 'true': [0.07499610942140056, 0.0], 'true,true': [2.5561132708240564e-06, 0.15654696531044227], 'true,false': [nan, 0.0]}
{'': [0.11856972582242677, 0.12122700467024299], 'false': [8.956757462186271e-06, 0.12421446842688066], 'false,false': [0.12421446842688066, nan], 'true': [0.1468995782886105, 0.0063197736037136605], 'true,true': [0.008617274921776247, 0.19298582829110109], 'true,true,false': [0.23702649618783056, 0.16256650117787008], 'true,true,true': [0.00912420244490583, 0.0]}
{'': [0.04510185922697649, 0.10333898368417625], 'false': [0.10068095410488018, 0.15511388671017426], 'false,false': [0.0, 0.16702009474908452], 'false,false,false': [0.16702009474908452, nan], 'false,true': [0.09727811238934063, 0.00036514332247544745], 'false,true,true': [nan, 0.09727811238934066], 'true': [-7.93016446160826e-18, 0.07287114957258348], 'false,false,true': [0.0, nan]}
{'': [0.06142132051243593, 0.08332192503381121], 'false': [0.059921111891643106, 0.09883205303036166], 'false,false': [5.71784402654818e-06, 0.10129766801049564], 'false,false,false': [0.09490744273758732, 0.1860639284028161], 'true': [0.09642694606428451, 0.0037318892575800644], 'false,true': [0.07069009160661559, 0.05182799577278108], 'false,true,false': [0.1101124823996994, 0.03737883141683401], 'true,false': [0.0, 0.004280059898681432]}
{'': [0.06567595348479781, 0.08105335496561808], 'false': [0.05661278992320383, 0.0982931583143665], 'false,false': [4.48853056651266e-06, 0.10092063297899834], 'false,false,false': [0.09694503366683989, 0.12420873373052849], 'true': [0.07538699978582294, 0.005183340237378574], 'true,true': [0.06433510892211795, 0.0], 'true,true,true': [0.09809327320942765, 0.003950647877573242], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 5.938
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( complex(A, E) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.08542166237223965;  // std dev = 3.405, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | | else if ( location(A, J), phenotype(A, K) )
%   | | | then return 0.16875499570557217;  // std dev = 5.316, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   | | | else return 0.10814893509951233;  // std dev = 4.243, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.24179034310462455;  // std dev = 0.957, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, F) )
%   | | then return 0.7194734122109542;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.7641072739982947;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.2194734122109545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7352571965396322;  // std dev = 2.828, 85.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=76 */
%   | | | else return -0.1573691834411703;  // std dev = 0.121, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.24188464682657146;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.15257082685518708;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.33486790150117124;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5682759572094922;  // std dev = 0.037, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.15622566809230762;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.06259142040658823;  // std dev = 3.663, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.586128390951636;  // std dev = 2.467, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.13775553817015984;  // std dev = 0.035, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.7424532804378557;  // std dev = 0.216, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06346646854368013;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.17330511864301967;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44207896826035464;  // std dev = 0.063, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.058818274061157666;  // std dev = 0.663, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B), interaction(A, H) )
%   | | | then return 0.6256106896991732;  // std dev = 0.843, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.006360120442923967;  // std dev = 5.064, 266.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=54 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.10751502113455318;  // std dev = 0.575, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3541885738638341;  // std dev = 0.822, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.37283454955989437;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.0897824000578936;  // std dev = 1.076, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.049173985880451986;  // std dev = 1.140, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.24948370428988625;  // std dev = 0.299, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.05566187431288807;  // std dev = 1.016, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.3548244240888593;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( complex(A, G), interaction(A, H) )
%   | | then return 0.00777872794218674;  // std dev = 0.303, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.08786686238841458;  // std dev = 4.566, 153.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=50 */
%   | | | else return 0.1792193228280256;  // std dev = 1.959, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2905096342823702;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.20159248353758022;  // std dev = 1.142, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.08457549343619489;  // std dev = 0.841, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.3107662402968078;  // std dev = 0.181, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.23443786224046248;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), complex(A, G) )
%   | then if ( complex(F, G), interaction(F, F) )
%   | | then return -0.11839154595088466;  // std dev = 0.098, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( phenotype(F, H), interaction(F, F) )
%   | | | then return 0.2124872989946206;  // std dev = 1.012, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.003410060604250534;  // std dev = 2.737, 96.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=23 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4628111101418851;  // std dev = 1.252, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.18736397333763602;  // std dev = 0.277, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.11088781065598159;  // std dev = 3.281, 69.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=27 */
%   | | | else return 0.04475190574708892;  // std dev = 2.918, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.28079294494908463;  // std dev = 0.083, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), location(A, F) )
%   | | | then return 0.4611814216398195;  // std dev = 0.788, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.6197192815020167;  // std dev = 0.158, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.1601070393649169;  // std dev = 0.069, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.29697804744464795;  // std dev = 0.147, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(H, J), location(A, K) )
%   | | | then return 0.014752444538790065;  // std dev = 2.440, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return -0.09659622150787424;  // std dev = 0.921, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.01932731994574189;  // std dev = 1.126, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.10350373298548896;  // std dev = 3.053, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19779375057359777;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.27322451156068917;  // std dev = 1.016, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2151753261446731;  // std dev = 0.059, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.26966607142202165;  // std dev = 3.673, 93.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=72 */
%   | | | else return 0.48295761453785185;  // std dev = 0.195, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.15054242103516816;  // std dev = 0.041, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.15464158420916096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.09602222735985179;  // std dev = 0.993, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.09156862907072402;  // std dev = 0.739, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19077798442871263;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.11254239029486583;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18967937139495092;  // std dev = 0.149, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.008725992603919258;  // std dev = 0.193, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return -0.12949815912423124;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.036237052433105224;  // std dev = 1.736, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.09270237883822796;  // std dev = 0.618, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.07262048896188861;  // std dev = 2.975, 70.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=29 */
%   | | | else return -0.006805095049838791;  // std dev = 2.750, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1702756426927958;  // std dev = 0.054, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17370661094006012;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08975064815562751;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.2422658994816258;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.005475144415479265;  // std dev = 2.389, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1891755284943508;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.005185305744164092;  // std dev = 3.903, 171.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=47 */
%   | | | else return -0.09351460299504812;  // std dev = 1.410, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.298', 'seconds']
Refined model CLL: -0.192858


******************************************
Best model found
******************************************
Results 

CLL : -0.171184 

AUC ROC : 0.989028 

AUC PR : 0.327717 

Precision : 0.26933 

Recall : 0.788679 

F1 : 0.401537 

Total Learning Time : 5.938 

Total Inference Time : 10.786991357803345 

Total revision time: 27.093890981674193
Best scored revision CLL: -0.192858


Results 

CLL : -0.171184 

AUC ROC : 0.989028 

AUC PR : 0.327717 

Precision : 0.26933 

Recall : 0.788679 

F1 : 0.401537 

Total Learning Time : 27.116921262741087 

Total Inference Time : 10.786991357803345 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.66
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10814893509951237;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.15345094852233007;  // std dev = 5.568, 149.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.22353355048412768;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6083623010998434;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.839353843640178;  // std dev = 0.016, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16029913908406548;  // std dev = 0.029, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11119089183433258;  // std dev = 3.598, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.32870349876754257;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.42418425123819503;  // std dev = 0.910, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.575797612107128;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.03601246450335629;  // std dev = 2.110, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6599894524255474;  // std dev = 1.013, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14101948203133918;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0974671973226731;  // std dev = 3.728, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09077335565494071;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43841540387789135;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.464800255139825;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.39231017646473554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5889866319611942;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.045077641378728536;  // std dev = 4.281, 200.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5311870743718788;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.11445826997030252;  // std dev = 3.510, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.04527921908822384;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3490751451640229;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3332084499575406;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.06771809296650226;  // std dev = 4.177, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39980525319935767;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08585558445108972;  // std dev = 3.621, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.061343234633315376;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2629383486061708;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.34671132365544655;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.28811208501522734;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3087260528441059;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.03172657446135333;  // std dev = 0.905, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.26955161940395816;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.04506918278551758;  // std dev = 4.043, 176.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=49 */
%   | | | else return 0.13942076927498753;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23601540026614198;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.11116964634957209;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21695769869371384;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5865367604578466;  // std dev = 1.441, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.20805168523327575;  // std dev = 0.641, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22047323816293804;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.02498919228936576;  // std dev = 3.462, 140.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17767436733381814;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.185104676840063;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4511211448823814;  // std dev = 0.802, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13780967634296362;  // std dev = 0.191, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2485029960455969;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.009050926312225474;  // std dev = 3.162, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16036912527366873;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12658597934542193;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.05591202927148561;  // std dev = 0.554, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0766971081882179;  // std dev = 0.394, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 6.822366598794802E-4;  // std dev = 0.359, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0224300346458896;  // std dev = 1.269, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15865067451502052;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.019969685571347554;  // std dev = 2.796, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   | | | else return 0.05943969828380555;  // std dev = 3.020, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13994909618058715;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17539366428123437;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12324632833478133;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.058802628661235055;  // std dev = 0.712, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.024360907811099834;  // std dev = 1.384, 81.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1386089352162739;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.025089725334274466;  // std dev = 2.702, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | | else return 0.05221217507016079;  // std dev = 2.995, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.808', 'seconds']
Parameter learned model CLL:-0.177467 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.449, 24, 8], 'false,false,true,false': [5.568, 105, 44], 'false,false,false,true': [3.472, 33, 19], 'false,false,false,false': [0.913, 5, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.016, 0, 52], 'false,false,true,false': [0.029, 142, 0], 'false,false,false,true': [3.598, 46, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.91, 1, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.11, 31, 8], 'false,true,false,true': [1.013, 1, 48], 'false,true,false,false': [0.0, 105, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.728, 48, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.043, 0, 11], 'true,false': [0.031, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.128, 0, 3], 'false,true,false': [4.281, 148, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.51, 39, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.017, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.044, 0, 9], 'false,true': [4.177, 129, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.621, 42, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.03, 0, 7], 'true,true,false': [0.066, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.905, 12, 3], 'false,false,true': [0.024, 0, 6], 'false,false,false,true': [4.043, 127, 49], 'false,false,false,false': [3.529, 33, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.112, 0, 12], 'true,true,true,false': [0.832, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.441, 2, 36], 'true,false': [0.641, 100, 0], 'false,true': [0.021, 0, 5], 'false,false,true': [3.462, 104, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.023, 0, 6], 'true,false': [0.021, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.802, 0, 56], 'false,true,false': [0.191, 130, 0], 'false,false,true,true': [0.028, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.162, 51, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.04, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.554, 1, 4], 'false,true,true': [0.394, 11, 1], 'false,true,false,true': [0.359, 2, 2], 'false,true,false,false': [1.269, 51, 14], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [2.796, 88, 36], 'false,false,false,false': [3.02, 38, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.006, 0, 5], 'true,true,true,false': [0.047, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.712, 2, 4], 'false,true': [1.384, 64, 17], 'false,false,true': [0.015, 0, 5], 'false,false,false,true': [2.702, 84, 36], 'false,false,false,false': [2.995, 37, 20]}]
{'': [-2.5376526277146434e-16, 0.21700957934194143], 'false': [-1.4802973661668753e-16, 0.21050051644754258], 'false,false': [0.20475565458929898, 0.22592152199762144], 'false,false,false': [0.23187869822485158, 0.13888888888888892], 'false,false,true': [0.18750000000000014, 0.20809873429124903], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.062222222222222415, 0.2027657220085608], 'false': [7.401486830834377e-17, 0.1991444658238994], 'false,false': [0.1960647186454494, 0.20773318495101165], 'false,false,false': [0.20230846582369216, 0.25], 'false,false,true': [4.754335563598252e-06, 6.085782731941821e-06], 'true': [7.401486830834377e-17, 0.09876543209876548], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.06094744335636688, 0.1577255544018519], 'false': [0.1404227609255583, 0.20345126547714676], 'false,false': [0.2043662400498741, 0.18749999999999997], 'false,false,true': [0.0, 0.20433290544796454], 'false,false,false': [0.18749999999999997, nan], 'false,true': [0.11414944465771286, 0.14585219418916562], 'false,true,false': [0.02092762411806183, -8.458842092382145e-17], 'true': [0.11818311629766698, 0.00013914430887507212]}
{'': [0.0003172795799432241, 0.12437208577435464], 'false': [0.09476664952871668, 0.21285729446415494], 'false,false': [0.003230415594333569, 0.21531644465793545], 'false,false,false': [0.21617271798219156, 0.2040816326530612], 'false,true': [0.011348134979422886, 0.09163565618038212], 'false,true,true': [0.0, 0.005460439602567775], 'false,false,true': [0.0, 0.0], 'true': [0.00016884036312917158, 0.0003145735556000506]}
{'': [0.00021888234710880955, 0.12496777763414671], 'false': [0.09429847683672463, 0.20919777317303304], 'false,false': [0.0015639417197207406, 0.21331405538593312], 'false,false,false': [0.21496980461889828, 0.18750000000000003], 'false,false,true': [0.0, 0.0], 'true': [6.017998533263125e-05, 0.00021713889131066053], 'true,true': [6.017998533263125e-05, nan]}
{'': [0.0017715744797648053, 0.12149755624824345], 'false': [0.054590630782733386, 0.12512166347832096], 'false,false': [9.877039431337627e-05, 0.1273488982072409], 'false,false,false': [0.09289482047034664, 0.23492055705833229], 'true': [0.002103139733565745, 0.0004864421649921902], 'true,true': [0.00013028965731752353, 0.0010896837815231875], 'true,false': [0.00027125830508750726, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1378650429654836, 0.08394063975959942], 'true': [0.09312104781423768, 0.004108067661353267], 'true,true': [0.06627920824285741, 0.05664053820175592], 'false': [8.863437522866336e-05, 0.08561762967929885], 'false,false': [0.08561762967929885, nan], 'true,true,true': [0.0010413474748504348, 0.2308006860400409], 'true,true,false': [0.0, 0.05462880476037902]}
{'': [8.117837544840174e-05, 0.09418476790518687], 'false': [0.07663478144784966, 0.13849124842954896], 'false,false': [0.00038902426057232237, 0.14081056716837353], 'false,false,false': [0.14081056716837353, nan], 'false,true': [0.011473302343111755, 0.00027954230880369987], 'false,true,true': [nan, 0.011473302343111724], 'false,false,true': [0.00038902426057232237, nan], 'true': [8.476114019607961e-05, 5.48300878768157e-05]}
{'': [0.022939626408711132, 0.07180687428319103], 'false': [0.023808601889697675, 0.09131084715008425], 'false,false': [5.395139985093222e-05, 0.09339272092587818], 'false,false,false': [0.06304883601473409, 0.15720444014002874], 'false,true': [0.012916564687990134, 0.025244776038675018], 'false,true,false': [0.032250120428098085, 0.024782711134871703], 'true': [0.00017729503759462818, 0.05192958485282146], 'true,false': [0.0, 0.06148303395354354]}
{'': [0.0420167929720138, 0.07027420102225956], 'false': [0.023656069637806133, 0.0898734253077693], 'false,false': [4.329390046969028e-05, 0.09210935493709133], 'false,false,false': [0.060858700083307106, 0.15740147690174539], 'true': [0.0006054194479073127, 0.08450177811706232], 'true,true': [0.0005768405331894322, 0.0], 'true,true,true': [6.439284304349257e-06, 0.0007423109014303477], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.956
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( complex(I, J), phenotype(I, K) )
%   | | | then return 0.15444523139580865;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.008517731567154404;  // std dev = 2.633, 60.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=8 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.21529179224236947;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.14209955238346186;  // std dev = 5.739, 162.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7518526675222027;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7373269569258907;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8224065427602506;  // std dev = 0.994, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15712100344694696;  // std dev = 0.108, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.14821409695391735;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.09389350968620785;  // std dev = 2.865, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5608441807988545;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5717996689039943;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1345253237155679;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.09998835076078606;  // std dev = 2.004, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.669489361585363;  // std dev = 1.032, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.1360546453729241;  // std dev = 0.087, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5509535346988008;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17429227585550913;  // std dev = 3.547, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else return 0.3162005228138165;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4264159725281073;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5087577908151808;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.621696968745987;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.024507519021315777;  // std dev = 2.352, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   | | | else return 0.0821220796831273;  // std dev = 3.465, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41424854274987577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5075573824407884;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.07849041085581503;  // std dev = 3.161, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.2580165904884816;  // std dev = 1.796, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.326840444986793;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( complex(A, F), phenotype(E, G) )
%   | | | then return -0.15184749552834628;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.02701230929605424;  // std dev = 1.870, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.12684059771275732;  // std dev = 2.703, 70.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=28 */
%   | | | else return 0.04635294169718732;  // std dev = 2.460, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.31849908980163966;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38288385613922815;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.12006401518001521;  // std dev = 3.514, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return -0.05046688852484689;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2926127225607011;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.26741711800211415;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.005770834002012272;  // std dev = 0.619, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.01019555378172452;  // std dev = 0.473, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.12236425945423206;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.04042639030271912;  // std dev = 0.490, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.27123926620830735;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.05009145936523076;  // std dev = 4.003, 165.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
%   | | | else return 0.10630192634883333;  // std dev = 3.596, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23275084367538312;  // std dev = 0.045, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.20198762044841145;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6171204477908416;  // std dev = 1.008, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else if ( interaction(F, A) )
%   | | then return -0.14502422005755447;  // std dev = 0.087, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.26944115001402064;  // std dev = 0.018, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22488296688870033;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(I, J), phenotype(H, K) )
%   | | | then return 0.13959049427796674;  // std dev = 1.090, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.017207795355853168;  // std dev = 2.713, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   | | else return 0.09172522044986621;  // std dev = 0.309, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16510429995237996;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.17943170679172846;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.18185819474268444;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.3494744195941223;  // std dev = 0.324, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4889127531669919;  // std dev = 0.346, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.14416190961422415;  // std dev = 0.040, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.18753361997448453;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.015837099952625736;  // std dev = 2.919, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.06817049861909459;  // std dev = 0.947, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then return -0.18792138265781558;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1515541029233191;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.1986244278524325;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.015425077005244758;  // std dev = 0.713, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( phenotype(A, J), location(A, K) )
%   | | then return -0.0025814094916349587;  // std dev = 0.164, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else return -0.040775517442046126;  // std dev = 0.206, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1620300230396594;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -4.5409544954379835E-4;  // std dev = 2.400, 95.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=27 */
%   | | | else return 0.02159407341540658;  // std dev = 3.267, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1490395120689974;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.12513237602905558;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17137627042574638;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08299140166751431;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.18459330279140457;  // std dev = 0.574, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.020447844130732064;  // std dev = 1.251, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1412156017902384;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return -0.029927176091046632;  // std dev = 1.682, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.02814897107757846;  // std dev = 3.662, 138.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=46 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.943', 'seconds']
Refined model CLL: -0.175995


******************************************
Best model found
******************************************
Results 

CLL : -0.204773 

AUC ROC : 0.981538 

AUC PR : 0.185615 

Precision : 0.129151 

Recall : 0.884477 

F1 : 0.225391 

Total Learning Time : 2.956 

Total Inference Time : 3.2770607471466064 

Total revision time: 10.772610250473022
Best scored revision CLL: -0.175995


Results 

CLL : -0.204773 

AUC ROC : 0.981538 

AUC PR : 0.185615 

Precision : 0.129151 

Recall : 0.884477 

F1 : 0.225391 

Total Learning Time : 10.795640531539917 

Total Inference Time : 3.2770607471466064 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.632
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06127393509951237;  // std dev = 3.219, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return 0.1367203636709404;  // std dev = 5.304, 140.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08314893509951238;  // std dev = 2.641, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.36693547488278694;  // std dev = 1.585, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8242252434115749;  // std dev = 0.993, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15556368030955947;  // std dev = 0.055, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else if ( location(A, I) )
%   | | | then return 0.15189832577163298;  // std dev = 2.762, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.17111998811631232;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5926398196444933;  // std dev = 0.121, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6486606644172221;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04203710658464783;  // std dev = 2.814, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6426037955412595;  // std dev = 1.462, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.139572723683959;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6663419784410636;  // std dev = 0.197, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10183183448733854;  // std dev = 2.509, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11520036941457881;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4585030749008796;  // std dev = 0.149, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5757475357660613;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3771066969674518;  // std dev = 1.112, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.07379662199446338;  // std dev = 4.300, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4209281703169703;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.060731327436179795;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.10431977274333563;  // std dev = 2.755, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.1283656936854521;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3264810366785707;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2443772498610452;  // std dev = 0.902, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.054812851231828774;  // std dev = 4.486, 195.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3230276523586698;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.012739134704410376;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.09200435329276206;  // std dev = 2.482, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.15300624532173907;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1607846108890998;  // std dev = 0.958, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.23005402938790315;  // std dev = 0.767, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return -0.1791321238609878;  // std dev = 0.616, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1553241008192969;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.055860655914907215;  // std dev = 1.333, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.32422232406694373;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.046077343486153235;  // std dev = 4.112, 162.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=46 */
%   | | | else return 0.05312074078533442;  // std dev = 3.047, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2673548154173278;  // std dev = 0.211, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.37143677945667286;  // std dev = 0.200, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2890136623668462;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.604999407748979;  // std dev = 0.722, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1753893860643221;  // std dev = 0.533, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25312729979776133;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07352577052543892;  // std dev = 3.285, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1792079442942075;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.10086698566630702;  // std dev = 0.938, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44104964600820395;  // std dev = 1.230, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.14065677544876912;  // std dev = 0.390, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2938025993188124;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.004962933735957171;  // std dev = 2.502, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16138442661334743;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.22034133783667087;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.11533786580195997;  // std dev = 0.687, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.1166993040974799;  // std dev = 0.633, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.26748224999886794;  // std dev = 0.171, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.026346643007606918;  // std dev = 1.559, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.05636963197228678;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03207799372248539;  // std dev = 2.673, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | | else return 0.01538014677205564;  // std dev = 2.489, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13443340899202127;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.16601539118631664;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.21618715968376756;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18530320091276503;  // std dev = 0.000682, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.030810880833313403;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03444862735434024;  // std dev = 1.916, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.028967248549645386;  // std dev = 0.797, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04125475980509236;  // std dev = 2.667, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | | else return -0.009288884928759181;  // std dev = 2.527, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.239', 'seconds']
Parameter learned model CLL:-0.173943 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.219, 51, 13], 'false,false,true,false': [5.304, 101, 39], 'false,false,false,true': [2.641, 31, 9], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.585, 4, 7], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.993, 1, 52], 'false,false,true,false': [0.055, 131, 0], 'false,false,false,true': [2.762, 25, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.121, 0, 11], 'true,false': [0.018, 0, 4], 'false,true,true': [2.814, 51, 14], 'false,true,false,true': [1.462, 2, 42], 'false,true,false,false': [0.0, 72, 0], 'false,false,true,true': [0.197, 0, 3], 'false,false,true,false': [2.509, 22, 9], 'false,false,false,true': [1.449, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.149, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.112, 2, 6], 'false,true,false': [4.3, 114, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.767, 2, 1], 'false,false,false,true': [2.755, 26, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.08, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.902, 1, 6], 'false,true': [4.486, 139, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.892, 2, 2], 'false,false,false,true': [2.482, 21, 9], 'false,false,false,false': [1.37, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.958, 1, 9], 'true,true,false': [0.767, 1, 4], 'true,false,true,true': [0.616, 1, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.735, 1, 2], 'false,true': [1.333, 29, 5], 'false,false,true': [0.017, 0, 5], 'false,false,false,true': [4.112, 116, 46], 'false,false,false,false': [3.047, 36, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.211, 0, 13], 'true,true,true,false': [0.2, 0, 3], 'true,true,false,true': [0.061, 0, 3], 'true,true,false,false': [0.722, 0, 33], 'true,false': [0.533, 101, 0], 'false,true': [0.009, 0, 3], 'false,false,true': [3.285, 65, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.938, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.23, 1, 56], 'false,true,false': [0.39, 137, 0], 'false,false,true,true': [0.181, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.502, 35, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.049, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.687, 1, 5], 'false,true,true': [0.633, 20, 1], 'false,true,false,true': [0.171, 0, 6], 'false,true,false,false': [1.559, 54, 17], 'false,false,true': [0.861, 1, 3], 'false,false,false,true': [2.673, 71, 31], 'false,false,false,false': [2.489, 32, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.018, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.000682, 0, 2], 'true,false': [0.911, 1, 3], 'false,true': [1.916, 80, 24], 'false,false,true': [0.797, 1, 3], 'false,false,false,true': [2.667, 60, 31], 'false,false,false,false': [2.527, 37, 12]}]
{'': [0.05859374999999978, 0.19802997607198997], 'false': [-2.5376526277146434e-16, 0.18848037696075512], 'false,false': [0.18992695117262678, 0.18239999999999948], 'false,false,true': [0.16186523437499947, 0.2009693877551025], 'false,false,false': [0.17437500000000014, 0.20999999999999988], 'true': [0.07100591715976314, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.1652214129338398, 0.20807755702698613], 'false': [0.10937500000000006, 0.2041898510231753], 'false,false': [0.2022486112838898, 0.21275947837363285], 'false,false,false': [0.2119424954398433, 0.2222222222222222], 'false,false,true': [0.018621024576597117, 2.2885318938624505e-05], 'true': [-2.220446049250313e-16, 0.22842430578903136], 'false,true': [0.10937500000000006, nan]}
{'': [0.0016032555406154596, 0.16293348828639584], 'false': [0.15093581230544614, 0.21167606543437412], 'false,false': [0.21188377108283457, 0.20994371542381646], 'false,false,true': [0.012915605785290088, 0.20302066341307232], 'false,false,false': [0.20994371542381646, nan], 'false,true': [0.12185490259850204, 0.16247541081714945], 'false,true,false': [0.04860626729222977, -2.4671622769447922e-17], 'true': [0.0013214380232787254, 7.68080106550717e-05]}
{'': [0.0014786030167237266, 0.13734755436486945], 'false': [0.12012897487615473, 0.20289914915814355], 'false,false': [0.17348457150041208, 0.2065019582946969], 'false,false,false': [0.20518397682702652, 0.22222222222222224], 'false,false,true': [0.0, 0.1963426037903601], 'false,true': [0.141258833113185, 0.11342243051620295], 'false,true,true': [0.0, 0.1545319447147092], 'true': [0.0014786030167237266, nan]}
{'': [0.052882870208076, 0.12243873409015316], 'false': [0.10321069598359726, 0.20786102441154225], 'false,false': [0.17441235805357982, 0.21215716430082193], 'false,false,false': [0.20538302375151235, 0.23462237754669552], 'false,false,true': [0.0, 0.19875965472935925], 'true': [0.0007030965279627926, 0.11617932026093591], 'true,true': [0.0007030965279627926, nan]}
{'': [0.1338043528221024, 0.11433355445892442], 'true': [0.10148297381540879, 0.21100453488796514], 'true,false': [0.18999480043008773, 0.18026663803559442], 'true,false,true': [0.18999480043008773, nan], 'false': [0.052233347418598884, 0.12242539766984871], 'false,false': [5.8960389367279654e-05, 0.12355003235663599], 'false,false,false': [0.10435201954045109, 0.18571368477648445], 'true,true': [0.09176046047511814, 0.11772916560321511]}
{'': [0.11296930915712887, 0.10996691598035216], 'true': [0.03564677398229813, 0.002808712557976413], 'false': [2.5151203523227084e-05, 0.11242512008972026], 'false,false': [0.11242512008972026, nan], 'true,true': [0.006923108278464249, 0.022214221445514375], 'true,true,false': [0.0012251279741281411, 0.015801738244945258], 'true,true,true': [0.0034206200305530753, 0.013298699971637315]}
{'': [0.0565272268349108, 0.089416467290495], 'false': [0.07879306361423301, 0.13058484963622885], 'false,false': [0.010977744876733512, 0.1332136445398663], 'false,false,false': [0.1332136445398663, nan], 'false,true': [0.026540143701824667, 0.001111708101521877], 'true': [0.0, 0.10998580077045243], 'false,true,true': [nan, 0.026540143701824698], 'false,false,true': [0.010977744876733512, nan]}
{'': [0.02866847898725907, 0.07191057793849959], 'false': [0.03623877269301554, 0.09412534376776659], 'false,false': [0.18533268525541646, 0.09144096239818772], 'false,false,false': [0.0700426241288263, 0.14085141039117247], 'false,true': [0.019107296946926096, 0.038162735264696136], 'false,true,false': [0.004898021971605641, 0.03424640259920186], 'true': [0.0002393011808529688, 0.06871461476281779], 'true,false': [0.0, 0.07859194639385726]}
{'': [0.05545971652636242, 0.07295706979014206], 'false': [0.03530171129659915, 0.09881136576949179], 'false,false': [0.15877170703289245, 0.09702155808029267], 'false,false,false': [0.07817160716851092, 0.1303680807586634], 'true': [0.0007313501049601925, 0.20737566116458087], 'true,true': [0.0001928956946451954, 0.000212114744037493], 'true,true,false': [0.0, 2.3247959991118394e-07], 'true,true,true': [0.0, 0.0001665411937693019]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 4.435
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.14235946141530076;  // std dev = 4.396, 95.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=27 */
%   | | | else return 0.2647423416929178;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7744639972364048;  // std dev = 1.686, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.1631742650954391;  // std dev = 0.189, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.057633650931824876;  // std dev = 2.640, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.13992101911508809;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5028780778522347;  // std dev = 0.246, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return -0.018227776492787638;  // std dev = 1.498, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return 0.15599337956607073;  // std dev = 2.105, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6156768133063175;  // std dev = 1.677, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14887315918092225;  // std dev = 0.067, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.30685086603048506;  // std dev = 1.525, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.06911860201347363;  // std dev = 1.599, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.07020242273760169;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3744091966556417;  // std dev = 1.495, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.47176812498791343;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.43033109443731205;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5598628423736405;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4606582350686392;  // std dev = 1.012, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.08581799380766542;  // std dev = 3.162, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | | else return 0.019616275779628507;  // std dev = 2.746, 79.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=18 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5800761096256188;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.02571447101105492;  // std dev = 2.615, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.19419105955099195;  // std dev = 1.332, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2741986940487617;  // std dev = 0.245, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( location(A, E), complex(A, F) )
%   | | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.18864251250105002;  // std dev = 1.834, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return -0.14143732758749186;  // std dev = 0.154, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1773072298695503;  // std dev = 0.299, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08940906572477739;  // std dev = 3.659, 121.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=42 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.39782178215327013;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12257721084849553;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.17884416396861227;  // std dev = 2.014, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.008614148236204652;  // std dev = 1.965, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.28252436432475597;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, E) )
%   | | then return 0.3265734700775698;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3974956626292692;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.016951822037274307;  // std dev = 1.024, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.048257022010686455;  // std dev = 0.661, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.10240575794244972;  // std dev = 0.015, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2702697713987063;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -1.2620209155720273E-5;  // std dev = 2.516, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return 0.07431132515252757;  // std dev = 4.157, 145.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25436798694005003;  // std dev = 0.042, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.25787089047847933;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5924080345676163;  // std dev = 0.719, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.16729292540353405;  // std dev = 0.083, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.22178403457182327;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5139305517807702;  // std dev = 0.190, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.17342032104753485;  // std dev = 0.112, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.02169559759459114;  // std dev = 2.429, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return 0.11333357412055181;  // std dev = 0.784, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.07523400799708815;  // std dev = 0.292, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.20187992437345428;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G), interaction(A, H) )
%   | | | then return 0.2768633875121612;  // std dev = 1.173, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return 0.39952678505133576;  // std dev = 1.359, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else return -0.14431648453122442;  // std dev = 0.034, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3842172111401707;  // std dev = 1.081, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.2491401756376595;  // std dev = 0.126, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.06656979601988276;  // std dev = 1.599, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.028615560843978906;  // std dev = 1.009, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.10144749814616949;  // std dev = 0.226, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.21213581985419325;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(H, A) )
%   | | | then return 0.3911522698998546;  // std dev = 0.354, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.1981912576700077;  // std dev = 1.967, 47.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=42 */
%   | | else return -0.12909194008098565;  // std dev = 0.065, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5520116148054269;  // std dev = 0.297, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.176606571389722;  // std dev = 0.150, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.011960142715779179;  // std dev = 1.054, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2358949092836084;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.15398017494757693;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15001237829869127;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1622365459970134;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.19593295942454533;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.06989962296554457;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.21557602083644845;  // std dev = 1.543, 52.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=46 */
%   | | | else return -0.12981422212497112;  // std dev = 0.328, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.040112937581183714;  // std dev = 1.035, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.03535728529142012;  // std dev = 1.779, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '38.912', 'seconds']
Refined model CLL: -0.154954


******************************************
Best model found
******************************************
Results 

CLL : -0.176052 

AUC ROC : 0.990118 

AUC PR : 0.298403 

Precision : 0.146097 

Recall : 0.978799 

F1 : 0.254245 

Total Learning Time : 4.435 

Total Inference Time : 4.203628301620483 

Total revision time: 13.71329864692688
Best scored revision CLL: -0.154954


Results 

CLL : -0.176052 

AUC ROC : 0.990118 

AUC PR : 0.298403 

Precision : 0.146097 

Recall : 0.978799 

F1 : 0.254245 

Total Learning Time : 13.736328927993775 

Total Inference Time : 4.203628301620483 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.313
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14510545683864134;  // std dev = 4.851, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | | else return 0.15814893509951108;  // std dev = 5.020, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7580193346218546;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7348917811753146;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.690553593492178;  // std dev = 3.196, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.16134780127870288;  // std dev = 0.011, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else if ( location(A, I) )
%   | | | then return 0.05976987245600353;  // std dev = 1.761, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5900870121599193;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5678234703272703;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11452918706009561;  // std dev = 4.248, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.643986830666978;  // std dev = 1.664, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14146211497096314;  // std dev = 3.65e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15806614354273982;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08553707565231368;  // std dev = 1.386, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43784532014990535;  // std dev = 0.061, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4543455846140342;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.625574389213492;  // std dev = 0.965, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.06290644539633122;  // std dev = 4.984, 205.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6055720096342799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.12261113158955156;  // std dev = 1.652, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.34453414494911366;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10889548120081134;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.05113503866219874;  // std dev = 5.500, 246.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4559060646498;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.18041228480706722;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.20030771639885078;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28671833278894204;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.23123101253518352;  // std dev = 0.606, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.34688924316679814;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.004999240932182172;  // std dev = 2.177, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.33242960910194724;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.11476657077253058;  // std dev = 4.509, 150.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=55 */
%   | | | else return 0.07540758435496044;  // std dev = 1.836, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2668419871507298;  // std dev = 0.241, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.27296512150759666;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5457843852212958;  // std dev = 1.105, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.19853938270347737;  // std dev = 0.666, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.1369109011030788;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06486398879695196;  // std dev = 3.984, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1762164031817851;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.26351090402177413;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37386296565686516;  // std dev = 2.814, 82.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=71 */
%   | | else return -0.15870016135725487;  // std dev = 0.272, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22225116064578943;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.11967334386025383;  // std dev = 1.308, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16829487610434546;  // std dev = 0.125, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.36683581947757155;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.21534237942647336;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06514983105075861;  // std dev = 1.737, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.32266621780492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0028747928780676504;  // std dev = 1.702, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2393518787335485;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.008901561612310156;  // std dev = 3.546, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | | else return -0.04508167137258686;  // std dev = 1.471, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13121312682426664;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2520213029718211;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06435391681753921;  // std dev = 0.407, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.039763206071941205;  // std dev = 2.609, 117.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.05207117520164706;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.02237210464330895;  // std dev = 3.461, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | | | else return 0.008020048725494047;  // std dev = 1.422, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.896', 'seconds']
Parameter learned model CLL:-0.196273 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.265, 2, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.851, 82, 33], 'false,false,true,false': [5.02, 84, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 6], 'true,false': [0.042, 0, 5], 'false,true,true': [0.051, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.196, 12, 69], 'false,false,true,false': [0.011, 157, 0], 'false,false,false,true': [1.761, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.042, 0, 8], 'true,false': [0.04, 0, 3], 'false,true,true': [4.248, 77, 34], 'false,true,false,true': [1.664, 3, 37], 'false,true,false,false': [3.65e-08, 86, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.386, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.061, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.965, 1, 14], 'false,true,false': [4.984, 148, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.652, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.001, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.312, 3, 4], 'false,true': [5.5, 175, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.101, 0, 7], 'true,true,false': [0.606, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.177, 39, 12], 'false,false,true': [0.004, 0, 3], 'false,false,false,true': [4.509, 95, 55], 'false,false,false,false': [1.836, 13, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.241, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.105, 1, 33], 'true,false': [0.666, 76, 0], 'false,true': [1.096, 2, 3], 'false,false,true': [3.984, 78, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.091, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.814, 11, 71], 'false,true,false': [0.272, 139, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.308, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.125, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.043, 0, 3], 'false,true,true': [1.737, 38, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.702, 42, 17], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [3.546, 96, 40], 'false,false,false,false': [1.471, 13, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.003, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.407, 1, 3], 'false,true': [2.609, 88, 29], 'false,false,true': [0.868, 1, 3], 'false,false,false,true': [3.461, 89, 40], 'false,false,false,false': [1.422, 10, 4]}]
{'': [0.13017751479289916, 0.2101579465387682], 'false': [0.23999999999999994, 0.20771006763787855], 'false,true': [0.0, 0.18750000000000006], 'false,false': [0.20740606609325515, 0.21301775147928975], 'false,false,false': [0.22222222222222224, 0.20408163265306126], 'false,false,true': [0.20461247637051175, 0.21000000000000116], 'false,true,false': [0.0, 0.22222222222222224], 'true': [0.15999999999999986, 1.4802973661668753e-16]}
{'': [0.00029470177874517265, 0.20609626917254528], 'false': [0.0008585132404309951, 0.2037989521267947], 'false,false': [0.205843231950775, 0.1723664712338806], 'false,false,true': [0.12608000868413943, 7.783546068848373e-07], 'false,false,false': [0.1723664712338806, nan], 'false,true': [0.0008585132404309951, nan], 'true': [1.4802973661668753e-16, 0.00035658915228165]}
{'': [0.0003993179533536032, 0.16114845669776723], 'false': [0.1588897452059843, 0.1926375344824528], 'false,false': [0.2222222222222222, 0.1746437971298643], 'false,false,true': [nan, 0.2222222222222222], 'false,false,false': [0.1746437971298643, nan], 'false,true': [0.16253627595355527, 0.15565666058296226], 'false,true,false': [0.069239242951227, 1.5491484064537068e-17], 'true': [0.00021540612074660848, 0.0005292656561108888]}
{'': [0.0003592439368258886, 0.1418248142053247], 'false': [0.137268944089966, 0.21048569892125157], 'false,false': [0.0, 0.21001610583616898], 'false,false,false': [0.21001610583616898, nan], 'false,true': [0.062078690380109575, 0.12118463258485022], 'false,true,true': [nan, 0.06207869038010969], 'true': [0.0003704175371096907, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.17433949773474833, 0.12837291480564383], 'true': [2.7468124784237246e-07, 0.2458795078530184], 'false': [0.12295015998000755, 0.22409944129552753], 'false,false': [0.0, 0.24009895704955583], 'false,false,false': [0.23999999999999994, 0.24000000000000005], 'true,true': [2.7468124784237246e-07, nan], 'false,false,true': [nan, 0.0]}
{'': [0.03259905423043057, 0.13082554330797394], 'false': [0.092911966074768, 0.13881706150657708], 'false,false': [5.410973336820539e-06, 0.14042088726986565], 'false,false,false': [0.13555391460588087, 0.17746938838114887], 'true': [0.035024619612946804, 0.0], 'true,true': [0.0014482984438015656, 0.09182391811689619], 'true,false': [nan, 0.0]}
{'': [0.12639651588228107, 0.14036191110184978], 'false': [0.24008157221759366, 0.13448149741570248], 'false,false': [0.13448149741570248, nan], 'true': [0.04274149593424292, 0.005841584801377232], 'true,true': [0.005304554992071386, 0.03590933895494378], 'true,true,false': [nan, 0.03590933895494373], 'true,true,true': [0.005831602057246499, 0.0]}
{'': [0.002645227183463787, 0.10528226907007532], 'false': [0.10234814100417669, 0.15649912528338253], 'false,false': [0.0, 0.1711924734029492], 'false,false,false': [0.1711924734029492, nan], 'false,true': [0.09655189691333628, 0.000531645085529654], 'false,true,true': [nan, 0.09655189691333632], 'true': [-4.625929269271485e-18, 0.0016629562344006143], 'false,false,true': [0.0, nan]}
{'': [0.02479178195838631, 0.07988755617057029], 'false': [0.056515599964445315, 0.09579091191082059], 'false,false': [3.636807494470743e-06, 0.09659394240144689], 'false,false,false': [0.09243168847598841, 0.12730158318866883], 'false,true': [0.061604229317834956, 0.04994095833806226], 'false,true,false': [0.0, 0.0490829726681006], 'true': [0.001948381700176735, 0.06401080370794629], 'true,false': [0.0, 0.0006148744574723067]}
{'': [0.01635052450522498, 0.08262129344576682], 'false': [0.058200002395120375, 0.10052935371318307], 'false,false': [0.18838670479577196, 0.09792664689391888], 'false,false,false': [0.09286193795152553, 0.1444085066616277], 'true': [0.0015971571695878248, 0.04137893942075268], 'true,true': [0.0015971571695878248, nan], 'true,true,true': [9.955515166137907e-07, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 5.241
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.1020513741239026;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.09727936988212063;  // std dev = 4.091, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | | | else return 0.1711260343361525;  // std dev = 5.307, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.508243899526118;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6921711821842446;  // std dev = 3.199, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.15668139596069938;  // std dev = 0.135, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.021127532178031285;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.4378655847154357;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.44425532563517334;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.07547419385955498;  // std dev = 3.850, 101.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=26 */
%   | | | else return 0.16659394125862304;  // std dev = 1.959, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6937445117540721;  // std dev = 0.996, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14025551541245512;  // std dev = 0.033, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return 0.09144031623111407;  // std dev = 1.069, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.441667389630467;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.016921363847497088;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43658399550958177;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.444757028945841;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.07177667590315627;  // std dev = 3.475, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | | | else return -0.0074772377639857005;  // std dev = 1.560, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.07094881328632806;  // std dev = 2.586, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.18682235689260987;  // std dev = 2.894, 58.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=26 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5847167802887524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.36079528107957815;  // std dev = 1.105, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.12240905875795469;  // std dev = 0.878, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.34082319463516775;  // std dev = 0.000642, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.32269996265221923;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.08471473159600287;  // std dev = 1.594, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.02995330764865317;  // std dev = 1.361, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.2107796665111951;  // std dev = 1.602, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.08758515784744325;  // std dev = 4.659, 166.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=55 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4396580562948117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.18755048972413135;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06367198491080737;  // std dev = 1.404, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14164506015878256;  // std dev = 0.330, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.1581119910370482;  // std dev = 0.725, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.3357686809750917;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(A, G), phenotype(A, H) )
%   | | | then return 0.04063464388699868;  // std dev = 1.272, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.18091180056230188;  // std dev = 1.923, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else return -0.12245667160070561;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25834748239479655;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.0039042807554976115;  // std dev = 4.027, 152.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=35 */
%   | | | else return 0.083493748567467;  // std dev = 3.085, 72.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2791725171129328;  // std dev = 0.087, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5775845762568366;  // std dev = 0.179, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17588252753571607;  // std dev = 0.053, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.5710631750340677;  // std dev = 0.148, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.18247414413899316;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2009993736293824;  // std dev = 2.762, 54.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=30 */
%   | | | else return -0.1236021491425803;  // std dev = 1.171, 43.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.05289353008458514;  // std dev = 0.632, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.06521285617655377;  // std dev = 0.588, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1946455246769636;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.01663593151041502;  // std dev = 0.858, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.441184541176269;  // std dev = 1.446, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | | else return 0.333191935211503;  // std dev = 2.014, 47.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.13487063571640248;  // std dev = 0.174, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.1616965159564617;  // std dev = 0.271, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2146451953188625;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2628608204537887;  // std dev = 0.723, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10535002538253248;  // std dev = 1.012, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19226018856475174;  // std dev = 0.062, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.8722870131871684;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1910713064986497;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.024087355023137157;  // std dev = 0.226, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.19969193874330857;  // std dev = 0.739, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.007212165838128664;  // std dev = 1.771, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.23051827035391748;  // std dev = 1.077, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.13280052887380592;  // std dev = 1.479, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.001934591257885435;  // std dev = 3.172, 144.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13849917266438413;  // std dev = 0.097, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(A, F), interaction(D, G) )
%   | | then if ( complex(G, H), enzyme(G, I) )
%   | | | then return 0.11919336643181443;  // std dev = 0.541, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.01347136237093116;  // std dev = 0.748, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return -0.07868009615715509;  // std dev = 1.340, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | | else return 0.010533992534819367;  // std dev = 0.326, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, K) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.05539202214495617;  // std dev = 1.952, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | | | else return 0.17969413691257533;  // std dev = 0.806, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return -0.028808860113613204;  // std dev = 2.667, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | | else return 0.01861125478477874;  // std dev = 2.029, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.450', 'seconds']
Refined model CLL: -0.191831


******************************************
Best model found
******************************************
Results 

CLL : -0.196275 

AUC ROC : 0.984385 

AUC PR : 0.270299 

Precision : 0.190586 

Recall : 0.875887 

F1 : 0.313054 

Total Learning Time : 5.241 

Total Inference Time : 7.037057161331177 

Total revision time: 21.434091190338137
Best scored revision CLL: -0.191831


Results 

CLL : -0.196275 

AUC ROC : 0.984385 

AUC PR : 0.270299 

Precision : 0.190586 

Recall : 0.875887 

F1 : 0.313054 

Total Learning Time : 26.95855770492554 

Total Inference Time : 7.037057161331177 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.298
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0894922186816008;  // std dev = 4.881, 134.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=31 */
%   | | | else return 0.1939698306218996;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6368881410330106;  // std dev = 0.946, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6564056347306655;  // std dev = 3.715, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | | else return -0.15880268679041268;  // std dev = 0.087, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | else if ( location(A, K) )
%   | | | then return 0.20037491426869272;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.42048922140419775;  // std dev = 1.285, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.44880324438178604;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07681963266580709;  // std dev = 4.400, 134.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5847302139538986;  // std dev = 2.462, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.146186091341006;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8074901977711851;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.005115990280059856;  // std dev = 1.690, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.47222014351116604;  // std dev = 0.031, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.4711505047102339;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4523685950595319;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4892912196665802;  // std dev = 2.015, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0.03826281909876641;  // std dev = 5.189, 237.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5566293910515004;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09187874291064815;  // std dev = 1.640, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.35236288327472476;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27078412753032804;  // std dev = 0.958, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.06810295020437898;  // std dev = 5.846, 270.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4184509238099311;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06770433202492769;  // std dev = 1.628, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18291876248936906;  // std dev = 0.956, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.39950888824090325;  // std dev = 0.218, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32134738016799635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.027414200786847125;  // std dev = 2.833, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.30078656465270903;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06877254949913371;  // std dev = 4.646, 169.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=51 */
%   | | | else return 0.082479178000946;  // std dev = 2.196, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2732728197249885;  // std dev = 0.231, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.26719586634959047;  // std dev = 0.739, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.013761141661361664;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4703859404497819;  // std dev = 1.804, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.1785502206877344;  // std dev = 0.811, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.07130571510864742;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06310402738382129;  // std dev = 4.422, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19509723013637448;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.13871360016270984;  // std dev = 0.959, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3680515645742649;  // std dev = 3.355, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.1506396206306977;  // std dev = 0.235, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.3096538269249387;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.018752979252411144;  // std dev = 1.426, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17927675948108898;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.17383043901068077;  // std dev = 0.738, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22113243826068657;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0026381433380035513;  // std dev = 1.817, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1709984013296647;  // std dev = 0.984, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.06029219254912166;  // std dev = 1.500, 77.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20185408950596023;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.036367366731338814;  // std dev = 3.972, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
%   | | | else return 0.12547478333698248;  // std dev = 1.290, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14287698596199583;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.17643125104861682;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.7177650597058048;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06886772886705358;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.029809140500119874;  // std dev = 2.648, 137.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17127804800663943;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.028966732522690858;  // std dev = 3.827, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | | else return -0.007891221208237927;  // std dev = 1.411, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.099', 'seconds']
Parameter learned model CLL:-0.201312 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.881, 103, 31], 'false,false,true,false': [5.467, 89, 45], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.946, 1, 10], 'false,true,true': [0.0, 0, 7], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [3.715, 17, 76], 'false,false,true,false': [0.087, 160, 0], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.285, 2, 11], 'true,false': [0.923, 1, 6], 'false,true,true': [4.4, 100, 34], 'false,true,false,true': [2.462, 7, 48], 'false,true,false,false': [0.0, 89, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.69, 16, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.031, 0, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.103, 0, 3], 'false,true,true,false': [2.015, 6, 21], 'false,true,false': [5.189, 179, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.64, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.958, 1, 10], 'false,true': [5.846, 188, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.628, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.956, 1, 9], 'true,true,false': [0.218, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.833, 52, 19], 'false,false,true': [0.016, 0, 8], 'false,false,false,true': [4.646, 118, 51], 'false,false,false,false': [2.196, 20, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.231, 0, 15], 'true,true,true,false': [0.739, 1, 1], 'true,true,false,true': [0.811, 1, 3], 'true,true,false,false': [1.804, 5, 33], 'true,false': [0.811, 103, 0], 'false,true': [0.912, 1, 5], 'false,false,true': [4.422, 105, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.959, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.355, 15, 82], 'false,true,false': [0.235, 180, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.426, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.096, 0, 9], 'true,false,true': [0.738, 1, 2], 'true,false,false': [0.069, 0, 5], 'false,true,true': [1.817, 31, 13], 'false,true,false,true': [0.984, 1, 8], 'false,true,false,false': [1.5, 66, 11], 'false,false,true': [0.004, 0, 5], 'false,false,false,true': [3.972, 96, 47], 'false,false,false,false': [1.29, 6, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.082, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.882, 1, 3], 'false,true': [2.648, 105, 32], 'false,false,true': [0.004, 0, 5], 'false,false,false,true': [3.827, 105, 47], 'false,false,false,false': [1.411, 11, 4]}]
{'': [0.05246913580246885, 0.21082899305555605], 'false': [-2.5376526277146434e-16, 0.20364483732475633], 'false,false': [0.20316328803742514, 0.21301775147928975], 'false,false,false': [0.21301775147928975, nan], 'false,false,true': [0.1778235687235476, 0.22304522165293056], 'true': [0.07100591715976314, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05204485709620757, 0.21299725160908287], 'false': [0.10937500000000006, 0.21015136325803183], 'false,false': [0.20907970391239197, 0.2314049586776859], 'false,false,false': [0.2314049586776859, nan], 'false,false,true': [0.148426875224573, 4.756574378319001e-05], 'false,true': [-6.344131569286608e-17, 0.0], 'true': [-1.2688263138573217e-16, 0.0814411816038545], 'false,true,false': [nan, 0.0]}
{'': [0.12529732881384384, 0.15848368339437507], 'false': [0.1575488950843778, 0.1659940305321317], 'false,false': [0.1659940305321317, nan], 'false,false,true': [0.0, 0.1428495026844918], 'false,true': [0.14446877779645195, 0.16820022351012143], 'false,true,false': [0.11018960425977704, -5.4887430430906614e-17], 'true': [0.12693786396642212, 0.12172952614017755]}
{'': [5.633565932918488e-05, 0.13962107006632102], 'false': [0.13604839979701888, 0.2064876570008106], 'false,false': [0.0, 0.20694323971342543], 'false,false,false': [0.20694323971342543, nan], 'false,true': [0.13582004037103393, 0.11359307903587787], 'false,true,true': [0.0035243718527959342, 0.15038323107449528], 'true': [5.978933643940865e-05, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.05261603139581619, 0.1296361756538516], 'false': [0.12657470582552166, 0.18424215044036035], 'false,false': [0.0, 0.18920075926665686], 'false,false,false': [0.18920075926665686, nan], 'true': [0.0, 0.0835108685924573], 'false,false,true': [nan, 0.0], 'true,true': [0.0, nan]}
{'': [0.06708918052719356, 0.12588279529036153], 'false': [0.11306519171787256, 0.12958028176887115], 'false,false': [3.395640780411158e-05, 0.13274465966440893], 'false,false,false': [0.127737571156422, 0.16079170895605618], 'true': [0.07108974386771463, 0.0], 'true,true': [0.09140552867186728, 0.007910550919294324], 'true,false': [nan, 0.0]}
{'': [0.11151539060488352, 0.1290124932669512], 'false': [0.1386195719238987, 0.12863071200894205], 'false,false': [0.12863071200894205, nan], 'true': [0.10767616803128673, 0.00638574729747043], 'true,true': [0.06562486964479489, 0.1111026919053357], 'true,true,false': [0.16423678017536011, 0.08565189599469293], 'true,true,true': [0.003566508633427571, 0.27332163550018324]}
{'': [0.0518530889305914, 0.10369442426631452], 'false': [0.10205149791714999, 0.13210424823590095], 'false,false': [0.0, 0.13562224166975717], 'false,false,false': [0.13562224166975717, nan], 'false,true': [0.11603045787770934, 0.00030563747753680696], 'false,true,true': [nan, 0.1160304578777096], 'true': [0.0, 0.08361418715342457], 'false,false,true': [0.0, nan]}
{'': [0.05287621648508552, 0.08678131252486723], 'false': [0.053728866647048186, 0.1116357072379051], 'false,false': [3.362320080774195e-06, 0.11447710851137882], 'false,false,false': [0.1103205979954059, 0.1664940400514853], 'false,true': [0.0750243117671536, 0.042454834840589546], 'true': [0.001018871429936816, 0.10523855963450797], 'true,false': [0.18154495882315755, 0.0009563422128892774], 'false,true,false': [0.10768052960255543, 0.029232702924883534]}
{'': [0.08810770172604733, 0.07781506122841406], 'true': [0.05164884128321011, 0.19462827657424756], 'false': [0.05118266064607061, 0.09744796354049383], 'false,false': [2.607153129774442e-06, 0.09974904322996088], 'false,false,false': [0.0963679701433335, 0.1327740968321892], 'true,true': [0.0007931593939367257, 0.0], 'true,true,true': [-3.96508223080413e-18, 0.0011122642556945044], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.449
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, A), recursion_proteinclass(E, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.0636283871543069;  // std dev = 3.452, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | | else return 0.16047451649486202;  // std dev = 6.734, 215.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=65 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7632896189784878;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7032809129488894;  // std dev = 3.220, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.1574210368307214;  // std dev = 0.144, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.05540043001645852;  // std dev = 1.537, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.03866328267904889;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.3299800750167461;  // std dev = 0.406, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return 0.5541615135851397;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.1335988579839418;  // std dev = 2.155, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.03615367582510671;  // std dev = 3.758, 114.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=24 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5976427381523541;  // std dev = 2.368, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.14340972302129468;  // std dev = 0.306, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.5924353128674814;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2711164258659915;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.15860576238207427;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3541001058593853;  // std dev = 0.295, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return -0.05998792530514313;  // std dev = 0.676, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.22797568715595357;  // std dev = 2.970, 49.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | | else return -0.13223963970232905;  // std dev = 0.172, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.08695457643157817;  // std dev = 4.589, 157.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=48 */
%   | | | else return 0.15532819514481028;  // std dev = 1.673, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.48781771816214836;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.08452227429013759;  // std dev = 1.604, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.1607635869276774;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.21975509318286857;  // std dev = 0.349, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.28491386245735373;  // std dev = 0.224, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( complex(A, G), complex(F, G) )
%   | | | then return -0.11333853258793912;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1188112143012626;  // std dev = 2.946, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.11919040145041596;  // std dev = 1.948, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.042630323872728554;  // std dev = 4.581, 197.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=53 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.36898899310785616;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.17612132792705656;  // std dev = 1.466, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.1368208685750241;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2570061435676593;  // std dev = 0.295, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.287912233095031;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.36066852873521793;  // std dev = 1.817, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return -0.17035388539741508;  // std dev = 0.484, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11083373982693016;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.15804938863268927;  // std dev = 1.350, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2976293325624268;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return -0.034314677515564634;  // std dev = 1.509, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.0839884915740203;  // std dev = 4.637, 175.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=57 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), complex(A, E) )
%   | then if ( phenotype(A, F), recursion_proteinclass(C, B) )
%   | | then return 0.2651435851257775;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(C, G), enzyme(C, H) )
%   | | | then return 0.16306496694728156;  // std dev = 0.952, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.010607867265793509;  // std dev = 2.710, 92.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=23 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.0854870772983525;  // std dev = 0.999, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.03716582469245869;  // std dev = 1.048, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( complex(C, K), enzyme(C, L) )
%   | | | then return 0.15663530001889486;  // std dev = 2.131, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.05432264156514166;  // std dev = 4.028, 142.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=46 */
%   else if ( complex(A, M), phenotype(A, N) )
%   | then return 0.4406058387906016;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.15020384494082106;  // std dev = 0.974, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1766393551366147;  // std dev = 0.276, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.23595705230001957;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.22090114664169974;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.5276512335117753;  // std dev = 0.972, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.3979906143147184;  // std dev = 2.702, 73.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=64 */
%   | | else return -0.15795909514955364;  // std dev = 0.032, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2069085608071699;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.09142911720435241;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.05018081437124313;  // std dev = 1.059, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2517570779582995;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.12051980811704603;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2153549280852128;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( enzyme(H, J), interaction(H, A) )
%   | | | then return 0.0942124898413718;  // std dev = 0.959, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.006549967502890644;  // std dev = 2.582, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | | else return -0.08855661981752744;  // std dev = 0.164, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.03143543712797594;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.05034418579462086;  // std dev = 2.939, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | | | else return 0.004202133339357597;  // std dev = 2.600, 80.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1312712128721072;  // std dev = 0.290, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16735557135118592;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.2354667888033365;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.012566025216073255;  // std dev = 2.940, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | | else return -0.10044379134062795;  // std dev = 0.568, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.18773463816608246;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.0024301384487152877;  // std dev = 3.519, 131.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=39 */
%   | | | else return -0.060753294522904226;  // std dev = 2.217, 64.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.773', 'seconds']
Refined model CLL: -0.208584


******************************************
Best model found
******************************************
Results 

CLL : -0.181725 

AUC ROC : 0.988986 

AUC PR : 0.305701 

Precision : 0.266667 

Recall : 0.724528 

F1 : 0.389848 

Total Learning Time : 8.449 

Total Inference Time : 26.09669780731201 

Total revision time: 44.23193719100952
Best scored revision CLL: -0.201312


Results 

CLL : -0.181725 

AUC ROC : 0.988986 

AUC PR : 0.305701 

Precision : 0.266667 

Recall : 0.724528 

F1 : 0.389848 

Total Learning Time : 49.756403705596924 

Total Inference Time : 26.09669780731201 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.562
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09344305274657119;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.12644161802634063;  // std dev = 5.674, 164.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15502393509951232;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7268735122674133;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8239186413684935;  // std dev = 0.987, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1569132170118242;  // std dev = 0.023, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | | else if ( location(A, K) )
%   | | | then return 0.16582488793049513;  // std dev = 3.480, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.5048775613333963;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5719988521761975;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5650663047861899;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0527381854449638;  // std dev = 2.099, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6326789767696622;  // std dev = 1.679, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.14039681257094502;  // std dev = 0.265, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5960526174841312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1626206799192753;  // std dev = 3.551, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1547574856497483;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4288622466621297;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.42037926479283466;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.43939084189563915;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6014635512510464;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.07554575826143212;  // std dev = 4.239, 177.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.44843194547397947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5563653055730418;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08905295048931712;  // std dev = 3.550, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.1266074748601866;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33313446335588115;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22299280431195453;  // std dev = 0.958, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.0489376402214857;  // std dev = 4.343, 204.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.34176464016165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4182548167535288;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08658966220028495;  // std dev = 3.600, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.11616004181479674;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27317008878994137;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.37803934648644866;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2694913293690093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.26687515803520223;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3212144050999374;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0693179311004811;  // std dev = 0.962, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2722370989818705;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05245649204440604;  // std dev = 4.095, 173.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=49 */
%   | | | else return 0.06585366001011178;  // std dev = 3.712, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2460488286575008;  // std dev = 0.136, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.23766923178948496;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23610009817665145;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6195944141022732;  // std dev = 1.048, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.19256237997901138;  // std dev = 0.641, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21888581013528335;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06862688755437056;  // std dev = 3.396, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18085410302583568;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18605472373676263;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43657679457007054;  // std dev = 1.216, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.1407688234338044;  // std dev = 0.409, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19737559576393893;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.01569042457180411;  // std dev = 3.122, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15937178003310104;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.14275081176711213;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.01991030564536427;  // std dev = 0.706, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06366558008717378;  // std dev = 0.395, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.19461554400992964;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.018929914069481604;  // std dev = 1.291, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.009044825505285256;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.023401636770350613;  // std dev = 2.813, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | | else return 0.06601764283685103;  // std dev = 2.980, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13165710706672035;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16101218590432917;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1450800594317333;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16160728567436955;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.016523539287036055;  // std dev = 1.381, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15868217177228433;  // std dev = 0.000985, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.030088896852496754;  // std dev = 2.821, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | | else return -0.005499442285952064;  // std dev = 3.122, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.824', 'seconds']
Parameter learned model CLL:-0.178575 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.473, 26, 8], 'false,false,true,false': [5.674, 120, 44], 'false,false,false,true': [3.655, 45, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.027, 0, 8], 'false,true,true': [0.913, 1, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.987, 1, 52], 'false,false,true,false': [0.023, 159, 0], 'false,false,false,true': [3.48, 37, 18], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.02, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.099, 28, 8], 'false,true,false,true': [1.679, 3, 48], 'false,true,false,false': [0.265, 120, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.551, 36, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.032, 0, 11], 'true,false': [0.019, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.116, 0, 3], 'false,true,false': [4.239, 125, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.55, 42, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.004, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.958, 1, 9], 'false,true': [4.343, 148, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.6, 40, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.032, 0, 7], 'true,true,false': [0.069, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.962, 20, 3], 'false,false,true': [0.018, 0, 6], 'false,false,false,true': [4.095, 124, 49], 'false,false,false,false': [3.712, 43, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.136, 0, 12], 'true,true,true,false': [0.025, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.048, 1, 36], 'true,false': [0.641, 114, 0], 'false,true': [0.001, 0, 5], 'false,false,true': [3.396, 76, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.02, 0, 6], 'true,false': [0.016, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.216, 1, 56], 'false,true,false': [0.409, 137, 0], 'false,false,true,true': [0.022, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.122, 49, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.04, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.706, 1, 4], 'false,true,true': [0.395, 8, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.291, 46, 14], 'false,false,true': [0.912, 1, 5], 'false,false,false,true': [2.813, 83, 36], 'false,false,false,false': [2.98, 36, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.002, 0, 5], 'true,true,true,false': [0.033, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.046, 0, 4], 'false,true': [1.381, 55, 17], 'false,false,true': [0.000985, 0, 5], 'false,false,false,true': [2.821, 73, 36], 'false,false,false,false': [3.122, 50, 20]}]
{'': [0.06222222222222188, 0.20453070934256123], 'false': [-1.4802973661668753e-16, 0.19741082028379353], 'false,false': [0.19365370880522478, 0.2076124567474044], 'false,false,false': [0.2087402343749995, 0.18750000000000003], 'false,false,true': [0.179930795847751, 0.1963117192147539], 'true': [0.08999999999999977, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [8.940649933978204e-05, 0.19884834556289716], 'false': [0.12244897959183687, 0.1952965407744747], 'false,false': [0.18497806475049977, 0.2259160025690168], 'false,false,false': [0.2201714444965934, 0.22222222222222224], 'false,false,true': [0.018378633337236803, 3.4249514744763758e-06], 'false,true': [0.13888888888888892, 0.0], 'true': [0.0, 9.126913474255538e-05], 'false,true,false': [nan, 0.0]}
{'': [0.00011808527048521153, 0.15930291024714038], 'false': [0.13878387039213763, 0.22438738232318106], 'false,false': [0.22448937630619203, 0.2222222222222222], 'false,false,true': [0.0, 0.22520226877404428], 'false,false,false': [0.2222222222222222, nan], 'false,true': [0.12244029651738507, 0.1419809506811954], 'false,true,false': [0.05527956636417964, 0.0005836882598176126], 'true': [6.936680898717018e-05, 0.0001340268823311619]}
{'': [0.00011162114085586492, 0.1333888379816319], 'false': [0.10454958510330636, 0.21106345778024027], 'false,false': [0.0029124025555684607, 0.21243900597930224], 'false,false,false': [0.21003376860829112, 0.24000000000000005], 'false,true': [0.008300305361344684, 0.10151779765212267], 'false,true,true': [0.0, 0.004500183035675602], 'false,false,true': [0.0, 0.0], 'true': [9.283044873707105e-05, 0.00012397957419552075]}
{'': [0.06388926478983899, 0.12229429880807095], 'false': [0.09247111708351302, 0.21558670297360574], 'false,false': [0.0014626867787642106, 0.21982962564262473], 'false,false,false': [0.21966565815633388, 0.2222222222222222], 'true': [3.435931314244023e-06, 0.09178845086678519], 'false,false,true': [0.0, 0.0], 'true,true': [3.435931314244023e-06, nan]}
{'': [0.0026593738955257135, 0.12115991480389122], 'false': [0.040243248132641345, 0.12736745599276703], 'false,false': [5.423475254906496e-05, 0.1294452838307085], 'false,false,false': [0.09690754401440971, 0.2186633793318111], 'true': [0.0030751752205188613, 0.0006260971874530638], 'true,true': [0.00014338017914315517, 0.0012073685003158863], 'true,false': [1.7110881119636323e-06, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.12485229705540268, 0.09949788263104896], 'true': [0.0504130765340722, 0.003602493398799283], 'false': [3.178722119190347e-07, 0.1029748773538375], 'false,false': [0.1029748773538375, nan], 'true,true': [0.0013771969875896145, 0.032679272747146174], 'true,true,false': [0.0, 0.02969228869418956], 'true,true,true': [0.0015436193611276146, 0.0003184761946441114]}
{'': [5.393146958972734e-05, 0.09387346659506801], 'false': [0.07764980929845303, 0.13815539316649417], 'false,false': [0.00024336811693246446, 0.1412229980571951], 'false,false,false': [0.1412229980571951, nan], 'false,true': [0.02595037227388574, 0.0012232277066649851], 'false,true,true': [nan, 0.02595037227388574], 'false,false,true': [0.00024336811693246446, nan], 'true': [6.844984359911006e-05, 3.145135089174106e-05]}
{'': [0.03755536744854489, 0.07852094067083897], 'false': [0.02721349539925645, 0.09782255845272474], 'false,false': [0.13865007346843117, 0.09635235915112872], 'false,false,false': [0.06649018542358924, 0.15857451402046932], 'true': [0.00018039046455370047, 0.085122938342075], 'true,false': [0.0, 0.09963256101978211], 'false,true': [0.017309174304841246, 0.028313394790396584], 'false,true,false': [0.0, 0.027786153240409436]}
{'': [0.0004138249625261968, 0.07748152918706137], 'false': [0.02649415971165764, 0.0970570204053119], 'false,false': [1.939113681015403e-07, 0.0992162233320936], 'false,false,false': [0.07299039889209437, 0.13928233966444262], 'true': [0.00027207369681308267, 0.0005248195113797191], 'true,true': [0.000338925871332503, 0.0], 'true,true,true': [1.0136693717494038e-06, 0.0003635374661240485], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.265
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( enzyme(H, J), enzyme(A, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.13401100406502958;  // std dev = 3.404, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.265556342506919;  // std dev = 3.611, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | | else return 0.13457169932715315;  // std dev = 4.960, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8364109621918213;  // std dev = 0.057, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1601409452668491;  // std dev = 0.164, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.03583859915415997;  // std dev = 2.004, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.18938924822596317;  // std dev = 3.101, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41250929388914165;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.06663643250149774;  // std dev = 0.797, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.14899127247205288;  // std dev = 1.770, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6779401673107205;  // std dev = 0.269, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14019622076241087;  // std dev = 0.103, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11603767934354742;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else return 0.16944675757882596;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4325548053752744;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.38803904519774124;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5952816460035227;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.03083630785095671;  // std dev = 1.890, 66.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=9 */
%   | | | else return 0.05814793032625891;  // std dev = 3.741, 150.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5265599692876213;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.0849044486322739;  // std dev = 3.150, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.24709215709405774;  // std dev = 1.783, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33104110615256727;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.47433551519992195;  // std dev = 0.694, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.13498537414001346;  // std dev = 0.145, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.029315314767990132;  // std dev = 1.773, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.10054737558862636;  // std dev = 2.684, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3964641082373176;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.21730503660699568;  // std dev = 2.818, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.057857963582188254;  // std dev = 2.008, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2792670109543995;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), interaction(G, G) )
%   | | | then return -0.020654432346181955;  // std dev = 0.343, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07679422284592548;  // std dev = 0.465, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.11845815438045992;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.0668526976170441;  // std dev = 0.475, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.25038036637990824;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.007319224594423218;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.020559430921638793;  // std dev = 3.811, 189.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=49 */
%   | | | else return 0.10196687859181977;  // std dev = 3.564, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.22657172017459104;  // std dev = 0.079, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.11263909381076387;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5791096884248761;  // std dev = 0.185, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else return -0.1841486237075332;  // std dev = 0.083, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.23748418119109208;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.02508735009057727;  // std dev = 1.427, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.03503498839813716;  // std dev = 0.874, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0702332442485099;  // std dev = 2.277, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return 0.12926628844608828;  // std dev = 1.178, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1815701732991926;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.0665381512032002;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1935769537918334;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.4058845063192278;  // std dev = 0.457, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.31536258314569904;  // std dev = 1.497, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else return -0.13122965655464833;  // std dev = 0.032, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.24852345895848094;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.028050873001137795;  // std dev = 2.967, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return -0.0561316665133826;  // std dev = 0.753, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15931700849913025;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17612274066575778;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( complex(A, G), enzyme(A, H) )
%   | | | then return -0.024797421936328026;  // std dev = 0.289, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.0798513682007817;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.17846008752338505;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.006699937799917317;  // std dev = 1.226, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1767724129754839;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.010199406646338546;  // std dev = 2.095, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.03947156424686891;  // std dev = 3.326, 136.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14487804735487858;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1410621439730164;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.03336487583177903;  // std dev = 1.118, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return -0.0018079837015523214;  // std dev = 0.860, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.15962757081730589;  // std dev = 0.282, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.10821069983209025;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.15262573845966948;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return -0.04297664606735242;  // std dev = 2.160, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.013524554100104395;  // std dev = 3.427, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '36.669', 'seconds']
Refined model CLL: -0.175918


******************************************
Best model found
******************************************
Results 

CLL : -0.193106 

AUC ROC : 0.984678 

AUC PR : 0.216041 

Precision : 0.13778 

Recall : 0.909747 

F1 : 0.239316 

Total Learning Time : 3.265 

Total Inference Time : 2.9570651054382324 

Total revision time: 10.716395236968994
Best scored revision CLL: -0.175918


Results 

CLL : -0.193106 

AUC ROC : 0.984678 

AUC PR : 0.216041 

Precision : 0.13778 

Recall : 0.909747 

F1 : 0.239316 

Total Learning Time : 16.240861751556395 

Total Inference Time : 2.9570651054382324 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.481
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08621911053810886;  // std dev = 3.168, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return 0.18046298468628857;  // std dev = 5.141, 121.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7473839334745777;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6084286728427661;  // std dev = 0.951, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7322259441501947;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7836207517934405;  // std dev = 1.676, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.16127743051679472;  // std dev = 0.070, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0965042953724045;  // std dev = 2.862, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.17111998811631232;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5895139151663232;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.599730410446639;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06211231462110369;  // std dev = 2.789, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6422369903758516;  // std dev = 1.389, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14420259566258467;  // std dev = 1.49e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6441957149958389;  // std dev = 0.225, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11895866753595508;  // std dev = 2.447, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.42202621162931975;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3823649316492059;  // std dev = 0.981, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return -0.5652276811070457;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6564497605451153;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.49635023021117336;  // std dev = 0.697, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.06207511714894481;  // std dev = 4.269, 176.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.39303544565061166;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5226510986606197;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.11981104341801807;  // std dev = 2.714, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.24052612019966502;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3500448410732342;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21519810085240515;  // std dev = 0.943, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.07104429226297412;  // std dev = 4.400, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3041514982642607;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3489020072699391;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06118390596422908;  // std dev = 2.532, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.013718678324132028;  // std dev = 1.488, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2783626191152734;  // std dev = 0.054, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.238503668104561;  // std dev = 0.693, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.24383689932300923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2749047315028534;  // std dev = 0.055, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06424845087706807;  // std dev = 1.278, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3092137425866756;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.0626389451388094;  // std dev = 4.002, 148.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | | | else return 0.06681452923069481;  // std dev = 3.014, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2602461104218366;  // std dev = 0.214, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2165387551582828;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.28003303391345113;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5452258752255201;  // std dev = 1.377, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1863154237297642;  // std dev = 0.587, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23691406108561533;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0594413456165301;  // std dev = 3.329, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17898958973007084;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21357786376924803;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38053272112787834;  // std dev = 2.139, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return -0.14630407317574615;  // std dev = 0.233, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.18221336620228065;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.6083346964388023;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05381403651026694;  // std dev = 2.405, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15692003327095283;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2770256293387774;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.04102606195076194;  // std dev = 0.922, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.1071942817053632;  // std dev = 0.408, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2641715089058046;  // std dev = 0.173, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.02907497864759574;  // std dev = 1.710, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16518232945084457;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.031072725332932153;  // std dev = 2.809, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return 0.027502016444571065;  // std dev = 2.453, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1348059166334069;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14716098264115213;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.19435482321586428;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10198463372768847;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.028931622826943504;  // std dev = 0.518, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.011022087814838382;  // std dev = 1.715, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.06694444017178341;  // std dev = 0.730, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.043156867440922037;  // std dev = 2.679, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | | | else return 0.038958065885133876;  // std dev = 2.429, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.856', 'seconds']
Parameter learned model CLL:-0.184846 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.168, 44, 13], 'false,false,true,false': [5.141, 82, 39], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.951, 1, 7], 'false,true,true': [0.083, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.676, 3, 52], 'false,false,true,false': [0.07, 142, 0], 'false,false,false,true': [2.862, 32, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.043, 0, 11], 'true,false': [0.034, 0, 4], 'false,true,true': [2.789, 46, 14], 'false,true,false,true': [1.389, 2, 42], 'false,true,false,false': [1.49e-08, 81, 0], 'false,false,true,true': [0.225, 0, 3], 'false,false,true,false': [2.447, 21, 9], 'false,false,false,true': [1.091, 2, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.981, 1, 15], 'true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.697, 1, 6], 'false,true,false': [4.269, 127, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.714, 23, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.03, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.943, 1, 6], 'false,true': [4.4, 123, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.063, 0, 2], 'false,false,false,true': [2.532, 24, 9], 'false,false,false,false': [1.488, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.054, 0, 9], 'true,true,false': [0.693, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.055, 0, 2], 'false,true': [1.278, 28, 5], 'false,false,true': [0.033, 0, 5], 'false,false,false,true': [4.002, 102, 46], 'false,false,false,false': [3.014, 32, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.214, 0, 13], 'true,true,true,false': [0.052, 0, 3], 'true,true,false,true': [0.042, 0, 3], 'true,true,false,false': [1.377, 2, 33], 'true,false': [0.587, 119, 0], 'false,true': [0.002, 0, 3], 'false,false,true': [3.329, 68, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.053, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.139, 5, 56], 'false,true,false': [0.233, 138, 0], 'false,false,true,true': [0.045, 0, 3], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [2.405, 27, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.037, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.922, 2, 5], 'false,true,true': [0.408, 20, 1], 'false,true,false,true': [0.173, 0, 6], 'false,true,false,false': [1.71, 51, 17], 'false,false,true': [0.001, 0, 3], 'false,false,false,true': [2.809, 69, 31], 'false,false,false,false': [2.453, 28, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.029, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.767, 1, 2], 'true,false': [0.518, 1, 3], 'false,true': [1.715, 67, 24], 'false,false,true': [0.73, 1, 3], 'false,false,false,true': [2.679, 63, 31], 'false,false,false,false': [2.429, 25, 12]}]
{'': [0.10380622837370206, 0.21391659197955823], 'false': [0.10937499999999978, 0.2057287934317492], 'false,false': [0.20679207170811836, 0.20118983234180587], 'false,false,true': [0.1760541705140038, 0.2184277030257502], 'false,false,false': [0.19834710743801665, 0.20999999999999988], 'false,true': [0.25, -1.4802973661668753e-16], 'true': [0.1224489795918365, 1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.06135642334294128, 0.1991463308429402], 'false': [0.0009757624251679634, 0.19374463507086676], 'false,false': [0.1939556023052105, 0.1928400614147158], 'false,false,true': [0.05106044848593647, 3.4339039449412254e-05], 'false,false,false': [0.19042704528817003, 0.2222222222222222], 'true': [-1.1102230246251565e-16, 0.1130585644572546], 'false,true': [0.0009757624251679634, nan]}
{'': [0.00022073762935423958, 0.16173152065132068], 'false': [0.14888077131619143, 0.21749277516105556], 'false,false': [0.20577071140666953, 0.23824806865759346], 'false,false,false': [0.23824806865759346, nan], 'false,false,true': [0.01692082525237611, 0.19957624947442837], 'false,true': [0.12964235159162876, 0.1565026990572566], 'false,true,false': [0.043830220331147966, 2.741291418827547e-18], 'true': [0.0001663612217660638, 0.00029372978129277305]}
{'': [0.10636696413846958, 0.128408036338862], 'false': [0.11039067588545093, 0.20953962870170748], 'false,false': [0.0037333816678245904, 0.2193110356580774], 'false,false,false': [0.2166962396969159, 0.25], 'false,true': [0.06358407301787439, 0.10354532778476778], 'true': [0.06019538411769926, 0.0], 'false,true,true': [0.0, 0.06946352956878436], 'false,false,true': [0.0, 0.0]}
{'': [0.06006731315464568, 0.12513817338682662], 'false': [0.10816639882088068, 0.1896965030245061], 'false,false': [0.0017800960500153895, 0.19708422319936877], 'false,false,false': [0.19424612162996577, 0.20139073005777156], 'true': [0.00010174911899491552, 0.12693759610284325], 'false,false,true': [0.0, 0.002002608056267313], 'true,true': [0.00010174911899491552, nan]}
{'': [0.028904081542655113, 0.11869362175210367], 'false': [0.0495030861137801, 0.12761151463110948], 'false,false': [0.00021555362652800892, 0.12937954257158443], 'false,false,false': [0.10821662813815647, 0.19745561813316045], 'true': [0.03483202964408474, 0.0012401774203591915], 'true,true': [0.00032589103661690496, 0.09592174886745045], 'true,false': [0.0, 0.001538529398420474], 'true,false,true': [0.0, nan]}
{'': [0.10441870143270468, 0.10958021397731206], 'false': [7.594419424069206e-07, 0.11197443395762895], 'false,false': [0.11197443395762895, nan], 'true': [0.05517640601018222, 0.0028990004401397247], 'true,true': [0.003320051272433358, 0.05505099706039843], 'true,true,false': [0.0005775283250194496, 0.05416800075370709], 'true,true,true': [0.003523104835822214, 0.0008880070131390971]}
{'': [0.0004861098731198406, 0.09370900108882027], 'false': [0.08225520130612823, 0.14586432248667522], 'false,false': [0.11769823310252632, 0.14830721196633437], 'false,false,false': [0.14830721196633437, nan], 'false,false,true': [0.0006894176336426731, 0.0], 'false,true': [0.07497107921535032, 0.0003947055712642992], 'false,true,true': [nan, 0.07497107921535029], 'true': [0.0, 0.000403611373290028]}
{'': [0.05835732434165766, 0.07538144084013686], 'false': [0.039636264480953816, 0.09765705001325556], 'false,false': [4.4206687355163865e-07, 0.09936661333279308], 'false,false,false': [0.07892020534779642, 0.15047352617959514], 'true': [0.0001347984526253898, 0.1172332815667774], 'true,false': [0.0, 0.1213362834276571], 'false,true': [0.007946167944573831, 0.04633425382695907], 'false,true,false': [0.004994229928510581, 0.043009456848868706]}
{'': [0.056302241677328765, 0.07403799057859775], 'false': [0.03232815784046211, 0.10115627391049449], 'false,false': [0.13304318503606927, 0.09983114446762355], 'false,false,false': [0.07635288253995277, 0.15946597022894604], 'true': [0.052396452342347355, 0.06706395554962528], 'true,true': [0.00010888847208297137, 0.16362726058909285], 'true,true,false': [0.0, 0.1962154123500572], 'true,true,true': [0.0, 0.00042232423557028026]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;location(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 3.117
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), interaction(K, A) )
%   | | | then return -0.008517731567154404;  // std dev = 1.862, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.19148226843284566;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.2510060779566552;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.16641961179124046;  // std dev = 5.325, 133.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), interaction(H, A) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7651233452772194;  // std dev = 1.907, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.16084329331215325;  // std dev = 0.140, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.2632572203768599;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.08474061775261214;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.3404234654539288;  // std dev = 0.902, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.006173152536308777;  // std dev = 2.557, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6515257355713124;  // std dev = 1.365, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.13996876917936593;  // std dev = 0.078, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(J, K) )
%   | | | then return 0.0317205827312609;  // std dev = 2.070, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.26766046324878623;  // std dev = 1.647, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( location(A, L) )
%   | | | then return 0.024746095469301628;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.008587237864031677;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 1.05e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.58248641584169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5536149578920074;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6108451825884574;  // std dev = 0.164, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.009163454905274815;  // std dev = 2.457, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | | else return 0.09729161617023592;  // std dev = 3.493, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5475204069215545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.01498001887813534;  // std dev = 2.359, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.20614912344934588;  // std dev = 1.750, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.32071184716014955;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return -0.13090895492276414;  // std dev = 0.594, 28.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | | else return 0.09516525817750283;  // std dev = 1.009, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.20054719221217895;  // std dev = 1.908, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.110011352683561;  // std dev = 3.401, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4117190751125667;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.028737872893851813;  // std dev = 1.932, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.229468444956174;  // std dev = 1.973, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.2366121263117978;  // std dev = 0.754, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.3167858387462955;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12354339560476606;  // std dev = 0.013, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.036632865480789645;  // std dev = 0.715, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.05429024663176185;  // std dev = 0.842, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25517224256948934;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.03888288255224781;  // std dev = 2.304, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.043959902891807755;  // std dev = 4.536, 165.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25265393990187995;  // std dev = 0.060, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.22723743657908146;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5714555941777422;  // std dev = 1.048, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1891239080760453;  // std dev = 0.092, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.20975771563253576;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5177058150574838;  // std dev = 0.192, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1779345006319106;  // std dev = 0.081, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.21366104148873863;  // std dev = 0.849, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.09193242314278699;  // std dev = 2.515, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1709314280231654;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1817155487279039;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.4281136323224188;  // std dev = 0.252, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.3390379821265789;  // std dev = 1.906, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return -0.11333339967008788;  // std dev = 0.165, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return -0.17081068291711962;  // std dev = 0.117, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.20783549672791968;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.16574751918953018;  // std dev = 1.537, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.016825892563500564;  // std dev = 1.742, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return -0.07725031883345676;  // std dev = 0.898, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.15199855173152566;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.24512235528341408;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.03212781802843676;  // std dev = 0.819, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(A, J), interaction(J, A) )
%   | | then return -0.0817972910586777;  // std dev = 0.187, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | else return 0.01433975859752883;  // std dev = 0.184, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.152147050391776;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return -0.027851781191855187;  // std dev = 2.152, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.022585465487597184;  // std dev = 2.979, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1511669941780626;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( location(C, E), interaction(D, C) )
%   | | | then return -0.35768331626447747;  // std dev = 0.708, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.20098607379786687;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18050046930129873;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.3570239502608024;  // std dev = 0.130, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.14160937414096791;  // std dev = 0.042, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then return -0.06135551475380448;  // std dev = 0.204, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.12820456510937836;  // std dev = 0.907, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.009849344757464908;  // std dev = 3.142, 132.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.818', 'seconds']
Refined model CLL: -0.175276


******************************************
Best model found
******************************************
Results 

CLL : -0.185714 

AUC ROC : 0.987182 

AUC PR : 0.264586 

Precision : 0.168148 

Recall : 0.869258 

F1 : 0.281787 

Total Learning Time : 3.117 

Total Inference Time : 3.099107265472412 

Total revision time: 11.026361654281615
Best scored revision CLL: -0.175276


Results 

CLL : -0.185714 

AUC ROC : 0.987182 

AUC PR : 0.264586 

Precision : 0.168148 

Recall : 0.869258 

F1 : 0.281787 

Total Learning Time : 16.550828168869018 

Total Inference Time : 3.099107265472412 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.24
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0972793698821198;  // std dev = 5.011, 138.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=33 */
%   | | | else return 0.1606699435028724;  // std dev = 5.011, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7614978247240214;  // std dev = 2.349, 75.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=69 */
%   | | | else return -0.15804472876507453;  // std dev = 0.053, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( location(A, I) )
%   | | | then return 0.2841631741793422;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08629209548187003;  // std dev = 4.331, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5633261452154688;  // std dev = 2.268, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return -0.1421709311188608;  // std dev = 3.94e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08341311772413644;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.00982710929726873;  // std dev = 1.410, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.41751358415830986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4055445997756991;  // std dev = 1.981, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else return 0.04938002283364346;  // std dev = 5.062, 219.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5529384823674068;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.058706704379803715;  // std dev = 1.708, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07725001349387645;  // std dev = 5.449, 229.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41571524512826197;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10712631516641864;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.05974052106674313;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2117431572946249;  // std dev = 0.612, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3194929043679141;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.05190653313991542;  // std dev = 2.569, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.14482775743051055;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.08196082302878678;  // std dev = 4.623, 174.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=55 */
%   | | | else return 0.0684515596008919;  // std dev = 1.888, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2471363794849802;  // std dev = 0.244, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2543403203537138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5472280507888118;  // std dev = 1.419, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18533786252359483;  // std dev = 0.555, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.03365839856125505;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.048273820284370356;  // std dev = 4.100, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.034292327807250715;  // std dev = 0.891, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.031436217788847295;  // std dev = 1.125, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36838853178933056;  // std dev = 3.112, 84.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=71 */
%   | | else return -0.14803979702031944;  // std dev = 0.241, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.17548485195181035;  // std dev = 0.544, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.22320686508683368;  // std dev = 1.213, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1862758808193979;  // std dev = 0.129, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.3839512214244258;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.21031422588893392;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03757206557227791;  // std dev = 1.661, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.08237435640869246;  // std dev = 0.609, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.01705744151384317;  // std dev = 1.692, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.03320707678357776;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.015271871124243398;  // std dev = 3.596, 137.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
%   | | | else return -0.002781165803489634;  // std dev = 1.428, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.03567702308587138;  // std dev = 0.815, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.2681383472928732;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.17132932157158898;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.058713050362857344;  // std dev = 0.414, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return 9.621800751017125E-4;  // std dev = 2.389, 105.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.27651480570054804;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.023949404601953946;  // std dev = 3.511, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | | else return -0.005379793339463015;  // std dev = 1.435, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.940', 'seconds']
Parameter learned model CLL:-0.191282 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [5.011, 105, 33], 'false,false,true,false': [5.011, 83, 36], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.349, 6, 69], 'false,false,true,false': [0.053, 161, 0], 'false,false,false,true': [1.491, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.331, 90, 34], 'false,true,false,true': [2.268, 6, 37], 'false,true,false,false': [3.94e-08, 82, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [1.41, 10, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.981, 6, 14], 'false,true,false': [5.062, 162, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.708, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true': [5.449, 158, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.301, 11, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.612, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.569, 53, 12], 'false,false,true': [1.095, 2, 3], 'false,false,false,true': [4.623, 119, 55], 'false,false,false,false': [1.888, 14, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.244, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.419, 2, 33], 'true,false': [0.555, 83, 0], 'false,true': [0.866, 1, 3], 'false,false,true': [4.1, 91, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.891, 1, 6], 'true,false': [1.125, 2, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.112, 13, 71], 'false,true,false': [0.241, 160, 0], 'false,false,true,true': [0.544, 1, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.213, 4, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.129, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.045, 0, 3], 'false,true,true': [1.661, 44, 11], 'false,true,false,true': [0.609, 2, 1], 'false,true,false,false': [1.692, 38, 17], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [3.596, 97, 40], 'false,false,false,false': [1.428, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.815, 1, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.414, 1, 3], 'false,true': [2.389, 76, 29], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [3.511, 91, 40], 'false,false,false,false': [1.435, 10, 4]}]
{'': [-1.6148698540002277e-16, 0.20043689061750788], 'false': [1.4802973661668753e-16, 0.1968110456012322], 'false,false': [0.19639964268951876, 0.20408163265306106], 'false,false,false': [0.20408163265306126, 0.20408163265306126], 'false,false,true': [0.18194706994329043, 0.21100204787797594], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [-8.074349270001139e-17, 0.2104792513478851], 'false': [0.0, 0.20899026383611252], 'false,false': [0.20671772107968356, 0.24691358024691348], 'false,false,false': [0.24691358024691348, nan], 'false,false,true': [0.07359077796802467, 1.7750368914762045e-05], 'false,true': [0.0, nan], 'true': [7.401486830834377e-17, 0.0]}
{'': [-1.2111523905001707e-16, 0.154113409069459], 'false': [0.1524186972367623, 0.172114507370456], 'false,false': [0.20408163265306126, 0.15300622468792197], 'false,false,true': [nan, 0.20408163265306126], 'false,false,false': [0.15300622468792197, nan], 'false,true': [0.15126511046915625, 0.15346224427449673], 'false,true,false': [0.11960283740267559, 1.8955027249697796e-17], 'true': [-1.1102230246251565e-16, 0.0]}
{'': [1.4130111222501992e-16, 0.1373536209324691], 'false': [0.13337653804485927, 0.19665969679799122], 'false,false': [0.0, 0.19450377760289145], 'false,false,false': [0.19450377760289145, nan], 'false,true': [0.19629721276372064, 0.11701502667023203], 'false,true,true': [nan, 0.19629721276372075], 'true': [1.3322676295501878e-16, 0.0], 'false,false,true': [nan, 0.0]}
{'': [-2.0185873175002847e-17, 0.1328133506683573], 'false': [0.1296393606755591, 0.16548703473145948], 'false,false': [0.0, 0.16526053653148964], 'false,false,false': [0.22222222222222218, 0.1301775147928994], 'false,false,true': [nan, 0.0], 'true': [-1.586032892321652e-17, 0.0], 'true,true': [-1.586032892321652e-17, nan]}
{'': [0.03205555741373933, 0.12794315152673574], 'false': [0.10154462576682645, 0.1326064139220255], 'false,false': [0.24000000000000005, 0.12856207318023216], 'false,false,false': [0.12282895072951326, 0.17827655275656146], 'true': [0.034434857179075525, 0.0], 'true,true': [2.3790493384824782e-17, 0.09349562104839575], 'true,false': [nan, 0.0]}
{'': [0.1245112014282103, 0.13007316297362131], 'false': [0.1875, 0.12831334256516394], 'false,false': [0.12831334256516394, nan], 'true': [0.06139010300707399, 0.0037108554991753594], 'true,true': [0.005426763941581814, 0.05753757761599247], 'true,true,false': [nan, 0.05753757761599252], 'true,true,true': [0.005964722448099968, 0.0]}
{'': [0.14814675554749185, 0.10463444907963391], 'true': [0.11330955444568466, 0.1808238357962099], 'false': [0.10012931200772089, 0.20213636703822657], 'false,false': [0.1479592659929076, 0.18388962525251196], 'false,false,false': [0.18388962525251196, nan], 'false,false,true': [0.1479592659929076, nan], 'false,true': [0.11527899407076572, 0.0003615880272504368], 'false,true,true': [nan, 0.11527899407076586]}
{'': [0.027076537491863287, 0.08154914165140785], 'false': [0.05387599233804743, 0.10143264587785593], 'false,false': [0.18750000000000006, 0.09914279305714918], 'false,false,false': [0.09436546798372879, 0.14559663615312338], 'false,true': [0.05015102732961227, 0.05621633842147471], 'false,true,false': [0.12372443424585738, 0.052022698523126625], 'true': [0.0020820311698364832, 0.0667273988306629], 'true,false': [0.0, 0.000682009639913661]}
{'': [0.06666214618252254, 0.08038165058468964], 'false': [0.054363885612893216, 0.09857386901452798], 'false,false': [-9.25185853854297e-18, 0.09929114480971643], 'false,false,false': [0.09409255798072301, 0.1471579165438886], 'true': [0.07608190784787723, 0.04281284073920936], 'true,true': [0.07911422171464653, 0.0], 'true,true,true': [0.08299924751208039, 0.0], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 5.405
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5581489350995124;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.03847680395197116;  // std dev = 4.247, 122.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=22 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.194026797694932;  // std dev = 5.406, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5766060205571715;  // std dev = 0.940, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.5005511758931249;  // std dev = 0.903, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6646844217398815;  // std dev = 3.423, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | | else return -0.15609519654555676;  // std dev = 0.142, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.20785156768234783;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.024291289460509298;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5872933330547832;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.059786115823395415;  // std dev = 3.811, 107.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=26 */
%   | | | else return 0.22451904268958772;  // std dev = 1.848, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6518235082059813;  // std dev = 1.682, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.13981939506045407;  // std dev = 0.082, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.005869154518384068;  // std dev = 0.759, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.031447682187477254;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.11211437766681384;  // std dev = 1.184, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.0018856511458560821;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4424298162790537;  // std dev = 0.138, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.05528510391561747;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.17509571646521474;  // std dev = 1.753, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.0730906818063082;  // std dev = 1.342, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.17129413677215946;  // std dev = 2.671, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.08236127212991215;  // std dev = 4.239, 145.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=44 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6832534761653865;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.18000155844748644;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.0015859165400199937;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3298777442040291;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.18621795177672004;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.014013277994440404;  // std dev = 3.353, 102.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=23 */
%   | | | else return 0.29012407025816683;  // std dev = 0.834, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.12099526370232198;  // std dev = 2.069, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.07876562766659824;  // std dev = 3.688, 112.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5213646312094022;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.09763769812619945;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.29904649853998944;  // std dev = 0.995, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25089573090261597;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.45348721794618235;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.39272931082458185;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, A) )
%   | then return -0.13656271797935254;  // std dev = 0.050, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( interaction(G, G), complex(G, H) )
%   | | | then return 0.2587476051956449;  // std dev = 1.336, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.08594615397097032;  // std dev = 2.779, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.02003254556485787;  // std dev = 2.890, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return 0.06595368051835533;  // std dev = 3.659, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5153953128027754;  // std dev = 0.169, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.1866507703869211;  // std dev = 0.081, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( phenotype(A, E), complex(A, F) )
%   | then if ( complex(G, F), interaction(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.5065792883350412;  // std dev = 0.327, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09757591077365439;  // std dev = 0.813, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else return 0.2312165520592062;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4317288059690796;  // std dev = 1.185, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.21327593383607407;  // std dev = 0.213, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.047567380938167134;  // std dev = 3.168, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return -0.024713114467905414;  // std dev = 0.876, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.14143903073083727;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2658742562892091;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.500333780906746;  // std dev = 0.567, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.4083664304800024;  // std dev = 1.838, 44.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | | else return -0.15586671138400163;  // std dev = 0.388, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6304351130110641;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.22950253881905375;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.006125773450369659;  // std dev = 0.787, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1303536548369676;  // std dev = 0.079, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.7317500328526754;  // std dev = 0.131, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.0330505279393227;  // std dev = 0.499, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.35423983041219753;  // std dev = 0.171, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | else return -0.1425391155542846;  // std dev = 0.085, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), location(H, J) )
%   | | | then return -0.0115626248108486;  // std dev = 3.110, 127.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
%   | | | else return 0.09463738755283499;  // std dev = 0.782, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.21113603027375175;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.01584103626439902;  // std dev = 0.740, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.11636269762984959;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.17192102302826726;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(G, I), phenotype(A, I) )
%   | | | then return -0.1198268728005946;  // std dev = 0.383, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.01560066044302788;  // std dev = 1.173, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.033877751620214266;  // std dev = 1.486, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return -0.039205367010278776;  // std dev = 0.787, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.16378088189466058;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.08741162231667485;  // std dev = 1.577, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return -0.005996185653851323;  // std dev = 2.913, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.219', 'seconds']
Refined model CLL: -0.183002


******************************************
Best model found
******************************************
Results 

CLL : -0.177755 

AUC ROC : 0.989405 

AUC PR : 0.33973 

Precision : 0.187633 

Recall : 0.93617 

F1 : 0.312611 

Total Learning Time : 5.405 

Total Inference Time : 7.468341588973999 

Total revision time: 21.40517165184021
Best scored revision CLL: -0.183002


Results 

CLL : -0.177755 

AUC ROC : 0.989405 

AUC PR : 0.33973 

Precision : 0.187633 

Recall : 0.93617 

F1 : 0.312611 

Total Learning Time : 21.41857316017151 

Total Inference Time : 7.468341588973999 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.207
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08117051783332424;  // std dev = 4.908, 139.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=31 */
%   | | | else return 0.14847151574467268;  // std dev = 5.651, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7473839334745777;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6437882419911125;  // std dev = 0.941, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6177817349725823;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6351119252702794;  // std dev = 3.965, 96.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=76 */
%   | | | else return -0.15648882464229671;  // std dev = 0.057, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | | else if ( location(A, I) )
%   | | | then return 0.20590217622746448;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.27056831645006424;  // std dev = 1.837, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else return 0.4606911713691228;  // std dev = 0.921, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1045452422980139;  // std dev = 4.355, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5710257035318408;  // std dev = 2.742, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.14332237858447647;  // std dev = 0.199, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3129482627974476;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.08204593385799916;  // std dev = 1.605, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.39761603693223535;  // std dev = 1.284, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.506873193638933;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.532607776524986;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4572423426402512;  // std dev = 2.127, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | else return 0.05294763247395337;  // std dev = 5.180, 230.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06021222301106233;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.29521507477878217;  // std dev = 1.401, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2930313673920688;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( location(A, E) )
%   | | | then return -0.5819686326079312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.30596791206970547;  // std dev = 0.942, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.09748892926859562;  // std dev = 5.765, 244.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=82 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5453280010996288;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.07827315733564713;  // std dev = 1.615, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3439541791871314;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.42831485511201456;  // std dev = 0.158, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4101085084205588;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.033168723959985005;  // std dev = 2.814, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.21413711945438804;  // std dev = 0.942, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.08506776259083833;  // std dev = 4.624, 156.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=51 */
%   | | | else return 0.017878136633442995;  // std dev = 2.331, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.29443781118127216;  // std dev = 0.184, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.31569539546541636;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.07151569524582664;  // std dev = 0.973, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.4454391672725995;  // std dev = 2.103, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | else return -0.174082418931899;  // std dev = 0.354, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.11445585663454987;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0806345439214367;  // std dev = 4.331, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.2205810617389532;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.16608453289978978;  // std dev = 0.970, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35530325722474526;  // std dev = 3.581, 98.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | | else return -0.15848970238602433;  // std dev = 0.503, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2517462105797218;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.030584261307140894;  // std dev = 1.509, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19425151298066595;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.0738913822199595;  // std dev = 0.585, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2030532846082928;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.0014457602073582611;  // std dev = 1.856, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3064543825650741;  // std dev = 0.152, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.05229995677008638;  // std dev = 1.567, 65.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22635819796071174;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.027393295867586626;  // std dev = 3.908, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | | else return 0.014053568934560955;  // std dev = 1.453, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.15747773425757736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1786071748721384;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.34786499857174114;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1767641232508278;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01771053256490456;  // std dev = 2.677, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18921301987422962;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.019418533720811232;  // std dev = 3.928, 154.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
%   | | | else return -0.03948132235802471;  // std dev = 1.524, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.798', 'seconds']
Parameter learned model CLL:-0.205823 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.908, 108, 31], 'false,false,true,false': [5.651, 110, 45], 'false,false,false,true': [1.713, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.941, 1, 10], 'false,true,true': [0.897, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.965, 20, 76], 'false,false,true,false': [0.057, 167, 0], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.837, 5, 11], 'true,false': [0.921, 1, 6], 'false,true,true': [4.355, 85, 34], 'false,true,false,true': [2.742, 9, 48], 'false,true,false,false': [0.199, 82, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.605, 10, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.284, 2, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.027, 0, 3], 'false,true,true,false': [2.127, 8, 21], 'false,true,false': [5.18, 172, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [1.401, 4, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'true,true,false': 'location(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'interaction(G, H), interaction(H, G)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.935, 1, 7], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.942, 1, 10], 'false,true': [5.765, 162, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.615, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.028, 0, 9], 'true,true,false': [0.158, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.814, 50, 19], 'false,false,true': [0.942, 1, 8], 'false,false,false,true': [4.624, 105, 51], 'false,false,false,false': [2.331, 26, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.184, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.973, 2, 3], 'true,true,false,false': [2.103, 6, 33], 'true,false': [0.354, 99, 0], 'false,true': [0.903, 1, 5], 'false,false,true': [4.331, 95, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.97, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.581, 16, 82], 'false,true,false': [0.503, 182, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.509, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.077, 0, 9], 'true,false,true': [0.585, 1, 2], 'true,false,false': [0.076, 0, 5], 'false,true,true': [1.856, 27, 13], 'false,true,false,true': [0.152, 0, 8], 'false,true,false,false': [1.567, 54, 11], 'false,false,true': [0.03, 0, 5], 'false,false,false,true': [3.908, 108, 47], 'false,false,false,false': [1.453, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 7], 'true,true,true,false': [0.061, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.064, 0, 3], 'false,true': [2.677, 86, 32], 'false,false,true': [0.026, 0, 5], 'false,false,false,true': [3.928, 107, 47], 'false,false,false,false': [1.524, 13, 4]}]
{'': [0.09418282548476423, 0.19912627252734183], 'false': [0.10937499999999978, 0.19187063394811643], 'false,false': [0.19167939284557403, 0.1955555555555554], 'false,false,false': [0.1955555555555554, nan], 'false,false,true': [0.17328295636871913, 0.2060353798126963], 'false,true': [0.22222222222222224, 0.0], 'true': [0.1224489795918365, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.0517639802629085, 0.20972408735600892], 'false': [0.1005686620325889, 0.2063101548913019], 'false,false': [0.2050440277379743, 0.23140495867768598], 'false,false,false': [0.23140495867768598, nan], 'false,false,true': [0.16380165868411023, 1.9715034827533063e-05], 'false,true': [0.1005686620325889, nan], 'true': [-6.344131569286608e-17, 0.08053111325024774]}
{'': [0.1911924497836101, 0.17147231074437935], 'true': [0.21081898857093223, 0.1211862592895555], 'false': [0.16980702055485228, 0.1980228578958942], 'false,false': [0.1980228578958942, nan], 'false,false,true': [0.24999999999999994, 0.18393306619231425], 'false,true': [0.15937110548189604, 0.17780459155750397], 'false,true,false': [0.13186109996552986, 0.00048400454547320855]}
{'': [0.08737637996140502, 0.1429320876163962], 'false': [0.13788052618332713, 0.2550241580118842], 'false,false': [0.25, 0.24523492944706307], 'false,false,true': [nan, 0.25], 'false,false,false': [0.24523492944706307, nan], 'false,true': [0.14193890343849086, 0.11664812907666786], 'false,true,true': [0.00024318737452544426, 0.15606458577879004], 'true': [0.09160235348777149, 0.0]}
{'': [0.1251655620318292, 0.14027225579404007], 'false': [0.13622018209161968, 0.21606141393522238], 'false,false': [0.0, 0.21728651429520393], 'false,false,false': [0.21728651429520393, nan], 'true': [0.1728395061728395, 0.08069887846843518], 'true,true': [0.10937499999999999, 0.0], 'false,false,true': [nan, 0.0], 'true,true,false': [0.0, nan]}
{'': [0.0032629491651275377, 0.13342794121196377], 'false': [0.11472941866776028, 0.1393144120073678], 'false,false': [0.09861186810846395, 0.14032370245950507], 'false,false,false': [0.1370342953551946, 0.1509098126695271], 'true': [0.0034148283647485417, 0.0], 'true,true': [8.550743336664822e-05, 0.004138775576319549], 'true,false': [nan, 0.0]}
{'': [0.11046605036213084, 0.13226289129148955], 'false': [0.13579328864249438, 0.1320673460105288], 'false,false': [0.1320673460105288, nan], 'true': [0.11141227067176084, 0.001264784511386582], 'true,true': [0.0021342312441900158, 0.14894497141772498], 'true,true,false': [0.1892470650566374, 0.11340958975837613], 'true,true,true': [0.0022482705215361924, 0.0]}
{'': [0.05293801289916135, 0.10862987147542799], 'false': [0.1067494643413747, 0.13842555813839685], 'false,false': [0.0, 0.14238830285405502], 'false,false,false': [0.14238830285405502, nan], 'false,true': [0.13082798218313305, 0.0013899867094696533], 'false,true,true': [nan, 0.13082798218313316], 'true': [0.0, 0.08547088920127982], 'false,false,true': [0.0, nan]}
{'': [0.03153373749257059, 0.08547961228262753], 'false': [0.06057970920999182, 0.10102298751456937], 'false,false': [0.00017902928604783818, 0.10285630691402765], 'false,false,false': [0.09851533636814572, 0.15075384520929033], 'false,true': [0.08612143173723073, 0.04651053511554049], 'false,true,false': [0.002893016320317854, 0.0377742230946069], 'true': [0.0006649751861320046, 0.06147787373988761], 'true,false': [0.11410008902852069, 0.001142663884978401]}
{'': [0.015350730131909034, 0.08577668436428774], 'false': [0.060740593297955225, 0.10203443726975109], 'false,false': [0.00013681543004228635, 0.1041373961430642], 'false,false,false': [0.1002071837528397, 0.13661619410985545], 'true': [0.017965229070111586, 0.0013822971682154784], 'true,true': [0.00039555299654562366, 0.0], 'true,true,true': [3.96508223080413e-18, 0.0006166335829163363], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;true,true;interaction(D, A).;true;true
4;false;interaction(F, A).;true;true
4;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 6.608
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.588918165868743;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return -0.04925847230789509;  // std dev = 3.012, 108.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=10 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.09252393509951237;  // std dev = 3.389, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.19459753323035225;  // std dev = 4.888, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7359930932441973;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7233280044520443;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.11231856126074151;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7492293200691814;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7379678885999832;  // std dev = 2.601, 83.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=76 */
%   | | | else return -0.15106552217423702;  // std dev = 0.192, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.3327721005890422;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.1672278994109578;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.41021545087345934;  // std dev = 0.349, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5710165962966328;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3957583882181758;  // std dev = 0.709, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07756387791592433;  // std dev = 3.882, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6281223177357231;  // std dev = 1.920, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.13750497165225697;  // std dev = 0.138, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.18119269070370034;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.031192690703700315;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10019235355167437;  // std dev = 0.994, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3294482648870768;  // std dev = 0.309, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.4127778760204137;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.5006185407790487;  // std dev = 0.240, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.15751348167692525;  // std dev = 0.671, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0.0837735760848669;  // std dev = 4.767, 195.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=58 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.33338730986881543;  // std dev = 1.017, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.25134765141188364;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.2727569763155803;  // std dev = 0.994, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06896403759449272;  // std dev = 0.556, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2446417175503445;  // std dev = 0.328, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25745650315822777;  // std dev = 0.292, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F), interaction(A, G) )
%   | | then return 0.022169093658473353;  // std dev = 0.289, 124.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=33 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.2864404146241844;  // std dev = 1.491, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.1012298536800647;  // std dev = 3.834, 120.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5058660692577868;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.0889418420100815;  // std dev = 1.025, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.10649255475208648;  // std dev = 1.282, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.06342893609155503;  // std dev = 1.382, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.3146465198443854;  // std dev = 2.80e-05, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41221612720730977;  // std dev = 0.198, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3816853916834765;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, A) )
%   | then return -0.11323602415166613;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.28566906145865734;  // std dev = 3.278, 84.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=54 */
%   | | | else return -0.1559811445143857;  // std dev = 0.598, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.10100563602909671;  // std dev = 1.518, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.029483056467264023;  // std dev = 2.983, 109.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=25 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.378562950580811;  // std dev = 0.171, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | else return -0.1437539204026126;  // std dev = 0.082, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.5264648020792561;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.29427930280867287;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.23522361798262317;  // std dev = 0.151, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return 0.04333950721302847;  // std dev = 3.039, 89.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=29 */
%   | | | else return 0.16914165816886997;  // std dev = 1.436, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( location(A, K) )
%   | | | then return -0.02499846466983901;  // std dev = 1.075, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.09078497203159934;  // std dev = 0.789, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.21536830170943227;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.09924359269236586;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, F) )
%   | | then return 0.22459789290540458;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14261330078262724;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.293297778870233;  // std dev = 0.328, 96.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=82 */
%   | | else return -0.13336998993649116;  // std dev = 0.040, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return -0.2538695448252317;  // std dev = 0.676, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.010156349016861918;  // std dev = 0.899, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3002348946282709;  // std dev = 0.619, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.20086773587414097;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.052995887762079696;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.06963744448171683;  // std dev = 0.602, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23455918631346212;  // std dev = 0.163, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( complex(A, I), phenotype(A, J) )
%   | | then return -0.1153059777721521;  // std dev = 0.286, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else return -0.0164199769376344;  // std dev = 0.233, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.24739786734577923;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.045022658239543295;  // std dev = 1.973, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return -0.01857454151207642;  // std dev = 3.307, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.05853072272803342;  // std dev = 0.910, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.040125473582517265;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.536302845384502;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.2128433585894182;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( complex(A, H), phenotype(A, I) )
%   | | then return -0.05953532487475702;  // std dev = 0.198, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | else return 0.023994654481837747;  // std dev = 0.194, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2045412782750998;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.022654510997661963;  // std dev = 3.574, 157.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.05448058996753758;  // std dev = 1.596, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.840', 'seconds']
Refined model CLL: -0.186606


******************************************
Best model found
******************************************
Results 

CLL : -0.16735 

AUC ROC : 0.98831 

AUC PR : 0.348004 

Precision : 0.271499 

Recall : 0.833962 

F1 : 0.409639 

Total Learning Time : 6.608 

Total Inference Time : 11.865195274353027 

Total revision time: 28.04925364494324
Best scored revision CLL: -0.186606


Results 

CLL : -0.16735 

AUC ROC : 0.98831 

AUC PR : 0.348004 

Precision : 0.271499 

Recall : 0.833962 

F1 : 0.409639 

Total Learning Time : 28.062655153274537 

Total Inference Time : 11.865195274353027 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.401
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.03996711691769419;  // std dev = 2.558, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | | else return 0.13144086056534987;  // std dev = 5.655, 161.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15973623668681391;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7373269569258907;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8432036464863416;  // std dev = 0.031, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15627074313234074;  // std dev = 0.051, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1423596155039143;  // std dev = 3.537, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.12328511025619061;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.03223423037575112;  // std dev = 2.144, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6656776041380027;  // std dev = 1.009, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14164984870605615;  // std dev = 0.309, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5509535346988008;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11655731688876679;  // std dev = 3.693, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06247273614541426;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.16751358415830994;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5097104048652918;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5958144171254721;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06345275980842961;  // std dev = 4.209, 186.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41424854274987577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.03188696488992532;  // std dev = 0.783, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08537367487252996;  // std dev = 3.584, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.4689174063993676;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3320540012616526;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33331424060626397;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.0671401649217245;  // std dev = 4.192, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.31849908980163966;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0757866441475224;  // std dev = 0.857, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06912249900598033;  // std dev = 3.678, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.7889006811011137;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25292050361356105;  // std dev = 0.000312, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3603648872098155;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25366178214260016;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30310481077342766;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5487546913160319;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.09324880475816151;  // std dev = 0.971, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2694691835978464;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05723995780091368;  // std dev = 4.022, 164.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=49 */
%   | | | else return 0.14702506875662819;  // std dev = 3.495, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2357205943264573;  // std dev = 0.119, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.31065879655690787;  // std dev = 0.144, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20533370409730123;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6322460910512697;  // std dev = 0.744, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18931616740226956;  // std dev = 0.653, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22285011936631482;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.056150645021507725;  // std dev = 3.338, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17198593632543702;  // std dev = 0.000207, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07996481580170745;  // std dev = 0.894, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44269947863955533;  // std dev = 0.792, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14337060914227123;  // std dev = 0.294, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.25094112490853565;  // std dev = 0.126, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05771213906467617;  // std dev = 2.998, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15304734421314847;  // std dev = 0.045, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1712507150443161;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.06472613682928537;  // std dev = 0.589, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06928777138452089;  // std dev = 0.404, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18467738281059687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.024382417118127334;  // std dev = 1.249, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17491159454609784;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.018570579719943442;  // std dev = 2.713, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   | | | else return -0.022692785946166215;  // std dev = 3.169, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13790221901048583;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17705709456235705;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1303927087090231;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15326465532427805;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.029180802806658156;  // std dev = 1.543, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15113149669630557;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02076076194897948;  // std dev = 2.744, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return 0.03450507038459445;  // std dev = 3.043, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.316', 'seconds']
Parameter learned model CLL:-0.177516 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.558, 36, 8], 'false,false,true,false': [5.655, 117, 44], 'false,false,false,true': [3.643, 44, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.08, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.031, 0, 52], 'false,false,true,false': [0.051, 116, 0], 'false,false,false,true': [3.537, 41, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.144, 34, 8], 'false,true,false,true': [1.009, 1, 48], 'false,true,false,false': [0.309, 111, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.693, 46, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [0.866, 1, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.137, 0, 3], 'false,true,false': [4.209, 134, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.783, 1, 1], 'false,false,false,true': [3.584, 45, 18], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.051, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.071, 0, 9], 'false,true': [4.192, 130, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.857, 1, 1], 'false,false,false,true': [3.678, 46, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.000312, 0, 7], 'true,true,false': [0.01, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.971, 32, 3], 'false,false,true': [0.058, 0, 6], 'false,false,false,true': [4.022, 115, 49], 'false,false,false,false': [3.495, 32, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.119, 0, 12], 'true,true,true,false': [0.144, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.744, 0, 36], 'true,false': [0.653, 112, 0], 'false,true': [0.048, 0, 5], 'false,false,true': [3.338, 82, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.000207, 0, 6], 'true,false': [0.894, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.792, 0, 56], 'false,true,false': [0.294, 135, 0], 'false,false,true,true': [0.126, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.998, 36, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.045, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.589, 1, 4], 'false,true,true': [0.404, 12, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.249, 50, 14], 'false,false,true': [0.04, 0, 5], 'false,false,false,true': [2.713, 88, 36], 'false,false,false,false': [3.169, 54, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.033, 0, 5], 'true,true,true,false': [0.119, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.007, 0, 4], 'false,true': [1.543, 57, 17], 'false,false,true': [0.036, 0, 5], 'false,false,false,true': [2.744, 81, 36], 'false,false,false,false': [3.043, 39, 20]}]
{'': [-2.5376526277146434e-16, 0.20185290616427792], 'false': [0.12244897959183662, 0.19509538268814555], 'false,false': [0.18931588340273733, 0.2112029384756653], 'false,false,false': [0.21063240110859105, 0.22222222222222224], 'false,false,true': [0.1487603305785126, 0.19860344894101395], 'false,true': [0.25, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.2159469486212742], 'false': [0.0011067675655841065, 0.2129041928128592], 'false,false': [0.21351521453437552, 0.2112320833916782], 'false,false,true': [1.8218680622794636e-05, 2.2247220154632215e-05], 'false,false,false': [0.2120418532076276, 0.20408163265306117], 'false,true': [0.0012749962355528943, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-1.9032394707859825e-16, 0.15633911779192075], 'false': [0.13885267624638603, 0.20545460060475437], 'false,false': [0.20631984125534764, 0.1875], 'false,false,true': [0.0, 0.20662948044054946], 'false,false,false': [0.1875, nan], 'false,true': [0.10949273762937084, 0.1454406963920556], 'false,true,false': [0.02079172205387471, 0.0008590243626739654], 'true': [-1.1102230246251565e-16, -1.1102230246251565e-16]}
{'': [0.06222222222222236, 0.12930172768158554], 'false': [0.09875354710017671, 0.21279400003069696], 'false,false': [0.24874100419317455, 0.21115150237315594], 'false,false,true': [0.0, 0.3067658758974208], 'false,false,false': [0.20393769823778013, 0.2222222222222222], 'false,true': [0.006090671150309868, 0.09525254836997062], 'true': [1.6148698540002277e-16, 0.18749999999999997], 'false,true,true': [0.0, 0.0062674196352545675]}
{'': [0.0005414881592925738, 0.12725240601988638], 'false': [0.09445540725325888, 0.2155596647981078], 'false,false': [0.2791401236196323, 0.2126437877950323], 'false,false,true': [0.0, 0.3668897720975053], 'false,false,false': [0.2080655241475173, 0.0], 'true': [0.0005145778386488997, 0.000555871121997336], 'true,true': [0.0005145778386488997, nan]}
{'': [0.006660343234136763, 0.11991114247010685], 'false': [0.026913209703960467, 0.1302940599835638], 'false,false': [0.0005567614318651437, 0.13291587901622506], 'false,false,false': [0.0986205944748613, 0.2349572633709068], 'true': [0.002680761663477789, 0.016652033548358258], 'true,false': [0.0006111532700471961, 0.0], 'true,true': [1.38852677054681e-08, 2.5700369467723805e-05], 'true,false,true': [0.0, 0.0]}
{'': [0.12365017535370362, 0.09170666932899676], 'true': [0.04311071802384044, 0.0038059993198612135], 'false': [0.0004602372058147952, 0.09444342102082011], 'false,false': [0.09444342102082011, nan], 'true,true': [0.003176617991317735, 0.019765686275986547], 'true,true,false': [0.0, 0.015388944302533927], 'true,true,true': [0.001170873298739078, 0.0103975997294765]}
{'': [0.05536612705547039, 0.09413770939970784], 'false': [0.0749176136338252, 0.15644211039996475], 'false,false': [0.00791235597788463, 0.16045924652197635], 'false,false,false': [0.16045924652197635, nan], 'false,true': [0.011202888930402175, 0.000641790407754066], 'true': [7.1554195624212724e-09, 0.0888897190065272], 'false,true,true': [nan, 0.011202888930402269], 'false,false,true': [0.00791235597788463, nan]}
{'': [0.025064797357909684, 0.0692531277780818], 'false': [0.02325822026508908, 0.0868314644711295], 'false,false': [0.0003208566465774332, 0.08828941525959637], 'false,false,false': [0.059373035516657215, 0.13567757375214848], 'true': [0.00022979522124024396, 0.05932947026873799], 'true,false': [0.0, 0.06930411669517057], 'false,true': [0.012540277267252495, 0.02493727133117482], 'false,true,false': [0.0, 0.024392136819478934]}
{'': [0.0013653126600388643, 0.07622283855778601], 'false': [0.032188029641572746, 0.09324902087242264], 'false,false': [0.0002540375383071475, 0.09545400669461616], 'false,false,false': [0.06436053994565606, 0.1569883527151639], 'true': [0.0018993041697258268, 1.1624848844371538e-05], 'true,true': [0.0022756280141068876, 0.0], 'true,true,true': [0.00021706391862463538, 0.004748377998567403], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.82
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.08202953211443775;  // std dev = 3.412, 67.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | | | else return 0.19344305274657075;  // std dev = 6.155, 170.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7385128322212615;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7670719622367217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8168827055198971;  // std dev = 0.994, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16119861273328806;  // std dev = 0.135, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.075670086031496;  // std dev = 2.618, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.2937552182845212;  // std dev = 2.442, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.058872561662810165;  // std dev = 0.798, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.11940930098801852;  // std dev = 1.821, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6628029738523039;  // std dev = 1.012, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14261083150843779;  // std dev = 0.059, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.550660127024114;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19915353404546818;  // std dev = 3.442, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else return 0.13933171748731274;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3871128098110418;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6046933735877503;  // std dev = 0.146, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10322237877359688;  // std dev = 6.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.07890786842936968;  // std dev = 4.085, 168.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=52 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0.41403200502403614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5632062284181392;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.1878532890206993;  // std dev = 2.343, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.02801716099418232;  // std dev = 2.829, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.09846070781671741;  // std dev = 2.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.027159882658466073;  // std dev = 2.013, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.11496149413376;  // std dev = 1.601, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.12295171994755058;  // std dev = 2.325, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.31835239220556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42335359029814934;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.05925456098125326;  // std dev = 3.640, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.11181953271719719;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3617772213023523;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.277802528354326;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.11202889618136302;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.021234855013305725;  // std dev = 0.247, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07816109076384388;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.024218805563830163;  // std dev = 4.029, 181.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=49 */
%   | | | else return 0.15995658731877072;  // std dev = 3.436, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23429237332651529;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6212140446710985;  // std dev = 0.680, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19705316554871982;  // std dev = 0.073, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2339784095154754;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.03705336721442154;  // std dev = 0.831, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.003845271979530554;  // std dev = 1.985, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.024810277297660766;  // std dev = 2.341, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return 0.09684946443177957;  // std dev = 1.200, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.181175310925832;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.3319172856196143;  // std dev = 0.314, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4663961345088117;  // std dev = 1.052, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else if ( location(A, G) )
%   | | | then return -0.14894925506286846;  // std dev = 0.349, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | | else return -0.08964222522798353;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return -0.016456445110671142;  // std dev = 1.430, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.0726356293856581;  // std dev = 2.050, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.05871236156170695;  // std dev = 1.434, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.0201086801589475;  // std dev = 0.949, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15506054611860665;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18252132168937768;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), location(G, H) )
%   | | | then return -0.06758023106674278;  // std dev = 0.010, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -9.073603555396284E-4;  // std dev = 0.380, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.18778841567121696;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.021536873035831603;  // std dev = 1.398, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.16807726055651143;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.012056079312983137;  // std dev = 3.010, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.03905415082932066;  // std dev = 2.641, 107.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.140497861438369;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.0022274484327628576;  // std dev = 0.666, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.0053935813256592415;  // std dev = 0.966, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return -0.05881334728015428;  // std dev = 1.078, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.06777706805055776;  // std dev = 0.944, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.11386787384473848;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.14594325708662478;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return -0.012013707546872495;  // std dev = 2.728, 130.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=35 */
%   | | | else return 0.025711308593087893;  // std dev = 3.033, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.091', 'seconds']
Refined model CLL: -0.181573


******************************************
Best model found
******************************************
Results 

CLL : -0.194356 

AUC ROC : 0.982107 

AUC PR : 0.223627 

Precision : 0.136309 

Recall : 0.815884 

F1 : 0.233592 

Total Learning Time : 2.82 

Total Inference Time : 2.679574489593506 

Total revision time: 9.792887969970703
Best scored revision CLL: -0.177516


Results 

CLL : -0.194356 

AUC ROC : 0.982107 

AUC PR : 0.223627 

Precision : 0.136309 

Recall : 0.815884 

F1 : 0.233592 

Total Learning Time : 9.806289478302002 

Total Inference Time : 2.679574489593506 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.558
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06782635445435108;  // std dev = 3.205, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | | else return 0.16767274462332127;  // std dev = 5.189, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.04564893509951222;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.6083623010998431;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.7508965999392805;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8028739146957248;  // std dev = 1.384, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15881107280465964;  // std dev = 0.073, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11945703071353535;  // std dev = 2.804, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.18583409175800222;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.581785119232984;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5955890986769172;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05825428797779723;  // std dev = 2.764, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6432672059913247;  // std dev = 1.383, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1429332178182216;  // std dev = 4.71e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.660520031372384;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09270622583881236;  // std dev = 2.473, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.16605368915499133;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4408900882053935;  // std dev = 0.129, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.07178150456625398;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5992627526388308;  // std dev = 0.183, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.04589766591879632;  // std dev = 4.356, 192.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4223479057765468;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.063325962293973;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09646368929272647;  // std dev = 2.758, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.052574483582975146;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33077710777142927;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2013917209255072;  // std dev = 0.946, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.053798046267225494;  // std dev = 4.453, 200.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3239910804848315;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4358410129726588;  // std dev = 0.158, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.019294798337684816;  // std dev = 2.644, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return 0.09630289914115542;  // std dev = 1.450, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16709079345974379;  // std dev = 0.926, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.4369788825692969;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25740857900463254;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03832400522370697;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.05009484058904421;  // std dev = 1.289, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3107619918397256;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.07126329748253127;  // std dev = 3.961, 149.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=46 */
%   | | | else return 0.013110797190835214;  // std dev = 3.160, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26485399776772106;  // std dev = 0.203, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.29028696629423995;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21888630595771388;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5727163055068933;  // std dev = 1.235, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.16901863397546216;  // std dev = 0.362, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.02873081853496595;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07876390085947656;  // std dev = 3.311, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.08957897224391402;  // std dev = 0.850, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.10389664584941403;  // std dev = 0.895, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4229930150394805;  // std dev = 1.479, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.1445587583357016;  // std dev = 0.554, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.23664512894669565;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08205848998238996;  // std dev = 2.416, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.08207939800827198;  // std dev = 0.951, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2766215742442204;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19777157481052832;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.10787649511497728;  // std dev = 0.393, 32.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23299609613849384;  // std dev = 0.162, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.003530478994229495;  // std dev = 1.381, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.02510278038868699;  // std dev = 0.787, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.025250851794765418;  // std dev = 2.872, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | | else return 0.01847572630702482;  // std dev = 2.501, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.16471356409259952;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14741936806140377;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.14595002087787612;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18845324123154583;  // std dev = 0.051, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18194637289119067;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.024530518035357853;  // std dev = 1.673, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.24772239368336801;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03348415430358178;  // std dev = 2.802, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | | else return 0.06719074675361147;  // std dev = 2.403, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.729', 'seconds']
Parameter learned model CLL:-0.180464 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.095, 2, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.205, 49, 13], 'false,false,true,false': [5.189, 87, 39], 'false,false,false,true': [2.372, 15, 9], 'false,false,false,false': [1.561, 13, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.096, 0, 7], 'false,true,true': [0.935, 1, 7], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [1.384, 2, 52], 'false,false,true,false': [0.073, 132, 0], 'false,false,false,true': [2.804, 27, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.079, 0, 11], 'true,false': [0.096, 0, 4], 'false,true,true': [2.764, 48, 14], 'false,true,false,true': [1.383, 2, 42], 'false,true,false,false': [4.71e-08, 77, 0], 'false,false,true,true': [0.183, 0, 3], 'false,false,true,false': [2.473, 22, 9], 'false,false,false,true': [1.416, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.129, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [0.183, 0, 6], 'false,true,false': [4.356, 143, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [2.758, 25, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.029, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.946, 1, 6], 'false,true': [4.453, 144, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.158, 0, 2], 'false,false,false,true': [2.644, 35, 9], 'false,false,false,false': [1.45, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.926, 1, 9], 'true,true,false': [0.12, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.748, 1, 2], 'false,true': [1.289, 18, 5], 'false,false,true': [0.093, 0, 5], 'false,false,false,true': [3.961, 103, 46], 'false,false,false,false': [3.16, 46, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.203, 0, 13], 'true,true,true,false': [0.171, 0, 3], 'true,true,false,true': [0.035, 0, 3], 'true,true,false,false': [1.235, 1, 33], 'true,false': [0.362, 111, 0], 'false,true': [0.864, 1, 3], 'false,false,true': [3.311, 60, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.85, 1, 8], 'true,false': [0.895, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.479, 2, 56], 'false,true,false': [0.554, 154, 0], 'false,false,true,true': [0.152, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.416, 25, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.951, 1, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.126, 0, 5], 'false,true,true': [0.393, 31, 1], 'false,true,false,true': [0.162, 0, 6], 'false,true,false,false': [1.381, 40, 17], 'false,false,true': [0.787, 1, 3], 'false,false,false,true': [2.872, 66, 31], 'false,false,false,false': [2.501, 33, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 8], 'true,true,true,false': [0.029, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.051, 0, 2], 'true,false': [0.106, 0, 3], 'false,true': [1.673, 74, 24], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [2.802, 61, 31], 'false,false,false,false': [2.403, 24, 12]}]
{'': [0.10380622837370206, 0.21084653689452276], 'false': [-2.5376526277146434e-16, 0.20190827947060763], 'false,false': [0.2000905387052973, 0.20999999999999946], 'false,false,false': [0.23437500000000003, 0.15234374999999986], 'false,false,true': [0.1657127991675333, 0.21371882086167857], 'true': [-1.4802973661668753e-16, 0.23999999999999994], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.061131195754811296, 0.20628293554136093], 'false': [0.17283950617283964, 0.20221300359724126], 'false,false': [0.20087352039335163, 0.2082770533468696], 'false,false,false': [0.20685373499371235, 0.22222222222222224], 'false,false,true': [0.03546333964366926, 3.996236227274829e-05], 'false,true': [0.10937500000000006, 0.0], 'true': [0.09876543209876552, 0.001316555636012914], 'false,true,false': [nan, 0.0]}
{'': [0.0010623746089237329, 0.16034038886622656], 'false': [0.1483853304743899, 0.21031491101855085], 'false,false': [0.20686255494102088, 0.22292986162153858], 'false,false,false': [0.22292986162153858, nan], 'false,false,true': [0.011111978635046649, 0.19735799576838267], 'false,true': [0.12323027371583097, 0.15884392821707424], 'false,true,false': [0.04347737125257394, 2.883696167857549e-17], 'true': [0.0005602351649056849, 0.0023035215244153195]}
{'': [0.001109860695677837, 0.1247305541048577], 'false': [0.10646003473378421, 0.2062611765073352], 'false,false': [0.15722418897550108, 0.20909858157960817], 'false,false,false': [0.21130579773955951, 0.18750000000000003], 'false,false,true': [0.0, 0.25000000000000006], 'false,true': [0.11885905570705915, 0.09883709505585836], 'false,true,true': [0.25, 0.005586290842361323], 'true': [0.001109860695677837, nan]}
{'': [0.06015748250916707, 0.11498232263421983], 'false': [0.09912817102169702, 0.1698717096048709], 'false,false': [0.011120362131139113, 0.17041917365080725], 'false,false,false': [0.15891500213045526, 0.21014929839320792], 'true': [9.45020786134639e-05, 0.12796473918109363], 'false,false,true': [0.0, 0.012510407397531509], 'true,true': [9.45020786134639e-05, nan]}
{'': [0.09704865677612952, 0.11840905156349549], 'false': [0.07224279769506171, 0.12218267650179669], 'false,false': [0.0017315143348796357, 0.12353075634444337], 'false,false,false': [0.10528728575393313, 0.16642448846923671], 'true': [0.07720443406731259, 0.14874429421848512], 'true,false': [0.0, 0.18632621300745442], 'true,true': [0.08583785893002674, 0.003592600022522735], 'true,false,true': [0.0, nan]}
{'': [0.10464339387388732, 0.12334960539652685], 'false': [0.18680814188226672, 0.1204548166793991], 'false,false': [0.1204548166793991, nan], 'true': [0.05252621674437774, 0.0011774610127404045], 'true,true': [0.004507064582666906, 0.05055980091613547], 'true,true,false': [0.00040717615507496197, 0.044834032357485815], 'true,true,true': [0.0031681854374658357, 0.009783320052814034]}
{'': [0.08960692151330102, 0.08819640818377866], 'true': [0.08020664802576866, 0.10007370201046539], 'false': [0.07578715495502145, 0.1481786466142568], 'false,false': [0.00771233185320148, 0.15777553009958759], 'false,false,false': [0.15777553009958759, nan], 'false,true': [0.03772916942067888, 0.001994875857674355], 'false,true,true': [nan, 0.037729169420679005], 'false,false,true': [0.00771233185320148, nan]}
{'': [0.058192957850046766, 0.0746094175050459], 'false': [0.028940568990180247, 0.10360800053707082], 'false,false': [0.15503409440966157, 0.10215926869767745], 'false,false,false': [0.08505195162189051, 0.13900368524722814], 'true': [0.08217224033369588, 0.003490954599521099], 'false,true': [0.004833125152678575, 0.03520382543014061], 'false,true,false': [0.004354892705415753, 0.03343637013010379], 'true,false': [0.0, 0.003152925117643085]}
{'': [0.0011000316953068932, 0.07365586656351826], 'false': [0.028571193740315144, 0.10515351208209196], 'false,false': [1.473956997270302e-06, 0.10665787682736055], 'false,false,false': [0.08532541511293852, 0.16035757129358968], 'true': [0.0004257170184715754, 0.0037679581440117627], 'true,true': [0.00012957902899023987, 0.001282227396933076], 'true,true,false': [0.0, 0.0013211665152554203], 'true,true,true': [3.469446951953614e-18, 0.00040862377185885146]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.541
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return -0.035468086177083476;  // std dev = 2.114, 47.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | | | else return 0.24703782398840118;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.2377109788951339;  // std dev = 5.680, 137.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6021035802978392;  // std dev = 0.334, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.7313730497173964;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3385128322212614;  // std dev = 1.131, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7590094317171892;  // std dev = 1.881, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.16397503572218966;  // std dev = 0.201, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.0951047245021917;  // std dev = 2.415, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.24454670555306843;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5776176117052397;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3952634354236916;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return -0.032751210570296875;  // std dev = 1.508, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.12951447862911175;  // std dev = 2.173, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6628943597477555;  // std dev = 1.010, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14940295039716908;  // std dev = 0.062, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4238433065690236;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.05400059135668022;  // std dev = 2.601, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.24120046426195474;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.2538267420281735;  // std dev = 0.383, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.45711385906632607;  // std dev = 0.084, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.020789025260640012;  // std dev = 0.286, 104.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=23 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.08805842234900753;  // std dev = 3.224, 89.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=29 */
%   | | | else return 0.17021413077945502;  // std dev = 1.071, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, L), interaction(L, K) )
%   | | | then return 0.6057530550034398;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.04475363834152854;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.29419276125879024;  // std dev = 1.433, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05753412621492943;  // std dev = 2.416, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.35467942430336413;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, E) )
%   | | then return 0.056704419526649986;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3856055539717325;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.01438874777897324;  // std dev = 0.232, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.2285149360199622;  // std dev = 1.547, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.07169882984200297;  // std dev = 3.708, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4819109459475667;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.041708019837491804;  // std dev = 2.385, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.11898001203535617;  // std dev = 1.627, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.286287141145126;  // std dev = 0.120, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4096867642019254;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3654569953749996;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11154149849419108;  // std dev = 0.023, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.013048321758536088;  // std dev = 0.815, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.27193118818148887;  // std dev = 0.801, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15169080368194765;  // std dev = 0.882, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.01679226606206131;  // std dev = 3.489, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   | | | else return 0.06650070901058322;  // std dev = 3.616, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2631380749730044;  // std dev = 0.053, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.30153462512002904;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5880275194485809;  // std dev = 1.008, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1706977660173494;  // std dev = 0.068, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( complex(A, F), enzyme(A, G) )
%   | then return 0.17689850759184803;  // std dev = 0.986, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), interaction(J, A) )
%   | | | then return -0.05413202267393948;  // std dev = 1.697, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.03747239859512748;  // std dev = 2.409, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.0931555697264753;  // std dev = 0.899, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.05268867649990208;  // std dev = 0.658, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then return -0.10973583238944669;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.21361699410342364;  // std dev = 0.041, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.2200258243807084;  // std dev = 0.841, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.4016462752700889;  // std dev = 1.650, 52.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return -0.1248338289384397;  // std dev = 0.441, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.18360885724507325;  // std dev = 0.150, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( enzyme(A, L) )
%   | | then return 0.2038040732443073;  // std dev = 1.055, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.06895499495176308;  // std dev = 1.458, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.021484643045328548;  // std dev = 1.672, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18662646001700015;  // std dev = 0.042, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3809698299166248;  // std dev = 0.286, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1301100321510938;  // std dev = 0.112, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2646466361562115;  // std dev = 0.996, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.13787295601191255;  // std dev = 0.147, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return -0.06328189017927235;  // std dev = 0.680, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | | else return -0.006830377608426091;  // std dev = 1.912, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.2205681050175994;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.003317870454248778;  // std dev = 2.858, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1409810077525838;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.18981805932293186;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1947078746854574;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07094040815745964;  // std dev = 0.015, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.19528282601871305;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.00891221906081257;  // std dev = 1.518, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.18748528161220068;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return -0.021579266978499118;  // std dev = 2.145, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | | else return 0.04444412230478066;  // std dev = 2.831, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.262', 'seconds']
Refined model CLL: -0.178826


******************************************
Best model found
******************************************
Results 

CLL : -0.196801 

AUC ROC : 0.984371 

AUC PR : 0.224983 

Precision : 0.160112 

Recall : 0.805654 

F1 : 0.267135 

Total Learning Time : 3.541 

Total Inference Time : 3.2607321739196777 

Total revision time: 11.517622732162476
Best scored revision CLL: -0.178826


Results 

CLL : -0.196801 

AUC ROC : 0.984371 

AUC PR : 0.224983 

Precision : 0.160112 

Recall : 0.805654 

F1 : 0.267135 

Total Learning Time : 11.531024240493775 

Total Inference Time : 3.2607321739196777 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.197
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2147063121486927;  // std dev = 7.482, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1684144657222584;  // std dev = 5.395, 130.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=44 */
%   | | | else return 0.1415471301592707;  // std dev = 5.441, 138.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13390733043172454;  // std dev = 4.852, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.13851151996499458;  // std dev = 5.896, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08146269616829264;  // std dev = 3.746, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0.13637365930101136;  // std dev = 6.592, 191.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08676633064462697;  // std dev = 7.669, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06793923807914286;  // std dev = 7.687, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7378336454656443;  // std dev = 0.016, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2622100538791647;  // std dev = 0.023, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return -0.03843827860735031;  // std dev = 4.290, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | | | else return 0.025499326560845165;  // std dev = 4.453, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03151739654483459;  // std dev = 3.869, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   | | | else return 0.06564817373298087;  // std dev = 5.887, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.057944145032803686;  // std dev = 6.950, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.038663797529823324;  // std dev = 6.972, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.536', 'seconds']
Parameter learned model CLL:-0.328188 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.482, 157, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.395, 86, 44], 'false,false,false,false': [5.441, 95, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.852, 72, 35], 'false,false,false,false': [5.896, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.746, 47, 20], 'false,false,false,false': [6.592, 124, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.669, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.687, 184, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.016, 0, 35], 'true,false': [0.023, 71, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.29, 79, 24], 'false,false,false,false': [4.453, 68, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.869, 77, 35], 'false,false,false,false': [5.887, 104, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.95, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.972, 174, 87]}]
{'': [nan, 0.2294242139209899], 'false': [nan, 0.2294242139209898], 'false,false': [nan, 0.2294242139209899], 'false,false,false': [nan, 0.2294242139209898]}
{'': [nan, 0.2192442637558481], 'false': [nan, 0.2192442637558477], 'false,false': [nan, 0.2192442637558481], 'false,false,false': [0.22390532544378694, 0.2145032556185676]}
{'': [nan, 0.22082925629480116], 'false': [nan, 0.22082925629480116], 'false,false': [nan, 0.22082925629480119], 'false,false,false': [0.22000490407500947, 0.2213824841194031]}
{'': [nan, 0.22338655942194924], 'false': [nan, 0.22338655942194924], 'false,false': [nan, 0.22338655942194965], 'false,false,false': [0.2094007574069948, 0.22750955308460757]}
{'': [nan, 0.21865985482069406], 'false': [nan, 0.21865985482069406], 'false,false': [nan, 0.21865985482069367], 'false,false,false': [nan, 0.21865985482069367]}
{'': [nan, 0.21807109028223945], 'false': [nan, 0.21807109028223945], 'false,false': [nan, 0.21807109028223912], 'false,false,false': [nan, 0.21807109028223973]}
{'': [0.22119068648853965, 0.19318707305381227], 'true': [7.219843968999027e-06, 7.251830317665934e-06], 'false': [nan, 0.19318707305381227], 'false,false': [nan, 0.19318707305381227], 'false,false,false': [0.1787161843717603, 0.20659722222222135], 'true,true': [nan, 7.219843968999027e-06], 'true,true,false': [nan, 7.219843968999027e-06]}
{'': [nan, 0.18543267373275896], 'false': [nan, 0.18543267373275896], 'false,false': [nan, 0.18543267373275962], 'false,false,false': [0.13362337576627878, 0.2221422647461987]}
{'': [nan, 0.19092875711011215], 'false': [nan, 0.19092875711011265], 'false,false': [nan, 0.19092875711011265], 'false,false,false': [nan, 0.19092875711011265]}
{'': [nan, 0.18623987827934999], 'false': [nan, 0.18623987827934999], 'false,false': [nan, 0.18623987827934993], 'false,false,false': [nan, 0.18623987827934993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.215
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(D, E), phenotype(A, F) )
%   | | | then return 0.10139217834275562;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.2494532829255993;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.02481560176617897;  // std dev = 2.041, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.18891816586874216;  // std dev = 5.364, 130.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7402167064805414;  // std dev = 0.146, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(A, E), interaction(F, A) )
%   | | | then return 0.18625446920752153;  // std dev = 3.974, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | | else return 0.11342910667650061;  // std dev = 5.764, 168.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.551520480490687;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), complex(F, D) )
%   | | then return -0.06267913660328421;  // std dev = 0.303, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | | then return 0.603445665204659;  // std dev = 1.313, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.12910317148207565;  // std dev = 3.267, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   else if ( location(A, H), enzyme(A, I) )
%   | then if ( interaction(J, A), complex(J, K) )
%   | | then if ( location(L, H), recursion_proteinclass(L, B) )
%   | | | then return 0.5398243195081781;  // std dev = 1.462, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return -0.18552688854147667;  // std dev = 0.084, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.1606029259111379;  // std dev = 0.430, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | else if ( interaction(A, M), enzyme(M, N) )
%   | | then return 0.033265047329989944;  // std dev = 0.389, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.0947974171748382;  // std dev = 0.443, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then return 0.16341003645622942;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.538323996564436;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(H, F), interaction(I, H) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.07245578651700568;  // std dev = 6.362, 222.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=62 */
%   | | | else return -0.13999363009642296;  // std dev = 0.060, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, F) )
%   | | | then return 0.2988225709158181;  // std dev = 1.216, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.13892645363428935;  // std dev = 1.631, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.6246206672087479;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16656135523037144;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.5526365922643235;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3985156012330886;  // std dev = 0.061, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( complex(A, F), interaction(D, D) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6032948075616987;  // std dev = 0.983, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.18988125866259412;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(D, H), location(D, I) )
%   | | | then return 0.026235063914711126;  // std dev = 3.350, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | | else return 0.16549820198640108;  // std dev = 1.863, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( enzyme(A, L), interaction(J, M) )
%   | | | then return 0.18745245891412662;  // std dev = 1.379, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.03585734347688235;  // std dev = 2.125, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.14587191520055812;  // std dev = 2.983, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0.26049891465534586;  // std dev = 2.985, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A) )
%   | | then return 0.6625620961820643;  // std dev = 0.137, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.43213145310531953;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1899263863754877;  // std dev = 0.134, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(G, H), location(A, I) )
%   | | then return -0.07456980769047498;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3332851587249926;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.5016616391292444;  // std dev = 1.555, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.006803547701742036;  // std dev = 5.658, 203.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=46 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.13520854798905324;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.05677421721530618;  // std dev = 1.214, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5235817801642764;  // std dev = 0.195, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.18447558315998924;  // std dev = 0.374, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( phenotype(A, F), phenotype(E, F) )
%   | | then return -0.1108316084679715;  // std dev = 0.159, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.23637250854382896;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.01209199977641113;  // std dev = 1.785, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6595356884612943;  // std dev = 0.119, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19059837183862702;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.13771615008736823;  // std dev = 2.666, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.057349492777410555;  // std dev = 3.716, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C) )
%   | then if ( interaction(A, E), location(A, D) )
%   | | then if ( recursion_proteinclass(C, B) )
%   | | | then return 0.22702909269728208;  // std dev = 0.150, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.04957884702554017;  // std dev = 2.018, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | else if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.3002036194889173;  // std dev = 1.162, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.028516448312674792;  // std dev = 5.132, 176.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=54 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.6702448153447402;  // std dev = 0.200, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.2642999253341741;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, H) )
%   | then return 0.011038566479734035;  // std dev = 0.264, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( phenotype(A, I) )
%   | | then return -0.06808647556407284;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.19016449675022737;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.21047929326524964;  // std dev = 0.075, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( phenotype(D, E), location(A, F) )
%   | | then if ( complex(D, G), phenotype(A, H) )
%   | | | then return -0.022876858788428687;  // std dev = 1.793, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.11631847488516783;  // std dev = 2.409, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else if ( interaction(D, C) )
%   | | | then return -0.13820012879271226;  // std dev = 1.255, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return -0.0355288307747319;  // std dev = 1.659, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else if ( enzyme(A, I), complex(A, J) )
%   | then return 0.037543557021595564;  // std dev = 0.238, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(M, L), interaction(K, M) )
%   | | | then return 0.14053920359519062;  // std dev = 3.655, 65.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=28 */
%   | | | else return -0.0371131885728866;  // std dev = 1.684, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return 0.4064065934967752;  // std dev = 0.739, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.12874401588068757;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21833291971916913;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.08847357064782771;  // std dev = 0.058, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.237762871489365;  // std dev = 0.262, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.012407903729591146;  // std dev = 4.521, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | | else return 0.06435625466798373;  // std dev = 3.565, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.910', 'seconds']
Refined model CLL: -0.276996


******************************************
Best model found
******************************************
Results 

CLL : -0.287012 

AUC ROC : 0.909789 

AUC PR : 0.245887 

Precision : 0.258232 

Recall : 0.528369 

F1 : 0.346915 

Total Learning Time : 19.215 

Total Inference Time : 7.158649921417236 

Total revision time: 29.270870029449462
Best scored revision CLL: -0.276996


Results 

CLL : -0.287012 

AUC ROC : 0.909789 

AUC PR : 0.245887 

Precision : 0.258232 

Recall : 0.528369 

F1 : 0.346915 

Total Learning Time : 29.299454986572265 

Total Inference Time : 7.158649921417236 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.221
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20366388526562584;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16916802118201604;  // std dev = 5.869, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
%   | | | else return 0.1828570348710298;  // std dev = 5.808, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15045660040748923;  // std dev = 5.183, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
%   | | | else return 0.12005433192852259;  // std dev = 6.570, 200.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11909878220788747;  // std dev = 4.384, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | | else return 0.10494427347205733;  // std dev = 7.141, 234.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07238984521066665;  // std dev = 8.487, 338.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0924596504561069;  // std dev = 8.280, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7296602369550814;  // std dev = 0.000268, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2703396313122043;  // std dev = 0.000386, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06690399448374477;  // std dev = 3.930, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | | else return 0.06088251846107529;  // std dev = 5.195, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04808092271267638;  // std dev = 4.083, 120.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
%   | | | else return 0.07615723236444308;  // std dev = 6.390, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03389319841768938;  // std dev = 7.682, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030939519110972844;  // std dev = 7.654, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.227', 'seconds']
Parameter learned model CLL:-0.33346 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.25, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.869, 102, 52], 'false,false,false,false': [5.808, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.183, 78, 41], 'false,false,false,false': [6.57, 137, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.384, 57, 29], 'false,false,false,false': [7.141, 159, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.487, 234, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.28, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.000268, 0, 41], 'true,false': [0.000386, 85, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.93, 47, 23], 'false,false,false,false': [5.195, 83, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.083, 79, 41], 'false,false,false,false': [6.39, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.682, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.654, 209, 104]}]
{'': [nan, 0.22613436937782366], 'false': [nan, 0.226134369377822], 'false,false': [nan, 0.22613436937782366], 'false,false,false': [nan, 0.226134369377822]}
{'': [nan, 0.22577957107143942], 'false': [nan, 0.2257795710714449], 'false,false': [nan, 0.22577957107143942], 'false,false,false': [0.2236464833867438, 0.22790357925493127]}
{'': [nan, 0.219738274251975], 'false': [nan, 0.219738274251975], 'false,false': [nan, 0.2197382742519772], 'false,false,false': [0.22577237771143163, 0.21580318189889525]}
{'': [nan, 0.2194451690479598], 'false': [nan, 0.2194451690479598], 'false,false': [nan, 0.21944516904795833], 'false,false,false': [0.22349918875067604, 0.21790138608876422]}
{'': [nan, 0.21310532778348873], 'false': [nan, 0.21310532778348873], 'false,false': [nan, 0.21310532778348962], 'false,false,false': [nan, 0.21310532778348962]}
{'': [nan, 0.22477916853086943], 'false': [nan, 0.22477916853086943], 'false,false': [nan, 0.22477916853087065], 'false,false,false': [nan, 0.22477916853086963]}
{'': [0.21951367533286587, 0.2198774331056981], 'false': [nan, 0.2198774331056981], 'false,false': [nan, 0.2198774331056981], 'false,false,false': [0.2206122448979587, 0.21944609689999256], 'true': [1.745277266880338e-09, 1.750274894952915e-09], 'true,true': [nan, 1.745277266880338e-09], 'true,true,false': [nan, 1.745277266880338e-09]}
{'': [nan, 0.19249546149397356], 'false': [nan, 0.19249546149397356], 'false,false': [nan, 0.1924954614939745], 'false,false,false': [0.1389082855676406, 0.22810345902394222]}
{'': [nan, 0.18555298363689546], 'false': [nan, 0.185552983636895], 'false,false': [nan, 0.185552983636895], 'false,false,false': [nan, 0.185552983636895]}
{'': [nan, 0.18719112401400811], 'false': [nan, 0.18719112401400811], 'false,false': [nan, 0.18719112401400753], 'false,false,false': [nan, 0.18719112401400753]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 11.593
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( complex(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(G, F), location(G, I) )
%   | | | then return -0.0198998453882926;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return 0.17296374991432717;  // std dev = 3.413, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.15125238337537444;  // std dev = 3.467, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return 0.23534191755565212;  // std dev = 5.175, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.7319045176838225;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, F) )
%   | | then return 0.21947341221095437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, G), complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.8250692676846584;  // std dev = 0.187, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.15543692264388206;  // std dev = 0.118, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( location(A, J), phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.7251447077845856;  // std dev = 1.893, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | | else return -0.16892892123864753;  // std dev = 0.040, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.032529911106771246;  // std dev = 2.182, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.1983668247245906;  // std dev = 3.373, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5243986495918648;  // std dev = 0.220, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(D, F), interaction(A, D) )
%   | | | then return 0.7104720423020879;  // std dev = 0.119, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.42170830204769516;  // std dev = 1.070, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1548382720134208;  // std dev = 0.315, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0.10243146802764164;  // std dev = 5.604, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6987737833090867;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1414873002392692;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( location(A, I) )
%   | | | then return 0.5329710822150902;  // std dev = 0.798, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15565081105752795;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.4220284048277114;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5368637453324534;  // std dev = 0.095, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.5639176685870446;  // std dev = 0.241, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.014024627692209557;  // std dev = 0.608, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.14114211480360195;  // std dev = 0.479, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0.034620964177304245;  // std dev = 2.657, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.4250635081833975;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return 0.05493975034877937;  // std dev = 2.084, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.12314017093098721;  // std dev = 4.750, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B), location(A, E) )
%   | then if ( complex(A, F), enzyme(D, G) )
%   | | then return -0.06447042584098521;  // std dev = 0.914, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3819298963558137;  // std dev = 0.102, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.009039346612912873;  // std dev = 0.283, 155.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=32 */
%   else if ( phenotype(A, H) )
%   | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, I), interaction(J, A) )
%   | | | then return 0.6184912271900574;  // std dev = 1.002, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.20626494993002895;  // std dev = 1.005, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.17137418839396465;  // std dev = 0.148, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.32583483848360284;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.07045296245218984;  // std dev = 1.980, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.008886885259809098;  // std dev = 3.029, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( interaction(C, C), recursion_proteinclass(C, B) )
%   | then return 0.264654384353389;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, D), enzyme(D, E) )
%   | | | then return -0.20481609933848716;  // std dev = 0.388, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.096240337188714;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(C, C), enzyme(C, F) )
%   | | | then return 0.14808686651303551;  // std dev = 0.643, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0209553074396125;  // std dev = 2.129, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.38183402402318173;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.33348999919405575;  // std dev = 0.103, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return -0.05323813622842461;  // std dev = 1.460, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.06556302747439591;  // std dev = 5.075, 180.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=57 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.24707517335559262;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.44071254781738506;  // std dev = 0.130, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.13408563492759723;  // std dev = 0.300, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.17333693378441892;  // std dev = 0.768, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( recursion_proteinclass(G, B), phenotype(G, I) )
%   | | | then return 0.2907788896883273;  // std dev = 0.857, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.001755662923413238;  // std dev = 4.683, 175.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=43 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.2662817309596736;  // std dev = 1.068, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.19143519409005041;  // std dev = 0.185, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.43459693652972947;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14145807499545635;  // std dev = 0.236, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F), location(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.028818508397818726;  // std dev = 1.671, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return 0.04931989374684144;  // std dev = 2.420, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.005825793206227968;  // std dev = 0.380, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10436265167794483;  // std dev = 1.231, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else if ( phenotype(A, K), interaction(A, L) )
%   | | then if ( interaction(M, A), interaction(M, L) )
%   | | | then return -0.046020357461543836;  // std dev = 1.585, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return 0.042093152317892964;  // std dev = 1.304, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( phenotype(A, N), enzyme(A, P) )
%   | | | then return 0.011303504724352972;  // std dev = 1.352, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.09265497186709216;  // std dev = 3.625, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.1650457587817932;  // std dev = 0.094, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3312751390014969;  // std dev = 0.080, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.12208620922506812;  // std dev = 0.064, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, A) )
%   | | then return 0.19841955245231582;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.26188108634428586;  // std dev = 0.248, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return -0.09559738259633405;  // std dev = 0.850, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.0013654549830987388;  // std dev = 3.048, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | | else if ( location(A, J) )
%   | | | then return 0.009052156933189911;  // std dev = 3.969, 121.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=35 */
%   | | | else return 0.1328126744422529;  // std dev = 1.433, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.1521763433175043;  // std dev = 0.240, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | else if ( interaction(A, D) )
%   | | then return -0.0926074384475959;  // std dev = 0.192, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(F, D), phenotype(D, G) )
%   | | | then return 0.03380274870528999;  // std dev = 2.887, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | | else return -0.06336492531515678;  // std dev = 1.471, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   else if ( complex(A, H), location(A, I) )
%   | then return 0.004685630842006413;  // std dev = 0.197, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.22021873367359418;  // std dev = 0.639, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.030613385472420238;  // std dev = 3.392, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.36773009360247827;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09926486591594291;  // std dev = 1.100, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.494', 'seconds']
Refined model CLL: -0.212507


******************************************
Best model found
******************************************
Results 

CLL : -0.232398 

AUC ROC : 0.949904 

AUC PR : 0.321782 

Precision : 0.317623 

Recall : 0.584906 

F1 : 0.411687 

Total Learning Time : 11.593 

Total Inference Time : 8.640508890151978 

Total revision time: 23.45761023902893
Best scored revision CLL: -0.212507


Results 

CLL : -0.232398 

AUC ROC : 0.949904 

AUC PR : 0.321782 

Precision : 0.317623 

Recall : 0.584906 

F1 : 0.411687 

Total Learning Time : 23.486195196151733 

Total Inference Time : 8.640508890151978 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.097
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2053187464202672;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16680001946182377;  // std dev = 5.821, 152.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=51 */
%   | | | else return 0.14665831905696416;  // std dev = 5.298, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10115350710034897;  // std dev = 5.576, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | | else return 0.1302067658945783;  // std dev = 5.704, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13696551399332105;  // std dev = 4.121, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | | else return 0.1290280483012966;  // std dev = 6.599, 194.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09512532108789451;  // std dev = 7.860, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08745313387994243;  // std dev = 7.802, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7124329447281782;  // std dev = 0.991, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.2649500442920139;  // std dev = 0.023, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07553279480628279;  // std dev = 4.040, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | | else return 0.07051301392174945;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04352686694696582;  // std dev = 4.310, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return 0.03999394666153659;  // std dev = 5.694, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.034291381015479246;  // std dev = 7.125, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0179947541731064;  // std dev = 7.179, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.460', 'seconds']
Parameter learned model CLL:-0.321448 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.75, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.821, 101, 51], 'false,false,false,false': [5.298, 89, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.576, 106, 44], 'false,false,false,false': [5.704, 101, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.121, 49, 26], 'false,false,false,false': [6.599, 128, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.86, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.802, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.991, 1, 44], 'true,false': [0.023, 72, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.04, 47, 25], 'false,false,false,false': [3.901, 45, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.31, 90, 44], 'false,false,false,false': [5.694, 100, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.125, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.179, 197, 92]}]
{'': [nan, 0.22664293342826763], 'false': [nan, 0.22664293342826716], 'false,false': [nan, 0.22664293342826763], 'false,false,false': [nan, 0.22664293342826716]}
{'': [nan, 0.2198078567476511], 'false': [nan, 0.21980785674764747], 'false,false': [nan, 0.2198078567476511], 'false,false,false': [0.2229484072022142, 0.21591715976331446]}
{'': [nan, 0.21303461449166558], 'false': [nan, 0.21303461449166558], 'false,false': [nan, 0.2130346144916659], 'false,false,false': [0.20730788565603495, 0.21837632030090326]}
{'': [nan, 0.2250637977317735], 'false': [nan, 0.2250637977317735], 'false,false': [nan, 0.2250637977317733], 'false,false,false': [0.2264888888888881, 0.22449529443575011]}
{'': [nan, 0.2206501162731563], 'false': [nan, 0.2206501162731563], 'false,false': [nan, 0.220650116273157], 'false,false,false': [nan, 0.220650116273157]}
{'': [nan, 0.22379521701575467], 'false': [nan, 0.22379521701575467], 'false,false': [nan, 0.22379521701575367], 'false,false,false': [nan, 0.22379521701575458]}
{'': [0.23450297762812872, 0.2252922421199609], 'true': [0.02183274515280497, 7.447069036535679e-06], 'false': [nan, 0.2252922421199609], 'false,false': [nan, 0.2252922421199609], 'false,false,false': [0.22665895061728353, 0.22383217993079543], 'true,true': [nan, 0.02183274515280497], 'true,true,false': [nan, 0.02183274515280497]}
{'': [nan, 0.18083929712580163], 'false': [nan, 0.18083929712580163], 'false,false': [nan, 0.1808392971258011], 'false,false,false': [0.1386018023492925, 0.2190754222694701]}
{'': [nan, 0.18068131010789615], 'false': [nan, 0.18068131010789681], 'false,false': [nan, 0.18068131010789681], 'false,false,false': [nan, 0.18068131010789681]}
{'': [nan, 0.17832191846959847], 'false': [nan, 0.17832191846959847], 'false,false': [nan, 0.17832191846959836], 'false,false,false': [nan, 0.17832191846959836]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.24
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( enzyme(A, D), complex(A, E) )
%   | | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1996123497336589;  // std dev = 6.073, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), complex(A, D) )
%   | then return 0.5082438995261179;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8133060333951868;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( complex(F, G), enzyme(F, H) )
%   | | then return 0.3320725576320333;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( location(F, I) )
%   | | | then return -0.001009656571174346;  // std dev = 1.814, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.2970143868412815;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5528067455442878;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.07241472486581606;  // std dev = 1.920, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.198279157313092;  // std dev = 5.918, 159.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=59 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), complex(A, E) )
%   | then return 0.6163419972019735;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5744502993089278;  // std dev = 0.078, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( enzyme(A, G) )
%   | | then return -0.14235928443641932;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.1327962666735656;  // std dev = 1.338, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06120475703512527;  // std dev = 1.476, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.665231367701926;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.14213345536864147;  // std dev = 3.438, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | | else return 0.08099052277825496;  // std dev = 5.571, 160.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.4161706314067894;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return 0.43654168794284587;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.530424927138172;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.46094424632186026;  // std dev = 0.051, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(H, A), enzyme(H, G) )
%   | | | then return -0.1199634885920069;  // std dev = 0.044, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.0337340130093068;  // std dev = 2.261, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.046303139099994776;  // std dev = 4.150, 100.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=26 */
%   | | | else return 0.10542823871637838;  // std dev = 4.979, 119.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), phenotype(C, F) )
%   | then if ( enzyme(E, D) )
%   | | then return 0.034380648754405045;  // std dev = 0.524, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(C, E) )
%   | | | then return -0.07815534203171837;  // std dev = 0.441, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.03624524040772044;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.5297582707702047;  // std dev = 0.211, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.14293859805016662;  // std dev = 0.046, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.36621827275857666;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.15947943064460032;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.13427393992420017;  // std dev = 3.695, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return 0.07366124701630711;  // std dev = 5.293, 150.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=46 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.31521429096689974;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, C), complex(E, F) )
%   | | then if ( complex(A, F), location(C, G) )
%   | | | then return -0.04305130801869063;  // std dev = 1.463, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.08809978053044319;  // std dev = 4.223, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | | else return -0.012600488368081572;  // std dev = 0.386, 100.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=23 */
%   else if ( phenotype(A, H) )
%   | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.6932236732523052;  // std dev = 0.158, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.22221744851766734;  // std dev = 0.034, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(K, L), interaction(K, M) )
%   | | | then return 0.15254369338976972;  // std dev = 1.697, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.004160651229704406;  // std dev = 1.980, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return -0.05098845716324089;  // std dev = 0.733, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49743779691654477;  // std dev = 0.271, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.21590365588909258;  // std dev = 0.088, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(F, G), complex(F, H) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.08760421568817763;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2506638093654521;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.07227970299256588;  // std dev = 0.294, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7466363654337471;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.253692833903641;  // std dev = 0.047, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.1080842050049947;  // std dev = 2.131, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.054369611922068704;  // std dev = 3.487, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19961237278203928;  // std dev = 0.066, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.11976979986817851;  // std dev = 0.387, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.03016754398761823;  // std dev = 1.339, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(H, D), complex(A, I) )
%   | | | then return 0.12212798820869553;  // std dev = 1.744, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.001371382750821597;  // std dev = 3.102, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( phenotype(A, L), interaction(J, J) )
%   | | | then return -0.034479223599851706;  // std dev = 1.266, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.03834189065234734;  // std dev = 2.809, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.032986927843475504;  // std dev = 2.070, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.09257165704440506;  // std dev = 2.838, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.1515782884529265;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2260279660931835;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(E, E), enzyme(A, G) )
%   | | then return -0.10459588885424762;  // std dev = 0.235, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( location(A, H), location(E, H) )
%   | | | then return 0.023916322998998894;  // std dev = 2.943, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return -0.04035166343394483;  // std dev = 1.909, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B), interaction(K, A) )
%   | | | then return 0.3868115757755248;  // std dev = 0.457, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.013786033610810487;  // std dev = 3.462, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.11140692955365193;  // std dev = 3.071, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return -0.01247880734309427;  // std dev = 0.792, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, C), complex(A, D) )
%   | then return -0.03768061693211847;  // std dev = 0.254, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.16370324731783845;  // std dev = 0.068, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(F, C), interaction(F, F) )
%   | | | then return 0.07002007936393818;  // std dev = 2.370, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 3.7422710823194146E-4;  // std dev = 4.326, 142.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=42 */
%   else if ( location(A, G) )
%   | then if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.40648397932208713;  // std dev = 0.514, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.25383916730941986;  // std dev = 0.484, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( location(J, G), recursion_proteinclass(J, B) )
%   | | | then return 0.47043997704402424;  // std dev = 1.382, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return -0.2430787768420523;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.04059630754252893;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.357', 'seconds']
Refined model CLL: -0.250988


******************************************
Best model found
******************************************
Results 

CLL : -0.260478 

AUC ROC : 0.928333 

AUC PR : 0.16235 

Precision : 0.187835 

Recall : 0.379061 

F1 : 0.251196 

Total Learning Time : 6.24 

Total Inference Time : 2.7132794857025146 

Total revision time: 11.833534585952759
Best scored revision CLL: -0.250988


Results 

CLL : -0.260478 

AUC ROC : 0.928333 

AUC PR : 0.16235 

Precision : 0.187835 

Recall : 0.379061 

F1 : 0.251196 

Total Learning Time : 11.862119543075561 

Total Inference Time : 2.7132794857025146 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.182
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1826772369863052;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15942557508957705;  // std dev = 5.925, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
%   | | | else return 0.1645226624682195;  // std dev = 4.772, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16096651748372112;  // std dev = 4.266, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.11616126382750148;  // std dev = 6.348, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11865130005335237;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.13166233038923522;  // std dev = 6.647, 197.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09615158420399683;  // std dev = 7.600, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07001641515564473;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7322903920003834;  // std dev = 0.009, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2677303853196913;  // std dev = 0.012, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.019263906811904822;  // std dev = 4.876, 118.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=33 */
%   | | | else return 0.05507573748464991;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06389517784336989;  // std dev = 3.332, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.034530676539046984;  // std dev = 6.362, 192.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03216990248682054;  // std dev = 7.178, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03288206197598889;  // std dev = 7.141, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.543', 'seconds']
Parameter learned model CLL:-0.325025 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.622, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.925, 108, 52], 'false,false,false,false': [4.772, 69, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.266, 52, 28], 'false,false,false,false': [6.348, 132, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.559, 38, 19], 'false,false,false,false': [6.647, 130, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.6, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.009, 0, 28], 'true,false': [0.012, 55, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.876, 85, 33], 'false,false,false,false': [4.134, 54, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.332, 50, 28], 'false,false,false,false': [6.362, 134, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.178, 188, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.141, 180, 86]}]
{'': [nan, 0.21920968316126813], 'false': [nan, 0.21920968316126796], 'false,false': [nan, 0.21920968316126813], 'false,false,false': [nan, 0.21920968316126796]}
{'': [nan, 0.22006968439618949], 'false': [nan, 0.22006968439618918], 'false,false': [nan, 0.22006968439618949], 'false,false,false': [0.21937500000000015, 0.2211330002827782]}
{'': [nan, 0.21705401879093508], 'false': [nan, 0.21705401879093508], 'false,false': [nan, 0.2170540187909352], 'false,false,false': [0.22749524479111413, 0.21206289510510912]}
{'': [nan, 0.2238568908279287], 'false': [nan, 0.2238568908279287], 'false,false': [nan, 0.22385689082792884], 'false,false,false': [0.2222222222222226, 0.22429187642600454]}
{'': [nan, 0.22047829866715543], 'false': [nan, 0.22047829866715543], 'false,false': [nan, 0.2204782986671552], 'false,false,false': [nan, 0.2204782986671552]}
{'': [nan, 0.2174831774625886], 'false': [nan, 0.2174831774625886], 'false,false': [nan, 0.21748317746258852], 'false,false,false': [nan, 0.21748317746258763]}
{'': [0.2235568450160784, 0.2077181780217201], 'true': [2.7568651967005816e-06, 2.782814984613292e-06], 'false': [nan, 0.2077181780217201], 'false,false': [nan, 0.2077181780217201], 'false,false,false': [0.20145073254811763, 0.21631148854350307], 'true,true': [nan, 2.7568651967005816e-06], 'true,true,false': [nan, 2.7568651967005816e-06]}
{'': [nan, 0.1912216097913499], 'false': [nan, 0.1912216097913499], 'false,false': [nan, 0.19122160979134975], 'false,false,false': [0.1423524668201601, 0.21082559776386064]}
{'': [nan, 0.18801958454256454], 'false': [nan, 0.18801958454256468], 'false,false': [nan, 0.18801958454256468], 'false,false,false': [nan, 0.18801958454256468]}
{'': [nan, 0.1917054956011419], 'false': [nan, 0.1917054956011419], 'false,false': [nan, 0.1917054956011416], 'false,false,false': [nan, 0.1917054956011416]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.422
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.06153876560798695;  // std dev = 3.092, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return 0.18314893509951138;  // std dev = 5.925, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7265816671497414;  // std dev = 0.110, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.13667443674310809;  // std dev = 0.046, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.05886035748131223;  // std dev = 1.756, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.2859742231891291;  // std dev = 2.104, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.1281074346903911;  // std dev = 6.068, 179.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5543128622654959;  // std dev = 0.003, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, A) )
%   | then return -0.11953926275739216;  // std dev = 0.051, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.592013674583185;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.34201367458318493;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.07848214673366526;  // std dev = 4.550, 110.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=28 */
%   | | | else return 0.18145770611254405;  // std dev = 4.771, 98.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=36 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( complex(A, E), interaction(A, F) )
%   | then return 0.004310503882820568;  // std dev = 0.337, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else if ( enzyme(C, G), interaction(H, C) )
%   | | then return 0.29400491403076895;  // std dev = 0.466, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else return 0.07683831457265979;  // std dev = 0.433, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   else if ( complex(A, I), location(A, J) )
%   | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | then return 0.7431395713055956;  // std dev = 0.370, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.18671850995219821;  // std dev = 0.045, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.7224690921088958;  // std dev = 0.416, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.19215340131608283;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.18332083064565077;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03705863837382248;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then return 0.41496715060504563;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.18505981530492216;  // std dev = 0.638, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( enzyme(A, F), location(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.7396191153609908;  // std dev = 0.549, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.31097292419477895;  // std dev = 0.959, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.21670341302820173;  // std dev = 0.120, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(A, K), interaction(K, A) )
%   | | | then return -0.10928458023741888;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.04077225197276633;  // std dev = 1.968, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.40358511396620234;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.050887098155413764;  // std dev = 4.961, 131.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=36 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3088098691015249;  // std dev = 0.057, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.11227891842389097;  // std dev = 0.887, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.10739342165376714;  // std dev = 0.067, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( location(A, E) )
%   | | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.30140242239170645;  // std dev = 4.783, 114.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=68 */
%   | | | else return -0.20171478164754786;  // std dev = 0.380, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else return 0.2512385779844694;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.45118920321952766;  // std dev = 0.249, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.18691109772466172;  // std dev = 0.068, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.23297644426921116;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10720115531370733;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.06289833555497652;  // std dev = 1.514, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( interaction(F, A), interaction(A, G) )
%   | | then if ( interaction(H, F), enzyme(H, I) )
%   | | | then return 0.027166436689242356;  // std dev = 1.309, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.213582684525131;  // std dev = 1.927, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return -0.2648105246963951;  // std dev = 0.955, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08414064056030816;  // std dev = 3.783, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then return 0.03730487142328647;  // std dev = 0.237, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | else if ( complex(C, G), location(C, D) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.18870317454976318;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.05701086291400232;  // std dev = 2.195, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else if ( interaction(C, C), phenotype(C, I) )
%   | | | then return 0.21282883342187897;  // std dev = 0.718, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.001396194551399745;  // std dev = 3.101, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   else if ( location(A, J) )
%   | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(K, L), interaction(M, K) )
%   | | | then return 0.36836317440463817;  // std dev = 2.235, 36.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | | | else return 0.10735933751453551;  // std dev = 1.412, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return -0.18978702058546526;  // std dev = 0.146, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0.42220166528355557;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(C, E) )
%   | then return -0.05814325242463351;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.1647186663538242;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.2660837770656619;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.4846033179583428;  // std dev = 1.637, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return -0.08306623882880032;  // std dev = 2.383, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.11032460328886605;  // std dev = 0.180, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.17248315195105066;  // std dev = 0.610, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, L) )
%   | | then return -0.06675442164377132;  // std dev = 1.064, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.22177352655098007;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(E, C), complex(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.18584048725730487;  // std dev = 0.113, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.009803605732743347;  // std dev = 0.293, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | else return -0.017579393050029906;  // std dev = 0.283, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then if ( complex(A, J), phenotype(A, K) )
%   | | then return 0.2111553488902665;  // std dev = 0.674, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.22732537457733545;  // std dev = 0.720, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.010449763035900771;  // std dev = 1.674, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( complex(A, L) )
%   | | then return 0.09839979334069389;  // std dev = 0.501, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.1379277314504333;  // std dev = 0.754, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.37321574600108787;  // std dev = 0.608, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '59.344', 'seconds']
Refined model CLL: -0.212131


******************************************
Best model found
******************************************
Results 

CLL : -0.226749 

AUC ROC : 0.979946 

AUC PR : 0.276829 

Precision : 0.200971 

Recall : 0.731449 

F1 : 0.315308 

Total Learning Time : 8.422 

Total Inference Time : 5.974002122879028 

Total revision time: 17.254837182998656
Best scored revision CLL: -0.212131


Results 

CLL : -0.226749 

AUC ROC : 0.979946 

AUC PR : 0.276829 

Precision : 0.200971 

Recall : 0.731449 

F1 : 0.315308 

Total Learning Time : 17.28342214012146 

Total Inference Time : 5.974002122879028 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.085
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.16946968981649205;  // std dev = 4.767, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | | | else return 0.21814893509951117;  // std dev = 4.800, 100.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.5766162693538115;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6546056202013355;  // std dev = 3.501, 84.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=69 */
%   | | | else return -0.16678000791161096;  // std dev = 0.040, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( location(A, I) )
%   | | | then return 0.13645250276540075;  // std dev = 1.646, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4675490592564588;  // std dev = 0.968, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10296474505719944;  // std dev = 4.304, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5732335613521969;  // std dev = 2.268, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return -0.14821994295837865;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.020331040365228165;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08757062260813162;  // std dev = 1.341, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.45382154329289087;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4390123351382723;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39466723815237004;  // std dev = 2.079, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else return 0.04283498120184191;  // std dev = 5.151, 225.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5336508117799696;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.22702322594019872;  // std dev = 1.486, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3602829079040783;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3176493583890676;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06659891812159664;  // std dev = 5.547, 242.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4015901654290779;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0508222484572008;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16087294788128612;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28043346017760395;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.38323362591790017;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.30993270102726267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.019718987211275487;  // std dev = 2.332, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2544974623807273;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.0713882925392477;  // std dev = 4.777, 181.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=55 */
%   | | | else return -0.05435753954506728;  // std dev = 2.019, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24944436248349394;  // std dev = 0.187, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24780254032989202;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.7653149358058626;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.6058149739649357;  // std dev = 0.350, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1894782538690185;  // std dev = 0.520, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20929396507215334;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.059578066445984706;  // std dev = 4.094, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19057218693857847;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.170200917595932;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39540189934382086;  // std dev = 2.796, 82.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=71 */
%   | | else return -0.1576806626159683;  // std dev = 0.251, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20453801824894247;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.13315803964811457;  // std dev = 1.241, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17236648362626902;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1662415265560899;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04098641216275897;  // std dev = 1.693, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.08932998703911511;  // std dev = 0.372, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.025195062910639443;  // std dev = 1.900, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15334750569953082;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.061008185408731715;  // std dev = 3.370, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
%   | | | else return -0.02283584633889505;  // std dev = 1.387, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1373617526912865;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2331753586800812;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.009298451338232774;  // std dev = 0.469, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.006729522771259721;  // std dev = 2.232, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.13448195248060202;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.038231663377914074;  // std dev = 3.416, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | | else return -0.05930910777494184;  // std dev = 1.437, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.519', 'seconds']
Parameter learned model CLL:-0.202908 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.767, 73, 33], 'false,false,true,false': [4.8, 64, 36], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.926, 1, 6], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.501, 15, 69], 'false,false,true,false': [0.04, 139, 0], 'false,false,false,true': [1.646, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.968, 1, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.304, 82, 34], 'false,true,false,true': [2.268, 6, 37], 'false,true,false,false': [0.0, 96, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.247, 7, 2], 'false,false,false,true': [1.341, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.082, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.079, 6, 14], 'false,true,false': [5.151, 168, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.486, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.027, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.017, 0, 4], 'false,true': [5.547, 171, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.034, 0, 7], 'true,true,false': [0.171, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.332, 36, 12], 'false,false,true': [0.014, 0, 3], 'false,false,false,true': [4.777, 126, 55], 'false,false,false,false': [2.019, 22, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.187, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.35, 0, 33], 'true,false': [0.52, 97, 0], 'false,true': [0.012, 0, 3], 'false,false,true': [4.094, 88, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.021, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.796, 11, 71], 'false,true,false': [0.251, 168, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.241, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.102, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.032, 0, 3], 'false,true,true': [1.693, 32, 11], 'false,true,false,true': [0.372, 1, 1], 'false,true,false,false': [1.9, 56, 17], 'false,false,true': [0.009, 0, 3], 'false,false,false,true': [3.37, 74, 40], 'false,false,false,false': [1.387, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.022, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.469, 1, 3], 'false,true': [2.232, 75, 29], 'false,false,true': [0.008, 0, 3], 'false,false,false,true': [3.416, 78, 40], 'false,false,false,false': [1.437, 13, 4]}]
{'': [-1.6148698540002277e-16, 0.2266007798002544], 'false': [0.18750000000000006, 0.22425094645754595], 'false,false': [0.22275897822603463, 0.2469135802469134], 'false,false,false': [0.22222222222222224, 0.22222222222222224], 'false,false,true': [0.21440014239943178, 0.23040000000000124], 'false,true': [0.0, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.07638888888888899, 0.21546311768061494], 'false': [0.0, 0.21401468927708672], 'false,false': [0.21338210284238934, 0.22573414817414092], 'false,false,false': [0.22573414817414092, nan], 'false,false,true': [0.145922979332359, 1.1344064661271004e-05], 'true': [0.1224489795918368, 0.0], 'false,true': [0.0, nan]}
{'': [0.07960581698118545, 0.15559540237620745], 'false': [0.15363647767094152, 0.17944256641872605], 'false,false': [0.17283950617283952, 0.179870324858353], 'false,false,false': [0.179870324858353, nan], 'false,false,true': [nan, 0.17283950617283952], 'false,true': [0.15971514852860302, 0.148206955581013], 'false,true,false': [0.11960892971655154, -9.71445146547012e-17], 'true': [0.1042131163609496, 0.0]}
{'': [0.0006295579586878087, 0.14021150458349638], 'false': [0.13521659596096242, 0.2293009909659264], 'false,false': [0.0, 0.24537683121123674], 'false,false,false': [0.24537683121123674, nan], 'false,true': [0.21613270331119877, 0.11791907863388432], 'false,true,true': [nan, 0.21613270331119883], 'true': [0.0006725762412686631, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.0005117405523199201, 0.13173045169740222], 'false': [0.12714894647715502, 0.22077282900619732], 'false,false': [0.0, 0.23330579636345944], 'false,false,false': [0.2222222222222223, 0.23999999999999994], 'true': [0.00010378977917587953, 6.898742261804425e-05], 'true,true': [0.00010378977917587953, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0047914558587163, 0.12649972756078107], 'false': [0.1132630423774902, 0.12923498121360685], 'false,false': [6.254642625830309e-05, 0.13052334511017014], 'false,false,false': [0.12608395635310377, 0.14552716412703529], 'true': [0.0052704380110940915, 0.0], 'true,true': [0.0001656716907563987, 0.009784047571852786], 'true,false': [nan, 0.0]}
{'': [0.12113276668141469, 0.12842298665231733], 'false': [4.770925158379772e-05, 0.1309184650339213], 'false,false': [0.1309184650339213, nan], 'true': [0.06251288689269462, 0.0027929434251231337], 'true,true': [0.003188809625614943, 0.057266975356259915], 'true,true,false': [0.0, 0.003708302085018095], 'true,true,true': [0.003507445535450604, 0.0]}
{'': [0.00014385223532820628, 0.10159304122339705], 'false': [0.09895193032482469, 0.15455586780340413], 'false,false': [0.0, 0.1712192318692769], 'false,false,false': [0.1712192318692769, nan], 'false,true': [0.09534773211557819, 0.0003758172350758799], 'false,true,true': [nan, 0.09534773211557827], 'true': [-4.625929269271485e-18, 9.01174915598546e-05], 'false,false,true': [0.0, nan]}
{'': [0.0010524564381598162, 0.08226545741823603], 'false': [0.05637131352774335, 0.10231183427506974], 'false,false': [2.945808637159116e-05, 0.1044731026968005], 'false,false,false': [0.09964730039360017, 0.1375079865357641], 'false,true': [0.06668531470373003, 0.05032853479197337], 'false,true,false': [0.06911752675828264, 0.04946400823369365], 'true': [0.0013128150391712619, 0.00033088312701788175], 'true,false': [nan, 0.00033088312701788175]}
{'': [0.023413449658027465, 0.07817406145277657], 'false': [0.04788117813094007, 0.10080337188923491], 'false,false': [2.370201068500194e-05, 0.10278684498430452], 'false,false,false': [0.0988899674044911, 0.12151964261394164], 'true': [0.0010636718738467159, 0.055038870433968316], 'true,true': [0.0010636718738467159, nan], 'true,true,true': [6.80941121099589e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 7.494
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.16665957339738335;  // std dev = 4.478, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.21779805790652926;  // std dev = 5.124, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6950381411328981;  // std dev = 3.080, 80.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=69 */
%   | | | else return -0.16589918377600738;  // std dev = 0.110, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.22136561214847741;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.16284947398865776;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5738601552634877;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.1040553428091621;  // std dev = 3.965, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | | | else return 0.01673441466980517;  // std dev = 1.715, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7089157380086512;  // std dev = 0.099, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.14607177251109912;  // std dev = 0.024, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.004078751846687045;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07925458148664628;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.13668389991784152;  // std dev = 1.007, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.05523688376482194;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4293846220416925;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.45392710866272923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.37062610721241174;  // std dev = 3.753, 98.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=68 */
%   | | | else return -0.14861866666447623;  // std dev = 0.337, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.054444374657169795;  // std dev = 0.792, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.062148822230718874;  // std dev = 0.807, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5831441062425007;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.02892915468832946;  // std dev = 0.875, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5222989893653025;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31861841992117296;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.15110161314430398;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( location(A, G) )
%   | | | then return 0.02487975675104627;  // std dev = 3.285, 107.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=28 */
%   | | | else return -0.048769681623344635;  // std dev = 1.259, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.01351805372947828;  // std dev = 2.394, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return 0.1140220264873819;  // std dev = 2.611, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4384511531847609;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.01241576521000054;  // std dev = 1.212, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.15010258306200325;  // std dev = 1.274, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.13272236613628907;  // std dev = 0.336, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.21629109023653567;  // std dev = 0.592, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3349454228161203;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, I), enzyme(G, J) )
%   | | | then return -0.1465487672597955;  // std dev = 0.843, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.07642571547654402;  // std dev = 2.181, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else return -0.17197334758813876;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3174962376955256;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.020201698918136668;  // std dev = 2.312, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return 0.05976145038287018;  // std dev = 3.998, 148.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26419170994559804;  // std dev = 0.068, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5353620979306019;  // std dev = 0.890, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18082656943966965;  // std dev = 0.081, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2529768280648247;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), interaction(G, I) )
%   | | | then return 0.07400696697975935;  // std dev = 2.520, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return -0.0945798680619743;  // std dev = 1.257, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07382574777648505;  // std dev = 1.912, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.09101484058824243;  // std dev = 0.616, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1829631217197789;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.04315833582648256;  // std dev = 0.920, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.2579895085591988;  // std dev = 1.074, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.3659690732643656;  // std dev = 2.186, 69.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=62 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.12466810552311958;  // std dev = 0.231, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.15614629694240317;  // std dev = 0.299, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.21669375637827748;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.029313022931590278;  // std dev = 1.233, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.04836591774056054;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1801644793611888;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.19944750504154374;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.09601508398805676;  // std dev = 1.123, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.02294972286080783;  // std dev = 0.919, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.05561248837538503;  // std dev = 0.994, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.006938510161754747;  // std dev = 1.436, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.04881965666646537;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.019578726158738416;  // std dev = 3.036, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | | else return 0.1007130865057235;  // std dev = 1.241, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.10521501472182467;  // std dev = 0.149, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.1695770913140627;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2596672430340182;  // std dev = 1.274, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | | else return -0.11573321598448438;  // std dev = 0.490, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.07628528066484658;  // std dev = 0.335, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.015594038405864152;  // std dev = 0.680, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.2091405393330953;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, M) )
%   | | | then return -0.1392713428123837;  // std dev = 1.515, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.027764513817590094;  // std dev = 2.959, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '28.753', 'seconds']
Refined model CLL: -0.185756


******************************************
Best model found
******************************************
Results 

CLL : -0.183979 

AUC ROC : 0.986306 

AUC PR : 0.31045 

Precision : 0.163363 

Recall : 0.847518 

F1 : 0.273926 

Total Learning Time : 7.494 

Total Inference Time : 114.89987993240356 

Total revision time: 130.54879093551637
Best scored revision CLL: -0.185756


Results 

CLL : -0.183979 

AUC ROC : 0.986306 

AUC PR : 0.31045 

Precision : 0.163363 

Recall : 0.847518 

F1 : 0.273926 

Total Learning Time : 130.5715971031189 

Total Inference Time : 114.89987993240356 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.319
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6081489350995123;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.084426307362285;  // std dev = 4.897, 137.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=31 */
%   | | | else return 0.1466104735610499;  // std dev = 5.659, 156.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7670719622367218;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6692450100937585;  // std dev = 0.947, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6335710030633863;  // std dev = 0.875, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7587697046363143;  // std dev = 2.520, 83.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=76 */
%   | | | else return -0.15646300792772386;  // std dev = 0.057, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( location(A, K) )
%   | | | then return 0.40816712206090056;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.34505030867664094;  // std dev = 1.675, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else return 0.4820896289323141;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06992474788091069;  // std dev = 4.330, 136.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5802468696548706;  // std dev = 2.469, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.14065594923399874;  // std dev = 9.42e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.27311624676148916;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.044738717921571435;  // std dev = 1.616, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.40464822376967124;  // std dev = 1.332, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return -0.1488041468639488;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.35499712659913135;  // std dev = 0.759, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.522187047896893;  // std dev = 1.794, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.02663083323412175;  // std dev = 5.134, 252.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5655066324474772;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.04467587357182027;  // std dev = 1.680, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.19992090417913552;  // std dev = 1.232, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33752033979072527;  // std dev = 0.949, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05062287217067495;  // std dev = 5.822, 295.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4250771225037069;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.41631411934595813;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26366608595117025;  // std dev = 0.942, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.3579030016318252;  // std dev = 0.835, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32584408520389607;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.007921955571424796;  // std dev = 2.878, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2568384524320118;  // std dev = 0.817, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05861876235181101;  // std dev = 4.602, 180.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=51 */
%   | | | else return 0.043322795741000716;  // std dev = 2.219, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.34189886536896996;  // std dev = 0.212, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.25867119965511354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2771805056363782;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4747634472988628;  // std dev = 1.566, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.1809530413501251;  // std dev = 0.830, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.13768843805362735;  // std dev = 0.938, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.10138471199484037;  // std dev = 4.290, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.24408631469751724;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.10199176851411884;  // std dev = 1.155, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return -0.5852139459593332;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3719432924393659;  // std dev = 3.225, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.14557287070436725;  // std dev = 0.317, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2122263019724131;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.1138434172203112;  // std dev = 1.501, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.10965394470065644;  // std dev = 0.960, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.0526918324710889;  // std dev = 0.604, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.21661985427022695;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.006656720289126989;  // std dev = 1.601, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2738028438587228;  // std dev = 0.164, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.0276766730857307;  // std dev = 1.398, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2596403126870732;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02438482545749657;  // std dev = 3.915, 150.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=47 */
%   | | | else return -0.0606688201644826;  // std dev = 1.467, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.06438640629018617;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.10453775711808255;  // std dev = 0.715, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08455980304521077;  // std dev = 0.375, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.02499912249878018;  // std dev = 2.630, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.04058839625457302;  // std dev = 0.952, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.02000388002123433;  // std dev = 3.825, 154.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
%   | | | else return -0.0036407280036558566;  // std dev = 1.401, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.811', 'seconds']
Parameter learned model CLL:-0.197564 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.732, 4, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [1.095, 3, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.897, 106, 31], 'false,false,true,false': [5.659, 111, 45], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.947, 1, 10], 'false,true,true': [0.875, 1, 7], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [2.52, 7, 76], 'false,false,true,false': [0.057, 196, 0], 'false,false,false,true': [1.309, 3, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.675, 4, 11], 'true,false': [0.923, 1, 6], 'false,true,true': [4.33, 102, 34], 'false,true,false,true': [2.469, 7, 48], 'false,true,false,false': [9.42e-08, 99, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.616, 10, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.332, 2, 16], 'true,false': [0.823, 2, 1], 'false,true,true,true': [0.759, 1, 3], 'false,true,true,false': [1.794, 4, 21], 'false,true,false': [5.134, 194, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.68, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.232, 2, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.949, 1, 10], 'false,true': [5.822, 213, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.143, 2, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.942, 1, 9], 'true,true,false': [0.835, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.878, 64, 19], 'false,false,true': [0.817, 1, 8], 'false,false,false,true': [4.602, 129, 51], 'false,false,false,false': [2.219, 19, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.212, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [5.27e-09, 0, 3], 'true,true,false,false': [1.566, 4, 33], 'true,false': [0.83, 102, 0], 'false,true': [0.938, 1, 5], 'false,false,true': [4.29, 80, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [1.05e-08, 0, 7], 'true,false': [1.155, 2, 10], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.225, 13, 82], 'false,true,false': [0.317, 198, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.501, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.96, 1, 9], 'true,false,true': [0.604, 2, 2], 'true,false,false': [0.085, 0, 5], 'false,true,true': [1.601, 41, 13], 'false,true,false,true': [0.164, 0, 8], 'false,true,false,false': [1.398, 43, 11], 'false,false,true': [0.11, 0, 5], 'false,false,false,true': [3.915, 103, 47], 'false,false,false,false': [1.467, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.901, 1, 7], 'true,true,true,false': [0.715, 1, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.375, 1, 3], 'false,true': [2.63, 88, 32], 'false,false,true': [0.952, 1, 5], 'false,false,false,true': [3.825, 107, 47], 'false,false,false,false': [1.401, 9, 4]}]
{'': [0.17561983471074338, 0.19951730491908398], 'false': [0.20999999999999988, 0.19308812849758747], 'false,true': [0.24000000000000005, 0.0], 'false,false': [0.19210474204708308, 0.21301775147928975], 'false,false,false': [0.21301775147928975, nan], 'false,false,true': [0.175075923064629, 0.20525147928994195], 'true': [0.18749999999999967, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05204587285002877, 0.20494773201333302], 'false': [0.1675321248456853, 0.20102069724231922], 'false,false': [0.19782785268670697, 0.24489795918367346], 'false,false,false': [0.24489795918367346, nan], 'false,false,true': [0.07649055698435107, 1.684069341158648e-05], 'false,true': [0.09563203982892704, 0.0], 'true': [-1.2688263138573217e-16, 0.08144426331242177], 'false,true,false': [nan, 0.0]}
{'': [0.17036055925945087, 0.15223838856556024], 'true': [0.18709649156667876, 0.12169345492516749], 'false': [0.14956611374171688, 0.2002338142235109], 'false,false': [0.2002338142235109, nan], 'false,false,true': [0.25, 0.18660482215270546], 'false,true': [0.13783974205241847, 0.15889100684038907], 'false,true,false': [0.1108013999718575, 8.971499188890154e-17]}
{'': [0.1543097376793086, 0.13220868181058282], 'true': [0.09859650734057707, 0.22603809694600552], 'false': [0.12831760114926888, 0.2050863717136305], 'false,false': [0.0, 0.20165108630520456], 'false,false,false': [0.20165108630520456, nan], 'false,true': [0.1341884378917919, 0.10460174374991504], 'false,true,true': [0.14391021475343832, 0.12877744052033507], 'false,false,true': [nan, 0.0]}
{'': [0.12562046056785886, 0.11959836746623137], 'true': [0.16874954113877788, 0.08181290890355171], 'true,true': [0.16874954113877788, nan], 'false': [0.11489014355243965, 0.18649009569015051], 'false,false': [0.0, 0.21756080827312663], 'false,false,false': [0.21756080827312663, nan], 'false,false,true': [nan, 0.0]}
{'': [0.09000712797824334, 0.11866607803408515], 'false': [0.09976538692312553, 0.12440523554152576], 'false,false': [0.07418076865118267, 0.12491098134228786], 'false,false,false': [0.1176393429478237, 0.16984378628803007], 'true': [0.0952713110173954, 0.0], 'true,true': [0.08864853018609106, 0.0995085463277444], 'true,false': [nan, 0.0]}
{'': [0.1059307701521876, 0.14506360472512217], 'false': [0.14678031791968713, 0.1449230432989256], 'false,false': [0.1449230432989256, nan], 'true': [0.04973960120966118, 0.006756864043921681], 'true,true': [0.003204767500557662, 0.06401354368117577], 'true,true,false': [9.25185853854297e-18, 0.06627590459397639], 'true,true,true': [0.0029854908960004127, 0.0]}
{'': [0.07494935636393525, 0.0982250823466483], 'false': [0.0954607684452732, 0.13072102353995654], 'false,false': [0.0, 0.13250374763653838], 'false,false,false': [0.13250374763653838, nan], 'false,true': [0.11781123429323431, 0.000509007035385727], 'false,true,true': [0.0, 0.10950812360083785], 'true': [1.586032892321652e-17, 0.11123107632787316], 'false,false,true': [0.0, nan]}
{'': [0.0766286741270058, 0.08073882604698204], 'false': [0.044716883833981355, 0.10514135008462001], 'false,false': [0.002428633199238306, 0.1065172980788751], 'false,false,false': [0.1021638947014983, 0.14347485673119856], 'true': [0.09221905903597677, 0.05922075770247721], 'true,false': [0.09114241853320873, 0.0014484136532463498], 'false,true': [0.04744293962489694, 0.04219374343389355], 'false,true,false': [0.0033788948556637, 0.03621636245049799]}
{'': [0.07738035651477297, 0.08384904873416162], 'false': [0.05765033988446031, 0.1012308179621955], 'false,false': [0.15096505780103436, 0.09942651792125186], 'false,false,false': [0.09502203635809807, 0.15108713686593653], 'true': [0.08863795259295738, 0.03516274302498613], 'true,true': [0.08863795259295738, nan], 'true,true,true': [0.1014995339975702, 0.07307919923049444]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(F, E), interaction(A, F).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.433
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, G), interaction(A, H) )
%   | | then if ( interaction(H, A), enzyme(H, G) )
%   | | | then return -0.050941973991396876;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.10814893509951234;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return 0.11455919150976858;  // std dev = 3.856, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return 0.19148226843284613;  // std dev = 5.774, 150.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.6086899220885286;  // std dev = 0.338, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.6285643213018635;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.7551805016408267;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.41589598673584804;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7423733156776273;  // std dev = 2.677, 84.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=76 */
%   | | | else return -0.16118351389122926;  // std dev = 0.106, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.12994063857888224;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.01099347160257944;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5794476846117443;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.27950474248297263;  // std dev = 0.464, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5738681328346152;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06766612647523366;  // std dev = 4.193, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5606234870924309;  // std dev = 2.617, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.14265361852145625;  // std dev = 0.043, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return 0.09301805721063183;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2075436919223404;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.10429164586458987;  // std dev = 0.642, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return 0.3610375764128213;  // std dev = 0.262, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.48011111667086304;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( phenotype(A, H), phenotype(F, H) )
%   | | | then return -0.024720827296667944;  // std dev = 1.504, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.052402963025140026;  // std dev = 1.442, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( phenotype(A, I), location(A, J) )
%   | | | then return 0.10328568685466666;  // std dev = 4.449, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   | | | else return 0.052369817162006005;  // std dev = 3.429, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.6038812260058608;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.020818583675351242;  // std dev = 1.275, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.22026110565606047;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.33533002452525335;  // std dev = 0.050, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.42966263023338563;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5262720757462602;  // std dev = 2.068, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | | else return -0.1595388485671042;  // std dev = 0.505, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.012799600292401327;  // std dev = 3.406, 105.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=26 */
%   | | | else return 0.11898856481931128;  // std dev = 1.113, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4545711810522608;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.28802224766276635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.02502535412745488;  // std dev = 1.275, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2890218079899929;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.281470855456912;  // std dev = 1.078, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.29773323330009216;  // std dev = 0.230, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.3459727562829913;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then return 0.014245094599770868;  // std dev = 0.320, 119.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=30 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(I, K), enzyme(A, L) )
%   | | | then return 0.09982607440048732;  // std dev = 2.049, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.04460033812844034;  // std dev = 3.263, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.45354407524922263;  // std dev = 0.217, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07956931601789184;  // std dev = 1.557, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.44147463061858844;  // std dev = 0.199, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | else return -0.1678672496271842;  // std dev = 0.085, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(E, E) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.44810850852033146;  // std dev = 0.293, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.24879388529458785;  // std dev = 0.574, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2523465066427792;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.009484444462871824;  // std dev = 3.113, 107.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=28 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.17293125545070806;  // std dev = 0.291, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08484607390841417;  // std dev = 1.031, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.03534798784404124;  // std dev = 1.142, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19888423178865278;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.18614943253443617;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2581574049904879;  // std dev = 3.701, 105.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=82 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.1644348984511455;  // std dev = 0.591, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.1330940251091655;  // std dev = 0.274, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.19399831468053697;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.079216211116906;  // std dev = 1.263, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.01743517531928064;  // std dev = 0.757, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18079137165119852;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17046306304566697;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.39767081550419964;  // std dev = 0.176, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.0758191933816752;  // std dev = 1.513, 64.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=8 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return -0.18336281208579666;  // std dev = 0.694, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.03117575972361999;  // std dev = 1.729, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1767100533092935;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.01748558252079282;  // std dev = 2.151, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.022177982738250057;  // std dev = 3.141, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( enzyme(C, E), complex(C, F) )
%   | | then return 0.19124627882043288;  // std dev = 0.232, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.15931145354741322;  // std dev = 0.115, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.010028700636770211;  // std dev = 1.995, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | else if ( location(A, H), location(C, H) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.03362251263674899;  // std dev = 1.624, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.03329066284482181;  // std dev = 2.835, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | | else if ( location(A, K) )
%   | | | then return 0.06792508584945736;  // std dev = 1.346, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.021063633984969903;  // std dev = 1.351, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   else if ( complex(A, L) )
%   | then return 0.32977741431807417;  // std dev = 0.709, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.045615905609524054;  // std dev = 1.051, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.313', 'seconds']
Refined model CLL: -0.187779


******************************************
Best model found
******************************************
Results 

CLL : -0.177892 

AUC ROC : 0.990901 

AUC PR : 0.389529 

Precision : 0.30329 

Recall : 0.8 

F1 : 0.439834 

Total Learning Time : 7.433 

Total Inference Time : 24.380432605743408 

Total revision time: 41.06534018707275
Best scored revision CLL: -0.187779


Results 

CLL : -0.177892 

AUC ROC : 0.990901 

AUC PR : 0.389529 

Precision : 0.30329 

Recall : 0.8 

F1 : 0.439834 

Total Learning Time : 41.08814635467529 

Total Inference Time : 24.380432605743408 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.479
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0803711573217346;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.1476226193100376;  // std dev = 5.591, 152.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16460054800273813;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8405765508399357;  // std dev = 0.023, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1587513314729825;  // std dev = 0.043, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( location(A, K) )
%   | | | then return 0.13672284378845256;  // std dev = 3.550, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.018726149425418222;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.44425532563517334;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.012697876173287851;  // std dev = 2.181, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6608909393963699;  // std dev = 1.013, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.140501765986121;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1771745751329481;  // std dev = 3.535, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.8133300468488974;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4348503217503753;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4265947324208203;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3920952802317489;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4113141313311901;  // std dev = 0.644, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06655926511429287;  // std dev = 4.186, 181.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.511298845526585;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1442108553321702;  // std dev = 3.388, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.30837701450856825;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31730472829404216;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23938705936124743;  // std dev = 0.947, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05851729350128842;  // std dev = 4.219, 193.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3855407382663255;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.023581694917131607;  // std dev = 3.750, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.6258031773197935;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2685262629672616;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3448604977811037;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2540953390020848;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2990896757146043;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.053812634001357176;  // std dev = 1.009, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14427759523157027;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06777737939033883;  // std dev = 3.925, 158.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
%   | | | else return 0.04743878790239712;  // std dev = 3.791, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23591593587380455;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22505709179089978;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.26107423907617866;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6124252232006502;  // std dev = 1.167, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.20851446155767414;  // std dev = 0.788, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25752344194064536;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06209115570990549;  // std dev = 3.301, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17887066435068674;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20518207409745132;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4250589748001832;  // std dev = 1.179, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.14233263526066087;  // std dev = 0.404, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1882824754358065;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06438980924207596;  // std dev = 3.037, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15462446711639444;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13067982291725266;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17121042213491805;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07589548606930574;  // std dev = 0.447, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.21372892622069728;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.03276344019729836;  // std dev = 1.449, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17924776771369172;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04946932670144211;  // std dev = 2.604, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | | | else return 0.0574712334956586;  // std dev = 2.973, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12743781977318291;  // std dev = 0.000360, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1440044788541542;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.15006996899012348;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.47175270036983125;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.139920388862545;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.026787049511559847;  // std dev = 1.406, 84.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15437937487552872;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.005310024965203234;  // std dev = 2.745, 136.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=36 */
%   | | | else return 0.02292287189979806;  // std dev = 3.031, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.380', 'seconds']
Parameter learned model CLL:-0.182304 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.494, 28, 8], 'false,false,true,false': [5.591, 108, 44], 'false,false,false,true': [3.63, 43, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.023, 0, 52], 'false,false,true,false': [0.043, 135, 0], 'false,false,false,true': [3.55, 42, 18], 'false,false,false,false': [1.279, 9, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [2.181, 36, 8], 'false,true,false,true': [1.013, 1, 48], 'false,true,false,false': [0.0, 120, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.535, 35, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.043, 0, 11], 'true,false': [0.022, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.644, 1, 3], 'false,true,false': [4.186, 129, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.388, 32, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.947, 1, 9], 'false,true': [4.219, 137, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.75, 54, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.049, 0, 7], 'true,true,false': [0.062, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.009, 18, 3], 'false,false,true': [0.923, 1, 6], 'false,false,false,true': [3.925, 109, 49], 'false,false,false,false': [3.791, 45, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.112, 0, 12], 'true,true,true,false': [0.022, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.167, 1, 36], 'true,false': [0.788, 103, 0], 'false,true': [0.018, 0, 5], 'false,false,true': [3.301, 77, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.033, 0, 6], 'true,false': [0.04, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.179, 1, 56], 'false,true,false': [0.404, 134, 0], 'false,false,true,true': [0.019, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.037, 37, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.036, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.005, 0, 4], 'false,true,true': [0.447, 15, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.449, 49, 14], 'false,false,true': [0.014, 0, 5], 'false,false,false,true': [2.604, 66, 36], 'false,false,false,false': [2.973, 37, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.00036, 0, 5], 'true,true,true,false': [0.016, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.027, 0, 4], 'false,true': [1.406, 67, 17], 'false,false,true': [0.012, 0, 5], 'false,false,false,true': [2.745, 100, 36], 'false,false,false,false': [3.031, 42, 20]}]
{'': [-2.5376526277146434e-16, 0.21046197880174777], 'false': [-1.4802973661668753e-16, 0.2035963692605741], 'false,false': [0.2000905387052973, 0.21301775147928947], 'false,false,false': [0.21253902185223675, 0.22222222222222224], 'false,false,true': [0.17283950617283966, 0.2056786703601117], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.0, 0.20443868328792372], 'false': [7.401486830834377e-17, 0.20099684599340328], 'false,false': [0.2004923641024697, 0.20232520174951868], 'false,false,false': [0.20998830955781855, 0.14876033057851243], 'false,false,true': [1.0239472509682583e-05, 1.3914548030268958e-05], 'false,true': [0.0, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.062222222222222, 0.15560022858257033], 'false': [0.13308576237859654, 0.22847390790644062], 'false,false': [0.22560385289054258, 0.0], 'false,false,true': [0.0, 0.22715165033579887], 'false,true': [0.10811798583372209, 0.1382919043842238], 'false,true,false': [0.020944463695814156, -9.251858538542972e-17], 'true': [-1.1102230246251565e-16, 0.0987654320987654], 'false,false,false': [0.0, nan]}
{'': [0.0001817645593203489, 0.13069953652900734], 'false': [0.09946739369600849, 0.22797902161643538], 'false,false': [0.0021989188124789116, 0.23295247973065328], 'false,false,false': [0.2295923427151255, 0.25], 'false,true': [0.08305812476940407, 0.09679648477865423], 'false,true,true': [0.0, 0.10374878311423869], 'false,false,true': [0.0, 0.0], 'true': [0.00017174998304920146, 0.00016493450753144825]}
{'': [0.06110271825113742, 0.12062451740310329], 'false': [0.09224387581448083, 0.19245509973974126], 'false,false': [0.001050696280514088, 0.19490971491627238], 'false,false,false': [0.19267875541821503, 0.0], 'true': [5.126329638782678e-07, 0.08963010001625066], 'false,false,true': [0.0, 0.0], 'true,true': [5.126329638782678e-07, nan]}
{'': [0.001718623017762409, 0.1274207994391402], 'false': [0.048493022463592966, 0.1334589251289519], 'false,false': [0.12172762102744314, 0.13362038447824398], 'false,false,false': [0.0975209994910376, 0.22107657349929208], 'true': [0.0019132349267576767, 0.0004393767768387513], 'true,true': [0.00034101060857809936, 0.0009565904079078813], 'true,false': [2.8993032337443214e-07, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13576965588108217, 0.09389047492575325], 'true': [0.05551254865242061, 0.006026368085408779], 'false': [6.278367182634969e-05, 0.09642376223537831], 'false,false': [0.09642376223537831, nan], 'true,true': [0.0009426674789321561, 0.038995364619273984], 'true,true,false': [0.0, 0.036800674602103504], 'true,true,true': [0.0010439219791173366, 0.00023407091083511855]}
{'': [0.00036160805277952416, 0.09503840021931974], 'false': [0.07553198543251867, 0.15686439789209342], 'false,false': [0.00017968337945178936, 0.16184178877538818], 'false,false,false': [0.16184178877538818, nan], 'false,true': [0.024378923161865067, 0.001216806413206092], 'false,true,true': [nan, 0.02437892316186516], 'true': [0.00017779387246558606, 0.00020277285250265564], 'false,false,true': [0.00017968337945178936, nan]}
{'': [0.00020280066841870035, 0.0759470364212342], 'false': [0.030268544447949946, 0.09574557631240573], 'false,false': [3.680975546267451e-05, 0.0982642461449142], 'false,false,false': [0.0664873466866437, 0.1550870953135633], 'false,true': [0.01250994136810088, 0.03413181271971327], 'false,true,false': [0.0, 0.03334587043132925], 'true': [0.0001413172173107824, 0.0002672445631732745], 'true,false': [0.0, 5.509809377989006e-06]}
{'': [0.023249927664291358, 0.06591149385276517], 'false': [0.02354271539135408, 0.08310440130416259], 'false,false': [2.889497111922823e-05, 0.0846417907984669], 'false,false,false': [0.0554202393246078, 0.1481931772999259], 'true': [0.030729880345048567, 0.0001857152443369911], 'true,true': [9.741444406796348e-05, 0.08592520713998657], 'true,true,false': [0.0, 0.0], 'true,true,true': [2.59535248431364e-08, 8.819472428246017e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.935
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.034619523334806335;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.06504548682365029;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.1812258581764351;  // std dev = 6.530, 195.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=63 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8375160593361025;  // std dev = 0.046, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1598077306478044;  // std dev = 0.110, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.09778389433063596;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.2192413842091782;  // std dev = 3.038, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.017293476652007207;  // std dev = 1.297, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.18186155867344936;  // std dev = 1.465, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.680930097186134;  // std dev = 0.211, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14339990963054658;  // std dev = 0.274, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5960526174841312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1302546045631762;  // std dev = 3.635, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else return 0.07068425328692307;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4275422602417459;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4270799561224131;  // std dev = 0.652, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.009724660789727836;  // std dev = 1.915, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return 0.04735739687091694;  // std dev = 3.831, 158.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.44843194547397947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5643387536520023;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.03149179929558062;  // std dev = 1.821, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.08624306941118591;  // std dev = 3.340, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12941977737281415;  // std dev = 0.067, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.09409332343401874;  // std dev = 1.768, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else return 0.083781877895489;  // std dev = 0.302, 147.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=49 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.34176464016165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42420153811648464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1672797862343871;  // std dev = 3.382, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.12975256934086563;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.08411075261119379;  // std dev = 0.974, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.2623317859692494;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3252494639698169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, A) )
%   | then return -0.11748259693638127;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( complex(A, I), complex(G, J) )
%   | | | then return -0.02447087263181695;  // std dev = 2.223, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | | else return 0.07197495567397567;  // std dev = 2.467, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.045644819589142634;  // std dev = 3.501, 142.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=43 */
%   | | | else return 0.16117120814842853;  // std dev = 2.578, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2526597561733163;  // std dev = 0.063, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.24173530663748588;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5867919150977671;  // std dev = 1.302, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.19812411365370106;  // std dev = 0.074, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.24659436499879864;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( location(H, I) )
%   | | | then return 0.03738963533903826;  // std dev = 2.921, 94.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | | | else return -0.1962932461171939;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.06545736954040758;  // std dev = 1.154, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.10316575073799279;  // std dev = 0.975, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17093060377837999;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, E) )
%   | | then return 0.19643773956796784;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.035711008469348826;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.45212095375274475;  // std dev = 0.376, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.4372427338447207;  // std dev = 0.514, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return -0.13616547520771036;  // std dev = 0.029, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.19674610963270972;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.06470674667754182;  // std dev = 1.571, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.08405704962219662;  // std dev = 2.562, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16066428888111872;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18669228265454077;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.07592846696697265;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.04864336874151561;  // std dev = 0.367, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.20425052236687724;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.02738533886742045;  // std dev = 1.267, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.18801057913829988;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, K) )
%   | | | then return 0.023690996049512927;  // std dev = 3.917, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
%   | | | else return -0.11095855123038034;  // std dev = 1.038, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1417888402881878;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1612429450186032;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2279215774123814;  // std dev = 0.134, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.00783476655743653;  // std dev = 1.061, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.06554117470889657;  // std dev = 0.767, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.017619731782454476;  // std dev = 0.315, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.16102233593833565;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.0552490415956805;  // std dev = 1.531, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.009219563660422142;  // std dev = 3.722, 142.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=43 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '45.239', 'seconds']
Refined model CLL: -0.180344


******************************************
Best model found
******************************************
Results 

CLL : -0.194868 

AUC ROC : 0.982079 

AUC PR : 0.201682 

Precision : 0.134118 

Recall : 0.823105 

F1 : 0.230653 

Total Learning Time : 2.935 

Total Inference Time : 2.9288899898529053 

Total revision time: 10.092475618362426
Best scored revision CLL: -0.180344


Results 

CLL : -0.194868 

AUC ROC : 0.982079 

AUC PR : 0.201682 

Precision : 0.134118 

Recall : 0.823105 

F1 : 0.230653 

Total Learning Time : 10.115281785964966 

Total Inference Time : 2.9288899898529053 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.455
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08621911053810886;  // std dev = 3.168, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return 0.16047451649486058;  // std dev = 5.216, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7623619813816814;  // std dev = 0.131, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8210198661003815;  // std dev = 0.993, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15904680596457355;  // std dev = 0.054, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( location(A, I) )
%   | | | then return 0.09562692214493716;  // std dev = 2.837, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.027334239218108007;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.563716005565147;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.385981522415447;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0554198680900269;  // std dev = 2.758, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6665179235231151;  // std dev = 0.995, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14202494804411492;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3618749866462677;  // std dev = 0.969, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10878121974265774;  // std dev = 2.476, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.41527359770242545;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3801776466149103;  // std dev = 0.959, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.530977577121619;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4120426432877799;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.043855510607339845;  // std dev = 4.308, 194.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4545295009557151;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6552362449015012;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08199881899643627;  // std dev = 2.774, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.2547749431480496;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3301794530350113;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3829193002299595;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.043014558582982095;  // std dev = 4.513, 207.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.34594414896768433;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42133462168793673;  // std dev = 0.107, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08098791386185529;  // std dev = 2.497, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.054512812299107136;  // std dev = 1.409, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2604667921685908;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4371203959648142;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2723247544602876;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.014593292312267988;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.02936240100315943;  // std dev = 1.257, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.013473824345043803;  // std dev = 1.209, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06791067060173692;  // std dev = 3.932, 152.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=46 */
%   | | | else return 0.03394560963804441;  // std dev = 3.084, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25104867477771503;  // std dev = 0.233, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2887528996116569;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.301058893848868;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5408737150302275;  // std dev = 1.510, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.17622091996059172;  // std dev = 0.519, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.04767614503964818;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09516686673237684;  // std dev = 3.148, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17318638368388373;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.12806549694161656;  // std dev = 0.932, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36307966861244273;  // std dev = 2.320, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | else return -0.14459527682562354;  // std dev = 0.340, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.03391311421818902;  // std dev = 0.704, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.045421510542061956;  // std dev = 2.445, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15337652928275808;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18225083994734936;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.10348696949645086;  // std dev = 0.754, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.094104675647859;  // std dev = 0.312, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.17118713708873262;  // std dev = 0.713, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.003617959887855984;  // std dev = 1.505, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.003915041925736329;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03397943753294077;  // std dev = 2.718, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | | else return 0.06859062451121074;  // std dev = 2.368, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1312702590696011;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14745809163685408;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1515490123353027;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19790906844155326;  // std dev = 0.058, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.238642683522557;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02533563230085537;  // std dev = 1.875, 105.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25876974347583687;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03324198481764666;  // std dev = 2.686, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return 0.008628074742555785;  // std dev = 2.445, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.220', 'seconds']
Parameter learned model CLL:-0.183408 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [1.309, 4, 3], 'false,false,true,true': [3.168, 44, 13], 'false,false,true,false': [5.216, 90, 39], 'false,false,false,true': [2.372, 15, 9], 'false,false,false,false': [1.369, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.935, 1, 7], 'false,true,true': [0.131, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.993, 1, 52], 'false,false,true,false': [0.054, 133, 0], 'false,false,false,true': [2.837, 30, 11], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.045, 0, 11], 'true,false': [0.894, 1, 4], 'false,true,true': [2.758, 46, 14], 'false,true,false,true': [0.995, 1, 42], 'false,true,false,false': [0.0, 91, 0], 'false,false,true,true': [0.969, 1, 3], 'false,false,true,false': [2.476, 21, 9], 'false,false,false,true': [1.099, 2, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.959, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.897, 2, 6], 'false,true,false': [4.308, 145, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.774, 26, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.026, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.048, 0, 6], 'false,true': [4.513, 151, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.107, 0, 2], 'false,false,false,true': [2.497, 21, 9], 'false,false,false,false': [1.409, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.013, 0, 9], 'true,true,false': [0.126, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.767, 1, 2], 'false,true': [1.257, 21, 5], 'false,false,true': [1.209, 2, 5], 'false,false,false,true': [3.932, 106, 46], 'false,false,false,false': [3.084, 35, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.233, 0, 13], 'true,true,true,false': [0.126, 0, 3], 'true,true,false,true': [0.014, 0, 3], 'true,true,false,false': [1.51, 2, 33], 'true,false': [0.519, 108, 0], 'false,true': [0.856, 1, 3], 'false,false,true': [3.148, 58, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.932, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.32, 6, 56], 'false,true,false': [0.34, 162, 0], 'false,false,true,true': [0.704, 1, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.445, 26, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.023, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.754, 1, 5], 'false,true,true': [0.312, 18, 1], 'false,true,false,true': [0.713, 1, 6], 'false,true,false,false': [1.505, 46, 17], 'false,false,true': [0.886, 1, 3], 'false,false,false,true': [2.718, 71, 31], 'false,false,false,false': [2.368, 22, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.004, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.058, 0, 2], 'true,false': [0.079, 0, 3], 'false,true': [1.875, 81, 24], 'false,false,true': [0.027, 0, 3], 'false,false,false,true': [2.686, 68, 31], 'false,false,false,false': [2.445, 29, 12]}]
{'': [-2.3684757858670006e-16, 0.21391659197955834], 'false': [0.23140495867768587, 0.20738995034088173], 'false,true': [0.0, 0.23999999999999994], 'false,true,false': [1.4802973661668753e-16, 0.24489795918367335], 'false,false': [0.20141056769568813, 0.2343749999999995], 'false,false,false': [0.23437500000000003, 0.2343749999999999], 'false,false,true': [0.1760541705140038, 0.2109248242293136], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05859375000000017, 0.20574900895621845], 'false': [0.002452572487349996, 0.19956588723829474], 'false,false': [0.20103182335558217, 0.19281663516068065], 'false,false,true': [0.018621131222606675, 2.219556823569755e-05], 'false,false,false': [0.19631171921475327, 0.16000000000000003], 'true': [1.1102230246251565e-16, 0.109375], 'false,true': [0.002452572487349996, nan]}
{'': [0.05691462801330971, 0.1582326715165419], 'false': [0.1435332718064352, 0.22657137829385782], 'false,false': [0.2145383712733109, 0.24164066260442213], 'false,false,false': [0.24164066260442213, nan], 'false,false,true': [0.23457780835781541, 0.2043303928174798], 'false,true': [0.12675769990530342, 0.14985535843506026], 'false,true,false': [0.02303228608995684, -3.9040809657148365e-17], 'true': [0.00018590746522904246, 0.15999999999999998]}
{'': [0.05748687815955647, 0.1206044637971061], 'false': [0.10160160746513992, 0.20938369765628057], 'false,false': [0.00895182157007098, 0.21155919302489656], 'false,false,false': [0.20795046084489277, 0.24999999999999994], 'false,true': [0.09083041965272187, 0.09565200011530944], 'false,true,true': [0.0, 0.10061249783308332], 'true': [0.05748687815955647, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.0008686143190998437, 0.116490799232838], 'false': [0.09840412601323516, 0.20313433657454075], 'false,false': [0.005052198557318329, 0.21099638698680154], 'false,false,false': [0.20791611959925055, 0.22072476725087578], 'false,false,true': [0.0, 0.005683723376983113], 'true': [7.788598959290738e-05, 0.0003858119240722768], 'true,true': [7.788598959290738e-05, nan]}
{'': [0.0535895063436176, 0.12072208973851975], 'false': [0.06076236190349578, 0.12736753380077506], 'false,false': [0.20884460973400268, 0.12445832583058816], 'false,false,false': [0.10171190220865828, 0.19414626701946405], 'true': [0.007886365542778159, 0.15960740339699447], 'true,false': [0.0, 0.1962034945507536], 'true,true': [1.9647217687681876e-05, 0.003981984727482624], 'true,false,true': [0.0, nan]}
{'': [0.10742952279257943, 0.11450377891189897], 'false': [0.18319274558596849, 0.11131962923918555], 'false,false': [0.11131962923918555, nan], 'true': [0.06103634262576217, 0.0024960107447344316], 'true,true': [0.004602324910218808, 0.06417508824532882], 'true,true,false': [6.56661387642421e-05, 0.06512982774309722], 'true,true,true': [0.004182524147566728, 0.005266404584985933]}
{'': [0.05477989883058202, 0.08875491784596952], 'false': [0.07613683302864387, 0.15407839648871977], 'false,false': [0.12374820730306059, 0.15725843434519018], 'false,false,false': [0.15725843434519018, nan], 'false,false,true': [0.12374820730306059, nan], 'false,true': [0.08681883313039097, 0.0007116123199129076], 'false,true,true': [nan, 0.08681883313039095], 'true': [-6.938893903907228e-18, 0.10854185045095979]}
{'': [0.034115154651667146, 0.0750772054146571], 'false': [0.03636544039135758, 0.09868731701467752], 'false,false': [0.19619082625171663, 0.09577673757203986], 'false,false,false': [0.07241643777848662, 0.164959186254666], 'false,true': [0.005129177912867787, 0.04235529815909467], 'false,true,false': [0.07259433758622891, 0.03593972269651364], 'true': [5.4176460462482255e-05, 0.08189554053871516], 'true,false': [0.0, 0.09465854768253824]}
{'': [0.0023701620973703395, 0.06886122638729145], 'false': [0.03346595294702291, 0.09351105225383308], 'false,false': [0.00025039254143433925, 0.09437314320029681], 'false,false,false': [0.07289309142456998, 0.1458111910235117], 'true': [0.0008139213200813541, 0.002075982941928798], 'true,true': [4.3694650839481984e-05, 0.0016128818321318507], 'true,true,false': [0.0, 0.0017029044808062194], 'true,true,true': [0.0, 8.836515617092339e-06]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.627
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.0918510649004878;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.07243464938522666;  // std dev = 2.659, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | | else return 0.165377850762162;  // std dev = 5.944, 166.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, E) )
%   | | then return 0.7512057788947993;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7670719622367217;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7668788899979804;  // std dev = 1.931, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.15733532482571883;  // std dev = 0.136, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.10801890468334471;  // std dev = 2.574, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.3368018434186837;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5639534581763036;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2637140557063263;  // std dev = 1.185, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.010819086864562975;  // std dev = 1.702, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return 0.18864445720350895;  // std dev = 1.983, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6332203901517516;  // std dev = 1.678, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14084832521970642;  // std dev = 0.045, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.16338258879544468;  // std dev = 2.271, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.4023829168009584;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.41457287338576065;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5165217521268999;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6185024535909138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6189054981619313;  // std dev = 0.163, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11304528095481642;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.07556189058456153;  // std dev = 4.251, 164.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.1620131493308523;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.012310514343147068;  // std dev = 2.657, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31872088176077346;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2507127717920773;  // std dev = 0.342, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.2748214380363499;  // std dev = 0.707, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.035826904436029074;  // std dev = 1.426, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | | else return 0.06569597107209535;  // std dev = 4.134, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.012621486173183668;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.005830840159825182;  // std dev = 2.322, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.14922802059264662;  // std dev = 1.755, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25853587799779354;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.20648180344953276;  // std dev = 0.719, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3234677102117324;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.09895610005662718;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.015209363419008434;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.33754187345085285;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.04995892910405311;  // std dev = 4.091, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | | else return 0.10167686474313357;  // std dev = 3.098, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.47186308630996987;  // std dev = 0.198, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return -0.1752416368913112;  // std dev = 0.076, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), complex(G, H) )
%   | | then if ( complex(A, I), complex(E, H) )
%   | | | then return 0.5470856724384633;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.030814401426460393;  // std dev = 2.018, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( interaction(J, E), complex(A, K) )
%   | | | then return -0.05341481296705986;  // std dev = 0.954, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.04913160385543237;  // std dev = 1.989, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | else if ( phenotype(A, L) )
%   | | then if ( phenotype(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.45395914286217187;  // std dev = 0.197, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1491112133718427;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.06632899134951246;  // std dev = 0.663, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.14121094017776925;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21096906718224195;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.169582714119038;  // std dev = 1.165, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.3979899310193198;  // std dev = 1.839, 51.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.11201893881057592;  // std dev = 0.215, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.17853116648647055;  // std dev = 0.391, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.06289941406017188;  // std dev = 2.208, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.32932378829669756;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.0832703846157992;  // std dev = 0.769, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1300777291022897;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.17841277722793683;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( phenotype(A, F), complex(E, G) )
%   | | then return 0.05346587515489015;  // std dev = 0.388, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.05561951168139184;  // std dev = 0.332, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return -0.004066616013806222;  // std dev = 0.512, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.01565966934510663;  // std dev = 2.651, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
%   | | | else return -0.16095471618255613;  // std dev = 1.023, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.14401868112148336;  // std dev = 1.356, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.0033901104105508125;  // std dev = 2.670, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1243821668775106;  // std dev = 0.023, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.1556168688889071;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( complex(A, G), location(A, H) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.042205744258970564;  // std dev = 0.850, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return -0.13183497081104634;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.03538363687487864;  // std dev = 1.114, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return -0.00895720479705256;  // std dev = 1.083, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.20061232734416476;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, N), interaction(P, A) )
%   | | | then return 0.07039359325202298;  // std dev = 1.567, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.010195415980179525;  // std dev = 3.241, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.436', 'seconds']
Refined model CLL: -0.188008


******************************************
Best model found
******************************************
Results 

CLL : -0.192362 

AUC ROC : 0.983381 

AUC PR : 0.221086 

Precision : 0.145971 

Recall : 0.780919 

F1 : 0.245965 

Total Learning Time : 3.627 

Total Inference Time : 3.041884422302246 

Total revision time: 11.210851890563966
Best scored revision CLL: -0.183408


Results 

CLL : -0.192362 

AUC ROC : 0.983381 

AUC PR : 0.221086 

Precision : 0.145971 

Recall : 0.780919 

F1 : 0.245965 

Total Learning Time : 11.233658058166505 

Total Inference Time : 3.041884422302246 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.206
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08263873101787853;  // std dev = 5.059, 147.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=33 */
%   | | | else return 0.16323368086222295;  // std dev = 5.002, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7504769940302125;  // std dev = 2.511, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.15778808566015307;  // std dev = 0.068, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( location(A, I) )
%   | | | then return 0.12217639619750877;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5655379819307462;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09323600610815354;  // std dev = 4.315, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.630819389742194;  // std dev = 1.664, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14251524734826518;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15591836006982523;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2822648032823239;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4291538603088888;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4559907657749296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.695362696389993;  // std dev = 0.137, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.04825726442581677;  // std dev = 4.983, 224.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5473855772531102;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.4457249067702058;  // std dev = 1.172, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3204028135495095;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.147668783889435;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07873381333814819;  // std dev = 5.271, 224.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4116199215735721;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.21754514158294747;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.03328996741625774;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26001954061202703;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.26195114293338034;  // std dev = 0.594, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3167186970972201;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.019184116649176783;  // std dev = 2.184, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3156962534458027;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.0833578589138594;  // std dev = 4.645, 163.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=55 */
%   | | | else return 0.003879682021832666;  // std dev = 1.870, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2585815281033631;  // std dev = 0.294, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2524455909530493;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.7989224855813888;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5316572001918239;  // std dev = 1.085, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.19472566952361972;  // std dev = 0.701, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25174930052700567;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0856270050046191;  // std dev = 3.835, 113.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16640569705102015;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.08861360868137969;  // std dev = 0.635, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3798618179992119;  // std dev = 2.799, 80.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | | else return -0.1549728183555104;  // std dev = 0.281, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2078297760851492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 5.458186667518239E-4;  // std dev = 1.356, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17303087491832136;  // std dev = 0.184, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20297602680881957;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.016078887051325496;  // std dev = 1.307, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.059182879136198005;  // std dev = 0.357, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.001597677929474932;  // std dev = 1.772, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.058275520997982;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.0012416570835582666;  // std dev = 3.619, 139.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=40 */
%   | | | else return -0.02056685037811083;  // std dev = 1.381, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.027278810365821762;  // std dev = 0.755, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3054931232920184;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17220279855889353;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.020857715934940606;  // std dev = 2.317, 114.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20239674440067565;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.015376721772857534;  // std dev = 3.557, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   | | | else return -0.08881781174927962;  // std dev = 1.470, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.613', 'seconds']
Parameter learned model CLL:-0.194932 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [5.059, 114, 33], 'false,false,true,false': [5.002, 82, 36], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.913, 1, 5], 'false,true,true': [0.866, 1, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.511, 7, 69], 'false,false,true,false': [0.068, 163, 0], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.05, 0, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.315, 90, 34], 'false,true,false,true': [1.664, 3, 37], 'false,true,false,false': [0.0, 78, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.155, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.055, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.137, 0, 14], 'false,true,false': [4.983, 167, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.172, 2, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.029, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.895, 1, 4], 'false,true': [5.271, 153, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.058, 0, 7], 'true,true,false': [0.594, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.184, 39, 12], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [4.645, 108, 55], 'false,false,false,false': [1.87, 15, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.294, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [1.085, 1, 33], 'true,false': [0.701, 90, 0], 'false,true': [0.005, 0, 3], 'false,false,true': [3.835, 73, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.635, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.799, 9, 71], 'false,true,false': [0.281, 146, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.356, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.184, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.041, 0, 3], 'false,true,true': [1.307, 31, 11], 'false,true,false,true': [0.357, 1, 1], 'false,true,false,false': [1.772, 44, 17], 'false,false,true': [0.871, 1, 3], 'false,false,false,true': [3.619, 99, 40], 'false,false,false,false': [1.381, 9, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.755, 1, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.037, 0, 3], 'false,true': [2.317, 85, 29], 'false,false,true': [0.004, 0, 3], 'false,false,false,true': [3.557, 86, 40], 'false,false,false,false': [1.47, 14, 4]}]
{'': [-1.6148698540002277e-16, 0.19687138473919857], 'false': [0.18750000000000006, 0.19363645774028385], 'false,false': [0.19258098967604173, 0.21301775147928975], 'false,false,false': [0.20408163265306126, 0.22222222222222224], 'false,false,true': [0.17409412744689828, 0.21200804366561452], 'false,true': [0.0, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.07638888888888899, 0.20673290423383187], 'false': [0.1875, 0.20524905749454955], 'false,false': [0.20531248082781917, 0.20409223822201164], 'false,false,true': [0.08297281101170356, 2.8538691268776955e-05], 'false,false,false': [0.20409223822201164, nan], 'false,true': [0.1875, nan], 'true': [7.401486830834377e-17, 0.13888888888888884]}
{'': [0.0004104211495122553, 0.15789972132678315], 'false': [0.1539080332672361, 0.2262363051875513], 'false,false': [0.2222222222222223, 0.22226867629665584], 'false,false,false': [0.22226867629665584, nan], 'false,false,true': [nan, 0.2222222222222223], 'false,true': [0.15017261992061307, 0.15747636890054567], 'false,true,false': [0.06923644120526262, -4.839433697084016e-17], 'true': [0.0003103809943186264, 0.0]}
{'': [0.0003349787069480263, 0.13345232283274475], 'false': [0.1275733537038644, 0.19751180804164278], 'false,false': [0.0, 0.22895402958338804], 'false,false,false': [0.22895402958338804, nan], 'false,true': [0.0013370669025118964, 0.110831036918505], 'false,true,true': [nan, 0.0013370669025118964], 'true': [0.0003030020780980136, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.07411052148401186, 0.1292020293902293], 'false': [0.12405098443980365, 0.2252836246000235], 'false,false': [0.0, 0.23533881626174977], 'false,false,false': [0.25000000000000006, 0.20408163265306115], 'true': [0.00011743597636908782, 0.16029589827652402], 'true,true': [0.00011743597636908782, nan], 'false,false,true': [nan, 0.0]}
{'': [0.02995111636578665, 0.12818475031871596], 'false': [0.09354523126969404, 0.13560135280065935], 'false,false': [9.692634420743751e-06, 0.13687713819848546], 'false,false,false': [0.13234507404427473, 0.16645874485277273], 'true': [0.03241264207278563, 0.0], 'true,true': [0.0004766008852395024, 0.08829833982256444], 'true,false': [nan, 0.0]}
{'': [0.11838479655116453, 0.12747479590021923], 'false': [7.378994214805405e-06, 0.13014518100066827], 'false,false': [0.13014518100066827, nan], 'true': [0.07497376418553818, 0.005463474381776804], 'true,true': [0.007874786160161906, 0.08278660846969826], 'true,true,false': [0.0, 0.03463744299902583], 'true,true,true': [0.008658842073931495, 0.0]}
{'': [0.035089428852347095, 0.10285000149604093], 'false': [0.10043255311566027, 0.14457483530171944], 'false,false': [0.0, 0.1533176121663731], 'false,false,false': [0.1533176121663731, nan], 'false,true': [0.09794084843558229, 0.000541910307981749], 'false,true,true': [nan, 0.09794084843558219], 'true': [4.625929269271485e-18, 0.06715305319823922], 'false,false,true': [0.0, nan]}
{'': [0.003414022625892178, 0.07958063743418546], 'false': [0.047532136063480085, 0.10115026427207395], 'false,false': [0.18965184815753502, 0.09874263263665095], 'false,false,false': [0.09421567929795663, 0.14680468846949174], 'false,true': [0.04070339936537707, 0.05197690210123645], 'false,true,false': [0.0636999590991474, 0.05147526096981913], 'true': [0.0042344952600828, 0.0005739413310238648], 'true,false': [nan, 0.0005739413310238648]}
{'': [0.055774020229316275, 0.07861594676394688], 'false': [0.0470922384823682, 0.10273755029855972], 'false,false': [5.424748523312021e-06, 0.10406111438983429], 'false,false,false': [0.1004215433990195, 0.12003867311162907], 'true': [0.0709669861715916, 0.0004461922715295978], 'true,true': [0.0709669861715916, nan], 'true,true,true': [0.07123750345226325, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 6.008
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5724346493852275;  // std dev = 4.472, 98.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=70 */
%   | | | else return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.00851773156715447;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5735252546657348;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.504142292933094;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6856626622727591;  // std dev = 2.498, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.14168529429387722;  // std dev = 0.444, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.3239737655515786;  // std dev = 1.101, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09926456351159357;  // std dev = 0.778, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4633615860664798;  // std dev = 0.310, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.616888089852492;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.02656017686583343;  // std dev = 2.516, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | | | else return 0.06040981964511826;  // std dev = 3.099, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5462382930077372;  // std dev = 1.783, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.13125171208454986;  // std dev = 0.326, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7116870148954724;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.20058787048410168;  // std dev = 0.147, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.1602867556675883;  // std dev = 0.966, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4581744482378558;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4762589220725748;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.4572669469034913;  // std dev = 1.370, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.12920699432887153;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.13513053991807122;  // std dev = 0.314, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0.07798665544851827;  // std dev = 4.407, 179.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=57 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.11164119838830694;  // std dev = 0.647, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.07306861919599814;  // std dev = 1.016, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.01700329563502777;  // std dev = 0.834, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.34521611826453685;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.16736772381427595;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), location(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1334568715257379;  // std dev = 0.152, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.054883369351426924;  // std dev = 3.062, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.08015679462136081;  // std dev = 3.549, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   | | | else return 0.2844303540806577;  // std dev = 0.478, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.541350543782815;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.0451379157673071;  // std dev = 0.957, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.20931264070191877;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.32730941816938486;  // std dev = 0.097, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4071958681350737;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.04121809290317669;  // std dev = 1.381, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.03336802329215782;  // std dev = 0.680, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.13904183449931765;  // std dev = 0.834, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.01598055046434491;  // std dev = 0.948, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.08011211135387017;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.07214262566294309;  // std dev = 4.217, 163.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=57 */
%   | | | else return -0.05452667051837538;  // std dev = 1.432, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2669867674852418;  // std dev = 0.086, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.7439868049562081;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5083691758057176;  // std dev = 0.359, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1599378766303586;  // std dev = 0.078, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.03509381968247907;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4255326572526207;  // std dev = 0.894, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.19327018117209124;  // std dev = 0.697, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.03549998859541684;  // std dev = 2.793, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return -0.037019094734839754;  // std dev = 0.480, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16962260870174606;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.25371330002452497;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.13604990151528606;  // std dev = 2.069, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | | else return 0.33691961393440445;  // std dev = 2.105, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | else if ( location(A, I) )
%   | | | then return -0.12922448694529812;  // std dev = 0.485, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | | else return -0.10812385273675344;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.22892770148871683;  // std dev = 0.690, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.04152592023764771;  // std dev = 0.939, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.05167168069947598;  // std dev = 0.652, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17621055757042198;  // std dev = 0.079, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2599079435419372;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), phenotype(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( location(E, H), location(G, I) )
%   | | | then return 0.26055454039155956;  // std dev = 1.245, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | | else return -0.1636382932297772;  // std dev = 0.490, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11767413928540053;  // std dev = 0.041, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), location(A, M) )
%   | | | then return 0.05455263595817083;  // std dev = 1.871, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.15373696365290654;  // std dev = 0.657, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return -0.042680021440725815;  // std dev = 0.875, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.04156794286912574;  // std dev = 1.952, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.12626298998055888;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.34026181147795775;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.21351527346395868;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( complex(A, H), enzyme(A, I) )
%   | | then return 0.09870593625557535;  // std dev = 0.461, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return -0.009061143748207427;  // std dev = 1.812, 90.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
%   | | | else return 0.07880376285496254;  // std dev = 0.664, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.18988227271729405;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.018234472521257195;  // std dev = 2.610, 112.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=37 */
%   | | | else return -0.06946204091499406;  // std dev = 1.632, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.367', 'seconds']
Refined model CLL: -0.170259


******************************************
Best model found
******************************************
Results 

CLL : -0.16219 

AUC ROC : 0.989914 

AUC PR : 0.371945 

Precision : 0.197037 

Recall : 0.943262 

F1 : 0.32598 

Total Learning Time : 6.008 

Total Inference Time : 9.609697341918945 

Total revision time: 23.914615406036376
Best scored revision CLL: -0.170259


Results 

CLL : -0.16219 

AUC ROC : 0.989914 

AUC PR : 0.371945 

Precision : 0.197037 

Recall : 0.943262 

F1 : 0.32598 

Total Learning Time : 29.437260402679442 

Total Inference Time : 9.609697341918945 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.201
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14518597213654802;  // std dev = 4.701, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
%   | | | else return 0.14661047356104992;  // std dev = 5.659, 156.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7473839334745777;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6437882419911126;  // std dev = 0.941, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.49725118998873225;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6933610290995169;  // std dev = 3.332, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.16056219552993262;  // std dev = 0.001, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0524814818778267;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.43058575945081673;  // std dev = 1.264, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.6027266635426961;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0677707621340897;  // std dev = 4.354, 137.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5896489851296967;  // std dev = 2.461, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.14317908490247994;  // std dev = 0.249, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8092161789204597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08065463338235924;  // std dev = 1.615, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.40705291035612107;  // std dev = 0.978, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return -0.03672298974558036;  // std dev = 0.712, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.278454631482296;  // std dev = 0.798, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.42406601411317757;  // std dev = 2.266, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | else return 0.04522262957529473;  // std dev = 5.114, 232.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5899951291721128;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.11789705110793265;  // std dev = 1.580, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2524667875280197;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2903377307773978;  // std dev = 0.862, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.07155311651104923;  // std dev = 5.751, 275.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44372694689061754;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.061281383259157884;  // std dev = 1.641, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3151692582229312;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.47138749745880754;  // std dev = 0.193, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.33854681307938583;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.04611617604290724;  // std dev = 2.758, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3095870432590351;  // std dev = 0.106, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.04663497091592518;  // std dev = 4.745, 180.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=51 */
%   | | | else return 0.03278674360394589;  // std dev = 2.262, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2949154850786843;  // std dev = 0.274, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2673080437455041;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23707478319344;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5217817838898259;  // std dev = 1.417, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.17382553876838355;  // std dev = 0.473, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.09465131222343721;  // std dev = 0.880, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05890707103177336;  // std dev = 4.462, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20377490895871458;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.13512027600053997;  // std dev = 0.845, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return -0.7243909619343541;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3973375637844902;  // std dev = 2.960, 93.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=82 */
%   | | else return -0.15419364541515962;  // std dev = 0.426, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21829472375242476;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.01729802981265073;  // std dev = 1.439, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18788785132268393;  // std dev = 0.108, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.27379000091364786;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2098572606379963;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.059773666967178986;  // std dev = 1.861, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20620241002712808;  // std dev = 0.564, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.058472569552883845;  // std dev = 1.469, 71.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21367632485346716;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.017091658939437475;  // std dev = 3.870, 167.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=47 */
%   | | | else return 0.06615084933825573;  // std dev = 1.347, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14747690824572354;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.06786617277907919;  // std dev = 1.297, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.7377141845386412;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17582583201095017;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02908728469269949;  // std dev = 2.433, 133.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18020272559230766;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0291516525554168;  // std dev = 3.876, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   | | | else return -0.014279285485045562;  // std dev = 1.420, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.871', 'seconds']
Parameter learned model CLL:-0.197395 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.701, 77, 31], 'false,false,true,false': [5.659, 111, 45], 'false,false,false,true': [1.491, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.941, 1, 10], 'false,true,true': [1.247, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.332, 13, 76], 'false,false,true,false': [0.001, 183, 0], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.264, 2, 11], 'true,false': [0.032, 0, 6], 'false,true,true': [4.354, 103, 34], 'false,true,false,true': [2.461, 7, 48], 'false,true,false,false': [0.249, 83, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.615, 10, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.978, 1, 16], 'true,false': [0.712, 1, 1], 'false,true,true,true': [0.798, 1, 3], 'false,true,true,false': [2.266, 8, 21], 'false,true,false': [5.114, 174, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.58, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.935, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.862, 1, 10], 'false,true': [5.751, 193, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.641, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.028, 0, 9], 'true,true,false': [0.193, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.758, 45, 19], 'false,false,true': [0.106, 0, 8], 'false,false,false,true': [4.745, 129, 51], 'false,false,false,false': [2.262, 26, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.274, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.417, 2, 33], 'true,false': [0.473, 90, 0], 'false,true': [0.88, 1, 5], 'false,false,true': [4.462, 106, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.845, 1, 10], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.96, 11, 82], 'false,true,false': [0.426, 204, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.439, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.108, 0, 9], 'true,false,true': [0.868, 2, 2], 'true,false,false': [0.108, 0, 5], 'false,true,true': [1.861, 54, 13], 'false,true,false,true': [0.564, 1, 8], 'false,true,false,false': [1.469, 60, 11], 'false,false,true': [0.082, 0, 5], 'false,false,false,true': [3.87, 120, 47], 'false,false,false,false': [1.347, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [1.297, 2, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.087, 0, 3], 'false,true': [2.433, 101, 32], 'false,false,true': [0.072, 0, 5], 'false,false,false,true': [3.876, 102, 47], 'false,false,false,false': [1.42, 12, 4]}]
{'': [0.09418282548476423, 0.21417091836734747], 'false': [-2.5376526277146434e-16, 0.20716767969515332], 'false,false': [0.20500459136822805, 0.2469135802469134], 'false,false,false': [0.2469135802469134, nan], 'false,false,true': [0.20464677640603698, 0.20525147928994195], 'true': [0.1224489795918365, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.051763980262908404, 0.20377208338761713], 'false': [0.17283950617283964, 0.20032115962701597], 'false,false': [0.20133647992130477, 0.17993079584775082], 'false,false,true': [0.12472916550004953, 9.168585046009105e-09], 'false,false,false': [0.17993079584775082, nan], 'false,true': [0.17283950617283964, nan], 'true': [-6.344131569286608e-17, 0.08053111325024766]}
{'': [0.09054547205953974, 0.16001624595246305], 'false': [0.15743438392083592, 0.2069421897223883], 'false,false': [0.2069421897223883, nan], 'false,false,true': [0.0, 0.18633697966010118], 'false,true': [0.13836587216442622, 0.17308651098154917], 'false,true,false': [0.11016226257913334, 0.0007468244648464304], 'true': [0.12290172189594317, 0.0001654019122236209]}
{'': [0.09558705900397366, 0.13857734337684752], 'false': [0.1349920588791149, 0.20775620540920586], 'false,false': [0.0, 0.2079248690411094], 'false,false,false': [0.2079248690411094, nan], 'false,true': [0.17718983418398082, 0.1127437323505995], 'false,true,true': [0.15935333805932644, 0.1770800193639807], 'true': [0.05626074282694691, 0.2536539127356336], 'false,false,true': [nan, 0.0]}
{'': [0.08548596043017775, 0.12422791752140142], 'false': [0.12025551436989802, 0.20198078115216403], 'false,false': [0.0, 0.2070702922361876], 'false,false,false': [0.2070702922361876, nan], 'true': [0.10937499999999997, 0.06750823627342378], 'true,true': [0.10937499999999997, nan], 'false,false,true': [nan, 0.0]}
{'': [0.007952811195625048, 0.12432075258862792], 'false': [0.11887596222509342, 0.12586328498627355], 'false,false': [0.0014080716994036013, 0.12795977568457437], 'false,false,false': [0.12510399101110015, 0.14207888788554196], 'true': [0.008387400369391281, 0.0], 'true,true': [8.912937942622761e-05, 0.0061923238923642], 'true,false': [nan, 0.0]}
{'': [0.10870027583733423, 0.13013100009452966], 'false': [0.1290569725241328, 0.130124905585861], 'false,false': [0.130124905585861, nan], 'true': [0.05159147251420462, 0.0024843038165197396], 'true,true': [0.004726392882319019, 0.05873647832952168], 'true,true,false': [0.0, 0.0573717118060515], 'true,true,true': [0.0049938500650799815, 0.0]}
{'': [0.04081954542838917, 0.09827054838803863], 'false': [0.09705773593522411, 0.11796359578221338], 'false,false': [0.0, 0.12181907829864953], 'false,false,false': [0.12181907829864953, nan], 'false,true': [0.10644251485142191, 0.0008890926387485071], 'false,true,true': [0.0, 0.09420115498557581], 'true': [-2.3790493384824782e-17, 0.06496260810377892], 'false,false,true': [0.0, nan]}
{'': [0.08131254254173305, 0.07227709935019684], 'true': [0.0013040006816425168, 0.14269949296190595], 'true,false': [0.18823078236533314, 0.002312384280762192], 'false': [0.04444438825011207, 0.09242950234268131], 'false,false': [0.0013353145817801449, 0.09395872677053164], 'false,false,false': [0.08969027624471214, 0.15111587575865873], 'false,true': [0.051685045999439176, 0.037940151051235785], 'false,true,false': [0.035310430732547776, 0.030392550838601234]}
{'': [0.1321749748762412, 0.07711242047861427], 'true': [0.1506988224861229, 0.0025492273522262215], 'true,true': [0.12365628884390441, 0.0], 'true,true,true': [0.0, 0.21021497506120188], 'false': [0.044500691891193184, 0.10111929522398769], 'false,false': [0.001048531045313611, 0.10344272903812426], 'false,false,false': [0.10083644630227658, 0.1260103993764205], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(F, E), interaction(A, F).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.296
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6581489350995119;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.04275196580138858;  // std dev = 3.148, 111.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=11 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.27481560176617903;  // std dev = 2.958, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.15903389085172373;  // std dev = 4.875, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.21947341221095437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.2641072739982948;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7551805016408267;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6552318335447207;  // std dev = 3.495, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return -0.1538293902006433;  // std dev = 0.266, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.21734162369044158;  // std dev = 1.556, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.13672614740269962;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5767780623136219;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.41250929388914165;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.09829004734224817;  // std dev = 3.583, 94.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | | | else return -0.004007807291140022;  // std dev = 1.886, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6390887424515544;  // std dev = 1.894, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.14331673468775413;  // std dev = 0.240, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.12901330203677386;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.36568174054927166;  // std dev = 1.240, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.16446006881081632;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.33415451129474505;  // std dev = 0.313, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.17156664830026339;  // std dev = 1.140, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.42574708333327466;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5500069522849649;  // std dev = 1.661, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.1473135647586037;  // std dev = 0.606, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return 0.042916066593981866;  // std dev = 0.316, 120.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=30 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.45536633256381476;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.4716233856033003;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.013240598358642683;  // std dev = 1.152, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.124977334952306;  // std dev = 0.415, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.3569187955398163;  // std dev = 0.064, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.17928294544701665;  // std dev = 0.390, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.05532455060106896;  // std dev = 4.905, 227.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=72 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return -0.054327752753071244;  // std dev = 0.914, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.04354107486745898;  // std dev = 1.689, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3465186144552115;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.4397986272191589;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.025794536809370966;  // std dev = 1.123, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.31676751958858107;  // std dev = 0.237, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.27271400920054434;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.17139678995955426;  // std dev = 1.767, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return -0.11622054393860548;  // std dev = 0.175, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.19082728755428788;  // std dev = 0.881, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07778565974003859;  // std dev = 0.869, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2918146657674653;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.002729445328608044;  // std dev = 1.912, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return 0.06664140771624989;  // std dev = 4.205, 151.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2992166489268232;  // std dev = 0.101, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.4052528797518587;  // std dev = 0.275, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.14222182657622412;  // std dev = 0.078, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(G, H) )
%   | | | then return -0.03982914357802003;  // std dev = 1.333, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.31250754049159923;  // std dev = 2.448, 56.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=41 */
%   | | else return -0.1529128763377631;  // std dev = 0.044, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.42796849000336684;  // std dev = 0.287, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1487716431014623;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.27318435958875714;  // std dev = 0.520, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20075908822690144;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.12381303306859727;  // std dev = 0.257, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.18587579216153247;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29052089045046403;  // std dev = 2.908, 94.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else return -0.12158752410203319;  // std dev = 0.043, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.17467836787290836;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.010268620370348898;  // std dev = 1.332, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.1255601888200368;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18806645055370008;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.15248865144507595;  // std dev = 0.226, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return -0.19331225066841884;  // std dev = 1.166, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.031090580931523698;  // std dev = 1.103, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.010303627696697433;  // std dev = 1.741, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | | else return -0.04762631952156893;  // std dev = 0.392, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.18118764688690614;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.1095598523067964;  // std dev = 1.067, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.009989241156587366;  // std dev = 3.223, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13698520934068745;  // std dev = 0.161, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.20106796528252624;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( complex(G, H), interaction(A, A) )
%   | | | then return -0.2397109623012526;  // std dev = 0.775, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.04915181123490391;  // std dev = 1.607, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.020600688763187575;  // std dev = 1.517, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return -0.046954808321547296;  // std dev = 0.399, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.010896794557898567;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.01121907251719136;  // std dev = 1.855, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.04047568797644908;  // std dev = 2.718, 95.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.336', 'seconds']
Refined model CLL: -0.177696


******************************************
Best model found
******************************************
Results 

CLL : -0.153548 

AUC ROC : 0.987609 

AUC PR : 0.394667 

Precision : 0.294944 

Recall : 0.792453 

F1 : 0.429887 

Total Learning Time : 8.296 

Total Inference Time : 18.58816385269165 

Total revision time: 36.80251195144653
Best scored revision CLL: -0.177696


Results 

CLL : -0.153548 

AUC ROC : 0.987609 

AUC PR : 0.394667 

Precision : 0.294944 

Recall : 0.792453 

F1 : 0.429887 

Total Learning Time : 42.3251569480896 

Total Inference Time : 18.58816385269165 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.414
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.16584124279182005;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.13662994775773918;  // std dev = 5.634, 158.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15973623668681391;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6083623010998434;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8400819780285473;  // std dev = 0.010, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15981455033056424;  // std dev = 0.016, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( location(A, K) )
%   | | | then return 0.10996739020021089;  // std dev = 3.619, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.2375708245419049;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5644469591288815;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.575797612107128;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04214534689109276;  // std dev = 2.074, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6833032422121937;  // std dev = 0.267, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14153658596633834;  // std dev = 0.304, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1925425550084754;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.8173581652056113;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.42590195862077357;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.44158298325953527;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38676627128012553;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4066301829812488;  // std dev = 0.623, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06234844046685593;  // std dev = 4.138, 185.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5074582211943715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1456753060868636;  // std dev = 3.396, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.05603984235340532;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3211201129667201;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23321345699370272;  // std dev = 0.947, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.035157877374647914;  // std dev = 4.290, 216.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3828135468629439;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07825104052607619;  // std dev = 3.615, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return -0.202564420770404;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26126907121135184;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3460796706025386;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.27018951088086174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.29724812077353124;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07321902495389819;  // std dev = 1.026, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.28807483806824835;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.04623679042527693;  // std dev = 4.005, 179.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=49 */
%   | | | else return 0.09179499732099937;  // std dev = 3.630, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23414089417785078;  // std dev = 0.113, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2244229704011857;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23334853295151214;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6149532026691957;  // std dev = 1.016, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.19316729760351678;  // std dev = 0.869, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23263506378142437;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07198460254857751;  // std dev = 3.317, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1738537820051075;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.00591481929855584;  // std dev = 1.183, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4284597975381181;  // std dev = 1.157, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.13552335990068595;  // std dev = 0.230, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1878200448211509;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.019458963472270906;  // std dev = 3.100, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15618442142494096;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13107010677644937;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17871595639827526;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08881358067110938;  // std dev = 0.458, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.218915555468136;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.017899385028613546;  // std dev = 1.261, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.026218008535592568;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.043752381549491806;  // std dev = 2.625, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
%   | | | else return -0.001056540804220035;  // std dev = 3.121, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13472733088646133;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14345397432585774;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1372899498719743;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1461467000709554;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.014828114593608565;  // std dev = 1.379, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18873393670265026;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.023665031809573005;  // std dev = 2.711, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return 0.05500624975993105;  // std dev = 2.974, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.640', 'seconds']
Parameter learned model CLL:-0.180293 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.353, 18, 8], 'false,false,true,false': [5.634, 114, 44], 'false,false,false,true': [3.643, 44, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.01, 0, 52], 'false,false,true,false': [0.016, 141, 0], 'false,false,false,true': [3.619, 48, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.031, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.074, 28, 8], 'false,true,false,true': [0.267, 0, 48], 'false,true,false,false': [0.304, 123, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.491, 33, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.042, 0, 11], 'true,false': [0.002, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.623, 1, 3], 'false,true,false': [4.138, 133, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.396, 32, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.019, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.947, 1, 9], 'false,true': [4.29, 160, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.615, 42, 19], 'false,false,false,false': [0.913, 5, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.034, 0, 7], 'true,true,false': [0.062, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.026, 21, 3], 'false,false,true': [0.003, 0, 6], 'false,false,false,true': [4.005, 130, 49], 'false,false,false,false': [3.63, 38, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.113, 0, 12], 'true,true,true,false': [0.021, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.016, 1, 36], 'true,false': [0.869, 102, 0], 'false,true': [0.002, 0, 5], 'false,false,true': [3.317, 73, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.013, 0, 6], 'true,false': [1.183, 2, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.157, 1, 56], 'false,true,false': [0.23, 148, 0], 'false,false,true,true': [0.018, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.1, 45, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.036, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.022, 0, 4], 'false,true,true': [0.458, 13, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.261, 47, 14], 'false,false,true': [0.912, 1, 5], 'false,false,false,true': [2.625, 71, 36], 'false,false,false,false': [3.121, 51, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.028, 0, 5], 'true,true,true,false': [0.016, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.038, 0, 4], 'false,true': [1.379, 54, 17], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.711, 76, 36], 'false,false,false,false': [2.974, 37, 20]}]
{'': [-2.5376526277146434e-16, 0.2118530273437506], 'false': [-1.4802973661668753e-16, 0.20505600000000138], 'false,false': [0.2027410207939516, 0.2112029384756653], 'false,false,false': [0.21063240110859105, 0.22222222222222224], 'false,false,true': [0.21301775147929003, 0.20092933824707662], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.0622222222222223, 0.20192856796301156], 'false': [7.401486830834377e-17, 0.19832019628246567], 'false,false': [0.19679858474889983, 0.2023922788844523], 'false,false,false': [0.1983965445638309, 0.23999999999999994], 'false,false,true': [2.032455771683317e-06, 1.7386994594814159e-06], 'true': [7.401486830834377e-17, 0.09876543209876548], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0001817395054695454, 0.158147465933707], 'false': [0.13537361535668194, 0.23074808150250875], 'false,false': [0.22807494924966307, 0.0], 'false,false,true': [0.0, 0.2299404507500262], 'false,true': [0.11944020229948982, 0.13832978870174026], 'false,true,false': [0.0014879841993466296, 0.000753014570825789], 'true': [0.00016491177348176844, 0.00013914430887507212], 'false,false,false': [0.0, nan]}
{'': [0.00016746856581509713, 0.12670251276883354], 'false': [0.09515116147355343, 0.22407615783425391], 'false,false': [0.002022509432887204, 0.22822463449201089], 'false,false,false': [0.230617959758043, 0.20408163265306126], 'false,true': [0.07764336953844322, 0.09257670850318754], 'false,true,true': [0.0, 0.09697529692543999], 'false,false,true': [0.0, 0.0], 'true': [0.00015997555058211432, 1.740107078910628e-06]}
{'': [0.06150989170566499, 0.11561029531110364], 'false': [0.08520911349981605, 0.21024286348557691], 'false,false': [0.0009641552764940164, 0.21390455770399253], 'false,false,false': [0.21422129823120487, 0.1388888888888889], 'true': [7.062678881952777e-05, 0.08965366410930156], 'false,false,true': [0.0, 0.0], 'true,true': [7.062678881952777e-05, nan]}
{'': [0.0017827742910890684, 0.11639370509441015], 'false': [0.0438257300110716, 0.12189098082473283], 'false,false': [1.382170562863605e-06, 0.12366278569437628], 'false,false,false': [0.08959927469928987, 0.22722221859170452], 'true': [0.0021176114825010232, 0.0003031184715000986], 'true,true': [0.00016706876127566193, 0.0009538008461320163], 'true,false': [5.6379586883939514e-05, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13073798584652122, 0.09759216250415545], 'true': [0.05006812599671836, 0.00740907101569484], 'false': [1.171498135110749e-06, 0.10093685861272003], 'false,false': [0.10093685861272003, nan], 'true,true': [0.0009496746518207437, 0.030875440266390535], 'true,true,false': [0.0, 0.027877750468353415], 'true,true,true': [0.0010586176619532446, 0.00021506969742941806]}
{'': [0.09410552095293134, 0.08877557106956846], 'true': [2.7303916023166397e-05, 0.13997614047696907], 'false': [0.07064071430859806, 0.1442551344950447], 'false,false': [0.00016513926999914968, 0.14784253986300583], 'false,false,false': [0.14784253986300583, nan], 'false,true': [0.02349135639325486, 0.00035866616839713554], 'false,true,true': [nan, 0.02349135639325483], 'false,false,true': [0.00016513926999914968, nan]}
{'': [0.0002954520488909762, 0.07534629658001224], 'false': [0.025693153831242672, 0.09537172959768014], 'false,false': [0.13871695673286563, 0.09391065078162525], 'false,false,false': [0.06439249057109446, 0.1371888057521372], 'false,true': [0.014984838127171654, 0.026954306987377098], 'false,true,false': [0.0, 0.026057695518011254], 'true': [0.00014580372100071582, 0.0004561366482505991], 'true,false': [0.0, 0.00011614541307611997]}
{'': [0.00020280931270331783, 0.07508206024964942], 'false': [0.026766344875983516, 0.09396751798542216], 'false,false': [8.61241108440769e-07, 0.0960616858614169], 'false,false,false': [0.06564050143692776, 0.15518567160885757], 'true': [0.00011755892979432858, 0.00036686021756687087], 'true,true': [0.00014684787850523934, 0.0], 'true,true,true': [0.0001565308658472736, 8.311312519454726e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.897
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.14786856126773526;  // std dev = 4.692, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return 0.2200536970042729;  // std dev = 4.924, 105.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( location(A, H), location(G, H) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8139040349919361;  // std dev = 0.995, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16310126405168335;  // std dev = 0.132, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.013091955894566958;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.19340353472141691;  // std dev = 3.212, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5753897189581847;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.03163578899925847;  // std dev = 1.340, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return 0.233509600523092;  // std dev = 1.379, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6794295707857926;  // std dev = 0.207, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14348814982322855;  // std dev = 0.112, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.5960526174841312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1360797024216326;  // std dev = 3.640, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | else return 0.14467136724508486;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.42651111568219285;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4279095537570681;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5934519643398697;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), location(G, H) )
%   | | | then return 0.050088444397630806;  // std dev = 4.148, 185.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=51 */
%   | | | else return -0.0785666047927937;  // std dev = 0.628, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.44843194547397947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5629060591422046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return 0.20571370129427774;  // std dev = 3.258, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return -0.02261999020268186;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31875485323639774;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.36498558320712116;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.31514469251062155;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then return 0.045520001644697834;  // std dev = 0.301, 198.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=56 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.34176464016165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4231290322251742;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.12875636681608527;  // std dev = 2.397, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.004082258989871797;  // std dev = 2.891, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.23671305175279275;  // std dev = 0.207, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.2826163516028174;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then return -0.12713452136168973;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.10062062253243739;  // std dev = 0.653, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.007566858076354227;  // std dev = 0.456, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.28013531788130686;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0887575588666258;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return 0.023583180157828988;  // std dev = 4.213, 119.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=31 */
%   | | | else return 0.05832014472769396;  // std dev = 3.566, 121.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24641599034452955;  // std dev = 0.192, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.09965676160359609;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6331615950861088;  // std dev = 0.140, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.17706298670272283;  // std dev = 0.060, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.23684193778765064;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(H, I), phenotype(A, J) )
%   | | | then return 0.09527526212161548;  // std dev = 1.301, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.025262496198930517;  // std dev = 2.616, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.07597123302883435;  // std dev = 1.136, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.2117066149111751;  // std dev = 0.829, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1726680202966063;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.16312310603270372;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19687055291731712;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.4172309943647504;  // std dev = 0.159, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.14044817293676393;  // std dev = 0.274, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return -0.15009039307293182;  // std dev = 0.215, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.08826953785130047;  // std dev = 0.855, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.02449830673431405;  // std dev = 2.948, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.22195395881114685;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then return 0.014169112641870082;  // std dev = 0.466, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.17723894745539673;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20370501245730818;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(H, A), interaction(H, G) )
%   | | then return -0.05744421897730615;  // std dev = 0.118, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.18231664871625247;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.01576637263355436;  // std dev = 1.285, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), interaction(K, K) )
%   | | | then return 0.00685712283222662;  // std dev = 3.777, 174.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=52 */
%   | | | else return 0.07291402807806792;  // std dev = 1.374, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return 0.09429259436953229;  // std dev = 0.905, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.16221352797672214;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1507607074710971;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.24684696503642287;  // std dev = 0.155, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1107730925275912;  // std dev = 0.701, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.050285014729399634;  // std dev = 0.774, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.045659215124514284;  // std dev = 0.406, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.16672913365970202;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.004854656401867748;  // std dev = 2.647, 122.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=35 */
%   | | | else return 0.10243871998595429;  // std dev = 2.876, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.747', 'seconds']
Refined model CLL: -0.179813


******************************************
Best model found
******************************************
Results 

CLL : -0.190807 

AUC ROC : 0.982815 

AUC PR : 0.212404 

Precision : 0.136747 

Recall : 0.819495 

F1 : 0.234383 

Total Learning Time : 2.897 

Total Inference Time : 3.1552884578704834 

Total revision time: 10.263948093414307
Best scored revision CLL: -0.179813


Results 

CLL : -0.190807 

AUC ROC : 0.982815 

AUC PR : 0.212404 

Precision : 0.136747 

Recall : 0.819495 

F1 : 0.234383 

Total Learning Time : 15.786593090057373 

Total Inference Time : 3.1552884578704834 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.606
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07481560176617903;  // std dev = 3.191, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.1470378239884007;  // std dev = 5.266, 135.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08891816586874314;  // std dev = 2.631, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109543;  // std dev = 3.65e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7871648475086228;  // std dev = 1.683, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15763404545604848;  // std dev = 0.052, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( location(A, I) )
%   | | | then return 0.13563551388210307;  // std dev = 2.761, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.10040529557005502;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3553664367462845;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.03405960719613136;  // std dev = 2.831, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6293445286260254;  // std dev = 1.671, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.1405660824160275;  // std dev = 3.65e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6668405611988365;  // std dev = 0.198, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09393508978530751;  // std dev = 2.500, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11947436948596521;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43065708660931;  // std dev = 0.084, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5776949510972547;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5049222515646926;  // std dev = 0.702, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.045228013130867224;  // std dev = 4.452, 193.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4208066467369962;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13157671941316373;  // std dev = 0.610, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.015414249043648276;  // std dev = 2.914, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return 0.0588455984913541;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3178552321310724;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20703313489043745;  // std dev = 0.913, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.04959784543244953;  // std dev = 4.624, 202.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32294520226327506;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42668700677238514;  // std dev = 0.147, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0666658479422401;  // std dev = 2.558, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.01241660743067996;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2556135109813675;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.212998347647894;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25669558982123597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07581065198763935;  // std dev = 0.639, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.04897365901949778;  // std dev = 1.259, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.30801483016430964;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.09132999660865562;  // std dev = 3.939, 141.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=46 */
%   | | | else return 0.04098763845476133;  // std dev = 3.105, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25630632100943923;  // std dev = 0.251, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.28025413636182833;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2567003171203502;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6077959615352909;  // std dev = 0.771, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.170059683558135;  // std dev = 0.757, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2417597316856355;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07184717581923528;  // std dev = 3.300, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16890313959507497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2026337414242667;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41583904567411856;  // std dev = 1.737, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14188149563490923;  // std dev = 0.232, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22917209705256827;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0036124652392681127;  // std dev = 2.538, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1530954085914556;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2316320737314248;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2073107761534599;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0981139733507691;  // std dev = 0.305, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.25220426982990163;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.02055690633620659;  // std dev = 1.520, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16982954021634597;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.035139080581117706;  // std dev = 2.760, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | | | else return 0.05073832356691359;  // std dev = 2.463, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1283732247222089;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1582507191862107;  // std dev = 0.053, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13095474959581077;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19001941375548548;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.06453255019775717;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.018003280041270747;  // std dev = 1.761, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.10072746421245576;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06445294431496268;  // std dev = 2.602, 85.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=31 */
%   | | | else return 0.04188548854671227;  // std dev = 2.443, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.690', 'seconds']
Parameter learned model CLL:-0.179511 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.191, 47, 13], 'false,false,true,false': [5.266, 96, 39], 'false,false,false,true': [2.631, 30, 9], 'false,false,false,false': [0.866, 1, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [3.65e-08, 0, 7], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.683, 3, 52], 'false,false,true,false': [0.052, 136, 0], 'false,false,false,true': [2.761, 26, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.894, 1, 4], 'false,true,true': [2.831, 56, 14], 'false,true,false,true': [1.671, 3, 42], 'false,true,false,false': [3.65e-08, 100, 0], 'false,false,true,true': [0.198, 0, 3], 'false,false,true,false': [2.5, 24, 9], 'false,false,false,true': [1.369, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.084, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.702, 1, 6], 'false,true,false': [4.452, 144, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.61, 1, 1], 'false,false,false,true': [2.914, 39, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.83e-08, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.913, 1, 6], 'false,true': [4.624, 146, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.147, 0, 2], 'false,false,false,true': [2.558, 26, 9], 'false,false,false,false': [1.477, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.02, 0, 9], 'true,true,false': [0.884, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.639, 1, 2], 'false,true': [1.259, 26, 5], 'false,false,true': [0.037, 0, 5], 'false,false,false,true': [3.939, 95, 46], 'false,false,false,false': [3.105, 40, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.251, 0, 13], 'true,true,true,false': [0.154, 0, 3], 'true,true,false,true': [0.007, 0, 3], 'true,true,false,false': [0.771, 0, 33], 'true,false': [0.757, 118, 0], 'false,true': [0.029, 0, 3], 'false,false,true': [3.3, 68, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.035, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.737, 3, 56], 'false,true,false': [0.232, 146, 0], 'false,false,true,true': [0.137, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.538, 39, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.072, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.116, 0, 5], 'false,true,true': [0.305, 19, 1], 'false,true,false,true': [0.168, 0, 6], 'false,true,false,false': [1.52, 52, 17], 'false,false,true': [0.022, 0, 3], 'false,false,false,true': [2.76, 70, 31], 'false,false,false,false': [2.463, 28, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.053, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.004, 0, 2], 'true,false': [0.876, 1, 3], 'false,true': [1.761, 65, 24], 'false,false,true': [0.859, 1, 3], 'false,false,false,true': [2.602, 54, 31], 'false,false,false,false': [2.443, 28, 12]}]
{'': [-2.3684757858670006e-16, 0.2058142440649733], 'false': [-2.5376526277146434e-16, 0.19659628557305403], 'false,false': [0.1955555555555564, 0.20118983234180587], 'false,false,false': [0.17751479289940844, 0.18750000000000006], 'false,false,true': [0.1697222222222217, 0.20543209876543264], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [2.3684757858670006e-16, 0.20389551921905044], 'false': [0.10937500000000006, 0.1995583427407172], 'false,false': [0.19787190934796256, 0.2073260908325393], 'false,false,false': [0.20602520877436467, 0.2222222222222222], 'false,false,true': [0.051505698115217186, 1.9770329576474607e-05], 'false,true': [0.10937500000000006, nan], 'true': [1.1102230246251565e-16, 1.9032394707859825e-16]}
{'': [0.05859374999999983, 0.14903123301097707], 'false': [0.1367373851898601, 0.20609432561701188], 'false,false': [0.1997642108995951, 0.23417650583607325], 'false,false,false': [0.23417650583607325, nan], 'false,false,true': [0.013076368305947309, 0.18938410968893324], 'false,true': [0.11450638392796676, 0.1461229735772091], 'false,true,false': [0.06203907264102118, 1.3322676295501878e-17], 'true': [-2.0185873175002846e-16, 0.16]}
{'': [0.00047506705586866833, 0.1236934400217186], 'false': [0.10950323821213044, 0.17312674225755126], 'false,false': [0.11398671500888745, 0.17290742232508988], 'false,false,false': [0.16984176364551565, 0.2222222222222222], 'false,false,true': [0.0, 0.18614645458790025], 'false,true': [0.06223850078801457, 0.10271553907181842], 'false,true,true': [0.0, 0.07046773196164528], 'true': [0.00047506705586866833, nan]}
{'': [0.05517167857081412, 0.12166233132024287], 'false': [0.1058580871559022, 0.18651661804663294], 'false,false': [0.00956654400249457, 0.19079696209496286], 'false,false,false': [0.18694573684787108, 0.19829235590901628], 'true': [3.700743415417188e-17, 0.11919832918043939], 'false,false,true': [0.0, 0.010762362002806392], 'true,true': [3.700743415417188e-17, nan]}
{'': [0.07027662287194807, 0.11934276450477481], 'false': [0.051110852071573974, 0.1275758761126795], 'false,false': [0.00027671736077149455, 0.12951025068169197], 'false,false,false': [0.11003887171689589, 0.17851965245838256], 'true': [0.05630249648583739, 0.10810485619978066], 'true,false': [0.0, 0.13595996808260816], 'true,true': [4.575260779434339e-05, 0.15639717337249728], 'true,false,true': [0.0, nan]}
{'': [0.10589598383910305, 0.10758134783967684], 'false': [0.0002876901959889914, 0.10998354501501609], 'false,false': [0.10998354501501609, nan], 'true': [0.041160902759882254, 0.004857328483715169], 'true,true': [0.005510813746022761, 0.02594088458594701], 'true,true,false': [1.7370106281268855e-05, 0.018025221759866986], 'true,true,true': [0.004844662318878761, 0.00793150291893984]}
{'': [0.0003647071000537183, 0.08781907004496788], 'false': [0.07872858978237965, 0.12232432059790188], 'false,false': [0.006221855693136084, 0.12632736916235288], 'false,false,false': [0.12632736916235288, nan], 'false,true': [0.05110972423648134, 0.00036729706750391423], 'false,true,true': [nan, 0.05110972423648134], 'false,false,true': [0.006221855693136084, nan], 'true': [-3.469446951953614e-18, 0.00017471334786239856]}
{'': [0.001991636044651121, 0.07096335661098373], 'false': [0.03154993304959668, 0.09544047384598764], 'false,false': [0.00016846428576353564, 0.09711401689284374], 'false,false,false': [0.07543780903875831, 0.1516721369403334], 'false,true': [0.004655187684003491, 0.0366427116409927], 'false,true,false': [0.004731942239753512, 0.033465668416262424], 'true': [0.0005128808914571764, 0.0023341862748881928], 'true,false': [0.0, 0.002702435943886522]}
{'': [0.053394047963163806, 0.07776124622718768], 'false': [0.0348296828462181, 0.10536094806506364], 'false,false': [0.18455231902870456, 0.10205315009615115], 'false,false,false': [0.07967772071407593, 0.14925462029236167], 'true': [0.0007327502464250982, 0.1917178134016756], 'true,true': [0.0004194588688186146, 0.0007811024864261921], 'true,true,false': [0.0, 8.77554554089971e-06], 'true,true,true': [0.0, 0.0013831626037359261]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 3.468
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return -0.033155412726574685;  // std dev = 2.111, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return 0.20814893509951232;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.11865313678018337;  // std dev = 4.788, 119.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=31 */
%   | | | else return 0.23996711691769368;  // std dev = 3.603, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7398727907934262;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then return 0.40200626221954355;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7480325422264149;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7663882217613393;  // std dev = 1.917, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.1598697843755224;  // std dev = 0.145, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.06088164304569896;  // std dev = 2.483, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.13474041273965545;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5595171078416127;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5807165438879357;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.3400093641759177;  // std dev = 1.082, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.02512721134710871;  // std dev = 2.384, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6557709070022689;  // std dev = 1.375, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.138726453682797;  // std dev = 0.099, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5685918521538469;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.07194748220548196;  // std dev = 2.452, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.3992163171849015;  // std dev = 1.317, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4251246847715255;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5497932652813001;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39108114490530393;  // std dev = 0.979, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.016746602416983017;  // std dev = 2.545, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | | else return 0.10178415434488143;  // std dev = 3.453, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.07405478904970979;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.031152926127370195;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.0736239184763984;  // std dev = 2.258, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.3072763342216137;  // std dev = 1.576, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31766503468135476;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.002386065820581725;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.35225824003532763;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13061814913045786;  // std dev = 0.011, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.02593399275464008;  // std dev = 1.926, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.10660325735018816;  // std dev = 3.912, 128.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=47 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4186302780584799;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.03594891336773316;  // std dev = 1.895, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.2772366507513722;  // std dev = 1.874, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.31296358095074406;  // std dev = 0.082, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.3220776417983618;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.0734555517081719;  // std dev = 0.644, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.12250475743596757;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.0398699442893896;  // std dev = 0.336, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.09240654104830784;  // std dev = 0.872, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.28336596527006763;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.01307150503535131;  // std dev = 3.715, 137.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=34 */
%   | | | else return 0.08175237389213558;  // std dev = 3.424, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2525264544892691;  // std dev = 0.067, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2338124156850132;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.595097153240814;  // std dev = 0.651, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1708188026061571;  // std dev = 0.067, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.234621988141408;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(G, G), enzyme(A, I) )
%   | | | then return 0.3601555730341412;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.022472810924722947;  // std dev = 2.674, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.1701355909395229;  // std dev = 1.299, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.01789976198400854;  // std dev = 0.919, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1617290179243165;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0744496663336373;  // std dev = 0.324, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.4194649488083184;  // std dev = 0.891, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.3562473446542453;  // std dev = 1.706, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | else return -0.1450537326282761;  // std dev = 0.053, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6022257133313618;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.23737759051234156;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.21155444420692568;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.00337077018427708;  // std dev = 1.946, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15483161190025987;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.20410270895121474;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.05308478395960906;  // std dev = 0.833, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.04952282482410469;  // std dev = 0.136, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.004670372377035306;  // std dev = 1.165, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.03090109201018918;  // std dev = 1.096, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1837025802661105;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.035109229610434216;  // std dev = 2.067, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return -0.015705269170154995;  // std dev = 3.006, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15705442593881744;  // std dev = 0.040, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( phenotype(D, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return 0.06198994527716433;  // std dev = 0.736, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.03350908444285368;  // std dev = 0.924, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( enzyme(A, G), complex(D, H) )
%   | | | then return 0.3067820646669031;  // std dev = 0.731, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.028231153264434507;  // std dev = 1.219, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.3850273207084834;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12533594895893477;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return -0.2426390972766046;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.02069832390843338;  // std dev = 3.292, 153.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.830', 'seconds']
Refined model CLL: -0.182218


******************************************
Best model found
******************************************
Results 

CLL : -0.190418 

AUC ROC : 0.983381 

AUC PR : 0.219379 

Precision : 0.147629 

Recall : 0.780919 

F1 : 0.248315 

Total Learning Time : 3.468 

Total Inference Time : 3.153038263320923 

Total revision time: 11.467153667449951
Best scored revision CLL: -0.179511


Results 

CLL : -0.190418 

AUC ROC : 0.983381 

AUC PR : 0.219379 

Precision : 0.147629 

Recall : 0.780919 

F1 : 0.248315 

Total Learning Time : 16.989798664093016 

Total Inference Time : 3.153038263320923 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.1
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1354598594692588;  // std dev = 4.884, 119.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
%   | | | else return 0.15566959625653587;  // std dev = 5.029, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7480325422264149;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.67089224405314;  // std dev = 3.409, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | | else return -0.16060585500100974;  // std dev = 0.017, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0574662064678597;  // std dev = 1.776, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.45542657727512714;  // std dev = 0.899, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5888801916661459;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09598621266510868;  // std dev = 4.350, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.670152013249748;  // std dev = 1.381, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14125123903963951;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24052809766708974;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10862913546647887;  // std dev = 1.333, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4479193739070004;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4349684539253549;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47322173038586324;  // std dev = 1.815, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return 0.05123166163052758;  // std dev = 5.032, 222.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5284065072428055;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.31546324779659246;  // std dev = 1.409, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3355490046569776;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3499768913076422;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.09772742901135148;  // std dev = 5.250, 217.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3977957502052638;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.4180812995174137;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1036840284001433;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.260995483503233;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3707073157285823;  // std dev = 0.165, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.30736786515333114;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.020584100780296;  // std dev = 2.264, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.10308102425573311;  // std dev = 1.075, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.056850339499848614;  // std dev = 4.821, 182.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=55 */
%   | | | else return 0.06660664262529938;  // std dev = 1.807, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23729243180810694;  // std dev = 0.187, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24604437542091007;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5578858422064226;  // std dev = 0.984, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.19700635941100342;  // std dev = 0.665, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3111703532970722;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05862414301356749;  // std dev = 4.027, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18022775154222004;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.059896532144033954;  // std dev = 0.844, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43230068112537373;  // std dev = 2.255, 77.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=71 */
%   | | else return -0.152871150778384;  // std dev = 0.219, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2032885805991339;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.11804108335572806;  // std dev = 1.211, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16773934646796973;  // std dev = 0.095, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16103639485200072;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.024311537322508837;  // std dev = 1.419, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.335356179456869;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.017071665456024093;  // std dev = 1.569, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.23768315668251752;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04603683758343961;  // std dev = 3.381, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
%   | | | else return -0.024578305970247984;  // std dev = 1.362, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.01636089905301384;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.22607512970092603;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14046185440309164;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.001944625750496748;  // std dev = 2.107, 108.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.19734946130448924;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0020534728114994386;  // std dev = 3.463, 141.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=40 */
%   | | | else return 0.01334794309793637;  // std dev = 1.340, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.634', 'seconds']
Parameter learned model CLL:-0.203863 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.884, 86, 33], 'false,false,true,false': [5.029, 85, 36], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.052, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.409, 14, 69], 'false,false,true,false': [0.017, 150, 0], 'false,false,false,true': [1.776, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.899, 1, 8], 'true,false': [0.05, 0, 3], 'false,true,true': [4.35, 86, 34], 'false,true,false,true': [1.381, 2, 37], 'false,true,false,false': [0.0, 86, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 3, 2], 'false,false,false,true': [1.333, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.072, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.815, 4, 14], 'false,true,false': [5.032, 165, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.409, 4, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.003, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.062, 0, 4], 'false,true': [5.25, 146, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.031, 0, 7], 'true,true,false': [0.165, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.264, 34, 12], 'false,false,true': [1.075, 2, 3], 'false,false,false,true': [4.821, 127, 55], 'false,false,false,false': [1.807, 11, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.187, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.984, 1, 33], 'true,false': [0.665, 92, 0], 'false,true': [0.024, 0, 3], 'false,false,true': [4.027, 88, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.844, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.255, 6, 71], 'false,true,false': [0.219, 142, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.211, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.095, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.017, 0, 3], 'false,true,true': [1.419, 33, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.569, 39, 17], 'false,false,true': [0.02, 0, 3], 'false,false,false,true': [3.381, 74, 40], 'false,false,false,false': [1.362, 9, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.883, 1, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.016, 0, 3], 'false,true': [2.107, 79, 29], 'false,false,true': [0.017, 0, 3], 'false,false,false,true': [3.463, 101, 40], 'false,false,false,false': [1.34, 7, 4]}]
{'': [0.07638888888888877, 0.20639743984967948], 'false': [0.18750000000000006, 0.20336416902602744], 'false,false': [0.2048437500000003, 0.1799307958477507], 'false,false,true': [0.20040957559494518, 0.2090021173417128], 'false,true': [0.0, 1.4802973661668753e-16], 'false,false,false': [0.17283950617283952, 0.18750000000000003], 'true': [-2.220446049250313e-16, 0.18750000000000006], 'false,true,false': [0.0, 0.0]}
{'': [0.00044937956321764653, 0.20727012586202992], 'false': [0.0, 0.20564551322935967], 'false,false': [0.2084241114836861, 0.16592752948980757], 'false,false,true': [0.13999058511799337, 1.8457237261533994e-06], 'false,false,false': [0.16592752948980757, nan], 'true': [7.401486830834377e-17, 0.0005437492714932546], 'false,true': [0.0, nan]}
{'': [0.07090709572255742, 0.15991518444417988], 'false': [0.15718131574558594, 0.20235305370693027], 'false,false': [0.24000000000000007, 0.1777304684838627], 'false,false,true': [nan, 0.24000000000000007], 'false,false,false': [0.1777304684838627, nan], 'false,true': [0.15766767368136572, 0.15659026945375532], 'false,true,false': [0.048929725650712456, -1.8073398075293247e-17], 'true': [0.08981591635145897, 0.000823233440332638]}
{'': [0.00048622607612253626, 0.13725280864515735], 'false': [0.13158909091966925, 0.22499822802067712], 'false,false': [0.0, 0.24808469188508647], 'false,false,false': [0.24808469188508647, nan], 'false,true': [0.18299256496892458, 0.11406557031282193], 'false,true,true': [nan, 0.18299256496892477], 'true': [0.0005196008357010396, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.00039976297553228675, 0.13194471708545055], 'false': [0.12700795488012995, 0.2229946633349948], 'false,false': [0.0, 0.244187920907997], 'false,false,false': [0.2222222222222223, 0.22222222222222232], 'true': [1.4773939616130605e-06, 0.0009642947985142869], 'true,true': [1.4773939616130605e-06, nan], 'false,false,true': [nan, 0.0]}
{'': [0.004870799457910408, 0.13181441908763297], 'false': [0.11139268156577377, 0.13621700453013638], 'false,false': [0.23132232992973326, 0.1331939596096424], 'false,false,false': [0.12767928363105882, 0.1921463778206832], 'true': [0.0053414121165802795, 0.0], 'true,true': [0.00013315315939056122, 0.009068336058852619], 'true,false': [nan, 0.0]}
{'': [0.11776646990450562, 0.12521386658459158], 'false': [0.00018469053403789384, 0.12668363663884377], 'false,false': [0.12668363663884377, nan], 'true': [0.041170908792430516, 0.004810432607953774], 'true,true': [0.0031894730596922546, 0.028459535572624626], 'true,true,false': [nan, 0.028459535572624574], 'true,true,true': [0.0035014570459340534, 0.0]}
{'': [0.0629330934715802, 0.10374447880804337], 'false': [0.10151393493489445, 0.14740007020328724], 'false,false': [0.0, 0.16305114220280384], 'false,false,false': [0.16305114220280384, nan], 'false,true': [0.06606771103965534, 0.00033839287315923775], 'false,true,true': [nan, 0.06606771103965553], 'true': [0.0, 0.11862638576223324], 'false,false,true': [0.0, nan]}
{'': [0.0008599149224993063, 0.07873623133320715], 'false': [0.04585718753174412, 0.10353843104488045], 'false,false': [0.0001328142549814985, 0.10506836519187585], 'false,false,false': [0.10026432920317681, 0.14271999588158324], 'false,true': [0.04579309658048143, 0.04494566971139308], 'false,true,false': [0.0, 0.04397098969566475], 'true': [0.001132186645057487, 0.0001011809517749429], 'true,false': [nan, 0.0001011809517749429]}
{'': [0.0700919365115252, 0.06973839211950106], 'true': [0.09088887980568551, 8.072125470374077e-05], 'true,true': [0.09088887980568551, nan], 'true,true,true': [0.09736331661070224, 0.0], 'false': [0.041094078416151994, 0.08966678346362715], 'false,false': [0.00010185903416941311, 0.09070247476853344], 'false,false,false': [0.08504152837868334, 0.1631471814794658]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 5.1
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7724346493852258;  // std dev = 1.656, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | | else return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.07689893509951237;  // std dev = 2.339, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.27278308144097446;  // std dev = 4.461, 82.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7319045176838227;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6505315804717469;  // std dev = 3.003, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.15142359737649416;  // std dev = 0.344, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.0193106633175253;  // std dev = 0.811, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.14777685679297253;  // std dev = 1.312, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5627100674848262;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5790548187777336;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1280029632630314;  // std dev = 0.101, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.07727205391800086;  // std dev = 3.983, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5962968792537946;  // std dev = 1.637, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.1431549830407164;  // std dev = 0.222, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.28641890176288803;  // std dev = 1.051, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.05105618335535348;  // std dev = 0.618, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.001098943340112024;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.428301671949202;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.04811517268912047;  // std dev = 0.652, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11099730323841979;  // std dev = 0.096, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.06665917718615783;  // std dev = 1.810, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.04623496115465035;  // std dev = 1.666, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.10466391848765527;  // std dev = 4.443, 159.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=54 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5427259142306518;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.34287634251411736;  // std dev = 1.000, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09385494643707226;  // std dev = 0.674, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3410713008917794;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.33031730061951237;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( enzyme(A, F), location(A, G) )
%   | | | then return -0.14864648049758727;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09739463541516859;  // std dev = 0.035, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.029101358814627592;  // std dev = 2.138, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.08509422076886164;  // std dev = 4.548, 180.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=60 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4082017018072477;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.09750238451019436;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.02522213419404538;  // std dev = 1.138, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25810592025778234;  // std dev = 0.172, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.15492458021826916;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.011248216243276956;  // std dev = 3.139, 99.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=22 */
%   | | else if ( interaction(A, H), interaction(D, H) )
%   | | | then return 0.019446827499116283;  // std dev = 0.835, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.15544962951346925;  // std dev = 1.986, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.10202683491614205;  // std dev = 1.027, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.13966142303811077;  // std dev = 0.811, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.050554741962951136;  // std dev = 2.976, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return 0.3753697268929782;  // std dev = 0.669, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2550548339096136;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( phenotype(A, E), interaction(F, A) )
%   | | | then return 0.43017533407908615;  // std dev = 0.747, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.5904981991097914;  // std dev = 0.301, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.16697821595741735;  // std dev = 0.082, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23397209586330944;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.35420275190294825;  // std dev = 1.186, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.13485374921981305;  // std dev = 0.295, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.004361244379362026;  // std dev = 1.795, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.11293852779163316;  // std dev = 2.475, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1718546915293914;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.04027050421334075;  // std dev = 0.915, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.2497481185407277;  // std dev = 1.623, 38.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | | else return 0.4408587018780861;  // std dev = 1.566, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.12470185872778468;  // std dev = 0.539, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.16651785863849405;  // std dev = 0.320, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.21538485235462645;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.15272438811960537;  // std dev = 0.677, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.016505429615139018;  // std dev = 1.000, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17911036447634926;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.19905454142719423;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.024271874429631024;  // std dev = 1.088, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | | else return 0.06968252004112649;  // std dev = 0.940, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.40582129076411455;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.006523714519401587;  // std dev = 1.480, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18845376484306461;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.03243637869629184;  // std dev = 3.008, 105.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=38 */
%   | | | else return -0.07843070870534331;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15477696331651547;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.16923206750199363;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3247064103103504;  // std dev = 0.126, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.10177529406898339;  // std dev = 0.176, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -4.320056648985708E-4;  // std dev = 1.015, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.0451347729043601;  // std dev = 1.297, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1613197919037227;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.017579458706794216;  // std dev = 3.250, 121.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=37 */
%   | | | else return 0.07303148543267213;  // std dev = 1.269, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.239', 'seconds']
Refined model CLL: -0.182673


******************************************
Best model found
******************************************
Results 

CLL : -0.188734 

AUC ROC : 0.991096 

AUC PR : 0.340801 

Precision : 0.219634 

Recall : 0.93617 

F1 : 0.355795 

Total Learning Time : 5.1 

Total Inference Time : 7.651242971420288 

Total revision time: 21.013376903533935
Best scored revision CLL: -0.182673


Results 

CLL : -0.188734 

AUC ROC : 0.991096 

AUC PR : 0.340801 

Precision : 0.219634 

Recall : 0.93617 

F1 : 0.355795 

Total Learning Time : 21.027170372009277 

Total Inference Time : 7.651242971420288 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.25
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10224342328848757;  // std dev = 4.841, 127.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=31 */
%   | | | else return 0.19649479976116566;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.41947341221095424;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0.7356630398665784;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6381373901591891;  // std dev = 3.891, 95.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=76 */
%   | | | else return -0.16186409094444973;  // std dev = 0.085, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | else if ( location(A, I) )
%   | | | then return 0.051173749741241795;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.6147744888638477;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5581623978491123;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06730685314620218;  // std dev = 4.438, 140.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6037047527475518;  // std dev = 2.303, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.1461191485266848;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3215729575093732;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2364388996468078;  // std dev = 1.410, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44851151119107624;  // std dev = 0.111, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.4398133012757335;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.45010130411013344;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4727643371119678;  // std dev = 2.073, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else return 0.03020586641596765;  // std dev = 5.239, 246.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4964847461797651;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.22705429809272795;  // std dev = 1.485, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3679763028274086;  // std dev = 1.83e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3233939015903974;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05482155537710024;  // std dev = 5.952, 292.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37506554071913234;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.027898327697003757;  // std dev = 1.683, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2779090611954944;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.27645391777967615;  // std dev = 0.850, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.29201628229156096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.046985205211893435;  // std dev = 2.764, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.25999298275298693;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.051723765635189954;  // std dev = 4.770, 185.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=51 */
%   | | | else return 0.03169830204399109;  // std dev = 2.268, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.27174307116917545;  // std dev = 0.307, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.23547898924728017;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.041250980672541626;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5373216906924068;  // std dev = 1.272, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.17992798059427362;  // std dev = 0.727, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22086705936542908;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03565364746149542;  // std dev = 4.602, 178.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1886912225277888;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.09901933624761354;  // std dev = 0.917, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return -0.8455380742169661;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3910193268148703;  // std dev = 3.231, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.1481794021218633;  // std dev = 0.427, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19574449401089755;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.03580176253902109;  // std dev = 1.476, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.09181740551115755;  // std dev = 0.849, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.04917236263063749;  // std dev = 0.460, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19372716132294915;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04737019135022389;  // std dev = 1.981, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.12173890103496436;  // std dev = 1.033, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.05238337590827854;  // std dev = 1.383, 73.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17072718781782534;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05297400075830581;  // std dev = 3.891, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
%   | | | else return -0.027072167921688737;  // std dev = 1.499, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1494342257178758;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.07609165537978223;  // std dev = 0.679, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08318340381952383;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.022553485921460517;  // std dev = 2.666, 119.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1478961382513998;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03541284048479154;  // std dev = 3.864, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   | | | else return 0.03754131390683239;  // std dev = 1.411, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.646', 'seconds']
Parameter learned model CLL:-0.197703 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.841, 96, 31], 'false,false,true,false': [5.457, 88, 45], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [1.449, 3, 7], 'true,false': [0.051, 0, 10], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.891, 19, 76], 'false,false,true,false': [0.085, 181, 0], 'false,false,false,true': [1.764, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.057, 0, 11], 'true,false': [0.037, 0, 6], 'false,true,true': [4.438, 106, 34], 'false,true,false,true': [2.303, 6, 48], 'false,true,false,false': [0.0, 92, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.41, 5, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.111, 0, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.108, 0, 3], 'false,true,true,false': [2.073, 7, 21], 'false,true,false': [5.239, 188, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.485, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.83e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.044, 0, 10], 'false,true': [5.952, 210, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.683, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.052, 0, 9], 'true,true,false': [0.85, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.764, 50, 19], 'false,false,true': [0.034, 0, 8], 'false,false,false,true': [4.77, 134, 51], 'false,false,false,false': [2.268, 27, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.307, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.837, 1, 3], 'true,true,false,false': [1.272, 2, 33], 'true,false': [0.727, 104, 0], 'false,true': [0.009, 0, 5], 'false,false,true': [4.602, 131, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.917, 1, 10], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.231, 13, 82], 'false,true,false': [0.427, 201, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.476, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.849, 1, 9], 'true,false,true': [0.46, 1, 2], 'true,false,false': [0.128, 0, 5], 'false,true,true': [1.981, 40, 13], 'false,true,false,true': [1.033, 2, 8], 'false,true,false,false': [1.383, 62, 11], 'false,false,true': [0.007, 0, 5], 'false,false,false,true': [3.891, 95, 47], 'false,false,false,false': [1.499, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.679, 1, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.875, 1, 3], 'false,true': [2.666, 87, 32], 'false,false,true': [0.006, 0, 5], 'false,false,false,true': [3.864, 104, 47], 'false,false,false,false': [1.411, 9, 4]}]
{'': [0.05246913580246885, 0.2150121629315258], 'false': [-2.5376526277146434e-16, 0.2080581691425781], 'false,false': [0.2068639053254441, 0.2314049586776858], 'false,false,false': [0.2314049586776858, nan], 'false,false,true': [0.18451236902473922, 0.2238679405280129], 'true': [-1.4802973661668753e-16, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.13012502218106473, 0.20178259635587412], 'false': [-6.344131569286608e-17, 0.1979393987295315], 'false,false': [0.1993385275834682, 0.17283950617283939], 'false,false,true': [0.15934298647825043, 3.999166421777176e-05], 'false,false,false': [0.17283950617283939, nan], 'true': [0.2100000000000001, 0.00026210404362787544], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.0010027407007701433, 0.15881190648956342], 'false': [0.15531872677782238, 0.22738992452736217], 'false,false': [0.22738992452736217, nan], 'false,false,true': [0.25000000000000006, 0.22104768007337558], 'false,true': [0.1406879669369983, 0.16734906511997918], 'false,true,false': [0.09817666232120624, -5.792467954566034e-17], 'true': [0.0002925321174815113, 0.00023101227956393947]}
{'': [0.0007243510071107749, 0.13818845047068112], 'false': [0.1339162681997789, 0.22713569631392144], 'false,false': [0.0, 0.24511371926871897], 'false,false,false': [0.24511371926871897, nan], 'false,true': [0.1389987707186272, 0.11157337576485457], 'false,true,true': [0.0039239961629416635, 0.15342136350230473], 'true': [0.0007651724241298508, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.0005953867367883379, 0.12499431219232596], 'false': [0.12132479485626751, 0.1964140017409277], 'false,false': [0.0, 0.20240856837401436], 'false,false,false': [0.20240856837401436, nan], 'true': [4.7580986769649563e-17, 0.00019373783486944517], 'true,true': [4.7580986769649563e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.04272270484241546, 0.12005982098481328], 'false': [0.1107212088406922, 0.12284369102031403], 'false,false': [0.00014155580503061316, 0.12570791357170705], 'false,false,false': [0.12298819911671885, 0.13897230318661313], 'true': [0.04538008677713043, 0.0], 'true,true': [0.0003039574253328829, 0.10333391916811363], 'true,false': [nan, 0.0]}
{'': [0.1098843112655388, 0.11663189783866366], 'false': [1.4626602322737048e-05, 0.11897039590787706], 'false,false': [0.11897039590787706, nan], 'true': [0.0747221913195291, 0.005088983308415169], 'true,true': [0.0059710678810774576, 0.09028078147071184], 'true,true,false': [0.17516780867203838, 0.04624644938978924], 'true,true,true': [0.006286946345796925, 0.0]}
{'': [0.04864804509254323, 0.10283297686299778], 'false': [0.10144479287468276, 0.12383875706611774], 'false,false': [0.0, 0.12814485267236395], 'false,false,false': [0.12814485267236395, nan], 'false,true': [0.12447177841805589, 0.0009080641416134242], 'false,true,true': [0.0, 0.10985415135157642], 'true': [-7.93016446160826e-18, 0.07647881806276548], 'false,false,true': [0.0, nan]}
{'': [0.058893966053418095, 0.08455462948657978], 'false': [0.052770797478602575, 0.10768172866520392], 'false,false': [9.931643525018518e-06, 0.11060315848794317], 'false,false,false': [0.1066017623479701, 0.14035700964103204], 'true': [0.07207186253128937, 0.04235652596451803], 'false,true': [0.07400995512299306, 0.0391091100743464], 'true,false': [0.07065162124094272, 0.0032544017723335704], 'false,true,false': [0.10676306195890758, 0.026188605995529374]}
{'': [0.07579959376564889, 0.08456132415157651], 'false': [0.059746084384708166, 0.10047410801273474], 'false,false': [7.880252396846866e-06, 0.10316389080067144], 'false,false,false': [0.09886737562817634, 0.15306539575293185], 'true': [0.034228845843269275, 0.19143445714961674], 'true,true': [0.034228845843269275, nan], 'true,true,true': [0.0, 0.06576812537463946]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(F, E), interaction(A, F).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 8.059
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.05582335370416354;  // std dev = 3.693, 86.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=17 */
%   | | | else return 0.14953966357633314;  // std dev = 5.584, 151.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=44 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23024195835532632;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then return 0.2641072739982948;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7551805016408267;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7113237929182967;  // std dev = 3.087, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.160862415822202;  // std dev = 0.220, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.20274911245391694;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.07774911245391691;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.41250929388914165;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.11781964195148635;  // std dev = 3.780, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
%   | | | else return 0.018670327770592545;  // std dev = 1.995, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6129419589171817;  // std dev = 2.107, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.1449611764105265;  // std dev = 0.212, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( complex(A, I) )
%   | | then return 0.48917628738668206;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.046896471213538266;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13022980454687158;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.09002961463157395;  // std dev = 1.165, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.3540890390966114;  // std dev = 0.271, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( location(A, G), phenotype(A, H) )
%   | | then if ( location(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.3465096602504373;  // std dev = 3.583, 79.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=51 */
%   | | | else return -0.14856457900109266;  // std dev = 0.409, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return 0.023663735241921693;  // std dev = 0.335, 124.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=31 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.42494505265726645;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.05738141269370383;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.45113456957295045;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( phenotype(A, E), interaction(A, A) )
%   | | then return 0.3346834409935046;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.01939192833111747;  // std dev = 1.200, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.36523191307713143;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.4994523133563012;  // std dev = 0.222, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, H), complex(A, I) )
%   | | | then return 0.0038286637239931284;  // std dev = 3.090, 104.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=21 */
%   | | | else return 0.06450163401596821;  // std dev = 4.663, 170.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=55 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3257543859959142;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.04640625740222154;  // std dev = 1.635, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.2818680942093222;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.3398282321313453;  // std dev = 0.075, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.25861009672812596;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13640366651912644;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.033625339073704234;  // std dev = 2.998, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.04183733595351267;  // std dev = 0.646, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.15388013806740783;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2852844409580051;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return -0.03283061527950655;  // std dev = 2.475, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | | else return 0.05585331135678605;  // std dev = 4.280, 151.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26617982090367687;  // std dev = 0.067, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), phenotype(A, F) )
%   | | | then return 0.4935846888283681;  // std dev = 1.056, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.6207536156415029;  // std dev = 0.486, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.15972668341066767;  // std dev = 0.068, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2301970336741168;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(H, J), location(A, K) )
%   | | | then return 0.01869528573469263;  // std dev = 2.286, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return -0.10199197065954194;  // std dev = 0.820, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.026525612413184626;  // std dev = 2.679, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.07115406529895778;  // std dev = 2.082, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20508734327126996;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, E) )
%   | | then return 0.1736673605428325;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.21719356600392095;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.6144695917627345;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.32484036935035254;  // std dev = 3.411, 100.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=82 */
%   | | else return -0.1379069552894522;  // std dev = 0.037, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.17107961496737534;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.16197323632750818;  // std dev = 1.152, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.1962909312047923;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(D, E), interaction(D, D) )
%   | | then return 0.16312183210638423;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.3687855716028306;  // std dev = 0.701, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06367787838101771;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.20100201350962296;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(A, I), location(I, J) )
%   | | then return -0.008849961857972561;  // std dev = 0.219, 133.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=32 */
%   | | else return -0.17131416271455024;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.025022691909069417;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.04097067521688596;  // std dev = 3.519, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
%   | | | else return -0.09572361528652537;  // std dev = 1.457, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1692133012470355;  // std dev = 0.051, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.16958568588390913;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3433625843603887;  // std dev = 0.480, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1020403513004261;  // std dev = 0.228, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.0657128364370067;  // std dev = 1.636, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | | else return -0.0064352453272937095;  // std dev = 1.147, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1871090573080382;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.030648621201025503;  // std dev = 3.125, 125.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=39 */
%   | | | else return -0.03762748775253556;  // std dev = 2.063, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.135', 'seconds']
Refined model CLL: -0.191659


******************************************
Best model found
******************************************
Results 

CLL : -0.172707 

AUC ROC : 0.989408 

AUC PR : 0.337734 

Precision : 0.26528 

Recall : 0.769811 

F1 : 0.394584 

Total Learning Time : 8.059 

Total Inference Time : 24.046029090881348 

Total revision time: 41.02915595436096
Best scored revision CLL: -0.191659


Results 

CLL : -0.172707 

AUC ROC : 0.989408 

AUC PR : 0.337734 

Precision : 0.26528 

Recall : 0.769811 

F1 : 0.394584 

Total Learning Time : 41.0429494228363 

Total Inference Time : 24.046029090881348 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.507
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.16584124279182005;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.14953966357633255;  // std dev = 5.584, 151.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16460054800273813;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109544;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8386125325205952;  // std dev = 0.006, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16144114317483538;  // std dev = 0.010, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else if ( location(A, K) )
%   | | | then return 0.2202083705956845;  // std dev = 3.333, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.503574634273903;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11343046960047222;  // std dev = 1.957, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6810750633140344;  // std dev = 0.263, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14040847172516446;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15928784852917174;  // std dev = 3.530, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.020026394251186973;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3872948797200394;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5765013646277095;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.04440928985600934;  // std dev = 4.199, 199.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5157672215002919;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.059921123941042105;  // std dev = 3.596, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return 0.22562488065774344;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.06956601545943276;  // std dev = 4.119, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38872437498542856;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03540602602800881;  // std dev = 3.708, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.3071735228038922;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3419311999216046;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3012396324933241;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.09689071859251769;  // std dev = 0.953, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.11231509971234656;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.04285543530605917;  // std dev = 3.995, 175.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=49 */
%   | | | else return 0.06994492387891113;  // std dev = 3.698, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2298036718692935;  // std dev = 0.113, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2257967189998411;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23441820948012582;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6330132865267676;  // std dev = 0.758, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19687158880010538;  // std dev = 0.811, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23441820948012584;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0648860803325142;  // std dev = 3.347, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17419401850447858;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1897861661129578;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43503795424409225;  // std dev = 0.745, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14602688738536979;  // std dev = 0.446, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.18882173911288824;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.02710000501781785;  // std dev = 3.094, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15242727541570905;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12760184027747679;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16608591341717016;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08198036108178686;  // std dev = 0.382, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18445438450193696;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.021265206514229754;  // std dev = 1.217, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.166903498613156;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.017885341226252856;  // std dev = 2.678, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   | | | else return 0.003130438443427159;  // std dev = 3.140, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1317108780474487;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1442141721891023;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13206628123632147;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13500797576186396;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03568577894833401;  // std dev = 1.618, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14496659654769817;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.023193639692342068;  // std dev = 2.638, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | | else return -0.006836650841366061;  // std dev = 3.153, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.561', 'seconds']
Parameter learned model CLL:-0.174759 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.353, 18, 8], 'false,false,true,false': [5.584, 107, 44], 'false,false,false,true': [3.63, 43, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [2.98e-08, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.006, 0, 52], 'false,false,true,false': [0.01, 146, 0], 'false,false,false,true': [3.333, 29, 18], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [1.957, 18, 8], 'false,true,false,true': [0.263, 0, 48], 'false,true,false,false': [0.0, 116, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.53, 35, 20], 'false,false,false,true': [0.913, 5, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.107, 0, 3], 'false,true,false': [4.199, 147, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.596, 47, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.119, 123, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.708, 50, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.065, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.953, 27, 3], 'false,false,true': [0.926, 1, 6], 'false,false,false,true': [3.995, 126, 49], 'false,false,false,false': [3.698, 43, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.113, 0, 12], 'true,true,true,false': [0.023, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.758, 0, 36], 'true,false': [0.811, 91, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.347, 71, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.025, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.745, 0, 56], 'false,true,false': [0.446, 134, 0], 'false,false,true,true': [0.02, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.094, 45, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.02, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.02, 0, 4], 'false,true,true': [0.382, 10, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.217, 48, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.678, 86, 36], 'false,false,false,false': [3.14, 50, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.002, 0, 5], 'true,true,true,false': [0.016, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.029, 0, 4], 'false,true': [1.618, 53, 17], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.638, 80, 36], 'false,false,false,false': [3.153, 54, 20]}]
{'': [-2.5376526277146434e-16, 0.21512556249092815], 'false': [-1.4802973661668753e-16, 0.20850480109739508], 'false,false': [0.20747550193111886, 0.2112029384756653], 'false,false,false': [0.21253902185223675, 0.18750000000000003], 'false,false,true': [0.21301775147929003, 0.20648217183456943], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.20919075785711688], 'false': [7.401486830834377e-17, 0.20600520745301645], 'false,false': [0.19367519542916292, 0.24006267015248953], 'false,false,false': [0.2363836357845812, 0.2222222222222223], 'false,false,true': [6.385105659927166e-07, 7.179281710249728e-07], 'false,true': [0.0, 0.0], 'true': [7.401486830834377e-17, 1.1102230246251565e-16], 'false,true,false': [nan, 0.0]}
{'': [-2.5376526277146434e-16, 0.16091822435297692], 'false': [0.14112039076406785, 0.21996131931415286], 'false,false': [0.22528570195639902, 0.13888888888888884], 'false,false,true': [0.0, 0.22658040834183246], 'false,true': [0.14724641084047457, 0.14012460371931426], 'false,true,false': [0.0014366053448671885, -7.656710514656253e-17], 'false,false,false': [0.13888888888888884, nan], 'true': [-7.401486830834377e-17, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.12036514568981993], 'false': [0.09159838258914267, 0.20208357110855732], 'false,false': [0.00241344431273241, 0.2034288872283699], 'false,false,false': [0.19897121984322452, 0.25], 'false,true': [0.009597181106757613, 0.08861567683526372], 'false,true,true': [0.0, 0.003846467992897747], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, -3.700743415417188e-17]}
{'': [-3.172065784643304e-17, 0.12526890019966477], 'false': [0.09478513743515661, 0.19978748186976675], 'false,false': [0.0011564259852960834, 0.20272163040544036], 'false,false,false': [0.19927074788648633, 0.24999999999999994], 'false,false,true': [0.0, 0.0], 'true': [-2.2204460492503132e-17, -3.700743415417188e-17], 'true,true': [-2.2204460492503132e-17, nan]}
{'': [0.0018131579125307828, 0.11656211991830596], 'false': [0.030252470254525637, 0.12471857490369047], 'false,false': [0.12244897959183675, 0.12467447315741624], 'false,false,false': [0.09120684864050409, 0.2171005082926094], 'true': [0.0021228491113566283, 0.00047160098097658493], 'true,true': [2.3790493384824782e-17, 0.0010478517138867022], 'true,false': [0.0, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1373372937954885, 0.10122739981789768], 'true': [0.04533071611424145, 0.0072250283545591334], 'false': [-1.1102230246251566e-17, 0.10467456541309923], 'false,false': [0.10467456541309923, nan], 'true,true': [0.0009515093891534329, 0.019723099363029573], 'true,true,false': [0.0, 0.015976962276230317], 'true,true,true': [0.001064925681847989, 0.0002572496290164372]}
{'': [0.0001058460155840427, 0.09228164311761246], 'false': [0.07415182563875873, 0.14366143862268407], 'false,false': [0.00019741840177844167, 0.14729500215962285], 'false,false,false': [0.14729500215962285, nan], 'false,true': [0.009904843834260981, 0.0014874389406089508], 'false,true,true': [nan, 0.009904843834260981], 'false,false,true': [0.00019741840177844167, nan], 'true': [0.0, 8.103835568152445e-05]}
{'': [0.0001501925613469544, 0.06984795684958556], 'false': [0.023358784928315342, 0.0870809034009571], 'false,false': [0.0, 0.08874359457138793], 'false,false,false': [0.05877117805378488, 0.14084290003232383], 'false,true': [0.013240071005338618, 0.024436721227199348], 'false,true,false': [0.0, 0.023902485365613443], 'true': [4.3021089946471136e-05, 0.00032025192119399247], 'true,false': [0.0, 0.00010411012440823819]}
{'': [0.00010307002408124766, 0.07463671589551533], 'false': [0.03740363926664267, 0.08732596203682351], 'false,false': [0.0, 0.08916724534755736], 'false,false,false': [0.06000464111660711, 0.13433101409134834], 'true': [5.940468456206993e-05, 0.00021203651950421967], 'true,true': [7.05003022601243e-05, 0.0], 'true,true,true': [5.052457066417881e-07, 8.94510021038052e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.986
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), enzyme(J, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.11621345122854457;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.2812258581764354;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.16450731660240156;  // std dev = 6.063, 173.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=53 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8351898999275301;  // std dev = 0.044, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16126678078892004;  // std dev = 0.146, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( location(A, J) )
%   | | | then return 0.12784814811330245;  // std dev = 3.569, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.4870245624770692;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5634807074632403;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5736235458594349;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.072816043046347;  // std dev = 0.767, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.16668182579248578;  // std dev = 1.752, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6760552729243451;  // std dev = 0.259, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14151388291210573;  // std dev = 0.100, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08273030848639298;  // std dev = 3.780, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | else return 0.1340733649584843;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4281909568478789;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.38848673550738666;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5711586333033608;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.013480729251036215;  // std dev = 1.843, 54.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=9 */
%   | | | else return 0.12153195340526199;  // std dev = 3.467, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.534855210724821;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.21311436634668948;  // std dev = 1.724, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.10429613599430201;  // std dev = 3.218, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31663184551039036;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.23698548353089577;  // std dev = 0.293, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( enzyme(A, H), interaction(G, G) )
%   | | | then return 0.06204714380203272;  // std dev = 1.246, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.0222543264388681;  // std dev = 1.374, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | | else if ( location(A, I) )
%   | | | then return 0.05989456409820967;  // std dev = 3.634, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   | | | else return -0.13203822215664512;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.36158804558504587;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.16143364017845788;  // std dev = 2.373, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.06609821882265998;  // std dev = 2.771, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.29481986038714414;  // std dev = 0.048, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return -0.08421700179110654;  // std dev = 0.473, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.31934231222950016;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.448581835058663;  // std dev = 0.217, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else return -0.14661305776215475;  // std dev = 0.018, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), interaction(K, K) )
%   | | | then return 0.09267655798035204;  // std dev = 1.713, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.04979174679128936;  // std dev = 1.997, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.15808870990266372;  // std dev = 2.331, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.045278872521115884;  // std dev = 2.788, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24313952564641952;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1877031435983172;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6042159112179943;  // std dev = 0.941, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18114659729062285;  // std dev = 0.070, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2515543983832247;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(I, H), phenotype(I, J) )
%   | | | then return 0.02686964555724857;  // std dev = 2.042, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.029138386775248507;  // std dev = 1.899, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.24971150968246067;  // std dev = 0.438, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.05745695221793717;  // std dev = 1.075, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1679312670947606;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.17953053238545494;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2272989055790599;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.3482207228639794;  // std dev = 0.255, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.3870382290191901;  // std dev = 0.668, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.13760692407683547;  // std dev = 0.044, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.21501119266641172;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.0868820572704488;  // std dev = 1.989, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 1.667804082649603E-4;  // std dev = 2.370, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16222997871885633;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1687758725843829;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.07218328583223992;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.010382431901456435;  // std dev = 0.336, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.05846974537876818;  // std dev = 0.282, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.010335924582801406;  // std dev = 1.064, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.17520344075888092;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return -0.0014488742403831823;  // std dev = 2.443, 122.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=35 */
%   | | | else return 0.06829817636376136;  // std dev = 3.006, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14271147324504865;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1445049057920844;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2009635630984389;  // std dev = 0.131, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09507846755084699;  // std dev = 0.066, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.024689801200406244;  // std dev = 0.793, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return -0.060229902788457426;  // std dev = 0.688, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.15143343481584076;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.07895204828027774;  // std dev = 2.824, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return 0.010555791836393697;  // std dev = 2.515, 119.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.264', 'seconds']
Refined model CLL: -0.178165


******************************************
Best model found
******************************************
Results 

CLL : -0.199124 

AUC ROC : 0.981565 

AUC PR : 0.204198 

Precision : 0.127849 

Recall : 0.931408 

F1 : 0.224837 

Total Learning Time : 2.986 

Total Inference Time : 3.0164437294006348 

Total revision time: 10.39347287940979
Best scored revision CLL: -0.174759


Results 

CLL : -0.199124 

AUC ROC : 0.981565 

AUC PR : 0.204198 

Precision : 0.127849 

Recall : 0.931408 

F1 : 0.224837 

Total Learning Time : 10.407266347885132 

Total Inference Time : 3.0164437294006348 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.453
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07848791815035983;  // std dev = 3.184, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return 0.16767274462332127;  // std dev = 5.189, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15814893509951236;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.49725118998873213;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8027387462067821;  // std dev = 1.376, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15926741668448177;  // std dev = 0.068, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08588621558936627;  // std dev = 2.872, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.16066757255144135;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5700904652846759;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6093545413870523;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.056994836941076384;  // std dev = 2.764, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6412064507806778;  // std dev = 1.388, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14287732328976513;  // std dev = 7.88e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6455021486349871;  // std dev = 0.221, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09857334942282626;  // std dev = 2.480, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1416321662505272;  // std dev = 1.420, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.32239367225069726;  // std dev = 1.296, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5412517221479434;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.49355867991278923;  // std dev = 0.707, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.04199508476381852;  // std dev = 4.338, 197.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.39576932797228614;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.036659534637599966;  // std dev = 0.803, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.05715395494646425;  // std dev = 2.855, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.11314193148983671;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.34418309987894835;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14268249600551264;  // std dev = 1.182, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.07452594160973398;  // std dev = 4.374, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.30599852080958345;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12868624221039063;  // std dev = 0.740, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05359524840831687;  // std dev = 2.570, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.04926073552239727;  // std dev = 1.475, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.276181613062895;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3742692177185626;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.24510493187984383;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.39365774049835706;  // std dev = 0.162, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07686410116104449;  // std dev = 1.292, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.195073471923039;  // std dev = 0.845, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06343467046957729;  // std dev = 4.060, 147.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=46 */
%   | | | else return 0.030419858899104715;  // std dev = 3.121, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2452402910407441;  // std dev = 0.135, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.27347712468728336;  // std dev = 0.168, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.31263244660755;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.506114220822411;  // std dev = 2.138, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.16743716865239142;  // std dev = 0.460, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.307517590431214;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0685676644001204;  // std dev = 3.302, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17715956314402093;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2478575717445454;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44278629472953007;  // std dev = 1.186, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.1445923076142854;  // std dev = 0.235, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22474155938341345;  // std dev = 0.149, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04564906241778277;  // std dev = 2.552, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15243927966056886;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.28838198757331457;  // std dev = 0.663, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.09487433329049869;  // std dev = 1.219, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.11103047217066052;  // std dev = 0.492, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.26026532155158316;  // std dev = 0.173, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.031849499540604446;  // std dev = 1.661, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20309045545104024;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04852752986132796;  // std dev = 2.610, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | | else return 0.08750361805441118;  // std dev = 2.445, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13408528939259423;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.13254387182171362;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.22011919459284968;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20459582673712334;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.0545347912469491;  // std dev = 0.574, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.019870913910701306;  // std dev = 1.790, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.07687102716357225;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.016234867195207565;  // std dev = 2.837, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | | else return 0.0012213684901322287;  // std dev = 2.575, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.787', 'seconds']
Parameter learned model CLL:-0.17753 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.184, 46, 13], 'false,false,true,false': [5.189, 87, 39], 'false,false,false,true': [2.51, 21, 9], 'false,false,false,false': [1.369, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.247, 2, 7], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.376, 2, 52], 'false,false,true,false': [0.068, 145, 0], 'false,false,false,true': [2.872, 33, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.08, 0, 11], 'true,false': [0.0, 0, 4], 'false,true,true': [2.764, 47, 14], 'false,true,false,true': [1.388, 2, 42], 'false,true,false,false': [7.88e-08, 95, 0], 'false,false,true,true': [0.221, 0, 3], 'false,false,true,false': [2.48, 23, 9], 'false,false,false,true': [1.42, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.296, 2, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.707, 1, 6], 'false,true,false': [4.338, 148, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.803, 1, 1], 'false,false,false,true': [2.855, 32, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.048, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [1.182, 2, 6], 'false,true': [4.374, 123, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.74, 1, 2], 'false,false,false,true': [2.57, 26, 9], 'false,false,false,false': [1.475, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.085, 0, 9], 'true,true,false': [0.017, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.162, 0, 2], 'false,true': [1.292, 35, 5], 'false,false,true': [0.845, 1, 5], 'false,false,false,true': [4.06, 101, 46], 'false,false,false,false': [3.121, 44, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.135, 0, 13], 'true,true,true,false': [0.168, 0, 3], 'true,true,false,true': [0.019, 0, 3], 'true,true,false,false': [2.138, 3, 33], 'true,false': [0.46, 104, 0], 'false,true': [0.007, 0, 3], 'false,false,true': [3.302, 65, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.018, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.186, 1, 56], 'false,true,false': [0.235, 137, 0], 'false,false,true,true': [0.149, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.552, 32, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.025, 0, 10], 'true,false,true': [0.663, 1, 1], 'true,false,false': [1.219, 2, 5], 'false,true,true': [0.492, 24, 1], 'false,true,false,true': [0.173, 0, 6], 'false,true,false,false': [1.661, 56, 17], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [2.61, 61, 31], 'false,false,false,false': [2.445, 24, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.022, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.032, 0, 2], 'true,false': [0.574, 1, 3], 'false,true': [1.79, 74, 24], 'false,false,true': [0.863, 1, 3], 'false,false,false,true': [2.837, 66, 31], 'false,false,false,false': [2.575, 36, 12]}]
{'': [-2.3684757858670006e-16, 0.21340264650283589], 'false': [-2.5376526277146434e-16, 0.20462908966599094], 'false,false': [0.20207450693937257, 0.21606648199445933], 'false,false,false': [0.21000000000000008, 0.2343749999999999], 'false,false,true': [0.1717897155989653, 0.21371882086167857], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.10380622837370242, 0.19709169036603102], 'false': [-6.344131569286608e-17, 0.192070644072833], 'false,false': [0.19252054973328114, 0.19006569520340583], 'false,false,true': [0.03506023208395229, 3.221875765701715e-05], 'false,false,false': [0.1875162525110787, 0.22222222222222224], 'true': [1.1102230246251565e-16, 0.17283950617283958], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.000725440287961258, 0.15284127483452412], 'false': [0.14075926219560858, 0.20536143672266338], 'false,false': [0.20057415273788992, 0.22396703979899535], 'false,false,false': [0.22396703979899535, nan], 'false,false,true': [0.01624889311536637, 0.1922148362782739], 'false,true': [0.12522666564667195, 0.14686339766489426], 'false,true,false': [0.0437764096769651, 6.544472566211448e-17], 'true': [0.000578125377064738, 0.0]}
{'': [0.09883717092269385, 0.12015069969644655], 'false': [0.1020765102161681, 0.19416699252085956], 'false,false': [0.20781717830367372, 0.19185190335709704], 'false,false,true': [0.0, 0.32213699599830753], 'false,false,false': [0.1895286099763413, 0.2222222222222222], 'false,true': [0.06265744666736642, 0.09550833483274573], 'true': [0.09883717092269385, nan], 'false,true,true': [0.0, 0.0713241821922846]}
{'': [0.09242568944936927, 0.12462609415353648], 'false': [0.10685858768591348, 0.18811491782208806], 'false,false': [0.14268479982989624, 0.19090459917469083], 'false,false,false': [0.1887674089744855, 0.19769045459282486], 'false,false,true': [0.0, 0.18238648873768556], 'true': [0.00026084215628507934, 0.17461570499219295], 'true,true': [0.00026084215628507934, nan]}
{'': [0.004907168234593792, 0.11707920631435018], 'false': [0.041733543286574845, 0.12845978618236728], 'false,false': [0.11900162945729509, 0.1281714375447644], 'false,false,false': [0.11215110869655988, 0.16799309097306614], 'true': [0.002630881934280217, 0.013611510989475273], 'true,false': [0.0, 0.013061287501396679], 'true,true': [0.0008064772794665023, 7.497673962789109e-05], 'true,false,true': [0.0, nan]}
{'': [0.11357136745957024, 0.11182733543642479], 'true': [0.09783613560980846, 0.002032387999193812], 'false': [1.5612714231523956e-05, 0.11359123761542471], 'false,false': [0.11359123761542471, nan], 'true,true': [0.0030269236592368465, 0.1198784876745282], 'true,true,false': [0.00012509956544678089, 0.12697830614874675], 'true,true,true': [0.001408582767963885, 0.009391912683900716]}
{'': [0.0012667319787039277, 0.0913090148492746], 'false': [0.07912122518041487, 0.14093474864807146], 'false,false': [0.007390426893669875, 0.14799275890020483], 'false,false,false': [0.14799275890020483, nan], 'false,true': [0.02467358176565336, 0.00040464239936620117], 'false,true,true': [nan, 0.024673581765653298], 'false,false,true': [0.007390426893669875, nan], 'true': [0.0, 4.87145112752972e-05]}
{'': [0.12552371408571822, 0.07290087306549935], 'true': [6.0225606670685774e-05, 0.22056812623329417], 'true,false': [0.21988818776235725, 0.2124412360865058], 'false': [0.0355533104438138, 0.09840326848253333], 'false,false': [9.042608453945408e-06, 0.10023714150169263], 'false,false,false': [0.07402969478444842, 0.16611984895158466], 'false,true': [0.009674575754907582, 0.04127277139844921], 'false,true,false': [0.004995937559139287, 0.037773588313392836]}
{'': [0.021930045050117267, 0.07576284711478537], 'false': [0.03270819100834307, 0.10375227646126141], 'false,false': [0.1861027848982799, 0.10127200303892271], 'false,false,false': [0.08297374177831533, 0.13809895106807854], 'true': [0.0011531826509311983, 0.08229246039916487], 'true,true': [4.8384392431843894e-05, 0.0003935526507382973], 'true,true,false': [0.0, 0.0005100039929127123], 'true,true,true': [0.0, 0.000240021187656949]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 3.806
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.129993595293686;  // std dev = 4.515, 103.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=28 */
%   | | | else return 0.19148226843284438;  // std dev = 4.899, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return 0.25517232473027984;  // std dev = 0.977, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7825052950409179;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7647666283155605;  // std dev = 1.929, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.15937445701586084;  // std dev = 0.146, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.2073541959609199;  // std dev = 2.104, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.06732736891492276;  // std dev = 1.965, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5409863255277958;  // std dev = 0.218, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.16360852211026175;  // std dev = 1.733, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.011878704771136351;  // std dev = 2.041, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6707119157000885;  // std dev = 1.015, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14212524747405592;  // std dev = 0.040, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5834099742682957;  // std dev = 1.250, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.19045439415426904;  // std dev = 0.019, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.3769872748323862;  // std dev = 1.020, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11663654906680333;  // std dev = 1.616, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.45303371652355134;  // std dev = 0.055, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.25458973216222347;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5146880554078913;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6042109721458621;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return -0.0015711805649219076;  // std dev = 2.476, 92.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=17 */
%   | | | else return 0.09987739583382349;  // std dev = 3.405, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.46618159060650505;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.005338277087717001;  // std dev = 2.346, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return 0.2836307035535429;  // std dev = 1.325, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3280839202219306;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.42083845753806853;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.38940523607044747;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0021788725189183147;  // std dev = 2.713, 95.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.19093746450975718;  // std dev = 1.545, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.07587212758603905;  // std dev = 3.012, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.35489632011545735;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.25800390262092787;  // std dev = 1.220, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.02835609769527714;  // std dev = 2.332, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2827479428736412;  // std dev = 0.049, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.27894732236378833;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), location(A, I) )
%   | | | then return 0.5220147000504475;  // std dev = 0.377, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.6615927640412028;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.15496465043552393;  // std dev = 0.029, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10788814422897748;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.022331473761158425;  // std dev = 1.853, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return -0.0504096424948875;  // std dev = 1.101, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.09919498554328911;  // std dev = 3.352, 94.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=34 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.22908607567056788;  // std dev = 0.042, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2694653589495847;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5070202878012938;  // std dev = 1.315, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else if ( interaction(F, A) )
%   | | then return -0.12302692046521085;  // std dev = 0.021, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.20870371925945427;  // std dev = 0.046, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2913776782315258;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, I) )
%   | | | then return -0.016982465927557915;  // std dev = 1.083, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.05925692070351292;  // std dev = 2.508, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | else return 0.2449676290208723;  // std dev = 0.765, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16637209522078544;  // std dev = 1.86e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.23429885980347112;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.25890485583562023;  // std dev = 1.111, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.4544633718106601;  // std dev = 0.472, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.13484381296449194;  // std dev = 0.037, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.47337878673319167;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2293099194253433;  // std dev = 0.145, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.02997327841327337;  // std dev = 1.210, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.04954127394726044;  // std dev = 1.508, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15129129264627966;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.19440606785419967;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.23047606123896872;  // std dev = 0.575, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return -0.09653379057971971;  // std dev = 0.068, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.056106905880511704;  // std dev = 0.422, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0825364255243235;  // std dev = 1.255, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1960949538821722;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return -0.003903908310467141;  // std dev = 1.937, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.04929814816910413;  // std dev = 2.437, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.10376715681164232;  // std dev = 0.168, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( complex(A, F), enzyme(E, G) )
%   | | | then return 0.14143220757157085;  // std dev = 0.615, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.028660544140142786;  // std dev = 1.559, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( phenotype(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.17824958596006624;  // std dev = 1.383, 38.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=29 */
%   | | | else return -0.14427393701041066;  // std dev = 0.837, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return -0.05468977882744745;  // std dev = 0.539, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.037312040975468384;  // std dev = 1.645, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.020315068926488974;  // std dev = 0.748, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1685132443482693;  // std dev = 1.271, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '56.751', 'seconds']
Refined model CLL: -0.164374


******************************************
Best model found
******************************************
Results 

CLL : -0.188557 

AUC ROC : 0.988657 

AUC PR : 0.287723 

Precision : 0.168361 

Recall : 0.936396 

F1 : 0.285407 

Total Learning Time : 3.806 

Total Inference Time : 3.397251844406128 

Total revision time: 11.806616720199585
Best scored revision CLL: -0.164374


Results 

CLL : -0.188557 

AUC ROC : 0.988657 

AUC PR : 0.287723 

Precision : 0.168361 

Recall : 0.936396 

F1 : 0.285407 

Total Learning Time : 11.820410188674927 

Total Inference Time : 3.397251844406128 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.127
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1940562710068482;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15877339059316523;  // std dev = 5.446, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return 0.17411730593708058;  // std dev = 5.322, 126.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10761086488694542;  // std dev = 4.953, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
%   | | | else return 0.14585127931695382;  // std dev = 5.870, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11499813284757497;  // std dev = 3.681, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.129446511334451;  // std dev = 6.632, 195.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10576592452020785;  // std dev = 7.574, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06686315635425669;  // std dev = 7.687, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7386786830670609;  // std dev = 0.017, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2617730377050359;  // std dev = 0.024, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.059676932478917054;  // std dev = 4.014, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | | else return 0.046063105156606964;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04396750576132008;  // std dev = 3.827, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.010944586264714047;  // std dev = 6.067, 178.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04072893063403187;  // std dev = 7.033, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032470493880202025;  // std dev = 7.025, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.557', 'seconds']
Parameter learned model CLL:-0.324869 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.446, 91, 44], 'false,false,false,false': [5.322, 83, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.953, 82, 35], 'false,false,false,false': [5.87, 102, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.681, 42, 20], 'false,false,false,false': [6.632, 128, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.574, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.687, 184, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.017, 0, 35], 'true,false': [0.024, 71, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.014, 49, 24], 'false,false,false,false': [4.369, 60, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.827, 72, 35], 'false,false,false,false': [6.067, 126, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.033, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.025, 179, 87]}]
{'': [nan, 0.223073597590973], 'false': [nan, 0.22307359759097298], 'false,false': [nan, 0.223073597590973], 'false,false,false': [nan, 0.22307359759097298]}
{'': [nan, 0.22222222222222324], 'false': [nan, 0.22222222222222168], 'false,false': [nan, 0.22222222222222324], 'false,false,false': [0.21969821673525317, 0.22480473670949802]}
{'': [nan, 0.2180233015547018], 'false': [nan, 0.2180233015547018], 'false,false': [nan, 0.21802330155470226], 'false,false,false': [0.2097056733968244, 0.22371120079154733]}
{'': [nan, 0.22387279208791422], 'false': [nan, 0.22387279208791422], 'false,false': [nan, 0.22387279208791425], 'false,false,false': [0.21852237252861623, 0.22552358984426196]}
{'': [nan, 0.22405496759899216], 'false': [nan, 0.22405496759899216], 'false,false': [nan, 0.224054967598992], 'false,false,false': [nan, 0.224054967598992]}
{'': [nan, 0.21806475674790352], 'false': [nan, 0.21806475674790352], 'false,false': [nan, 0.21806475674790404], 'false,false,false': [nan, 0.2180647567479027]}
{'': [0.22137219684669182, 0.21868256624388627], 'true': [8.115379862516648e-06, 8.282806862577834e-06], 'false': [nan, 0.21868256624388627], 'false,false': [nan, 0.21868256624388627], 'false,false,false': [0.220679301932821, 0.21694214876032983], 'true,true': [nan, 8.115379862516648e-06], 'true,true,false': [nan, 8.115379862516648e-06]}
{'': [nan, 0.18079811323088615], 'false': [nan, 0.18079811323088615], 'false,false': [nan, 0.18079811323088657], 'false,false,false': [0.13686102589960267, 0.20680031239371408]}
{'': [nan, 0.18593082478711803], 'false': [nan, 0.185930824787117], 'false,false': [nan, 0.185930824787117], 'false,false,false': [nan, 0.185930824787117]}
{'': [nan, 0.18553563391147318], 'false': [nan, 0.18553563391147318], 'false,false': [nan, 0.18553563391147362], 'false,false,false': [nan, 0.18553563391147362]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.828
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(F, E), interaction(F, F) )
%   | | | then return 0.20189893509951234;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.37427796735757685;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.13087620782678508;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.011995088945666036;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1652355492727394;  // std dev = 5.198, 127.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=39 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.807118184504403;  // std dev = 0.201, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.1765469944730489;  // std dev = 0.156, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, F), location(G, E) )
%   | | | then return 0.13729352817654591;  // std dev = 4.985, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | | else return 0.29835973736012;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then return 0.5034879424883251;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23682127582165843;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5884910584664002;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.054574357538766126;  // std dev = 0.415, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( complex(C, F), interaction(C, G) )
%   | | | then return 0.5277278400763123;  // std dev = 0.743, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.18882296341204702;  // std dev = 1.918, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J), complex(I, J) )
%   | | | then return 0.7263320191880658;  // std dev = 0.399, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.32252089012469565;  // std dev = 3.894, 72.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   | | else return -0.17347724918101434;  // std dev = 0.204, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return 0.20046388749010022;  // std dev = 0.903, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4532629981464365;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.42513109082559647;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(C, A), complex(E, D) )
%   | | | then return 0.7870286483145262;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06458392376895543;  // std dev = 0.613, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.05544927202708141;  // std dev = 0.311, 59.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then return 0.06281114431683262;  // std dev = 0.333, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.45312889315988736;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18455077554257154;  // std dev = 2.050, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.2677321212756524;  // std dev = 1.115, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.11916686395169482;  // std dev = 4.401, 111.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, A) )
%   then return -0.02230146793338981;  // std dev = 0.211, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.07633829480699852;  // std dev = 1.088, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1330614127576325;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.3494044952454705;  // std dev = 1.135, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.10571197311861871;  // std dev = 1.082, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5753526752437588;  // std dev = 0.249, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11118975008208792;  // std dev = 1.503, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.015233082319069094;  // std dev = 1.732, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.09870121800554862;  // std dev = 4.878, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.40259539866272803;  // std dev = 0.229, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(F, D), complex(F, C) )
%   | | then return -0.1567052351065137;  // std dev = 0.175, 38.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | | else return 0.060256472018914056;  // std dev = 0.372, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.5749301688093105;  // std dev = 1.493, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | | else return -0.046214736513711066;  // std dev = 1.592, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else return -0.1831248613556337;  // std dev = 0.298, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then return -0.14507526406625343;  // std dev = 0.721, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.021156963445481985;  // std dev = 0.930, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07589468073506944;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.3007142946682405;  // std dev = 0.171, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5246333866331463;  // std dev = 0.136, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.20140618145731126;  // std dev = 0.074, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, H), phenotype(A, I) )
%   | | | then return 0.46774710303594624;  // std dev = 0.564, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.2156773935524283;  // std dev = 2.676, 46.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=30 */
%   | | else return -0.15639639647256032;  // std dev = 0.244, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(A, J) )
%   | | | then return -0.04822914061847444;  // std dev = 0.852, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.009038006250919958;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10944681127407736;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( location(A, E), location(D, E) )
%   | then return -0.0022446117840233424;  // std dev = 0.236, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | else return -0.03858062682750833;  // std dev = 0.223, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( phenotype(A, H) )
%   | | then if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.07645072483343077;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.10222938027319826;  // std dev = 0.934, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.49857293804553543;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.21191282677530332;  // std dev = 0.252, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.22637939871720275;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), interaction(A, L) )
%   | | | then return -0.022052828194852908;  // std dev = 1.049, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.03117793669846528;  // std dev = 3.587, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), interaction(D, A) )
%   | then return -0.0034043464854804596;  // std dev = 0.249, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | else if ( interaction(C, D), complex(D, F) )
%   | | then if ( location(A, G) )
%   | | | then return 0.07402996735368404;  // std dev = 2.585, 72.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   | | | else return 1.640639640432632E-4;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(D, H), phenotype(D, I) )
%   | | | then return -0.060763424561462685;  // std dev = 1.117, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.05096355355790809;  // std dev = 1.892, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   else if ( interaction(A, J), enzyme(J, K) )
%   | then return 0.17471138378997284;  // std dev = 0.446, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, L) )
%   | | then return 0.06488783091858116;  // std dev = 0.276, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.15072001389051498;  // std dev = 0.978, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08414927302780287;  // std dev = 0.692, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( location(A, E), interaction(F, C) )
%   | then return 0.022352846087240714;  // std dev = 0.281, 201.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=73 */
%   | else if ( interaction(G, C), interaction(C, G) )
%   | | then if ( interaction(A, C) )
%   | | | then return -0.13202732694417812;  // std dev = 0.601, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.08320572004882872;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.10089795255204932;  // std dev = 0.596, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.0032850519327710234;  // std dev = 1.149, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( interaction(A, I) )
%   | then if ( enzyme(I, J) )
%   | | then return 0.14471417624828578;  // std dev = 0.431, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.08380702541649897;  // std dev = 0.677, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08746149554664928;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.16312043548966584;  // std dev = 0.641, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.625', 'seconds']
Refined model CLL: -0.215701


******************************************
Best model found
******************************************
Results 

CLL : -0.227543 

AUC ROC : 0.989559 

AUC PR : 0.414961 

Precision : 0.311798 

Recall : 0.787234 

F1 : 0.44668 

Total Learning Time : 12.828 

Total Inference Time : 7.702505111694336 

Total revision time: 23.373068647384642
Best scored revision CLL: -0.215701


Results 

CLL : -0.227543 

AUC ROC : 0.989559 

AUC PR : 0.414961 

Precision : 0.311798 

Recall : 0.787234 

F1 : 0.44668 

Total Learning Time : 23.40197856903076 

Total Inference Time : 7.702505111694336 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.178
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20950028645086416;  // std dev = 8.213, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1727916608033794;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
%   | | | else return 0.19948072388661955;  // std dev = 5.729, 141.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11899880138554292;  // std dev = 5.299, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | | | else return 0.10673515548036247;  // std dev = 6.619, 207.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11895100534865428;  // std dev = 4.397, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return 0.15184229112712114;  // std dev = 6.887, 204.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09830501912933862;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08097483695127448;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7276780097222793;  // std dev = 0.035, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2717080019648711;  // std dev = 0.046, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06531389500411346;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.024780877111217542;  // std dev = 5.280, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0296152558515485;  // std dev = 4.147, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | | | else return 0.02442324435215531;  // std dev = 6.600, 204.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.051873116846819535;  // std dev = 7.589, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030718242917095358;  // std dev = 7.661, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.203', 'seconds']
Parameter learned model CLL:-0.335708 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.213, 192, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.849, 100, 52], 'false,false,false,false': [5.729, 89, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.299, 89, 41], 'false,false,false,false': [6.619, 144, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.397, 58, 29], 'false,false,false,false': [6.887, 129, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.286, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.035, 0, 41], 'true,false': [0.046, 83, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.901, 45, 23], 'false,false,false,false': [5.28, 92, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.147, 87, 41], 'false,false,false,false': [6.6, 141, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.589, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.661, 205, 104]}]
{'': [nan, 0.22790357925493288], 'false': [nan, 0.22790357925493115], 'false,false': [nan, 0.22790357925493288], 'false,false,false': [nan, 0.22790357925493115]}
{'': [nan, 0.22896015096273958], 'false': [nan, 0.2289601509627355], 'false,false': [nan, 0.22896015096273958], 'false,false,false': [0.22506925207756004, 0.23278507117347988]}
{'': [nan, 0.21337641317492095], 'false': [nan, 0.21337641317492095], 'false,false': [nan, 0.21337641317492578], 'false,false,false': [0.21600204244844942, 0.21166945060327116]}
{'': [nan, 0.2296602178883085], 'false': [nan, 0.2296602178883085], 'false,false': [nan, 0.22966021788830876], 'false,false,false': [0.22222222222222293, 0.23250886856681482]}
{'': [nan, 0.22399709604686974], 'false': [nan, 0.22399709604686974], 'false,false': [nan, 0.22399709604686927], 'false,false,false': [nan, 0.22399709604686927]}
{'': [nan, 0.22437192590292862], 'false': [nan, 0.22437192590292862], 'false,false': [nan, 0.22437192590292956], 'false,false,false': [nan, 0.22437192590292868]}
{'': [0.2210741485495869, 0.2158655530614752], 'true': [2.917630579039233e-05, 2.5777045133025752e-05], 'false': [nan, 0.2158655530614752], 'false,false': [nan, 0.2158655530614752], 'false,false,false': [0.22383217993079596, 0.21120293847566537], 'true,true': [nan, 2.917630579039233e-05], 'true,true,false': [nan, 2.917630579039233e-05]}
{'': [nan, 0.18300597211704583], 'false': [nan, 0.18300597211704583], 'false,false': [nan, 0.18300597211704595], 'false,false,false': [0.1343477526733494, 0.21352622655728531]}
{'': [nan, 0.19134535549952028], 'false': [nan, 0.1913453554995203], 'false,false': [nan, 0.1913453554995203], 'false,false,false': [nan, 0.1913453554995203]}
{'': [nan, 0.18992569767958795], 'false': [nan, 0.18992569767958795], 'false,false': [nan, 0.18992569767958803], 'false,false,false': [nan, 0.18992569767958803]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.448
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( location(A, D), location(C, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.08621911053810886;  // std dev = 3.168, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5183431098567948;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=68 */
%   | | | else return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7377380733429718;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, D), phenotype(A, E) )
%   | | | then return 0.08487102846501537;  // std dev = 1.444, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.30288367325586024;  // std dev = 3.032, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   else if ( interaction(F, A), enzyme(A, G) )
%   | then if ( interaction(A, H), interaction(H, F) )
%   | | then return 0.48000624301611095;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(F, I) )
%   | | | then return 0.14921816134299495;  // std dev = 3.076, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.32864352262998536;  // std dev = 1.436, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.12838214185703511;  // std dev = 0.432, 161.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(C, E) )
%   | then if ( phenotype(A, E), interaction(C, D) )
%   | | then return 0.6357066731377313;  // std dev = 0.099, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.050547675250133775;  // std dev = 0.736, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.6936200850699816;  // std dev = 0.099, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.7079948097001196;  // std dev = 0.206, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.30488009770261987;  // std dev = 0.614, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( complex(I, J), interaction(I, A) )
%   | | | then return 0.0862295805387101;  // std dev = 2.487, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.03638757790248009;  // std dev = 2.170, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.05744307834347216;  // std dev = 3.820, 87.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.1471278549655071;  // std dev = 4.955, 125.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=43 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.5256578632653726;  // std dev = 0.166, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7217048009959944;  // std dev = 0.208, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.19318188405880005;  // std dev = 0.056, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4133164231102341;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6236897945652793;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6165703681326082;  // std dev = 2.155, 44.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=38 */
%   | | | else return -0.173999752550835;  // std dev = 0.292, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.0590240223058494;  // std dev = 3.324, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return 0.1626589676813751;  // std dev = 1.395, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, C) )
%   | then return 0.15553953419430488;  // std dev = 0.948, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.42205709760778526;  // std dev = 0.077, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.318464775661556;  // std dev = 0.776, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.06141585173814406;  // std dev = 2.399, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.0517195459633849;  // std dev = 2.416, 71.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=11 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, J), interaction(A, K) )
%   | | | then return -0.06956362660115437;  // std dev = 1.045, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.03522670355910203;  // std dev = 3.077, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | else if ( location(A, L) )
%   | | | then return 0.07497855948232801;  // std dev = 3.911, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | | else return 0.24913324879716559;  // std dev = 1.148, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, D), interaction(D, A) )
%   | | then return 0.5311852892385646;  // std dev = 0.162, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.0514372565059612;  // std dev = 0.386, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return -0.08856407806762484;  // std dev = 0.245, 133.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=17 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.36326793395693563;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, H), complex(G, H) )
%   | | | then return -0.20970419115557393;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.09088437557070463;  // std dev = 4.327, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2502820149192747;  // std dev = 0.963, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.15348861837399025;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1038188765103346;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.456399220884622;  // std dev = 0.157, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.16534643101470303;  // std dev = 0.060, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(E, A), phenotype(A, F) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then return -0.037717728785645985;  // std dev = 0.310, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | else if ( complex(E, I) )
%   | | | then return 0.0066363838402337385;  // std dev = 3.016, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0.19893411409986217;  // std dev = 0.874, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4415541741857722;  // std dev = 1.781, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return -0.18643575500523124;  // std dev = 0.309, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.23319866217176805;  // std dev = 0.913, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.02766036466403482;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, E) )
%   | | then return 0.16455598373978542;  // std dev = 0.681, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.0725759528478901;  // std dev = 0.245, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | else return 0.01880617191641369;  // std dev = 0.255, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.45237868089099253;  // std dev = 0.122, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.17137660640436056;  // std dev = 0.068, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4575228768367953;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06611312546057913;  // std dev = 1.347, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.12078008809357733;  // std dev = 3.095, 72.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=31 */
%   | | | else return 0.05782392203390271;  // std dev = 1.612, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1777958892859935;  // std dev = 0.061, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(A, G) )
%   | | | then return 0.3025184311204781;  // std dev = 1.056, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return -0.12491840098785092;  // std dev = 0.838, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.14968295566123854;  // std dev = 0.550, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0.0015625819147627173;  // std dev = 2.208, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.28518101960163406;  // std dev = 2.747, 64.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=48 */
%   | | | else return -0.15572497866388552;  // std dev = 0.343, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.1410424170610445;  // std dev = 0.936, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.06412403381383809;  // std dev = 1.007, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( enzyme(A, D) )
%   | then return -0.006374475579832635;  // std dev = 0.173, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( interaction(C, C), recursion_proteinclass(C, B) )
%   | | then return 0.10787419892743152;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.05500212071486499;  // std dev = 0.228, 72.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.36775438829276985;  // std dev = 0.099, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1253225351050816;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(G, A), interaction(A, H) )
%   | | then if ( location(A, I) )
%   | | | then return 0.03851243045208935;  // std dev = 1.932, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return 0.39163075676877707;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.1574314240058535;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.004266179211316019;  // std dev = 3.627, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.169', 'seconds']
Refined model CLL: -0.199028


******************************************
Best model found
******************************************
Results 

CLL : -0.201048 

AUC ROC : 0.987003 

AUC PR : 0.46775 

Precision : 0.353635 

Recall : 0.679245 

F1 : 0.465116 

Total Learning Time : 12.448 

Total Inference Time : 12.046349287033081 

Total revision time: 27.710155082702638
Best scored revision CLL: -0.199028


Results 

CLL : -0.201048 

AUC ROC : 0.987003 

AUC PR : 0.46775 

Precision : 0.353635 

Recall : 0.679245 

F1 : 0.465116 

Total Learning Time : 27.739065004348756 

Total Inference Time : 12.046349287033081 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.175
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284577;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1499756775669512;  // std dev = 5.903, 161.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=51 */
%   | | | else return 0.15351799123154872;  // std dev = 5.279, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13700227393804987;  // std dev = 5.446, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return 0.11103135951636271;  // std dev = 5.797, 160.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13154303488642416;  // std dev = 4.136, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | | | else return 0.10956760759990009;  // std dev = 6.712, 208.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11027243612654193;  // std dev = 7.798, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08289302584208079;  // std dev = 7.842, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7319135780281443;  // std dev = 0.012, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2680552307717392;  // std dev = 0.016, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.16349961309214395;  // std dev = 3.796, 59.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=25 */
%   | | | else return 0.058532734330938405;  // std dev = 3.956, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.033695749745819986;  // std dev = 4.299, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.020642596122774384;  // std dev = 5.783, 158.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02043221553624943;  // std dev = 7.209, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0575626213756383;  // std dev = 6.956, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.386', 'seconds']
Parameter learned model CLL:-0.324389 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.903, 110, 51], 'false,false,false,false': [5.279, 87, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.446, 91, 44], 'false,false,false,false': [5.797, 112, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.136, 50, 26], 'false,false,false,false': [6.712, 142, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.798, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.842, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.012, 0, 44], 'true,false': [0.016, 79, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.796, 34, 25], 'false,false,false,false': [3.956, 49, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.299, 93, 44], 'false,false,false,false': [5.783, 110, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.209, 203, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.956, 166, 92]}]
{'': [nan, 0.2222222222222235], 'false': [nan, 0.2222222222222231], 'false,false': [nan, 0.2222222222222235], 'false,false,false': [nan, 0.2222222222222231]}
{'': [nan, 0.21699931753690543], 'false': [nan, 0.21699931753690618], 'false,false': [nan, 0.21699931753690543], 'false,false,false': [0.21642683538443613, 0.21771240234375083]}
{'': [nan, 0.2146148660006795], 'false': [nan, 0.2146148660006795], 'false,false': [nan, 0.21461486600068042], 'false,false,false': [0.21970555711497883, 0.21001093119181716]}
{'': [nan, 0.2189491129976248], 'false': [nan, 0.2189491129976248], 'false,false': [nan, 0.21894911299762615], 'false,false,false': [0.22506925207756243, 0.2165836763805063]}
{'': [nan, 0.223578906813686], 'false': [nan, 0.223578906813686], 'false,false': [nan, 0.22357890681368742], 'false,false,false': [nan, 0.22357890681368742]}
{'': [nan, 0.221218431892423], 'false': [nan, 0.221218431892423], 'false,false': [nan, 0.22121843189242382], 'false,false,false': [nan, 0.22121843189242338]}
{'': [0.2297462568111042, 0.2321896557512701], 'false': [nan, 0.2321896557512701], 'false,false': [nan, 0.2321896557512701], 'false,false,false': [0.24418270611893164, 0.2173996913580244], 'true': [3.1573425046974277e-06, 3.176865184554753e-06], 'true,true': [nan, 3.1573425046974277e-06], 'true,true,false': [nan, 3.1573425046974277e-06]}
{'': [nan, 0.17606480521705464], 'false': [nan, 0.17606480521705464], 'false,false': [nan, 0.17606480521705367], 'false,false,false': [0.1349153041651281, 0.21166594092206395]}
{'': [nan, 0.17615399568160864], 'false': [nan, 0.17615399568160858], 'false,false': [nan, 0.17615399568160858], 'false,false,false': [nan, 0.17615399568160858]}
{'': [nan, 0.1875182516665085], 'false': [nan, 0.1875182516665085], 'false,false': [nan, 0.18751825166650887], 'false,false,false': [nan, 0.18751825166650887]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 5.698
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.01604367194161748;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.12433598545922309;  // std dev = 5.211, 139.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=37 */
%   | | | else return 0.2059750220560339;  // std dev = 4.568, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.728352773263003;  // std dev = 0.081, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then if ( interaction(H, A), interaction(D, I) )
%   | | | then return 0.20878479613714776;  // std dev = 1.582, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.0068181185382377675;  // std dev = 1.829, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else return -0.14480313977114093;  // std dev = 0.063, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.17710921865772647;  // std dev = 4.067, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | | else return 0.10203172589516739;  // std dev = 5.355, 148.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.56463381450263;  // std dev = 0.105, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, D), complex(A, E) )
%   | | then return -0.1850610757112563;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12818202193481745;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), location(F, G) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04895028980133254;  // std dev = 2.964, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.1297068814852384;  // std dev = 5.333, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.45198342511209716;  // std dev = 1.358, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.15238454663125856;  // std dev = 3.353, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4248845844699098;  // std dev = 0.108, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.1627324166778298;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09842607997835223;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(D, G), interaction(G, G) )
%   | | | then return -0.10180002743559924;  // std dev = 0.910, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.03131401778467742;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return -0.032076080897247394;  // std dev = 1.801, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0.08326940075357077;  // std dev = 2.601, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.12420864677395459;  // std dev = 5.416, 137.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=46 */
%   | | | else return 0.26915670784431056;  // std dev = 2.783, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.3262883521044171;  // std dev = 0.197, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0.7600802123911866;  // std dev = 0.465, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.5599968541802036;  // std dev = 1.228, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return -0.2243072188904437;  // std dev = 0.050, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.39100880895852747;  // std dev = 0.088, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(A, J), enzyme(I, K) )
%   | | | then return -0.05917394744479932;  // std dev = 1.302, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.08839461503209657;  // std dev = 3.859, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.2720397580960015;  // std dev = 2.127, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.10778494813123274;  // std dev = 2.698, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.2699178796180311;  // std dev = 0.070, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.02219117612760496;  // std dev = 0.556, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.40213885770382163;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, F), location(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.6424735484680011;  // std dev = 0.182, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.20121391018730939;  // std dev = 0.063, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( location(I, J) )
%   | | | then return -0.026578541965880442;  // std dev = 1.922, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return -0.1363914079598153;  // std dev = 0.155, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -6.962422414036901E-4;  // std dev = 2.731, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return 0.08875437111505977;  // std dev = 4.105, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.22417082119039078;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.3860845958073635;  // std dev = 0.746, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.6325580497808424;  // std dev = 0.657, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.1719792053192291;  // std dev = 0.037, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.2784447513006729;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(I, K), interaction(I, I) )
%   | | | then return 0.10748501488716022;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.018709299768139065;  // std dev = 2.930, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | else if ( interaction(L, A), interaction(A, M) )
%   | | | then return -0.023405205502314213;  // std dev = 1.133, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.07642769080390875;  // std dev = 3.595, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.013794307226901222;  // std dev = 0.267, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then if ( complex(D, F) )
%   | | | then return -0.005562417593377074;  // std dev = 1.563, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.08689343745689312;  // std dev = 1.147, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( complex(D, G), phenotype(D, H) )
%   | | | then return 0.2624920347119474;  // std dev = 1.579, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.08828009772196056;  // std dev = 2.887, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5502158285153176;  // std dev = 0.280, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.23394468283332628;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( location(A, K) )
%   | | | then return -0.06703677745742513;  // std dev = 1.950, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.1731369433604082;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, E), location(C, F) )
%   | then return -0.004096135123233095;  // std dev = 0.239, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( interaction(G, C), interaction(H, G) )
%   | | then if ( complex(H, I), location(C, J) )
%   | | | then return 0.005608332205255001;  // std dev = 1.899, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.11247228496352864;  // std dev = 1.172, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(K, C), phenotype(K, D) )
%   | | | then return 0.2122374688761931;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16725800031838137;  // std dev = 1.486, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( interaction(A, L), phenotype(L, M) )
%   | then return 0.019818318768677047;  // std dev = 0.316, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | else if ( phenotype(A, N), interaction(P, A) )
%   | | then return -0.0037392968471304426;  // std dev = 0.262, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( interaction(Q, A), interaction(Q, Q) )
%   | | | then return 0.023759472041259045;  // std dev = 1.315, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.0560962061026441;  // std dev = 3.434, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, C) )
%   | then if ( complex(A, D), recursion_proteinclass(C, B) )
%   | | then return 0.1570192413615521;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.0833825006287108;  // std dev = 0.352, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else if ( interaction(A, E), phenotype(C, F) )
%   | | then return 0.02016457902075797;  // std dev = 0.321, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(G, C), interaction(H, G) )
%   | | | then return 0.07165013137598174;  // std dev = 2.146, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.2332418479707428;  // std dev = 1.323, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then return 0.09329575537957815;  // std dev = 0.764, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, K) )
%   | | then return 0.03935783129079969;  // std dev = 0.298, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | else if ( location(A, L) )
%   | | | then return -0.030256712333489418;  // std dev = 3.840, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | | | else return 0.058568789970824764;  // std dev = 1.056, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.177', 'seconds']
Refined model CLL: -0.245232


******************************************
Best model found
******************************************
Results 

CLL : -0.230887 

AUC ROC : 0.954233 

AUC PR : 0.214647 

Precision : 0.220974 

Recall : 0.425993 

F1 : 0.290999 

Total Learning Time : 5.698 

Total Inference Time : 2.5669517517089844 

Total revision time: 11.23212847518921
Best scored revision CLL: -0.245232


Results 

CLL : -0.230887 

AUC ROC : 0.954233 

AUC PR : 0.214647 

Precision : 0.220974 

Recall : 0.425993 

F1 : 0.290999 

Total Learning Time : 11.261038396835328 

Total Inference Time : 2.5669517517089844 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.075
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.207742431034472;  // std dev = 7.479, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16859582783268112;  // std dev = 5.869, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
%   | | | else return 0.17093349017034168;  // std dev = 4.737, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14724582621765517;  // std dev = 4.294, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | | else return 0.1682471589052878;  // std dev = 6.081, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08342636985460755;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.10853830437148923;  // std dev = 6.700, 203.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0805456976125268;  // std dev = 7.651, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10704293371566993;  // std dev = 7.415, 238.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7303777610696361;  // std dev = 0.013, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.269842412853397;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.1158363002819277;  // std dev = 4.476, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
%   | | | else return 0.07965358290754286;  // std dev = 4.009, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05172299593109271;  // std dev = 3.365, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.037516775051963366;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028112582958960845;  // std dev = 7.069, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014009258458015542;  // std dev = 7.120, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.732', 'seconds']
Parameter learned model CLL:-0.348432 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.479, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.869, 102, 52], 'false,false,false,false': [4.737, 66, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.294, 54, 28], 'false,false,false,false': [6.081, 102, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.643, 44, 19], 'false,false,false,false': [6.7, 136, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.651, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.415, 152, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.013, 0, 28], 'true,false': [0.02, 58, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.476, 51, 33], 'false,false,false,false': [4.009, 45, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.365, 53, 28], 'false,false,false,false': [6.209, 115, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.069, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.12, 181, 86]}]
{'': [nan, 0.22737788353493374], 'false': [nan, 0.22737788353493352], 'false,false': [nan, 0.22737788353493374], 'false,false,false': [nan, 0.22737788353493352]}
{'': [nan, 0.22394444788889464], 'false': [nan, 0.22394444788889495], 'false,false': [nan, 0.22394444788889464], 'false,false,false': [0.22364648338674148, 0.22440000000000118]}
{'': [nan, 0.22908846875007471], 'false': [nan, 0.22908846875007471], 'false,false': [nan, 0.2290884687500751], 'false,false,false': [0.22487423572977636, 0.23109881445429287]}
{'': [nan, 0.21876194409001104], 'false': [nan, 0.21876194409001104], 'false,false': [nan, 0.2187619440900107], 'false,false,false': [0.21063240110859155, 0.2211355508813389]}
{'': [nan, 0.2176131896538586], 'false': [nan, 0.2176131896538586], 'false,false': [nan, 0.21761318965385823], 'false,false,false': [nan, 0.21761318965385823]}
{'': [nan, 0.231047236587762], 'false': [nan, 0.231047236587762], 'false,false': [nan, 0.23104723658776277], 'false,false,false': [nan, 0.23104723658776286]}
{'': [0.21968150808430545, 0.23478655892794753], 'false': [nan, 0.23478655892794753], 'false,false': [nan, 0.23478655892794753], 'false,false,false': [0.23852040816326547, 0.2295918367346936], 'true': [6.401709872047182e-06, 6.779239416652073e-06], 'true,true': [nan, 6.401709872047182e-06], 'true,true,false': [nan, 6.401709872047182e-06]}
{'': [nan, 0.19642275211020185], 'false': [nan, 0.19642275211020185], 'false,false': [nan, 0.19642275211020244], 'false,false,false': [0.13981791801171178, 0.22286123463629964]}
{'': [nan, 0.1914826006385214], 'false': [nan, 0.19148260063852154], 'false,false': [nan, 0.19148260063852154], 'false,false,false': [nan, 0.19148260063852154]}
{'': [nan, 0.1898506157843081], 'false': [nan, 0.1898506157843081], 'false,false': [nan, 0.18985061578430884], 'false,false,false': [nan, 0.18985061578430884]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.197
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, D), phenotype(D, E) )
%   | | then if ( complex(D, F), location(A, G) )
%   | | | then return 0.08891816586874314;  // std dev = 3.038, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.17890365208064443;  // std dev = 3.398, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1945125714631474;  // std dev = 4.955, 110.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( phenotype(D, G), location(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.07833110469090862;  // std dev = 1.439, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.17730231469048074;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.3281830456285661;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(D, J), phenotype(J, K) )
%   | | then return 0.5969765504451795;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.23846097953532386;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( complex(A, L), interaction(A, M) )
%   | then return 0.19781029301156766;  // std dev = 0.446, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return -0.01116010800675559;  // std dev = 1.788, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.1412007270636172;  // std dev = 5.676, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.6810684191942553;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5670427661686862;  // std dev = 0.087, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14563824377716889;  // std dev = 0.064, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6999635189050663;  // std dev = 0.923, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.0310318045614687;  // std dev = 4.555, 124.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=27 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.7311864235940974;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.0899652169706978;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.18451364546858767;  // std dev = 4.190, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), enzyme(D, E) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.607075880219288;  // std dev = 0.231, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7823815467412392;  // std dev = 0.132, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( interaction(G, D), interaction(G, A) )
%   | | | then return 0.6365183623023297;  // std dev = 1.779, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | else return -0.021870066771193485;  // std dev = 2.832, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.15228063076554207;  // std dev = 0.143, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.21004833186185087;  // std dev = 0.283, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( enzyme(A, I) )
%   | then return 0.0851639709676701;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, J) )
%   | | then return -0.014943248815163058;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.01758885694200337;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), phenotype(C, E) )
%   | then return 0.4138033505184742;  // std dev = 0.198, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( recursion_proteinclass(C, B), interaction(A, F) )
%   | | then return 0.44452738986035656;  // std dev = 0.376, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.13746138131230412;  // std dev = 0.352, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.041690612588627565;  // std dev = 4.189, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3988526729955234;  // std dev = 0.182, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.07977943955009847;  // std dev = 1.859, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.043689612916071076;  // std dev = 1.537, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.32681975285424136;  // std dev = 0.982, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.130951986744066;  // std dev = 2.644, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.26373970394841006;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4149880012029146;  // std dev = 0.264, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.19936789831443194;  // std dev = 0.392, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.11391201711967125;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.03754383354690156;  // std dev = 0.926, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3891163408306072;  // std dev = 3.681, 86.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=63 */
%   | | | else return -0.18349458518926676;  // std dev = 0.181, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.05013307109391431;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.09582881342025691;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4748815588881982;  // std dev = 0.180, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.18468238248513494;  // std dev = 0.089, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B), interaction(F, G) )
%   | | then return 0.33256413440429977;  // std dev = 0.159, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( enzyme(F, H) )
%   | | | then return -0.06424530821321164;  // std dev = 1.769, 57.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
%   | | | else return 0.11145467957734788;  // std dev = 1.824, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.47244377657952275;  // std dev = 0.775, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.19742004923949097;  // std dev = 0.285, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.19265357974273495;  // std dev = 1.678, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.027459779445310067;  // std dev = 1.053, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16366875272216613;  // std dev = 0.040, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), interaction(D, D) )
%   | | then if ( complex(F, E) )
%   | | | then return -0.07627846003691213;  // std dev = 0.687, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return -0.09668639929317988;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(D, G), complex(G, H) )
%   | | | then return 0.013522939941787757;  // std dev = 2.018, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return -0.06179983267720172;  // std dev = 1.287, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return 0.027513363746668264;  // std dev = 1.881, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.4371658220321074;  // std dev = 0.794, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.059095367893107036;  // std dev = 1.390, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.02274240001649984;  // std dev = 3.204, 110.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=30 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(E, D) )
%   | then return 0.19360633632696028;  // std dev = 0.102, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, C) )
%   | | then return -0.11289389350662161;  // std dev = 0.060, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(D, D), complex(A, F) )
%   | | | then return 0.183740542374772;  // std dev = 0.922, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.04405751892145883;  // std dev = 3.127, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.17136218314692558;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(H, J) )
%   | | | then return 0.002169653274809317;  // std dev = 0.521, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12999623223399964;  // std dev = 0.554, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.015752452347416214;  // std dev = 2.192, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.04145911322949403;  // std dev = 2.110, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.11852533858432948;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(D, E), location(A, F) )
%   | | then if ( interaction(A, G), interaction(D, G) )
%   | | | then return -0.057866314820216605;  // std dev = 1.274, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | | else return 0.01802953486930223;  // std dev = 3.072, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
%   | | else if ( interaction(A, H), interaction(I, D) )
%   | | | then return -0.003219298067407469;  // std dev = 1.447, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.07272409217317036;  // std dev = 1.595, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( complex(J, L), interaction(J, J) )
%   | | | then return 0.24533620624177938;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.007706600230009639;  // std dev = 1.545, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.13328901721732217;  // std dev = 0.765, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.28046966473228163;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '17.612', 'seconds']
Refined model CLL: -0.210206


******************************************
Best model found
******************************************
Results 

CLL : -0.221909 

AUC ROC : 0.982041 

AUC PR : 0.308506 

Precision : 0.257913 

Recall : 0.777385 

F1 : 0.387324 

Total Learning Time : 12.197 

Total Inference Time : 8.833212614059448 

Total revision time: 23.718033239364622
Best scored revision CLL: -0.210206


Results 

CLL : -0.221909 

AUC ROC : 0.982041 

AUC PR : 0.308506 

Precision : 0.257913 

Recall : 0.777385 

F1 : 0.387324 

Total Learning Time : 23.74694316101074 

Total Inference Time : 8.833212614059448 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.172
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.16656015005278196;  // std dev = 4.777, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | | else return 0.15566959625653587;  // std dev = 5.029, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.763465875030611;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.745276553957917;  // std dev = 2.522, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.16262820312919565;  // std dev = 0.009, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( location(A, K) )
%   | | | then return 0.17621786846880294;  // std dev = 1.631, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5646715984700621;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18296534957677058;  // std dev = 1.168, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10703978181738358;  // std dev = 4.176, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6803500666932671;  // std dev = 0.994, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14100610750384773;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4812269990042359;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2758065280103103;  // std dev = 1.137, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4688970918136066;  // std dev = 0.229, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.22556923562319706;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5444893116105376;  // std dev = 1.406, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.06666243767646793;  // std dev = 4.842, 193.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.48664595777251674;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return -0.02212505884863521;  // std dev = 1.761, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.22207242307824712;  // std dev = 0.815, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2246659106250279;  // std dev = 0.940, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07058947232889361;  // std dev = 5.233, 224.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36817017435088084;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.7351317048766012;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06507618949946271;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1757520318934205;  // std dev = 0.726, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.41847100603131304;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.28735909721181785;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.02807366503532257;  // std dev = 2.283, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.13115318928899533;  // std dev = 0.921, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.0797433713334714;  // std dev = 4.506, 165.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=55 */
%   | | | else return 0.004969395964477906;  // std dev = 1.844, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26413586520970883;  // std dev = 0.162, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.23225814475745166;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5601112194249281;  // std dev = 0.395, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.18185422501511445;  // std dev = 0.599, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3654218755086934;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04129868542902835;  // std dev = 3.994, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1864640955938549;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09877765221298385;  // std dev = 0.948, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3507110494977523;  // std dev = 2.956, 83.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=71 */
%   | | else return -0.15974575264506494;  // std dev = 0.257, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1934319890820444;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.015546701043366395;  // std dev = 1.407, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18187663596382947;  // std dev = 0.109, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1846828591066615;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04883905548738279;  // std dev = 1.581, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.09625396378738654;  // std dev = 0.600, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.02522554202811485;  // std dev = 1.815, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2663819633216566;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.004420953961558846;  // std dev = 3.561, 137.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
%   | | | else return -0.08889131041646445;  // std dev = 1.504, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1468237575800666;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22493967744999677;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1586005621096058;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.0252224472494801;  // std dev = 2.403, 114.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.21789469251406668;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03421741392456416;  // std dev = 3.372, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | | else return -0.020419540383589976;  // std dev = 1.412, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.625', 'seconds']
Parameter learned model CLL:-0.197474 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.095, 2, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.777, 74, 33], 'false,false,true,false': [5.029, 85, 36], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.08, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,true': [2.522, 7, 69], 'false,false,true,false': [0.009, 148, 0], 'false,false,false,true': [1.631, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.082, 0, 8], 'true,false': [1.168, 2, 3], 'false,true,true': [4.176, 79, 34], 'false,true,false,true': [0.994, 1, 37], 'false,true,false,false': [0.0, 69, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [1.137, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.229, 0, 10], 'true,false': [0.774, 2, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.406, 2, 14], 'false,true,false': [4.842, 136, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.761, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.815, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.94, 1, 4], 'false,true': [5.233, 153, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.726, 1, 7], 'true,true,false': [0.1, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.283, 41, 12], 'false,false,true': [0.921, 1, 3], 'false,false,false,true': [4.506, 110, 55], 'false,false,false,false': [1.844, 15, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.162, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.395, 0, 33], 'true,false': [0.599, 78, 0], 'false,true': [0.071, 0, 3], 'false,false,true': [3.994, 87, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.948, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.956, 12, 71], 'false,true,false': [0.257, 154, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.407, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.109, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.049, 0, 3], 'false,true,true': [1.581, 33, 11], 'false,true,false,true': [0.6, 1, 1], 'false,true,false,false': [1.815, 48, 17], 'false,false,true': [0.059, 0, 3], 'false,false,false,true': [3.561, 97, 40], 'false,false,false,false': [1.504, 13, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.064, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.044, 0, 3], 'false,true': [2.403, 85, 29], 'false,false,true': [0.051, 0, 3], 'false,false,false,true': [3.372, 82, 40], 'false,false,false,false': [1.412, 11, 4]}]
{'': [0.13017751479289916, 0.2130177514792901], 'false': [0.18750000000000006, 0.2101644397026212], 'false,false': [0.21104570637119136, 0.1955555555555554], 'false,false,true': [0.21329373744431968, 0.2090021173417128], 'false,false,false': [0.20408163265306126, 0.18750000000000003], 'false,true': [0.0, 1.4802973661668753e-16], 'true': [-2.220446049250313e-16, 0.23999999999999994], 'false,true,false': [0.0, 0.0]}
{'': [0.0010663012589196602, 0.214922115098134], 'false': [0.1875, 0.21365350171673325], 'false,false': [0.21317420305552978, 0.2216995991507108], 'false,false,false': [0.2216995991507108, nan], 'false,false,true': [0.08368097280207905, 5.497190723465502e-07], 'false,true': [0.0, 0.0], 'true': [7.401486830834377e-17, 0.0012902245232925048], 'false,true,false': [0.0, nan]}
{'': [0.1400054367444044, 0.1638080687756962], 'false': [0.15938073821987525, 0.22720514417337329], 'false,false': [0.2222222222222222, 0.21563074851449326], 'false,false,true': [nan, 0.2222222222222222], 'false,false,false': [0.21563074851449326, nan], 'false,true': [0.1543233593972653, 0.16374303425281178], 'false,true,false': [0.02602673861641582, -3.8616453030440226e-17], 'true': [0.0008383691441815611, 0.27301141540064544]}
{'': [0.13577074333669983, 0.14171726717998148], 'false': [0.1377842058187716, 0.17607093094470846], 'false,false': [0.0, 0.17222907315401398], 'false,false,false': [0.17222907315401398, nan], 'false,true': [0.1235899513455826, 0.12148200170616062], 'true': [0.005247847303352415, 0.19985977118357975], 'false,true,true': [nan, 0.12358995134558265], 'false,false,true': [nan, 0.0]}
{'': [0.11913475065705859, 0.12722423823090817], 'false': [0.12223517042459524, 0.21483739072680147], 'false,false': [0.0, 0.23633067121932566], 'false,false,false': [0.0, 0.20408163265306117], 'true': [0.0831031321359084, 0.17678120110464943], 'true,true': [0.0831031321359084, nan], 'false,false,true': [nan, 0.0]}
{'': [0.055651813550352786, 0.12467736228745398], 'false': [0.09831634975484257, 0.12982184617652126], 'false,false': [0.21194140290728397, 0.12798041806045637], 'false,false,false': [0.12302889953707699, 0.16192531764252482], 'true': [0.06053922289120779, 0.0], 'true,true': [0.0659335828286141, 0.0033088082169961583], 'true,false': [nan, 0.0]}
{'': [0.11314489184721845, 0.1251138673972647], 'false': [0.001667241744631287, 0.12560556382792254], 'false,false': [0.12560556382792254, nan], 'true': [0.02092117324762587, 0.004597846120883633], 'true,true': [0.002475498689213535, 0.0047384147664980055], 'true,true,false': [nan, 0.0047384147664980055], 'true,true,true': [0.0026306677343865157, 0.0]}
{'': [0.07687071652384632, 0.09953960930123537], 'false': [0.09645362099281343, 0.1554753341905476], 'false,false': [0.0, 0.1650722202761805], 'false,false,false': [0.1650722202761805, nan], 'false,true': [0.10530934023962363, 0.0004276101870102626], 'false,true,true': [nan, 0.1053093402396235], 'true': [-9.25185853854297e-18, 0.14989697687129924], 'false,false,true': [0.0, nan]}
{'': [0.0013039853228874363, 0.08041837749479785], 'false': [0.05564535454803517, 0.09742021773632348], 'false,false': [0.0011526686937099555, 0.09787913079494766], 'false,false,false': [0.09255072131628347, 0.13307384585504128], 'false,true': [0.056788918594455055, 0.05471123786002044], 'false,true,false': [0.18009260332079322, 0.05070275158162013], 'true': [0.0014861155933808684, 0.0008125774100608089], 'true,false': [nan, 0.0008125774100608089]}
{'': [0.0010391889965265673, 0.07675806806604632], 'false': [0.05064489311634292, 0.09653661825523184], 'false,false': [0.0008648465831279465, 0.0978608198788811], 'false,false,false': [0.09322537180791433, 0.13290411377568295], 'true': [0.0011870583998187037, 0.0006419255624157313], 'true,true': [0.0011870583998187037, nan], 'true,true,true': [0.0005938760540807013, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 5.998
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.2411276585037677;  // std dev = 3.333, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.14165408973868795;  // std dev = 6.278, 194.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7492293200691814;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7092337538490898;  // std dev = 2.970, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.1600771304311904;  // std dev = 0.130, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.09001583620913423;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4400158362091342;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4442553256351734;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.02713533369544258;  // std dev = 3.270, 81.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   | | | else return 0.0995915090947268;  // std dev = 2.948, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.641613353032016;  // std dev = 1.667, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.13962320318373092;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(A, J), phenotype(J, I) )
%   | | | then return 0.07754541679502222;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.17176953997090896;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.36384872445988353;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.44475702894584107;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.42432444535519276;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.37787030980619457;  // std dev = 3.816, 99.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=68 */
%   | | | else return -0.13930587660418;  // std dev = 0.172, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.002983907375011812;  // std dev = 0.635, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.12938791761541477;  // std dev = 0.881, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4572975357990914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.059886119442811483;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12916686196412996;  // std dev = 1.373, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.33674818151038016;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.07538388062856502;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(F, H), location(A, I) )
%   | | | then return 0.1421354207967984;  // std dev = 1.205, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.02193247457295988;  // std dev = 1.536, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.035796495013686196;  // std dev = 2.356, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.11140908022922366;  // std dev = 3.729, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.347845174685541;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return -0.05051341131171854;  // std dev = 1.291, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.07698246798182949;  // std dev = 1.238, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2951490739846626;  // std dev = 0.078, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.27361271008473187;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), location(A, G) )
%   | then if ( interaction(F, F), complex(A, H) )
%   | | then if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3455322913291136;  // std dev = 1.364, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.17695797553847326;  // std dev = 0.355, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( phenotype(F, J), interaction(K, F) )
%   | | | then return 0.07132550070930327;  // std dev = 3.538, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   | | | else return 0.008910260706820822;  // std dev = 2.642, 89.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   | else if ( interaction(A, L), interaction(L, M) )
%   | | then return 0.2755426729695725;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.036761897690563906;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11873629921338667;  // std dev = 1.070, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23768038458870058;  // std dev = 0.068, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.4242526686645543;  // std dev = 1.715, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return 0.7131601785302635;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1674121785007188;  // std dev = 0.063, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.049884203867460064;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), interaction(I, A) )
%   | | | then return 0.17596183313924493;  // std dev = 1.215, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.013573874516414015;  // std dev = 0.847, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.04932009522150113;  // std dev = 3.097, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   | | | else return 0.12441023878679765;  // std dev = 0.752, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1770865635564316;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.23969784229503524;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3346800501480614;  // std dev = 1.387, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | | else return 0.4332327284911924;  // std dev = 1.404, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return -0.1313629128741102;  // std dev = 0.308, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.16223372723997856;  // std dev = 0.323, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.1842727898132429;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.04813792642146511;  // std dev = 1.128, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.11590624505112308;  // std dev = 0.704, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1723821983687189;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.06443691630278531;  // std dev = 0.288, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.09593878155668134;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.14708858227605032;  // std dev = 0.321, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.039944367174929225;  // std dev = 1.082, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.017262571615568417;  // std dev = 1.923, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.007175353949776808;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.002716774670229637;  // std dev = 2.993, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | | else return 0.10003551211251091;  // std dev = 1.205, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.1317376919498109;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12219584318160473;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2816805293075666;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.016871583853248925;  // std dev = 0.426, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(I, A), phenotype(I, J) )
%   | | then return 0.0028881359988985555;  // std dev = 0.221, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | | else return -0.05477835204630918;  // std dev = 0.156, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2407297826361752;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.018480669038377282;  // std dev = 2.968, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | | else return -0.12586407417041323;  // std dev = 1.456, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.799', 'seconds']
Refined model CLL: -0.189024


******************************************
Best model found
******************************************
Results 

CLL : -0.192521 

AUC ROC : 0.987613 

AUC PR : 0.259454 

Precision : 0.180224 

Recall : 0.911348 

F1 : 0.300937 

Total Learning Time : 5.998 

Total Inference Time : 10.527941703796387 

Total revision time: 24.8244144153595
Best scored revision CLL: -0.189024


Results 

CLL : -0.192521 

AUC ROC : 0.987613 

AUC PR : 0.259454 

Precision : 0.180224 

Recall : 0.911348 

F1 : 0.300937 

Total Learning Time : 24.84697286605835 

Total Inference Time : 10.527941703796387 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.143
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09661047356104967;  // std dev = 4.859, 130.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=31 */
%   | | | else return 0.16220298915356557;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5766265412867967;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5131173733306547;  // std dev = 1.274, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6496515715128061;  // std dev = 3.808, 94.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=76 */
%   | | | else return -0.1579755713455056;  // std dev = 0.060, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | | else if ( location(A, I) )
%   | | | then return 0.11891977694583404;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5119479978385119;  // std dev = 0.926, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.6122962171758621;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06252235529849154;  // std dev = 4.490, 144.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6285032324030378;  // std dev = 2.122, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.1423664452229444;  // std dev = 6.66e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.31601792010146423;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1605227678346239;  // std dev = 1.522, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.304944940997605;  // std dev = 1.580, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else return 0.5049856328665259;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4969964263612609;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4226998054915242;  // std dev = 2.318, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | else return 0.045586602926620166;  // std dev = 5.200, 229.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5666536367406395;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09631099525826671;  // std dev = 1.653, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3698518232034713;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.30867975487509014;  // std dev = 0.950, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05145530834248158;  // std dev = 6.017, 294.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.425938218998986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03908032758142181;  // std dev = 1.701, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2940533227036098;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3276793549561189;  // std dev = 0.992, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3264290023214158;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.037860694785437354;  // std dev = 2.932, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.33155008568444005;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06572907642191968;  // std dev = 4.778, 165.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=51 */
%   | | | else return 0.14000423367007975;  // std dev = 2.084, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.3012593295566705;  // std dev = 0.425, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.25906960152897596;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2468797751809546;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4877632337454366;  // std dev = 1.723, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.1705771363509483;  // std dev = 0.570, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.27213119077880965;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06417487951617029;  // std dev = 4.459, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1827214643791589;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.06724620261067739;  // std dev = 1.125, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3988743097725733;  // std dev = 3.124, 94.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else return -0.14982382363900015;  // std dev = 0.448, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2125070028312217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05809536216128782;  // std dev = 1.398, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19211334867629765;  // std dev = 0.215, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.22835822795968835;  // std dev = 0.750, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.23308938046984595;  // std dev = 0.164, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05408536192575419;  // std dev = 2.082, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.13137471596182262;  // std dev = 0.889, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.06796093253702087;  // std dev = 1.602, 67.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.03991578555342453;  // std dev = 0.934, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05337657430301293;  // std dev = 3.722, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | | else return -0.03866916135858379;  // std dev = 1.496, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.016327270693517235;  // std dev = 0.875, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.20678699591020566;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.5146080603329397;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21232315767085352;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.011783565681623436;  // std dev = 2.565, 126.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.031049836988217932;  // std dev = 0.947, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.030126948862085084;  // std dev = 3.780, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   | | | else return -0.02950212200506251;  // std dev = 1.495, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.095', 'seconds']
Parameter learned model CLL:-0.199899 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.859, 99, 31], 'false,false,true,false': [5.596, 103, 45], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.291, 2, 10], 'false,true,true': [1.274, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.808, 18, 76], 'false,false,true,false': [0.06, 188, 0], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.926, 1, 11], 'true,false': [0.019, 0, 6], 'false,true,true': [4.49, 110, 34], 'false,true,false,true': [2.122, 5, 48], 'false,true,false,false': [6.66e-08, 84, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.522, 7, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.58, 3, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.115, 0, 3], 'false,true,true,false': [2.318, 9, 21], 'false,true,false': [5.2, 171, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.653, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.95, 1, 10], 'false,true': [6.017, 212, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.701, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.031, 0, 9], 'true,true,false': [0.992, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.932, 49, 19], 'false,false,true': [0.056, 0, 8], 'false,false,false,true': [4.778, 114, 51], 'false,false,false,false': [2.084, 15, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.425, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [5.27e-09, 0, 3], 'true,true,false,false': [1.723, 5, 33], 'true,false': [0.57, 101, 0], 'false,true': [0.035, 0, 5], 'false,false,true': [4.459, 104, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [7.45e-09, 0, 7], 'true,false': [1.125, 2, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.124, 12, 82], 'false,true,false': [0.448, 180, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.398, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.215, 0, 9], 'true,false,true': [0.75, 3, 2], 'true,false,false': [0.164, 0, 5], 'false,true,true': [2.082, 45, 13], 'false,true,false,true': [0.889, 3, 8], 'false,true,false,false': [1.602, 56, 11], 'false,false,true': [0.934, 1, 5], 'false,false,false,true': [3.722, 93, 47], 'false,false,false,false': [1.496, 13, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.875, 1, 7], 'true,true,true,false': [0.147, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.135, 0, 3], 'false,true': [2.565, 94, 32], 'false,false,true': [0.947, 1, 5], 'false,false,false,true': [3.78, 102, 47], 'false,false,false,false': [1.495, 13, 4]}]
{'': [0.09418282548476423, 0.20671366154677767], 'false': [0.10937499999999978, 0.19976218787158254], 'false,false': [0.19864396252781982, 0.22222222222222207], 'false,false,false': [0.22222222222222207, nan], 'false,false,true': [0.18159763313609584, 0.2116051862673495], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.18750000000000006, 0.0], 'true': [0.07100591715976314, 0.1388888888888887]}
{'': [0.09358225376367116, 0.200890206355325], 'false': [0.18039461476137303, 0.19675611307706165], 'false,false': [0.19638964051289998, 0.2040816326530614], 'false,false,false': [0.2040816326530614, nan], 'false,false,true': [0.1542899930110744, 1.8930303319994162e-05], 'false,true': [0.18039461476137303, nan], 'true': [-1.2688263138573217e-16, 0.1389621532369978]}
{'': [0.0499066579768722, 0.1616117088755289], 'false': [0.15865653650943268, 0.21990714104693299], 'false,false': [0.21990714104693299, nan], 'false,false,true': [0.25, 0.210715905626608], 'false,true': [0.13998635006894478, 0.1738168541373493], 'false,true,false': [0.08494860056520556, 5.2867763077388404e-17], 'true': [0.07147232438660045, 6.214840796451664e-05]}
{'': [0.1267102815774271, 0.1436637124501142], 'false': [0.14006072803926642, 0.2098627412771869], 'false,false': [0.0, 0.21020444332512433], 'false,false,false': [0.21020444332512433, nan], 'false,true': [0.16371291692350126, 0.1180924523279033], 'false,true,true': [0.004375498257226533, 0.17914484171079595], 'true': [0.13137842984554288, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.051052447263926645, 0.1265654710487027], 'false': [0.12313040123846453, 0.18955274396669802], 'false,false': [0.0, 0.19283590430497513], 'false,false,false': [0.19283590430497513, nan], 'true': [0.0, 0.0820851374942282], 'false,false,true': [nan, 0.0], 'true,true': [0.0, nan]}
{'': [0.05818584394419962, 0.13726771052999592], 'false': [0.12640007875977968, 0.14041135991082337], 'false,false': [0.00039364954268970853, 0.14365793097888044], 'false,false,false': [0.1383727643032697, 0.17374912665686135], 'true': [0.06180410465193992, 0.0], 'true,true': [0.00010812976153049301, 0.14049147653927047], 'true,false': [nan, 0.0]}
{'': [0.10614836717610841, 0.1288289285635665], 'false': [0.00024326317727680903, 0.13170064784183377], 'false,false': [0.13170064784183377, nan], 'true': [0.0640784302307406, 0.0032139411274182197], 'true,true': [0.01139569914250052, 0.07638001655717964], 'true,true,false': [9.25185853854297e-18, 0.07816429781969221], 'true,true,true': [0.012044164096726595, 0.0]}
{'': [0.06966164900585561, 0.10642175824490481], 'false': [0.1042130957110205, 0.1520228022042049], 'false,false': [0.0, 0.16285729561037218], 'false,false,false': [0.16285729561037218, nan], 'false,true': [0.10384917764948444, 0.0011164764401933357], 'false,true,true': [nan, 0.10384917764948456], 'true': [7.93016446160826e-18, 0.10538488710680671], 'false,false,true': [0.0, nan]}
{'': [0.07046493324533809, 0.08612078235989926], 'false': [0.05935457973932226, 0.10483409189810158], 'false,false': [0.1453762204612836, 0.10328426179947864], 'false,false,false': [0.09893022187336967, 0.13158603925792076], 'true': [0.0051290923109119525, 0.11221256091530414], 'true,false': [0.11259303122273841, 0.005365142945201462], 'false,true': [0.07470339852880796, 0.04785492702056692], 'false,true,false': [0.07178162455839054, 0.0383230515997132]}
{'': [0.07442451205686886, 0.08102460800575546], 'false': [0.05219962857210543, 0.10159111125027798], 'false,false': [0.1493489415644681, 0.09986320088270126], 'false,false,false': [0.09588800551573233, 0.13151312338956145], 'true': [0.08407785367131385, 0.0060832825868904665], 'true,true': [0.06506802198394711, 0.0], 'true,true,true': [0.09563442085160413, 0.0035843052482426494], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true


Refining candidate
***************************
Model training time 6.82
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return 0.1145591915097676;  // std dev = 4.723, 117.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=30 */
%   | | | else return -0.0793510649004878;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.20297652130640803;  // std dev = 5.119, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | | else return 0.10814893509951237;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.2194734122109545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7480325422264149;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7325930625620788;  // std dev = 2.817, 85.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=76 */
%   | | | else return -0.1601431658448693;  // std dev = 0.122, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.17695697377003258;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.17695697377003258;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4501032788515478;  // std dev = 0.307, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13639222322812208;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.09515730929320874;  // std dev = 4.216, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5649036064806267;  // std dev = 2.614, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.1420408867351258;  // std dev = 0.065, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8188364025289147;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18116359747108532;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.018836402528914657;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07999927646580922;  // std dev = 0.574, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.38448982843509755;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.44331335784686243;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B), interaction(G, H) )
%   | | | then return 0.6243398214421628;  // std dev = 0.983, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.031125490417246673;  // std dev = 2.559, 90.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=14 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.015976613808158457;  // std dev = 2.725, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | | else return 0.08927141211687047;  // std dev = 3.665, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5284241323803731;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.13372001875982073;  // std dev = 1.057, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.024768466966254794;  // std dev = 1.028, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.35155398856694414;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3502250131050372;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5391220479445257;  // std dev = 0.392, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.13889716555147522;  // std dev = 0.358, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( location(A, I), phenotype(A, J) )
%   | | | then return 0.09028542866710769;  // std dev = 3.641, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
%   | | | else return 0.0380298459378173;  // std dev = 3.110, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3978084715288933;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.1419562328290062;  // std dev = 1.375, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.16831362701410665;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.276124124654773;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.02335660772121942;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2807864005002546;  // std dev = 0.282, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.13368585854822784;  // std dev = 0.624, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.03686472847504479;  // std dev = 0.296, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else return -0.04174407123331314;  // std dev = 0.275, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.27493876669725353;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.07055923505406249;  // std dev = 3.901, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
%   | | | else return 0.013439312216767004;  // std dev = 2.950, 95.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.27868874509133557;  // std dev = 0.079, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.22489249734300687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4734696709715679;  // std dev = 1.090, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1652155512628358;  // std dev = 0.105, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.22287495371605276;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.013638656316554618;  // std dev = 3.972, 144.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=38 */
%   | | | else return 0.15855918711490039;  // std dev = 0.973, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( location(A, J) )
%   | | | then return 0.06290203713372718;  // std dev = 0.947, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.20986635060619518;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.17967037591091595;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14022823881521396;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.19380768204553767;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G), complex(A, H) )
%   | | | then return 0.17512097461527631;  // std dev = 1.915, 32.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | | else return 0.3817811179242401;  // std dev = 2.823, 66.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=56 */
%   | | else return -0.14063717475829754;  // std dev = 0.036, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2773958039331669;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.13470996040518715;  // std dev = 1.071, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.12811645465755248;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19563358682937826;  // std dev = 0.058, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.07467429820291971;  // std dev = 0.864, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( phenotype(E, F) )
%   | | then if ( enzyme(A, G), complex(E, H) )
%   | | | then return -0.08319090604967883;  // std dev = 0.887, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.015785426474366298;  // std dev = 1.381, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else return 0.062404605355981815;  // std dev = 0.410, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.30920396238148756;  // std dev = 2.285, 60.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=53 */
%   | | | else return -0.12889498047140124;  // std dev = 0.276, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.08749544574129517;  // std dev = 0.782, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.008930139506767203;  // std dev = 1.850, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.025778915019768936;  // std dev = 0.908, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19117131783706323;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.48683645662575237;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.23559270095755444;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(A, H), interaction(F, H) )
%   | | then return -0.050595717932836674;  // std dev = 0.233, 96.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=23 */
%   | | else return 0.00966731512599248;  // std dev = 0.267, 148.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=49 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then return 0.1444137605073254;  // std dev = 0.495, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return -0.007274397594577629;  // std dev = 0.873, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.06397279776487731;  // std dev = 1.533, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.334', 'seconds']
Refined model CLL: -0.180075


******************************************
Best model found
******************************************
Results 

CLL : -0.154386 

AUC ROC : 0.990121 

AUC PR : 0.395209 

Precision : 0.282396 

Recall : 0.871698 

F1 : 0.426593 

Total Learning Time : 6.82 

Total Inference Time : 10.033061981201172 

Total revision time: 26.01400989341736
Best scored revision CLL: -0.180075


Results 

CLL : -0.154386 

AUC ROC : 0.990121 

AUC PR : 0.395209 

Precision : 0.282396 

Recall : 0.871698 

F1 : 0.426593 

Total Learning Time : 26.036568344116212 

Total Inference Time : 10.033061981201172 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.463
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09344305274657119;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.15544623239680855;  // std dev = 5.560, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12957750652808375;  // std dev = 3.721, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7373269569258907;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8206841830368982;  // std dev = 0.984, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16029005757756457;  // std dev = 0.036, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1113693235926512;  // std dev = 3.625, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.1273464280876388;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462844;  // std dev = 2.11e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.048135124007325725;  // std dev = 2.108, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6856036912490172;  // std dev = 0.240, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14126245154046838;  // std dev = 8.43e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1885854908686695;  // std dev = 0.512, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1548477486356812;  // std dev = 3.611, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2909203092830148;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5047299630787;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4068557584581002;  // std dev = 0.645, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.05278292110641444;  // std dev = 4.220, 193.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5039845699236548;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5124165365403841;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.14520326819581092;  // std dev = 3.434, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0.20030925337950997;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207118471601496;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.060302515514291076;  // std dev = 4.219, 191.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return -0.11753764832324709;  // std dev = 0.704, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.3863359793122756;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08450037632924462;  // std dev = 3.627, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.709788725146232;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.35947705699304344;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.40841820299330267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2551722425694892;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.2030149887401344;  // std dev = 0.711, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07786720654679949;  // std dev = 1.028, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.11231509971234653;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06037677331758382;  // std dev = 3.949, 164.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=49 */
%   | | | else return 0.09616149681450714;  // std dev = 3.641, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2336685632018016;  // std dev = 0.117, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3292144933334607;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23441820948012582;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6355883985357317;  // std dev = 0.741, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19358518325100751;  // std dev = 0.642, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23441820948012584;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.039390664316249414;  // std dev = 3.412, 126.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17363875198449275;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1896473494829613;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4446177982172529;  // std dev = 0.779, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13975983040181802;  // std dev = 0.230, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2610239133831774;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0180058968841908;  // std dev = 3.134, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15723335438103953;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.17024731955568373;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17568887228030636;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07250304126164173;  // std dev = 0.437, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.08444310467830125;  // std dev = 0.305, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03189946355274592;  // std dev = 1.260, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1669228015028663;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.005191656484413628;  // std dev = 2.818, 133.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=36 */
%   | | | else return 0.07998511242425169;  // std dev = 2.912, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1307761358807149;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1725391366067969;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1311387950900611;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13970438886386455;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.014873779458021538;  // std dev = 1.522, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14498141105765738;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.011433544471285197;  // std dev = 2.792, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | | else return 0.058485734702094644;  // std dev = 2.906, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.413', 'seconds']
Parameter learned model CLL:-0.181284 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.473, 26, 8], 'false,false,true,false': [5.56, 104, 44], 'false,false,false,true': [3.721, 51, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.08, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.984, 1, 52], 'false,false,true,false': [0.036, 127, 0], 'false,false,false,true': [3.625, 48, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [2.11e-08, 0, 8], 'false,true,true': [2.108, 29, 8], 'false,true,false,true': [0.24, 0, 48], 'false,true,false,false': [8.43e-08, 104, 0], 'false,false,true,true': [0.512, 1, 1], 'false,false,true,false': [3.611, 40, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.645, 1, 3], 'false,true,false': [4.22, 141, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.434, 34, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.219, 135, 56], 'false,false,true,true': [0.704, 1, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.627, 43, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.009, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.711, 1, 1], 'false,true': [1.028, 24, 3], 'false,false,true': [0.926, 1, 6], 'false,false,false,true': [3.949, 115, 49], 'false,false,false,false': [3.641, 38, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.117, 0, 12], 'true,true,true,false': [0.021, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.741, 0, 36], 'true,false': [0.642, 109, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.412, 90, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.026, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.779, 0, 56], 'false,true,false': [0.23, 138, 0], 'false,false,true,true': [0.018, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.134, 45, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.05, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.059, 0, 4], 'false,true,true': [0.437, 12, 1], 'false,true,false,true': [0.305, 1, 2], 'false,true,false,false': [1.26, 54, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.818, 97, 36], 'false,false,false,false': [2.912, 33, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.002, 0, 5], 'true,true,true,false': [0.038, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.015, 0, 4], 'false,true': [1.522, 47, 17], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.792, 89, 36], 'false,false,false,false': [2.906, 34, 20]}]
{'': [-2.5376526277146434e-16, 0.20953890870656688], 'false': [0.12244897959183662, 0.2031124062248138], 'false,false': [0.20408163265306198, 0.20061728395061681], 'false,false,true': [0.179930795847751, 0.2089116143170207], 'false,false,false': [0.1977551020408158, 0.25], 'false,true': [0.25, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [3.1720657846433045e-16, 0.20743514520900677], 'false': [0.0011067675655841065, 0.2036993287883327], 'false,false': [0.20530194414400818, 0.1995733994335924], 'false,false,true': [0.018263485125300054, 1.0395051099660686e-05], 'false,false,false': [0.19907077574530171, 0.20408163265306126], 'false,true': [0.0012749962355528943, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-1.9032394707859825e-16, 0.16239983199311905], 'false': [0.1434374954669662, 0.21619201225103604], 'false,false': [0.2145320336644679, 0.24999999999999997], 'false,false,false': [0.24999999999999997, nan], 'false,false,true': [0.13131059918927596, 0.21726936421414705], 'false,true': [0.12013005218889312, 0.1481040934854732], 'false,true,false': [0.0011963468167899283, 6.832141690000964e-17], 'true': [-1.1102230246251565e-16, 5.551115123125783e-17]}
{'': [1.2688263138573217e-16, 0.12690639050914257], 'false': [0.09550257347298576, 0.2245973856191021], 'false,false': [1.7774515256363532e-05, 0.2281288621357924], 'false,false,false': [0.22672103204534158, 0.23999999999999994], 'false,true': [0.08472301870800411, 0.09225626615886622], 'false,true,true': [0.0, 0.10398790139898215], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, 3.700743415417188e-17]}
{'': [0.0, 0.12476850660954714], 'false': [0.09319814610703753, 0.2153643358337243], 'false,false': [0.2216837578890116, 0.21497538953000264], 'false,false,true': [0.24789609262465692, 0.0], 'false,false,false': [0.2122366151705764, 0.0], 'true': [0.0, -3.700743415417188e-17], 'true,true': [0.0, nan]}
{'': [0.06561839256001469, 0.12252920806976152], 'false': [0.039168742084084926, 0.13001952204967046], 'false,false': [0.12244897959183679, 0.13020278805107793], 'false,false,false': [0.09509506180937904, 0.2285269212687626], 'true': [0.0025250301564124777, 0.2007653600817102], 'true,false': [0.005871081096554251, 0.2526486578930141], 'true,false,true': [0.0, 0.0], 'true,true': [2.3790493384824782e-17, 2.0518367995575604e-05]}
{'': [0.12714575920261897, 0.09025008791808406], 'true': [0.04279396910437669, 0.003786166119002582], 'false': [-1.1102230246251566e-17, 0.09237969468299237], 'false,false': [0.09237969468299237, nan], 'true,true': [0.0021331952260826453, 0.019074689282577495], 'true,true,false': [0.0, 0.015254879044083994], 'true,true,true': [0.0011487464682089592, 0.00021500940356138087]}
{'': [0.00011157559460917803, 0.09272956584593578], 'false': [0.07352372406123417, 0.14833051936504282], 'false,false': [0.00016400099936259016, 0.1511265710611158], 'false,false,false': [0.1511265710611158, nan], 'false,true': [0.010845092836526047, 0.00038201589118819614], 'false,true,true': [nan, 0.01084509283652608], 'false,false,true': [0.00016400099936259016, nan], 'true': [0.0, 8.542506462265453e-05]}
{'': [0.0004953621438460176, 0.06874877720311272], 'false': [0.02301927917839864, 0.08760089515858749], 'false,false': [0.0, 0.08943959289681618], 'false,false,false': [0.059724752067107416, 0.16000696925042182], 'false,true': [0.014673041148165287, 0.02422679364055418], 'false,true,false': [0.031006800170203866, 0.023355749232918534], 'true': [0.0002777745343939511, 0.0006931213393169822], 'true,false': [0.0, 0.0008604795749352599]}
{'': [0.0003828353142864084, 0.07581429238900146], 'false': [0.03617480343851463, 0.08910809891022935], 'false,false': [0.0, 0.09121005351713565], 'false,false,false': [0.06236498788226688, 0.15643501322052422], 'true': [0.0005092078712203629, 5.726660443125531e-05], 'true,true': [0.000589701226249701, 0.0], 'true,true,true': [5.260868084916437e-07, 0.00048156714845585164], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.48
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.038402789038418816;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.09029179224236951;  // std dev = 3.159, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.17913658942049895;  // std dev = 5.942, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8394917088864842;  // std dev = 0.055, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15738893460636738;  // std dev = 0.140, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.24834747370471766;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.14126583144887236;  // std dev = 2.761, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5668083122959419;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11964547257887956;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.12937026832816487;  // std dev = 1.945, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6442784716784066;  // std dev = 1.387, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return -0.1386579178184616;  // std dev = 0.079, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), interaction(I, H) )
%   | | | then return 0.10993502362151765;  // std dev = 2.299, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.2977863369049621;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.10806461039569014;  // std dev = 2.591, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.039361496195887295;  // std dev = 1.300, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4147336199496291;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4697283379186154;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.436535617903441;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.32238585810458215;  // std dev = 0.839, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.009132284816669847;  // std dev = 1.803, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.08567539669447058;  // std dev = 3.722, 143.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=46 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5695571193343365;  // std dev = 0.000229, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.07927948220450148;  // std dev = 3.151, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.2537635036034111;  // std dev = 1.794, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3314736252502651;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.3359632868759383;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.31882773765799843;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10673163267062266;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.16285836175875978;  // std dev = 1.688, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.0443593774176573;  // std dev = 3.884, 174.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4281232060756112;  // std dev = 0.000229, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.06131167395192262;  // std dev = 3.661, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return -0.015471629087888428;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25519912717811405;  // std dev = 0.184, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, E) )
%   | | then if ( phenotype(D, F), enzyme(A, G) )
%   | | | then return 0.05604299381005817;  // std dev = 0.972, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.07090802745049009;  // std dev = 1.262, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.009420862438418243;  // std dev = 1.409, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.09754817336614252;  // std dev = 1.626, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.11982428517291493;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.06784780762625414;  // std dev = 2.389, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.1804835478211641;  // std dev = 2.302, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.06787439125937429;  // std dev = 3.412, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25186047678952433;  // std dev = 0.051, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2488886262931317;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6184755693772718;  // std dev = 1.108, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.18304261725279408;  // std dev = 0.091, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.24884725473438465;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5059358780421582;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.15957027449857136;  // std dev = 0.048, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.006013205507466894;  // std dev = 1.542, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.05301100171538115;  // std dev = 2.611, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16889619008271606;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20165259859953322;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35087153059406984;  // std dev = 0.249, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4731501501294935;  // std dev = 0.353, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.0925148414438781;  // std dev = 0.092, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.15188974608358027;  // std dev = 0.301, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.22711124026596147;  // std dev = 0.000232, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.020942144644189236;  // std dev = 2.087, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.14361647331902877;  // std dev = 2.051, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16355836266067003;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.16123636076426387;  // std dev = 0.467, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.07406513136670842;  // std dev = 0.514, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), phenotype(J, K) )
%   | | | then return -0.004916315727680949;  // std dev = 0.831, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.10339011345319396;  // std dev = 0.696, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return -0.022044617204628227;  // std dev = 0.152, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.17448032129818575;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.020054683879702412;  // std dev = 2.486, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return -0.0018059775222707324;  // std dev = 3.151, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1460887810155048;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1808450981341502;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(A, I), complex(H, J) )
%   | | | then return -0.03796992024825672;  // std dev = 0.956, 48.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | | else return -0.007304823084544573;  // std dev = 0.905, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.05185809217383734;  // std dev = 0.425, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.02067493610528774;  // std dev = 0.297, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1508004949748003;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.014503214721893046;  // std dev = 2.497, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | | | else return 0.04310114035847113;  // std dev = 2.984, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '42.932', 'seconds']
Refined model CLL: -0.179568


******************************************
Best model found
******************************************
Results 

CLL : -0.19358 

AUC ROC : 0.984023 

AUC PR : 0.256892 

Precision : 0.14487 

Recall : 0.927798 

F1 : 0.250609 

Total Learning Time : 3.48 

Total Inference Time : 2.862813711166382 

Total revision time: 10.788459222793579
Best scored revision CLL: -0.179568


Results 

CLL : -0.19358 

AUC ROC : 0.984023 

AUC PR : 0.256892 

Precision : 0.14487 

Recall : 0.927798 

F1 : 0.250609 

Total Learning Time : 10.811017673492431 

Total Inference Time : 2.862813711166382 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.486
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07848791815035983;  // std dev = 3.184, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return 0.16523554927274012;  // std dev = 5.198, 127.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13939893509951237;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.748592982892723;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.839696831747283;  // std dev = 0.036, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15814650130849742;  // std dev = 0.068, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else if ( location(A, I) )
%   | | | then return 0.09777230596701597;  // std dev = 2.853, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.06954674027598451;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5734183503905235;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5880862353656813;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06831862974094667;  // std dev = 2.714, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6563450161213505;  // std dev = 1.004, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14271620293857096;  // std dev = 7.60e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6458305867711185;  // std dev = 0.222, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09957227713856055;  // std dev = 2.509, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.18073286750390782;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3735143014596193;  // std dev = 0.941, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5384387597486842;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5873681316192201;  // std dev = 0.183, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.03533772469664208;  // std dev = 4.339, 196.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.3956907892903462;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5306628176647564;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06882606122127448;  // std dev = 2.824, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.11287544699279857;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.339745373792381;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.35459647518786747;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.04764237231519922;  // std dev = 4.394, 203.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3059454538783247;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.35268571565805956;  // std dev = 0.066, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05555244894343772;  // std dev = 2.558, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.36183624603036985;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2678008929353975;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3785856156141729;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.24506851407979657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.277526408086987;  // std dev = 0.058, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.05934524583222971;  // std dev = 1.197, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2813937560784149;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.044817416293001795;  // std dev = 4.009, 169.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=46 */
%   | | | else return 0.04011542483821498;  // std dev = 3.061, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24195652289146852;  // std dev = 0.127, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.21807257865938398;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.232208396070367;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5913239387609314;  // std dev = 0.792, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1834853103328158;  // std dev = 0.910, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24059302993952156;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08339623448270005;  // std dev = 3.213, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18058411836294685;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.193623386303973;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4287713358780413;  // std dev = 1.312, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.13954941903043475;  // std dev = 0.225, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.07151186343597271;  // std dev = 0.884, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.02553207356750388;  // std dev = 2.460, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15957709569873066;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.15544614801637657;  // std dev = 0.482, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.17965153213134782;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.1079403283668626;  // std dev = 0.384, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.22540912931470292;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.019620885588521063;  // std dev = 1.482, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17028001640637222;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03162600661764827;  // std dev = 2.775, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | | else return 0.002627925718799961;  // std dev = 2.536, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13557304183270968;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1543536722997657;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12848954723051886;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15250355707970653;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1656533406389055;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03630566518229946;  // std dev = 1.784, 106.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.24204938805289072;  // std dev = 1.068, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01675916145509145;  // std dev = 2.822, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return 9.049405689958984E-4;  // std dev = 2.508, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.855', 'seconds']
Parameter learned model CLL:-0.173848 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.184, 46, 13], 'false,false,true,false': [5.198, 88, 39], 'false,false,false,true': [2.543, 23, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.042, 0, 7], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.036, 0, 52], 'false,false,true,false': [0.068, 144, 0], 'false,false,false,true': [2.853, 31, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.038, 0, 11], 'true,false': [0.042, 0, 4], 'false,true,true': [2.714, 43, 14], 'false,true,false,true': [1.004, 1, 42], 'false,true,false,false': [7.6e-08, 77, 0], 'false,false,true,true': [0.222, 0, 3], 'false,false,true,false': [2.509, 22, 9], 'false,false,false,true': [1.37, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.941, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.183, 0, 6], 'false,true,false': [4.339, 147, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.824, 30, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.003, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.049, 0, 6], 'false,true': [4.394, 147, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.066, 0, 2], 'false,false,false,true': [2.558, 26, 9], 'false,false,false,false': [1.094, 2, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.005, 0, 9], 'true,true,false': [0.017, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.058, 0, 2], 'false,true': [1.197, 27, 5], 'false,false,true': [0.039, 0, 5], 'false,false,false,true': [4.009, 123, 46], 'false,false,false,false': [3.061, 39, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.127, 0, 13], 'true,true,true,false': [0.054, 0, 3], 'true,true,false,true': [0.055, 0, 3], 'true,true,false,false': [0.792, 0, 33], 'true,false': [0.91, 118, 0], 'false,true': [0.002, 0, 3], 'false,false,true': [3.213, 62, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.053, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.312, 1, 56], 'false,true,false': [0.225, 122, 0], 'false,false,true,true': [0.884, 1, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.46, 32, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.027, 0, 10], 'true,false,true': [0.482, 1, 1], 'true,false,false': [0.064, 0, 5], 'false,true,true': [0.384, 25, 1], 'false,true,false,true': [0.154, 0, 6], 'false,true,false,false': [1.482, 51, 17], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [2.775, 66, 31], 'false,false,false,false': [2.536, 33, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.005, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.814, 1, 2], 'true,false': [0.046, 0, 3], 'false,true': [1.784, 82, 24], 'false,false,true': [1.068, 2, 3], 'false,false,false,true': [2.822, 69, 31], 'false,false,false,false': [2.508, 35, 12]}]
{'': [0.10380622837370206, 0.21237737812128452], 'false': [-2.5376526277146434e-16, 0.20353580246913708], 'false,false': [0.20141056769568813, 0.21301775147928945], 'false,false,false': [0.2021484375000001, 0.24489795918367335], 'false,false,true': [0.1717897155989653, 0.21278442556885163], 'true': [0.07100591715976314, 0.18750000000000006], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.000167321612021946, 0.1988490290773585], 'false': [-6.344131569286608e-17, 0.19396705711576956], 'false,false': [0.19410944248053838, 0.1932575101805989], 'false,false,true': [2.480646564510909e-05, 3.255848615797542e-05], 'false,false,false': [0.19373656773928888, 0.18750000000000006], 'true': [-2.220446049250313e-16, 0.00025610450819689234], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.0002533606516578265, 0.16117933468467877], 'false': [0.14808240103027068, 0.21540131150672695], 'false,false': [0.21066442805090568, 0.23465355975775148], 'false,false,false': [0.23465355975775148, nan], 'false,false,true': [0.016367524879431345, 0.20313810644286662], 'false,true': [0.12923447343596664, 0.15520942671873253], 'false,true,false': [0.02343916911659737, 7.497610036429629e-17], 'true': [0.00012853581483553776, 0.0004388545965131607]}
{'': [0.055395022227166746, 0.11991091330616584], 'false': [0.10281477817152627, 0.19237060456874772], 'false,false': [0.00404832187633386, 0.19652660115244763], 'false,false,false': [0.194514137276177, 0.22222222222222224], 'false,true': [0.0050619925233780705, 0.09606218553600318], 'true': [0.055395022227166746, nan], 'false,true,true': [0.0, 0.005563646025134557], 'false,false,true': [0.0, 0.0]}
{'': [0.00021115084749010471, 0.1129107652977754], 'false': [0.09512288365577162, 0.1935934201474296], 'false,false': [0.0019419129522116885, 0.20383850345164087], 'false,false,false': [0.187011953319278, 0.23954081056493876], 'false,false,true': [0.0, 0.0021846520712381357], 'true': [9.512706985336116e-07, 0.00039411708508213517], 'true,true': [9.512706985336116e-07, nan]}
{'': [0.0025874565949530887, 0.10609543374465627], 'false': [0.04480593561332205, 0.11328688200789139], 'false,false': [0.00030663465600426764, 0.11458697201882197], 'false,false,false': [0.09508712095075153, 0.17674891189084396], 'true': [0.002639821234637292, 0.0013548873767086727], 'true,true': [3.097606586689573e-06, 7.558070458815735e-05], 'true,false': [0.0, 0.0016811594372690142], 'true,false,true': [0.0, nan]}
{'': [0.10601780642945864, 0.10830348027783561], 'false': [1.6000445611508152e-06, 0.11102487580193449], 'false,false': [0.11102487580193449, nan], 'true': [0.04170073823357086, 0.007021183785095989], 'true,true': [0.0012787539120825211, 0.0273818332432616], 'true,true,false': [0.0010233493411092958, 0.01903106130238654], 'true,true,true': [0.0012430538743828635, 0.0009699693068815259]}
{'': [0.00022733474973954209, 0.0934394445619456], 'false': [0.08000477223175806, 0.14308616297064788], 'false,false': [0.19542276640461095, 0.13754349612210212], 'false,false,true': [0.19542276640461095, nan], 'false,false,false': [0.13754349612210212, nan], 'false,true': [0.030216860858780604, 0.00041525701156599625], 'false,true,true': [nan, 0.030216860858780604], 'true': [0.0, 0.00039646722113219546]}
{'': [0.024759477166459026, 0.07066290750226953], 'false': [0.02922783571757305, 0.09807590001422091], 'false,false': [9.574246686202177e-07, 0.09969567729772656], 'false,false,false': [0.07939202581503785, 0.1428869161655383], 'false,true': [0.005671113827702647, 0.034461385329677255], 'false,true,false': [0.003949081676782725, 0.032285562967767], 'true': [7.290156184492358e-05, 0.056658008106301325], 'true,false': [0.11605735711928274, 0.0008152812895697303]}
{'': [0.05200858110199405, 0.07362456982110874], 'false': [0.030039784132513254, 0.10337334167215075], 'false,false': [0.22796881463668878, 0.09701751421729465], 'false,false,false': [0.0796460757731149, 0.1338070308515237], 'true': [0.0615811392890124, 0.0007201962081346593], 'true,true': [5.8524334465120954e-05, 0.18031648524191948], 'true,true,false': [0.0, 0.220682699155085], 'true,true,true': [0.0, 1.0452007733519758e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 3.163
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.2232283001788766;  // std dev = 3.821, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | | else return 0.13634442382131537;  // std dev = 5.168, 133.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.7641072739982947;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5141072739982948;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8176211599133337;  // std dev = 0.987, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16018189991766632;  // std dev = 0.133, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.039769607767884164;  // std dev = 1.996, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.22495761096547864;  // std dev = 2.073, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5699288238094847;  // std dev = 0.102, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.03218717037204653;  // std dev = 1.483, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | | else return 0.09730669388285239;  // std dev = 2.245, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6208417518541489;  // std dev = 1.692, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.1424482593215271;  // std dev = 0.042, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6424289605166794;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.03682545316947518;  // std dev = 2.329, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.2701831463017306;  // std dev = 1.662, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.42591553133702714;  // std dev = 0.028, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5522908387293037;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.48213467303021845;  // std dev = 0.850, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, G), interaction(A, H) )
%   | | | then return 0.004534913940758947;  // std dev = 2.471, 87.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=17 */
%   | | | else return 0.12345856219729211;  // std dev = 3.295, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.44653390315338104;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5708487409056213;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.013434674934606391;  // std dev = 2.184, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.28284296491141886;  // std dev = 1.734, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3326140051390955;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17467511331249136;  // std dev = 0.351, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5426159608861287;  // std dev = 0.299, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.13878807964362488;  // std dev = 0.115, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.053262151901008234;  // std dev = 1.833, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.10163474288315238;  // std dev = 3.170, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.37000974116052654;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.2832023577604385;  // std dev = 1.408, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.15061848588989443;  // std dev = 2.209, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.2625936004804256;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.027075075137721782;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3845954571373307;  // std dev = 0.207, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, H), interaction(H, C) )
%   | | then return 0.2628459423205567;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.01789043409416317;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, I), interaction(I, A) )
%   | then return -0.059403325075123595;  // std dev = 0.211, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.28161100675587836;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return 0.010093641205893962;  // std dev = 2.613, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return 0.08304333865648565;  // std dev = 3.964, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25725602230012123;  // std dev = 0.067, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.23914384955578696;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5000144463700353;  // std dev = 1.841, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1797472646532601;  // std dev = 0.081, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2279308647808984;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.47851439193827333;  // std dev = 0.281, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1599370127443466;  // std dev = 0.133, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.08920587512617585;  // std dev = 1.224, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.008995057145017995;  // std dev = 2.016, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19115166177354156;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.3480407167664167;  // std dev = 1.117, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | | else return 0.4073967187758652;  // std dev = 0.463, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( complex(A, G), location(A, H) )
%   | | | then return -0.10481178674310083;  // std dev = 0.194, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.1407292621194262;  // std dev = 0.268, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), enzyme(K, L) )
%   | | | then return -0.05476058944969993;  // std dev = 1.219, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.051211043825345456;  // std dev = 1.681, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.06568981828681583;  // std dev = 0.995, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.17984874585723765;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15989276923998416;  // std dev = 0.032, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.22239344567632938;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.19469257890253303;  // std dev = 0.801, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return -0.10271608047009004;  // std dev = 0.067, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.038605160069631654;  // std dev = 1.146, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return -0.07545616080849694;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.08724900901722343;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.10744981347203514;  // std dev = 0.765, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.005074033895846296;  // std dev = 3.316, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1397034339326883;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( location(C, E), interaction(D, C) )
%   | | | then return -0.33355238058580466;  // std dev = 0.659, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.16503494949883024;  // std dev = 0.079, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.21977034343349025;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, F), phenotype(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.3325978599146835;  // std dev = 0.142, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.1670347255355882;  // std dev = 0.082, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( complex(A, I) )
%   | | then return -0.013448681209770054;  // std dev = 0.220, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.07377852574022652;  // std dev = 1.365, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | | else return 0.010275521769708165;  // std dev = 2.187, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '55.899', 'seconds']
Refined model CLL: -0.173658


******************************************
Best model found
******************************************
Results 

CLL : -0.184745 

AUC ROC : 0.986743 

AUC PR : 0.271845 

Precision : 0.157797 

Recall : 0.90106 

F1 : 0.268562 

Total Learning Time : 3.163 

Total Inference Time : 3.5575814247131348 

Total revision time: 11.310282539367675
Best scored revision CLL: -0.173658


Results 

CLL : -0.184745 

AUC ROC : 0.986743 

AUC PR : 0.271845 

Precision : 0.157797 

Recall : 0.90106 

F1 : 0.268562 

Total Learning Time : 11.332840990066527 

Total Inference Time : 3.5575814247131348 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.169
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.19488362897706196;  // std dev = 4.678, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | | | else return 0.19148226843284444;  // std dev = 4.899, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.001006077956655051;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6642913231564825;  // std dev = 3.412, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | | else return -0.16704729370187577;  // std dev = 0.003, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( location(A, K) )
%   | | | then return 0.10640361254581364;  // std dev = 1.717, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0927000586848929;  // std dev = 4.337, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.618377309325372;  // std dev = 1.898, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.14485162796904538;  // std dev = 2.58e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14108200653818112;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.23182192563216733;  // std dev = 1.206, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3266044932492189;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46468204486028547;  // std dev = 1.808, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return 0.04219417381768963;  // std dev = 5.117, 223.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.49763894931366903;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1046304388571535;  // std dev = 1.668, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3379568199462728;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.004144459591102749;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07815093946013933;  // std dev = 5.405, 227.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3758775348405994;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10002700041734776;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.004868704415871322;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27949153223918716;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3759829942600337;  // std dev = 0.177, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.29256461321367555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.0295215744823256;  // std dev = 2.253, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.33990048129094946;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.051456927702466515;  // std dev = 4.866, 189.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=55 */
%   | | | else return 0.0337650677340953;  // std dev = 1.906, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24763430139750825;  // std dev = 0.195, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.23585770017844454;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5961002806386823;  // std dev = 0.434, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.18519171736689405;  // std dev = 0.514, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26822670586639213;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07822620978516137;  // std dev = 3.998, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17877399654150916;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2085627255265739;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34833383407415963;  // std dev = 3.273, 85.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=71 */
%   | | else return -0.1624766908424196;  // std dev = 0.300, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1960160014880944;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.058164908154967894;  // std dev = 1.411, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16602947966098244;  // std dev = 0.120, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.6147662322226248;  // std dev = 0.277, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.18301161271417954;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0356469741627212;  // std dev = 1.422, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.0904386430889123;  // std dev = 0.351, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.026199663977117503;  // std dev = 1.674, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18536283403998932;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0269123895809603;  // std dev = 3.560, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | | else return -0.01716721446088589;  // std dev = 1.472, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13028730688249174;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2087698410896655;  // std dev = 0.641, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15724093427057592;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.01154214663609146;  // std dev = 2.179, 96.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1589862239679113;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.01964388555645089;  // std dev = 3.532, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | | | else return 0.048789162100764935;  // std dev = 1.411, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.930', 'seconds']
Parameter learned model CLL:-0.198472 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.678, 65, 33], 'false,false,true,false': [4.899, 72, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.309, 12, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,true': [3.412, 14, 69], 'false,false,true,false': [0.003, 161, 0], 'false,false,false,true': [1.717, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.337, 82, 34], 'false,true,false,true': [1.898, 4, 37], 'false,true,false,false': [2.58e-08, 72, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.206, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.953, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.808, 4, 14], 'false,true,false': [5.117, 166, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.668, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.019, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.166, 2, 4], 'false,true': [5.405, 156, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.065, 0, 7], 'true,true,false': [0.177, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.253, 30, 12], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [4.866, 134, 55], 'false,false,false,false': [1.906, 18, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.195, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.434, 0, 33], 'true,false': [0.514, 103, 0], 'false,true': [5.27e-09, 0, 3], 'false,false,true': [3.998, 78, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.063, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.273, 14, 71], 'false,true,false': [0.3, 184, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.411, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.12, 0, 8], 'true,false,true': [0.277, 2, 0], 'true,false,false': [0.022, 0, 3], 'false,true,true': [1.422, 40, 11], 'false,true,false,true': [0.351, 1, 1], 'false,true,false,false': [1.674, 35, 17], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [3.56, 92, 40], 'false,false,false,false': [1.472, 14, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.021, 0, 7], 'true,true,true,false': [0.641, 1, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.019, 0, 3], 'false,true': [2.179, 67, 29], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [3.532, 94, 40], 'false,false,false,false': [1.411, 9, 4]}]
{'': [-1.6148698540002277e-16, 0.2222222222222223], 'false': [1.4802973661668753e-16, 0.2191802469135816], 'false,false': [0.22275897822603463, 0.16620498614958432], 'false,false,true': [0.22334443981674446, 0.22222222222222343], 'false,false,false': [0.24000000000000005, 0.12244897959183677], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [2.4223047810003414e-16, 0.20411878210157713], 'false': [0.1875, 0.20246658491132027], 'false,false': [0.20283091868510875, 0.1964578965635281], 'false,false,true': [0.1402454456357716, 5.5726938210984995e-08], 'false,false,false': [0.1964578965635281, nan], 'false,true': [0.0, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [0.0, nan]}
{'': [-2.0185873175002846e-16, 0.16779891085449827], 'false': [0.16470504063669897, 0.2165689115446635], 'false,false': [0.22222222222222218, 0.20792303225486936], 'false,false,true': [nan, 0.22222222222222218], 'false,false,false': [0.20792303225486936, nan], 'false,true': [0.1621293454742713, 0.16656388257252175], 'false,true,false': [0.08790413730035904, 9.25185853854297e-18], 'true': [0.0, 0.0]}
{'': [0.07638888888888899, 0.1387960359661396], 'false': [0.13452903567788296, 0.20896472996118273], 'false,false': [0.0, 0.21400639072310756], 'false,false,false': [0.21400639072310756, nan], 'false,true': [0.18162001181339396, 0.11739631879931753], 'false,true,true': [nan, 0.1816200118133939], 'true': [0.08264462809917364, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.13237307443481955, 0.13241038540193828], 'false': [0.12870055205527234, 0.18142938163094524], 'false,false': [0.0, 0.18591218698000322], 'false,false,false': [0.2222222222222222, 0.16000000000000006], 'true': [4.956484773239416e-05, 0.2267493604801728], 'true,true': [4.956484773239416e-05, nan], 'false,false,true': [nan, 0.0]}
{'': [0.005036618135318648, 0.12657515436116593], 'false': [0.12082341713089784, 0.12759996965081755], 'false,false': [0.0, 0.1282255738153069], 'false,false,false': [0.1252598121536942, 0.15130321281211462], 'true': [0.00551737129155766, 0.0], 'true,true': [0.0006082068542564116, 0.010454666741882945], 'true,false': [nan, 0.0]}
{'': [0.11117807832740169, 0.13299492884414746], 'false': [9.25185853854297e-18, 0.13548110985251646], 'false,false': [0.13548110985251646, nan], 'true': [0.028053951463455865, 0.0025625380053378795], 'true,true': [0.0034565366664321973, 0.005709134652856627], 'true,true,false': [nan, 0.005709134652856896], 'true,true,true': [0.00378958230250519, 0.0]}
{'': [0.0005858443292055235, 0.0991091375972448], 'false': [0.09656509018247575, 0.14345527381132667], 'false,false': [0.0, 0.15313294316422654], 'false,false,false': [0.15313294316422654, nan], 'false,true': [0.126065123863988, 0.0004881812054871762], 'false,true,true': [nan, 0.12606512386398824], 'true': [0.0, 0.0008048384108636231], 'false,false,true': [0.0, nan]}
{'': [0.08742449571390917, 0.07776156103582672], 'true': [0.0018124792289751605, 0.16823022324988315], 'true,false': [0.03846525844895898, 0.00016040383502787894], 'false': [0.048202155985655346, 0.09774077020524867], 'false,false': [0.0, 0.09916988391132939], 'false,false,false': [0.0960359179971527, 0.12044245050190404], 'false,true': [0.03962748873736115, 0.05429690032618607], 'false,true,false': [0.06168144069790324, 0.053860040785720494]}
{'': [0.05116310888787295, 0.07840277464054399], 'false': [0.049446285808939616, 0.09686470346572518], 'false,false': [0.0, 0.09846744158286345], 'false,false,false': [0.09308548541708869, 0.15316866378438718], 'true': [0.06555920919681552, 0.0001258925924066077], 'true,true': [0.06555920919681552, nan], 'true,true,true': [6.592198777172606e-05, 0.2053725758576806]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 7.049
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( enzyme(I, K), complex(A, L) )
%   | | | then return 0.21109011157010057;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.08456402943913498;  // std dev = 3.047, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.22238734569554;  // std dev = 5.913, 151.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5005511758931249;  // std dev = 0.903, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.21837106042470464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7169560626038715;  // std dev = 2.806, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.165770952553147;  // std dev = 0.131, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.02982406437030515;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.21787155597137764;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.5512689903861833;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.605553327773266;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.04333233801691788;  // std dev = 2.619, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | | else return 0.1630130644197817;  // std dev = 3.207, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6533188011676221;  // std dev = 1.381, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14786346842258763;  // std dev = 0.032, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.09146101188857356;  // std dev = 0.422, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.31004649623640096;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.41561991203904447;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.05309775471399919;  // std dev = 1.071, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.40536119175841545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0.1938965114950178;  // std dev = 1.837, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.05393419589223932;  // std dev = 4.244, 140.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=38 */
%   | | else return 0.04224042045001681;  // std dev = 0.323, 88.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.6644463337605466;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.14545418204406682;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06626100748002486;  // std dev = 1.574, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.36768560317816823;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.12193085672806052;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( complex(F, H), complex(A, H) )
%   | | | then return -0.09270269710444068;  // std dev = 0.663, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.11011204330314879;  // std dev = 4.375, 132.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=47 */
%   | | else if ( location(A, I) )
%   | | | then return 0.05448752534553925;  // std dev = 2.838, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | else return 0.20736621566355723;  // std dev = 0.668, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5046813323779609;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.3802711838532203;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.08423566582498984;  // std dev = 0.905, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.29705819527353317;  // std dev = 0.070, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4246461584946914;  // std dev = 0.230, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.17879640839419453;  // std dev = 0.791, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1461035705158636;  // std dev = 0.017, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.1546286957082382;  // std dev = 1.630, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.0772231351906204;  // std dev = 1.712, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.04535532465208186;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return -0.005023312402323675;  // std dev = 2.347, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0.059723046568428625;  // std dev = 4.397, 156.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2676673750934385;  // std dev = 0.292, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.4238083342316501;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.6122235321080866;  // std dev = 0.373, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.4902908831397165;  // std dev = 0.765, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return -0.19982413821111703;  // std dev = 0.085, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.03652899257529593;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.17476560120137521;  // std dev = 1.308, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.02879558809222177;  // std dev = 3.505, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
%   | | else return 0.19758824846490372;  // std dev = 0.814, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19615245207413012;  // std dev = 0.143, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.23286825683922982;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), location(G, H) )
%   | | | then return 0.3430074065918249;  // std dev = 1.412, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.46987021898674;  // std dev = 1.655, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.15210110196689444;  // std dev = 0.379, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.17397422981189828;  // std dev = 0.225, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.32498247810970904;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.052714202644519474;  // std dev = 1.265, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.029408056640023366;  // std dev = 0.694, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1769053797892896;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22354403321015062;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( location(A, G) )
%   | | then if ( location(H, G), interaction(H, A) )
%   | | | then return -0.017924170315669664;  // std dev = 2.212, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | | | else return 0.055554863599018046;  // std dev = 0.791, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.12388435036649736;  // std dev = 0.597, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.049050512369210666;  // std dev = 0.705, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.23434714734573425;  // std dev = 0.000601, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.02470675570375208;  // std dev = 3.212, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   | | | else return 0.3143227918102115;  // std dev = 0.995, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.13760100065776595;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.26295472723553037;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.05867830270646404;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10149565733632249;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.002328226034822458;  // std dev = 1.795, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.040634183232625465;  // std dev = 1.473, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19493257210893358;  // std dev = 0.000525, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.0691355907604749;  // std dev = 2.146, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | | | else return 0.001372207462034624;  // std dev = 2.544, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.087', 'seconds']
Refined model CLL: -0.211677


******************************************
Best model found
******************************************
Results 

CLL : -0.196556 

AUC ROC : 0.986162 

AUC PR : 0.286262 

Precision : 0.16876 

Recall : 0.762411 

F1 : 0.27635 

Total Learning Time : 7.049 

Total Inference Time : 12.087802171707153 

Total revision time: 27.515741651535034
Best scored revision CLL: -0.198472


Results 

CLL : -0.196556 

AUC ROC : 0.986162 

AUC PR : 0.286262 

Precision : 0.16876 

Recall : 0.762411 

F1 : 0.27635 

Total Learning Time : 33.03902155685425 

Total Inference Time : 12.087802171707153 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.178
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1277141524908154;  // std dev = 4.759, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | | else return 0.17957750652808294;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.609733748384724;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.5604369136311725;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7549908564191493;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7016039720102003;  // std dev = 3.214, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.16144008439590865;  // std dev = 0.047, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | else if ( location(A, I) )
%   | | | then return 0.09987215789821499;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5153098851597971;  // std dev = 0.955, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.60955206094961;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08469540946809336;  // std dev = 4.320, 125.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5349556794925958;  // std dev = 2.890, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.144908102141899;  // std dev = 0.074, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8188603941888805;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1118090578473334;  // std dev = 1.593, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4090731931885849;  // std dev = 0.952, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.4665759872760836;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5332682899191101;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.56545644687109;  // std dev = 1.520, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return 0.032938225664786255;  // std dev = 5.154, 247.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6007004452224376;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1237012219437436;  // std dev = 1.582, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.373941913024012;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19487888007547097;  // std dev = 1.295, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.048816158411491235;  // std dev = 5.881, 292.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4520686488339044;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.02589200929182759;  // std dev = 1.729, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.29757726522045996;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.19006343755492935;  // std dev = 1.196, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3442560659480991;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.025000366979474633;  // std dev = 2.902, 86.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20746817573278112;  // std dev = 0.938, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05785947149168448;  // std dev = 4.750, 175.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=51 */
%   | | | else return 0.13631069622882733;  // std dev = 2.078, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2974405144269266;  // std dev = 0.316, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.09905518992201873;  // std dev = 0.524, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.27635091792230837;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4870391712157454;  // std dev = 1.545, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.18595205649679783;  // std dev = 0.873, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2738212410949873;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06308303046279272;  // std dev = 4.465, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1847784499028539;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.13771479474627352;  // std dev = 0.863, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36335678181236725;  // std dev = 3.376, 98.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | | else return -0.14992362899747816;  // std dev = 0.426, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2911953759547905;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.014233846888739226;  // std dev = 1.423, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1812007243465145;  // std dev = 0.141, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19035466252434574;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.23527595391847003;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.004837634866228339;  // std dev = 1.606, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.22483289817005486;  // std dev = 0.459, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.03008235862345516;  // std dev = 1.420, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.03406515907856017;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03824187807087683;  // std dev = 3.882, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   | | | else return -0.03468669912723264;  // std dev = 1.474, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13583984298857843;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.20021260029369503;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18638062582811818;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.029246693940595675;  // std dev = 2.669, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.19453567437395303;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.025382081069347057;  // std dev = 3.827, 161.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=47 */
%   | | | else return -0.037246577017506555;  // std dev = 1.488, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.444', 'seconds']
Parameter learned model CLL:-0.198825 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.759, 84, 31], 'false,false,true,false': [5.526, 95, 45], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [1.291, 2, 10], 'false,true,true': [0.081, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.214, 12, 76], 'false,false,true,false': [0.047, 182, 0], 'false,false,false,true': [1.713, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.955, 1, 11], 'true,false': [0.017, 0, 6], 'false,true,true': [4.32, 91, 34], 'false,true,false,true': [2.89, 10, 48], 'false,true,false,false': [0.074, 89, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.593, 9, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.952, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.091, 0, 3], 'false,true,true,false': [1.52, 3, 21], 'false,true,false': [5.154, 189, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.582, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.49e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.295, 2, 10], 'false,true': [5.881, 210, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.729, 16, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.035, 0, 9], 'true,true,false': [1.196, 2, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.902, 67, 19], 'false,false,true': [0.938, 1, 8], 'false,false,false,true': [4.75, 124, 51], 'false,false,false,false': [2.078, 16, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.316, 0, 15], 'true,true,true,false': [0.524, 1, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.545, 4, 33], 'true,false': [0.873, 87, 0], 'false,true': [0.017, 0, 5], 'false,false,true': [4.465, 104, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.863, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.376, 16, 82], 'false,true,false': [0.426, 175, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.423, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.141, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.105, 0, 5], 'false,true,true': [1.606, 32, 13], 'false,true,false,true': [0.459, 1, 8], 'false,true,false,false': [1.42, 43, 11], 'false,false,true': [0.909, 1, 5], 'false,false,false,true': [3.882, 102, 47], 'false,false,false,false': [1.474, 15, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.09, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.086, 0, 3], 'false,true': [2.669, 85, 32], 'false,false,true': [0.014, 0, 5], 'false,false,false,true': [3.827, 114, 47], 'false,false,false,false': [1.488, 16, 4]}]
{'': [0.05246913580246885, 0.21585538752362995], 'false': [0.17283950617283939, 0.20985004699182308], 'false,false': [0.20921184159938513, 0.22222222222222207], 'false,false,false': [0.22222222222222207, nan], 'false,false,true': [0.19689981096408443, 0.21811224489796036], 'false,true': [0.22222222222222224, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.22222222222222224], 'true': [0.07100591715976314, 0.0]}
{'': [0.1277015077123665, 0.20624407308567497], 'false': [0.0009461166323116364, 0.20158374401707335], 'false,false': [0.20189764083904335, 0.19555555555555573], 'false,false,true': [0.11735248420428865, 1.2307265221523787e-05], 'false,false,false': [0.19555555555555573, nan], 'true': [0.10937499999999989, 0.138947108353923], 'false,true': [0.0009461166323116364, nan]}
{'': [0.05267577421265276, 0.1622276162660659], 'false': [0.15938335932453035, 0.21442632784506754], 'false,false': [0.21442632784506754, nan], 'false,false,true': [0.0, 0.19521197559748607], 'false,true': [0.1493152718458003, 0.16725844084666458], 'false,true,false': [0.1439752173764185, 6.132734363255116e-05], 'true': [0.07602960688520322, 4.705040248705513e-05]}
{'': [0.05054888835138935, 0.13405680758735375], 'false': [0.13026020968919233, 0.20865937166798712], 'false,false': [0.0, 0.20854547887043648], 'false,false,false': [0.20854547887043648, nan], 'false,true': [0.0859317856024987, 0.10753632547954334], 'false,true,true': [0.0027318994852371845, 0.0962166516507158], 'true': [0.0533386539649555, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.09575494070235069, 0.12090746860456746], 'false': [0.11843675388569491, 0.15274461645864587], 'false,false': [0.0, 0.14950344772367424], 'false,false,false': [0.14950344772367424, nan], 'true': [3.172065784643304e-17, 0.13979909532006699], 'true,true': [3.172065784643304e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.08270862573798997, 0.12529733615488678], 'false': [0.09794108503306576, 0.13365366752781266], 'false,false': [0.09772119210724282, 0.13442904246135626], 'false,false,false': [0.128936240907532, 0.16604134421034616], 'true': [0.08704816445010616, 0.0], 'true,true': [0.00013978874939661137, 0.17870049839260205], 'true,false': [nan, 0.0]}
{'': [0.11494431994975722, 0.1291551176954713], 'false': [5.923352416574712e-05, 0.1320063993910551], 'false,false': [0.1320063993910551, nan], 'true': [0.06566578500158246, 0.008765719312230622], 'true,true': [0.03833467682107422, 0.06278814794927948], 'true,true,false': [0.0, 0.06454986335839816], 'true,true,true': [0.006674198394884693, 0.1370745795170545]}
{'': [0.041927053400287094, 0.10459068588544769], 'false': [0.10304211395894648, 0.13100585738201506], 'false,false': [0.0, 0.13494535067106994], 'false,false,false': [0.13494535067106994, nan], 'false,true': [0.11631484508919214, 0.00103515576457975], 'false,true,true': [nan, 0.1163148450891922], 'true': [0.0, 0.0677465214831682], 'false,false,true': [0.0, nan]}
{'': [0.002530788570416165, 0.083350508302241], 'false': [0.049151701046255485, 0.10434889873882526], 'false,false': [0.13758374658378011, 0.10316136835930154], 'false,false,false': [0.10113311804588711, 0.11435004921922004], 'false,true': [0.05730863524620604, 0.043324386379967425], 'false,true,false': [0.0234419525611625, 0.03735501275746808], 'true': [0.0022082480815940886, 0.0019887919125050535], 'true,false': [0.0, 0.0022077594145025526]}
{'': [0.001862816257419287, 0.08054469686411643], 'false': [0.06089724625967743, 0.09184164697630826], 'false,false': [3.6629285937789245e-05, 0.09354430972399475], 'false,false,false': [0.09098402200854884, 0.110665685728277], 'true': [0.0016486012490500557, 0.0024385371027318184], 'true,true': [0.0016486012490500557, nan], 'true,true,true': [-3.96508223080413e-18, 0.0013406645128306537]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 7.72
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( location(A, H), phenotype(A, I) )
%   | | then if ( location(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5423594614153023;  // std dev = 4.052, 76.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   | | | else return -0.14185106490048763;  // std dev = 8.43e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.017239844190421426;  // std dev = 2.426, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | | else return 0.12737970433028153;  // std dev = 3.917, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( enzyme(A, G) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6712182852783424;  // std dev = 3.132, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.14555298887824195;  // std dev = 0.395, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.416993947937305;  // std dev = 0.990, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.019060077686830084;  // std dev = 0.832, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.48339429210504997;  // std dev = 0.281, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.3146096422755094;  // std dev = 0.416, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14466012143770987;  // std dev = 0.149, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.07264332002043832;  // std dev = 4.030, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6083156634136005;  // std dev = 1.854, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.1355296245629664;  // std dev = 0.280, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.2292641841253452;  // std dev = 0.943, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6764282136748521;  // std dev = 0.158, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.17874739746371482;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3447783083024909;  // std dev = 0.325, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.4351138121529383;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.02648167344393526;  // std dev = 2.510, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return -0.14837717160483258;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5447508294518073;  // std dev = 0.175, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05474348148697447;  // std dev = 5.108, 229.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=64 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.388398141601079;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.14311355444192922;  // std dev = 0.933, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.022627481536082603;  // std dev = 1.016, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3723148298963354;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, E) )
%   | | then return 0.3803420135348264;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.039346475539157225;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.40852126362381114;  // std dev = 0.166, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10724212527984693;  // std dev = 0.078, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.06582186871496401;  // std dev = 5.361, 262.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=76 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3010193096995206;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.01459070709144206;  // std dev = 1.027, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.34963466410621;  // std dev = 0.618, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.30471693476723616;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( complex(A, G), interaction(H, E) )
%   | | | then return 0.09855610847852142;  // std dev = 1.462, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.06339632583335948;  // std dev = 1.142, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.22831051102605293;  // std dev = 1.188, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1338662457905392;  // std dev = 1.006, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | else if ( location(A, J), complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.4646402208978914;  // std dev = 0.577, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.17442083400475458;  // std dev = 0.622, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.02628339534255345;  // std dev = 2.900, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
%   | | | else return 0.10156732396935916;  // std dev = 3.417, 87.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( enzyme(A, E), phenotype(A, F) )
%   | | | then return -0.08711117281353113;  // std dev = 1.027, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.23500319800122385;  // std dev = 0.159, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.49572824363648205;  // std dev = 0.164, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.14350939768420293;  // std dev = 0.075, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2577121073983032;  // std dev = 0.163, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.41834209037865605;  // std dev = 0.242, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.15789176181964257;  // std dev = 0.542, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.26034259976085544;  // std dev = 1.064, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.047916231790772736;  // std dev = 3.398, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.21071286231826164;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, E) )
%   | | then return 0.1596786587077836;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2871705748532201;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), location(A, I) )
%   | | | then return 0.22624565593384396;  // std dev = 1.749, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | | else return 0.4033021164796532;  // std dev = 2.164, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | else return -0.13355606083176003;  // std dev = 0.044, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.15667376730527094;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.030347877940699687;  // std dev = 0.748, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.10975300901340988;  // std dev = 0.784, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18101863596492837;  // std dev = 0.049, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(E, E), phenotype(A, H) )
%   | | | then return 0.24401069665128927;  // std dev = 0.419, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.028953519434295458;  // std dev = 1.036, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( enzyme(E, I), location(A, J) )
%   | | | then return -0.13768113835123894;  // std dev = 1.090, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return -0.031033050466529065;  // std dev = 1.119, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.16684228544480542;  // std dev = 2.924, 97.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=64 */
%   | | | else return -0.1148645881358388;  // std dev = 0.230, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.057162838684072736;  // std dev = 0.990, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.06233758630401406;  // std dev = 0.670, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.12792278427105813;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14335306926397642;  // std dev = 0.884, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.14119906504286223;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.4294993971904069;  // std dev = 0.670, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.19970987041966456;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( phenotype(A, J) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.09397406894798618;  // std dev = 1.965, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return -0.028156339883417304;  // std dev = 1.345, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | else return 0.03087063390745582;  // std dev = 0.240, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else return -0.0010487694571506318;  // std dev = 0.247, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.057', 'seconds']
Refined model CLL: -0.182558


******************************************
Best model found
******************************************
Results 

CLL : -0.154736 

AUC ROC : 0.991193 

AUC PR : 0.399123 

Precision : 0.285542 

Recall : 0.89434 

F1 : 0.432877 

Total Learning Time : 7.72 

Total Inference Time : 11.606389999389648 

Total revision time: 28.581754920959472
Best scored revision CLL: -0.182558


Results 

CLL : -0.154736 

AUC ROC : 0.991193 

AUC PR : 0.399123 

Precision : 0.285542 

Recall : 0.89434 

F1 : 0.432877 

Total Learning Time : 34.10503482627868 

Total Inference Time : 11.606389999389648 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.446
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12481560176617904;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.11102249831790224;  // std dev = 5.734, 174.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284563;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8067824097744519;  // std dev = 1.387, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15630282599727077;  // std dev = 0.009, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1644326749533899;  // std dev = 3.444, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.11891977694583408;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04409540203713649;  // std dev = 2.110, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6781369275752771;  // std dev = 1.008, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.13642799352992094;  // std dev = 6.99e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.629681053512678;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14991159349984007;  // std dev = 3.583, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.6851234513360649;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38210538114498693;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5989420849780563;  // std dev = 0.118, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05119509939835314;  // std dev = 4.318, 202.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.475312022761995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5118987151465066;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.0868635226364872;  // std dev = 3.533, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.12577169224330462;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207118471601496;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.055690700617432476;  // std dev = 4.313, 203.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.36028109996073254;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3859674579120076;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.026674107165437673;  // std dev = 3.758, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | | else return -0.16530881601110972;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.39090692614102873;  // std dev = 0.152, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2820277596720334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2551722425694892;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2993778318049892;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0657446265689794;  // std dev = 0.953, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.11231509971234656;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06508381094729898;  // std dev = 4.022, 166.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=49 */
%   | | | else return 0.10860225772679684;  // std dev = 3.649, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2413736385854899;  // std dev = 0.205, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.23455802333634418;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23441820948012582;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6373483233749699;  // std dev = 0.731, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.20307833292712846;  // std dev = 0.747, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23441820948012584;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04650473700378318;  // std dev = 3.462, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1725359421640028;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18937164702783882;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42182515518143093;  // std dev = 1.542, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.13815804848097504;  // std dev = 0.249, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19509079623863018;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.053673797878033315;  // std dev = 2.994, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15746814251612223;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12211811903502834;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18172657793190794;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05840821187792745;  // std dev = 0.388, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.19092615326178064;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.011786097016883912;  // std dev = 1.260, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16696114409120144;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04495166719313965;  // std dev = 2.713, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | | else return 0.04853096158774782;  // std dev = 2.962, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12998237945642357;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1585566705787053;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13036173425634723;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14721177286804454;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03921941847894799;  // std dev = 1.466, 90.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14501083709385998;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02266518058039068;  // std dev = 2.853, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
%   | | | else return 0.039850252838088594;  // std dev = 2.991, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.625', 'seconds']
Parameter learned model CLL:-0.181453 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.422, 22, 8], 'false,false,true,false': [5.734, 130, 44], 'false,false,false,true': [3.559, 38, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.068, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.707, 1, 1], 'false,false,true,true': [1.387, 2, 52], 'false,false,true,false': [0.009, 158, 0], 'false,false,false,true': [3.444, 36, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.11, 29, 8], 'false,true,false,true': [1.008, 1, 48], 'false,true,false,false': [6.99e-08, 121, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.583, 38, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.118, 0, 3], 'false,true,false': [4.318, 150, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.533, 39, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.313, 147, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.758, 55, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.152, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.953, 19, 3], 'false,false,true': [0.926, 1, 6], 'false,false,false,true': [4.022, 117, 49], 'false,false,false,false': [3.649, 35, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.205, 0, 12], 'true,true,true,false': [0.008, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.731, 0, 36], 'true,false': [0.747, 100, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.462, 89, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.027, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.542, 2, 56], 'false,true,false': [0.249, 177, 0], 'false,false,true,true': [0.007, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.994, 39, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.06, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.077, 0, 4], 'false,true,true': [0.388, 7, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.26, 43, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.713, 75, 36], 'false,false,false,false': [2.962, 38, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.002, 0, 5], 'true,true,true,false': [0.036, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.08, 0, 4], 'false,true': [1.466, 73, 17], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.853, 79, 36], 'false,false,false,false': [2.991, 36, 20]}]
{'': [-2.5376526277146434e-16, 0.20588438523514116], 'false': [0.12244897959183662, 0.1992890857176169], 'false,false': [0.18992695117262678, 0.22592152199762144], 'false,false,false': [0.2222222222222217, 0.0], 'false,false,true': [0.19555555555555568, 0.18892852424362613], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.22222222222222224, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [2.5376526277146434e-16, 0.19758712032555975], 'false': [0.12831133071993397, 0.19336880255924846], 'false,false': [0.18515939412913862, 0.21807311708363622], 'false,false,false': [0.21964912364808928, 0.20408163265306123], 'false,false,true': [0.03564570010072156, 5.617665055301221e-07], 'false,true': [0.0009271942996655014, 0.25], 'false,true,false': [nan, 0.25], 'true': [7.401486830834377e-17, 0.0]}
{'': [-2.5376526277146434e-16, 0.15849641966168376], 'false': [0.13863052116159447, 0.22229652795580188], 'false,false': [0.22143404058788438, 0.0], 'false,false,true': [0.0, 0.22135053438640764], 'false,true': [0.12028122232137758, 0.14209788598477396], 'false,true,false': [0.020725387460820293, 4.0371746350005693e-17], 'false,false,false': [0.0, nan], 'true': [-1.1102230246251565e-16, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.1250044479889858], 'false': [0.09537925738168773, 0.2175403369797137], 'false,false': [0.00033464651490971997, 0.21943765528646042], 'false,false,false': [0.21900036720008498, 0.22222222222222224], 'false,true': [0.012286871851584336, 0.0922949507754155], 'false,true,true': [0.0, 0.004627956769814793], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, 3.700743415417188e-17]}
{'': [0.0, 0.11980179111725231], 'false': [0.09162970898250399, 0.1916475172796507], 'false,false': [0.0001649472462002255, 0.19344978766022963], 'false,false,false': [0.1908473333458187, 0.2222222222222222], 'false,false,true': [0.0, 0.0], 'true': [0.0, -3.700743415417188e-17], 'true,true': [0.0, nan]}
{'': [0.005183688783773732, 0.1270143804237704], 'false': [0.041261388802952194, 0.1334949032651439], 'false,false': [0.12244897959183675, 0.13380409352903383], 'false,false,false': [0.09744747359133504, 0.24211244901782075], 'true': [0.006366014136294673, 0.0003307086579468303], 'true,true': [2.3790493384824782e-17, 0.005782236123004686], 'true,false': [0.0001803046997112534, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13568777024801382, 0.09348649107921671], 'true': [0.044087364879842016, 0.00557959315777099], 'false': [-1.1102230246251566e-17, 0.09586781714015008], 'false,false': [0.09586781714015008, nan], 'true,true': [0.0030137768650484614, 0.01871549510448778], 'true,true,false': [0.0, 0.01484745978787109], 'true,true,true': [0.003503443334760529, 3.59615228694779e-05]}
{'': [0.00012340286618219603, 0.08548669575457582], 'false': [0.0686718718298352, 0.14757038827492316], 'false,false': [2.7507965517814537e-05, 0.15191614455210004], 'false,false,false': [0.15191614455210004, nan], 'false,true': [0.04098646651985141, 0.0003494194779853847], 'false,true,true': [nan, 0.040986466519851356], 'true': [0.0, 9.448031942072693e-05], 'false,false,true': [2.7507965517814537e-05, nan]}
{'': [0.0009157089101822145, 0.07560561061954406], 'false': [0.027418555878971764, 0.0931275345826016], 'false,false': [0.0, 0.0954635896917342], 'false,false,false': [0.0662885674268083, 0.1512901315410488], 'false,true': [0.01886309323311155, 0.028236937689780382], 'false,true,false': [0.0, 0.02783474958877166], 'true': [0.00039837842924788584, 0.0017490639764386972], 'true,false': [0.0, 0.0014756962961361836]}
{'': [0.0006892945282439912, 0.07374108055853189], 'false': [0.023895076984438438, 0.0975331518093752], 'false,false': [0.0, 0.09999798005687595], 'false,false,false': [0.0708006650543524, 0.15975814040794853], 'true': [0.00029828737118310633, 0.001614214137968993], 'true,true': [0.00035149261670770066, 0.0], 'true,true,true': [5.756402569029318e-07, 0.00042604792341263226], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.119
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.02481560176617901;  // std dev = 2.415, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return 0.1325391790019504;  // std dev = 5.714, 164.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=45 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.15502393509951232;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8059971667600692;  // std dev = 1.391, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15614528954109014;  // std dev = 0.065, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( location(A, J) )
%   | | | then return 0.11474894055633159;  // std dev = 3.608, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return 0.5048775613333963;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5787526129430665;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5540859847587529;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12935864434944205;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.08708268132682084;  // std dev = 2.043, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6732020142447841;  // std dev = 1.023, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.13648333534979648;  // std dev = 0.056, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06010045836427675;  // std dev = 3.837, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | else return 0.14997660709590452;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4248566118847971;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3891647845907378;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41947268816435723;  // std dev = 0.668, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), location(G, H) )
%   | | | then return 0.06953641229102506;  // std dev = 4.187, 177.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=51 */
%   | | | else return -0.0734991972798549;  // std dev = 0.647, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5404805034596555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.16959706336044636;  // std dev = 2.415, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.0806176636283891;  // std dev = 2.817, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3259557076955223;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.10912500470005548;  // std dev = 0.719, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.14441791135381546;  // std dev = 1.055, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.08084205214050585;  // std dev = 2.899, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | | | else return 0.028359583351609475;  // std dev = 2.953, 99.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4065603100391102;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.1943781045514078;  // std dev = 2.874, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.09467794828429707;  // std dev = 2.045, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22111938377972917;  // std dev = 0.262, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(F, E) )
%   | | then if ( interaction(E, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6800109372000317;  // std dev = 0.400, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.054680107211346474;  // std dev = 3.339, 124.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=20 */
%   | | else if ( function(A, G), function(D, G) )
%   | | | then return 0.17804124959900477;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10099079833667197;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5205335204611402;  // std dev = 0.333, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.15431287621997056;  // std dev = 0.349, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.04302510936542011;  // std dev = 2.544, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | | else return 0.10447009593044278;  // std dev = 1.048, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24715975347448857;  // std dev = 0.041, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2635029738046596;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6026796281469277;  // std dev = 0.784, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18755560165733737;  // std dev = 0.090, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2285915261020886;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), enzyme(H, I) )
%   | | | then return 0.042854312146352484;  // std dev = 1.664, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return -0.06455322205630158;  // std dev = 0.971, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.014156423315090377;  // std dev = 1.228, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.08952092449012697;  // std dev = 2.105, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1869996502335178;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18960783575155724;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.33631976963245264;  // std dev = 1.337, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return 0.4193798165327499;  // std dev = 0.623, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.10597059548873193;  // std dev = 0.105, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.1431335946422619;  // std dev = 0.164, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.19939140302005343;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.02651519788639788;  // std dev = 1.929, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.052684112235892214;  // std dev = 2.161, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16252895324218397;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17512006437948263;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.02692467352336948;  // std dev = 0.292, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.1025451402262057;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.23976861400599636;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.010300540602432611;  // std dev = 1.258, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16348137450803846;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.047020991823965214;  // std dev = 1.749, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.042556047430531985;  // std dev = 3.395, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14392536329815897;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.14810931918507173;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return 0.005700417030330793;  // std dev = 1.100, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.05793727523612101;  // std dev = 0.367, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.11761204994671229;  // std dev = 0.954, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.02719813384644586;  // std dev = 0.342, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.14240933630961938;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.09531746857176536;  // std dev = 1.234, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.025731817275820024;  // std dev = 3.619, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.385', 'seconds']
Refined model CLL: -0.163027


******************************************
Best model found
******************************************
Results 

CLL : -0.18771 

AUC ROC : 0.984046 

AUC PR : 0.210542 

Precision : 0.14372 

Recall : 0.859206 

F1 : 0.246249 

Total Learning Time : 3.119 

Total Inference Time : 2.9597129821777344 

Total revision time: 10.207960548400878
Best scored revision CLL: -0.163027


Results 

CLL : -0.18771 

AUC ROC : 0.984046 

AUC PR : 0.210542 

Precision : 0.14372 

Recall : 0.859206 

F1 : 0.246249 

Total Learning Time : 15.731240453720092 

Total Inference Time : 2.9597129821777344 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.464
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07126368919787303;  // std dev = 3.198, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.18314893509951172;  // std dev = 5.131, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.783334469424786;  // std dev = 1.691, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.16051501621369654;  // std dev = 0.088, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( location(A, I) )
%   | | | then return 0.14903129829054948;  // std dev = 2.730, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.06954674027598451;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4720331034129513;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.3553664367462845;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07650197465434795;  // std dev = 2.747, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6230235509892276;  // std dev = 1.670, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14462867451164915;  // std dev = 2.11e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3173904471938617;  // std dev = 0.952, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07940218221392911;  // std dev = 2.490, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10022412139712981;  // std dev = 1.450, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44561321614345417;  // std dev = 0.049, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5673078700031284;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6031254562131587;  // std dev = 0.176, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.05192206721245796;  // std dev = 4.354, 186.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5074962396438145;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5665958185685307;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07730842952076016;  // std dev = 2.789, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.04306636598375758;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.232862058742315;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( location(A, E) )
%   | | | then return -0.6407456631999681;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.35045691078079294;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then return 0.07884806543597761;  // std dev = 4.375, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.38284050281359217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09909826737782165;  // std dev = 1.008, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.042639427096052854;  // std dev = 2.560, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.013916469290284133;  // std dev = 1.537, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19079183856930743;  // std dev = 0.853, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.4016452861893445;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2972663225400296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.42839727817711754;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07430777511298453;  // std dev = 1.235, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.04135417073397908;  // std dev = 0.997, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.055491166875410544;  // std dev = 4.051, 154.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=46 */
%   | | | else return 0.06415968761169592;  // std dev = 3.040, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26420203743286813;  // std dev = 0.112, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2985514436513419;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2827426232199582;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5657289765139031;  // std dev = 1.280, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.185006168287489;  // std dev = 0.605, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2672549758050772;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05696650928356577;  // std dev = 3.396, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.09844489323064641;  // std dev = 0.866, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.21777504818664092;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44125520547516994;  // std dev = 1.161, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.14370360083598577;  // std dev = 0.222, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.24047750726212735;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.004163663251729308;  // std dev = 2.542, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18168456955860252;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18506778320946093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.0880733231340937;  // std dev = 0.569, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09302333853891144;  // std dev = 0.307, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23210699631043566;  // std dev = 0.157, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.011991447301835061;  // std dev = 1.416, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1834154649462142;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.016828847356432072;  // std dev = 2.826, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | | else return 0.0034711421053357575;  // std dev = 2.541, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1593256609942555;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11552656970633268;  // std dev = 0.636, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.14105344697125555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16326181248326954;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19402715595024614;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.014401967733862514;  // std dev = 1.663, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.09119675770520835;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.013409392287967939;  // std dev = 2.737, 112.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
%   | | | else return 0.06482582339473127;  // std dev = 2.415, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.822', 'seconds']
Parameter learned model CLL:-0.17978 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.198, 48, 13], 'false,false,true,false': [5.131, 81, 39], 'false,false,false,true': [2.372, 15, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [2.11e-08, 0, 7], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.691, 3, 52], 'false,false,true,false': [0.088, 154, 0], 'false,false,false,true': [2.73, 23, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.957, 1, 11], 'true,false': [0.894, 1, 4], 'false,true,true': [2.747, 42, 14], 'false,true,false,true': [1.67, 3, 42], 'false,true,false,false': [2.11e-08, 95, 0], 'false,false,true,true': [0.952, 2, 3], 'false,false,true,false': [2.49, 23, 9], 'false,false,false,true': [1.45, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.049, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.176, 0, 6], 'false,true,false': [4.354, 137, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.789, 27, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'true,true,false': 'location(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'interaction(G, H), interaction(H, G)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.949, 1, 9], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.03, 0, 6], 'false,true': [4.375, 118, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.008, 2, 2], 'false,false,false,true': [2.56, 25, 9], 'false,false,false,false': [1.537, 11, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.853, 1, 9], 'true,true,false': [0.006, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.031, 0, 2], 'false,true': [1.235, 31, 5], 'false,false,true': [0.997, 2, 5], 'false,false,false,true': [4.051, 108, 46], 'false,false,false,false': [3.04, 34, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.112, 0, 13], 'true,true,true,false': [0.078, 0, 3], 'true,true,false,true': [0.019, 0, 3], 'true,true,false,false': [1.28, 1, 33], 'true,false': [0.605, 86, 0], 'false,true': [0.018, 0, 3], 'false,false,true': [3.396, 68, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.866, 1, 8], 'true,false': [0.047, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.161, 1, 56], 'false,true,false': [0.222, 144, 0], 'false,false,true,true': [0.068, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.542, 36, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.029, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.569, 1, 5], 'false,true,true': [0.307, 17, 1], 'false,true,false,true': [0.157, 0, 6], 'false,true,false,false': [1.416, 49, 17], 'false,false,true': [0.014, 0, 3], 'false,false,false,true': [2.826, 75, 31], 'false,false,false,false': [2.541, 36, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 8], 'true,true,true,false': [0.636, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.006, 0, 2], 'true,false': [0.038, 0, 3], 'false,true': [1.663, 63, 24], 'false,false,true': [0.862, 1, 3], 'false,false,false,true': [2.737, 81, 31], 'false,false,false,false': [2.415, 25, 12]}]
{'': [-2.3684757858670006e-16, 0.2190946810950567], 'false': [-2.5376526277146434e-16, 0.21075115699537333], 'false,false': [0.20475565458929898, 0.23725286160249692], 'false,false,false': [0.23437500000000003, 0.24489795918367335], 'false,false,true': [0.16769685568395537, 0.21937500000000057], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.0, 0.19640710842224637], 'false': [0.10937500000000006, 0.19143030718252968], 'false,false': [0.18646092026475908, 0.2164031656649147], 'false,false,false': [0.2191385070473684, 0.18750000000000006], 'false,false,true': [0.051994216330621935, 5.004532468914354e-05], 'false,true': [0.10937500000000006, nan], 'true': [1.1102230246251565e-16, 6.344131569286608e-17]}
{'': [0.10380622837370226, 0.15563249051210876], 'false': [0.14466622772053803, 0.20119799741247993], 'false,false': [0.19871472269318113, 0.21028490337106515], 'false,false,false': [0.21028490337106515, nan], 'false,false,true': [0.18142744379245818, 0.19376202025545167], 'false,true': [0.1347111113702175, 0.14846081331245967], 'false,true,false': [0.062002769896252766, 4.674623261579606e-18], 'true': [0.07638888888888869, 0.16]}
{'': [0.00016325550026845547, 0.12669272708646026], 'false': [0.10881597663818326, 0.20250606136839241], 'false,false': [0.0007761689397952631, 0.20322574927469597], 'false,false,false': [0.2047694228354901, 0.1875], 'false,true': [0.00456288575693201, 0.10192355283634236], 'false,true,true': [0.0, 0.005140095361861515], 'false,false,true': [0.0, 0.0], 'true': [0.00016325550026845547, nan]}
{'': [0.10267232265625091, 0.12960192205836563], 'false': [0.10998762226255686, 0.19164123830565846], 'false,false': [0.2404540678095445, 0.18647802323766527], 'false,false,true': [0.0, 0.25411458911920815], 'false,false,false': [0.19280362632931536, 0.16885019096442275], 'true': [0.14489177287910623, 0.00015478940912796077], 'true,true': [0.09, 0.0], 'true,true,false': [0.0, nan]}
{'': [0.05364341116308422, 0.11715936678195128], 'false': [0.04234241703408441, 0.1275126885446134], 'false,false': [0.14194276245177384, 0.12700385004798104], 'false,false,false': [0.10657497396873512, 0.192489206706005], 'true': [0.061098933313397975, 0.004140544998902503], 'true,true': [0.07283167287828449, 1.052984885616115e-05], 'true,false': [0.0, 0.0004790416562551192], 'true,false,true': [0.0, nan]}
{'': [0.12045791154425703, 0.11435193364788593], 'true': [0.051113139493989906, 0.004253231863251441], 'false': [0.00011379967558127387, 0.11651307060247004], 'false,false': [0.11651307060247004, nan], 'true,true': [0.0013431600072714989, 0.05027724212647228], 'true,true,false': [0.00012622854938097264, 0.048209255115101594], 'true,true,true': [0.0009643381427265618, 0.0020260675329056474]}
{'': [0.050516692729777365, 0.08728521486589379], 'false': [0.0764738085986154, 0.1298813635941104], 'false,false': [0.0015252277376827106, 0.13461866721037416], 'false,false,false': [0.13461866721037416, nan], 'false,true': [0.023663099054085767, 0.00034283441215363704], 'true': [0.08333444047758135, 0.00031262231693328965], 'false,true,true': [nan, 0.0236630990540858], 'false,false,true': [0.0015252277376827106, nan]}
{'': [0.021136811068888525, 0.069552359201178], 'false': [0.02887080943768564, 0.0925903216704128], 'false,false': [6.61207448750395e-05, 0.09383562813002509], 'false,false,false': [0.07536337513951682, 0.1345057058734908], 'false,true': [0.005230251820424807, 0.032725634452803576], 'false,true,false': [0.004082714409886223, 0.030364198760392546], 'true': [8.171352343159799e-05, 0.04747384933393883], 'true,false': [0.0, 0.054042168229788835]}
{'': [0.03556258874011346, 0.0710019502618376], 'false': [0.03178914261700139, 0.0927893753304734], 'false,false': [0.18563511561849141, 0.0899366982956875], 'false,false,false': [0.06689648175885121, 0.1576928837670934], 'true': [0.041507830153705, 0.0004884931359119502], 'true,true': [0.05169930868341994, 0.00012308715364838427], 'true,true,true': [3.469446951953614e-18, 0.1346232236784142], 'true,true,false': [0.0, 2.022689756750809e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;true,true;interaction(D, A).;true;true
4;false;interaction(F, A).;true;true
4;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false,true;interaction(G, H), interaction(H, G).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 3.633
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.07243464938522666;  // std dev = 3.071, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | | else return 0.1454417527790694;  // std dev = 6.088, 181.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7551723247302798;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7527968165926843;  // std dev = 2.138, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.15508647830210015;  // std dev = 0.136, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.27218954970765036;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.08266048668046537;  // std dev = 2.618, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5660455205926314;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.042744474887287304;  // std dev = 1.290, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.11553862352802195;  // std dev = 2.376, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7047616461372043;  // std dev = 0.213, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.13930928846915389;  // std dev = 0.031, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return 0.047129089881180516;  // std dev = 1.924, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.15959238877617574;  // std dev = 1.821, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.04937115403921813;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5856644241641934;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.42179358457686394;  // std dev = 0.023, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.18554318544510948;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5658950047346332;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.609064384578068;  // std dev = 0.193, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 4.99055102096421E-4;  // std dev = 2.477, 92.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=17 */
%   | | | else return 0.10404753931135073;  // std dev = 3.409, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5582351806155075;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.04110970481715037;  // std dev = 2.473, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.2450936809458326;  // std dev = 1.432, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2747341918979134;  // std dev = 0.250, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4575462994931744;  // std dev = 0.212, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.0631442361322357;  // std dev = 3.729, 135.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=39 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.06748495575012078;  // std dev = 0.905, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.004019158145414046;  // std dev = 1.637, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.4054067636005442;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0838636665892123;  // std dev = 0.843, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.1379397166583737;  // std dev = 2.301, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.01288321131438563;  // std dev = 1.696, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16111224596512894;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.380107920013654;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.3125137456438396;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.0867122719442462;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.10943486817569308;  // std dev = 0.003, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( enzyme(A, G), complex(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5904512830087545;  // std dev = 0.247, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1879870720412944;  // std dev = 0.234, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.0727857916116463;  // std dev = 2.616, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | | else return 0.02301844035492501;  // std dev = 4.153, 146.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=39 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26796073034927365;  // std dev = 0.056, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.27280230859747573;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5646600075079432;  // std dev = 0.914, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else if ( interaction(F, A) )
%   | | then return -0.13871983649789318;  // std dev = 0.073, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return -0.25199025924170815;  // std dev = 0.049, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.32920455129669707;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.29623781261470133;  // std dev = 2.351, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | | | else return -0.15549498119491892;  // std dev = 0.123, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.038840219076178385;  // std dev = 0.592, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18705380547321282;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.09356512614034533;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23970020319403867;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.40407639755861247;  // std dev = 0.353, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3164405563424897;  // std dev = 1.932, 47.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=43 */
%   | | else return -0.13333256640386476;  // std dev = 0.037, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.28447198966428017;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.01866807949639953;  // std dev = 1.914, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return 0.13586370991906405;  // std dev = 1.416, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16229254688012934;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1515072086318665;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.06512578147830354;  // std dev = 0.871, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.05684365779373201;  // std dev = 0.114, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.014058199281293668;  // std dev = 1.231, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return 0.046245544782797486;  // std dev = 0.719, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.23737004935449782;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.03695616674252918;  // std dev = 3.309, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return -0.08546947899576082;  // std dev = 1.042, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14587111134858957;  // std dev = 0.018, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.23726623617826847;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.20550875479139033;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, G), complex(F, G) )
%   | | | then return -0.08456575418290947;  // std dev = 0.596, 32.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | | else return -0.012447425046717914;  // std dev = 1.493, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2589755284263463;  // std dev = 1.763, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return -0.1370087113756268;  // std dev = 0.218, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.21149809826685406;  // std dev = 1.070, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.009291429056584378;  // std dev = 2.252, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.472', 'seconds']
Refined model CLL: -0.165037


******************************************
Best model found
******************************************
Results 

CLL : -0.183682 

AUC ROC : 0.984279 

AUC PR : 0.224502 

Precision : 0.147126 

Recall : 0.904594 

F1 : 0.253089 

Total Learning Time : 3.633 

Total Inference Time : 3.74637770652771 

Total revision time: 12.004631158828737
Best scored revision CLL: -0.165037


Results 

CLL : -0.183682 

AUC ROC : 0.984279 

AUC PR : 0.224502 

Precision : 0.147126 

Recall : 0.904594 

F1 : 0.253089 

Total Learning Time : 17.52791106414795 

Total Inference Time : 3.74637770652771 

