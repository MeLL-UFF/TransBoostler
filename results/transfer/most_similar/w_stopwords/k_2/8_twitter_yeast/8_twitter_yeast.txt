Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.817
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12005369700427287;  // std dev = 4.935, 126.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=33 */
%   | | | else return 0.2217852987358748;  // std dev = 4.786, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.001006077956655051;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7480325422264149;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7440027095025828;  // std dev = 2.508, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.1637585738170703;  // std dev = 0.092, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | | else if ( location(A, I) )
%   | | | then return 0.24521103734218666;  // std dev = 1.559, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.36471427081176927;  // std dev = 1.245, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.5888801916661459;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08839696303616597;  // std dev = 4.277, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6671953655496843;  // std dev = 0.993, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14906246533438205;  // std dev = 8.82e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4705785830325417;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0529516773895701;  // std dev = 1.383, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.46367160531512674;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.22544093759164655;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6228259143123499;  // std dev = 0.967, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.04056579810389754;  // std dev = 4.960, 217.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5422554629941156;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.04495362633951952;  // std dev = 1.700, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2480531385316721;  // std dev = 0.968, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17300449291251854;  // std dev = 0.803, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.057760372608681894;  // std dev = 5.301, 241.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4078574949264311;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.21000195304349312;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.010901351650731741;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.29346241043393456;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.25945426977933106;  // std dev = 0.643, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.314171844468207;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.0033622612517641404;  // std dev = 2.199, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1172151664076852;  // std dev = 0.741, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06480636301278005;  // std dev = 4.680, 174.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=55 */
%   | | | else return 0.0070427372197930235;  // std dev = 1.925, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2798013573082382;  // std dev = 0.232, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2507044342357987;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5199899282834173;  // std dev = 1.319, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18808395394726274;  // std dev = 0.685, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3053190711210387;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04261562876526061;  // std dev = 4.018, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19351580217784026;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.24523505889534167;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39792170512304365;  // std dev = 2.600, 79.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=71 */
%   | | else return -0.15130156327270575;  // std dev = 0.297, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2065966708884326;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03983052919582042;  // std dev = 1.410, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19407003829050873;  // std dev = 0.142, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.6574445833735315;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.16533285092416025;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04554344549151161;  // std dev = 1.396, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.10277404622227143;  // std dev = 0.600, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.02733257450400899;  // std dev = 1.559, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.00594547547453278;  // std dev = 0.722, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.045868110539191646;  // std dev = 3.326, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | | else return 0.02639412241243852;  // std dev = 1.425, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.15382215568724703;  // std dev = 0.089, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.25056657170916585;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14382315624208752;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.02276790309933188;  // std dev = 2.450, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20334388783299853;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.017331981703287595;  // std dev = 3.698, 143.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=40 */
%   | | | else return 0.2191480303565218;  // std dev = 1.125, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.172', 'seconds']
Parameter learned model CLL:-0.192969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.935, 93, 33], 'false,false,true,false': [4.786, 63, 36], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.309, 12, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.052, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.508, 7, 69], 'false,false,true,false': [0.092, 176, 0], 'false,false,false,true': [1.559, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.245, 2, 8], 'true,false': [0.05, 0, 3], 'false,true,true': [4.277, 92, 34], 'false,true,false,true': [0.993, 1, 37], 'false,true,false,false': [8.82e-08, 83, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [1.383, 9, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.083, 0, 10], 'true,false': [0.837, 2, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.967, 1, 14], 'false,true,false': [4.96, 160, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.7, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.968, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.803, 1, 4], 'false,true': [5.301, 170, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.033, 0, 7], 'true,true,false': [0.643, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.199, 39, 12], 'false,false,true': [0.741, 1, 3], 'false,false,false,true': [4.68, 119, 55], 'false,false,false,false': [1.925, 17, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.232, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.319, 2, 33], 'true,false': [0.685, 89, 0], 'false,true': [0.039, 0, 3], 'false,false,true': [4.018, 94, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.116, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.6, 8, 71], 'false,true,false': [0.297, 133, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.41, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.142, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.037, 0, 3], 'false,true,true': [1.396, 47, 11], 'false,true,false,true': [0.6, 1, 1], 'false,true,false,false': [1.559, 36, 17], 'false,false,true': [0.722, 1, 3], 'false,false,false,true': [3.326, 76, 40], 'false,false,false,false': [1.425, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.089, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.033, 0, 3], 'false,true': [2.45, 80, 29], 'false,false,true': [0.03, 0, 3], 'false,false,false,true': [3.698, 103, 40], 'false,false,false,false': [1.125, 4, 4]}]
{'': [0.07638888888888877, 0.21206109578877774], 'false': [1.4802973661668753e-16, 0.20868861127635796], 'false,false': [0.21262222222222243, 0.15419501133786834], 'false,false,true': [0.19331065759637314, 0.23140495867768718], 'false,false,false': [0.20408163265306126, 0.12244897959183677], 'true': [-2.220446049250313e-16, 0.18750000000000006], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.00044937956321764653, 0.20274832416120372], 'false': [0.0, 0.20093574101690378], 'false,false': [0.19856886285633554, 0.2429996167572112], 'false,false,false': [0.2429996167572112, nan], 'false,false,true': [0.08278678137394875, 4.852152491882896e-05], 'true': [7.401486830834377e-17, 0.0005437492714932546], 'false,true': [0.0, nan]}
{'': [0.12825848814102925, 0.151478936980963], 'false': [0.1484581949135827, 0.19979917182747703], 'false,false': [0.2222222222222222, 0.159310962765406], 'false,false,true': [nan, 0.2222222222222222], 'false,false,false': [0.159310962765406, nan], 'false,true': [0.1451912068139269, 0.1516782317739951], 'false,true,false': [0.025942544064053333, 9.36332671370614e-17], 'true': [0.15489282761143258, 0.000823233440332638]}
{'': [0.1387696384760314, 0.13475662938146893], 'true': [0.0006892504542676647, 0.23374829332439306], 'false': [0.13059595698674872, 0.19508194580310115], 'false,false': [0.0, 0.1926305890603891], 'false,false,false': [0.1926305890603891, nan], 'false,true': [0.06237535712341972, 0.11339182767236639], 'false,true,true': [nan, 0.06237535712341978], 'false,false,true': [nan, 0.0]}
{'': [0.12311038039209678, 0.12084939508429467], 'true': [0.11721894557111306, 0.12907064582304345], 'false': [0.11660227873825842, 0.18807987127847417], 'false,false': [0.0, 0.19380429581121605], 'false,false,false': [0.24999999999999997, 0.16000000000000003], 'true,true': [0.11721894557111306, nan], 'false,false,true': [nan, 0.0]}
{'': [0.03484882964206651, 0.12394761374975695], 'false': [0.09483954808410577, 0.13054011392039983], 'false,false': [0.13710421696064418, 0.13033719977705263], 'false,false,false': [0.12587971727414557, 0.16111194400629772], 'true': [0.03792573641385338, 0.0], 'true,true': [0.00015723592041911555, 0.10328462360322851], 'true,false': [nan, 0.0]}
{'': [0.11532382876201996, 0.11934784336550977], 'false': [0.0005154203343332164, 0.12049703501047829], 'false,false': [0.12049703501047829, nan], 'true': [0.049721671683952924, 0.005265409088796961], 'true,true': [0.004953859121491327, 0.049690457608425574], 'true,true,false': [nan, 0.04969045760842542], 'true,true,true': [0.005372278585251045, 0.0]}
{'': [0.0018958044584053248, 0.10491288856344633], 'false': [0.10283140930746308, 0.13432568840645864], 'false,false': [0.0, 0.14206631736782205], 'false,false,false': [0.14206631736782205, nan], 'false,true': [0.08559206296452782, 0.0006654270551905263], 'false,true,true': [nan, 0.08559206296452763], 'true': [4.625929269271485e-18, 0.002711743527358523], 'false,false,true': [0.0, nan]}
{'': [0.056326221240435674, 0.07577469989826917], 'false': [0.043385890760389595, 0.10172067976224865], 'false,false': [0.13043101276285682, 0.10076350223903757], 'false,false,false': [0.09538974010824602, 0.1449505645036055], 'true': [0.0025346304167225622, 0.1272706363997419], 'true,false': [0.0, 0.0004535052689493881], 'false,true': [0.0336093023161121, 0.051312243656259963], 'false,true,false': [0.17987854835862357, 0.04584513106981669]}
{'': [0.0016640052069413415, 0.08183803074368898], 'false': [0.0550491146542656, 0.10059806829949099], 'false,false': [0.0003050186099288338, 0.10174664752580848], 'false,false,false': [0.09562184304561344, 0.15826752865005977], 'true': [0.0020201037418412712, 0.00035945730501911233], 'true,true': [0.0020201037418412712, nan], 'true,true,true': [0.0011387547367479839, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 17.479
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( enzyme(A, H), phenotype(G, I) )
%   | | | then return 0.21529179224236922;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.13814893509951187;  // std dev = 5.940, 175.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=49 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.001006077956655051;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.05280674554428777;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6682303137799278;  // std dev = 3.422, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | | else return -0.16205861302556598;  // std dev = 0.055, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.2735209274561253;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.10802642175919408;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.569305207429852;  // std dev = 0.044, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.0232260956170407;  // std dev = 1.925, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.14488411104767748;  // std dev = 3.813, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6692850824555817;  // std dev = 1.386, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14153028389430755;  // std dev = 0.036, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.814390977026079;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1736248725022632;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.0660174745770541;  // std dev = 0.599, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.011990339840894435;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4141276788020022;  // std dev = 9.13e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5792606704105621;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.39915198839171184;  // std dev = 3.599, 96.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=68 */
%   | | | else return -0.14456498945974727;  // std dev = 0.391, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.02781047412289029;  // std dev = 0.657, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.2501446282083654;  // std dev = 0.785, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.539010597661449;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.33489276519694416;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.016060808363768626;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3184172074442455;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.35743857941412854;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( complex(F, G), enzyme(A, H) )
%   | | | then return 0.11942603818395583;  // std dev = 1.354, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.00946273695861775;  // std dev = 2.605, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | | else if ( interaction(A, I), location(I, J) )
%   | | | then return 0.14923153328983157;  // std dev = 2.196, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | | else return 0.05022403450083518;  // std dev = 3.280, 112.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return -0.06510170184788755;  // std dev = 0.666, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.0104601828472679;  // std dev = 0.657, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.32199180036433167;  // std dev = 0.979, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2765357909865643;  // std dev = 0.046, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4212732600164625;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.14099691161692626;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.20228379609804126;  // std dev = 0.192, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, G), enzyme(I, J) )
%   | | | then return 0.06651695044391753;  // std dev = 4.605, 191.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=64 */
%   | | | else return 0.3077819394855314;  // std dev = 0.514, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.22604209700602818;  // std dev = 1.303, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.18506793327289423;  // std dev = 0.244, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11116748133316165;  // std dev = 0.727, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23414901029086146;  // std dev = 0.048, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( phenotype(A, E), interaction(F, A) )
%   | | | then return 0.407246202544475;  // std dev = 1.411, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.5184706889014185;  // std dev = 0.378, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.17325585123811346;  // std dev = 0.074, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2274304132708278;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( location(A, I), location(H, I) )
%   | | | then return 0.10526765721437091;  // std dev = 1.192, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.33246937781989;  // std dev = 0.830, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.11703972201434741;  // std dev = 1.015, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.04522065051936275;  // std dev = 2.799, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16755548810308518;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.05986240030103281;  // std dev = 0.753, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.35387026606992805;  // std dev = 1.638, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return 0.28981034383389326;  // std dev = 2.564, 53.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.12233040830241092;  // std dev = 0.246, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.15471438343324972;  // std dev = 0.558, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2742887175174218;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.09281778913689295;  // std dev = 0.504, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.06271188431596851;  // std dev = 0.878, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16434643416496325;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.7034915741339904;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.016271668453743407;  // std dev = 0.555, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.32530760260902447;  // std dev = 0.187, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | else return -0.15382394070742675;  // std dev = 0.086, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(I, I), interaction(H, I) )
%   | | | then return -0.023971475285120142;  // std dev = 2.405, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.06241661091462539;  // std dev = 1.646, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06313907373661036;  // std dev = 0.719, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.17913507366476336;  // std dev = 0.327, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1431566100692439;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.17322515498294402;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( enzyme(G, I), interaction(G, J) )
%   | | | then return 0.036936812123303416;  // std dev = 0.714, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.03570322949201437;  // std dev = 1.661, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.03826174530544616;  // std dev = 0.990, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.03983175381815265;  // std dev = 0.383, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return -0.09230132244515113;  // std dev = 0.797, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, N) )
%   | | | then return -0.01581593767080117;  // std dev = 1.869, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.03269084856941673;  // std dev = 2.445, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '41.249', 'seconds']
Refined model CLL: -0.183977


******************************************
Best model found
******************************************
Results 

CLL : -0.196225 

AUC ROC : 0.99038 

AUC PR : 0.374406 

Precision : 0.161212 

Recall : 0.943262 

F1 : 0.275362 

Total Learning Time : 17.479 

Total Inference Time : 38.47804284095764 

Total revision time: 76.52275490379333
Best scored revision CLL: -0.183977


Results 

CLL : -0.196225 

AUC ROC : 0.99038 

AUC PR : 0.374406 

Precision : 0.161212 

Recall : 0.943262 

F1 : 0.275362 

Total Learning Time : 76.55374383544921 

Total Inference Time : 38.47804284095764 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.875
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11865313678018337;  // std dev = 4.788, 119.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=31 */
%   | | | else return 0.21814893509951153;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7356630398665784;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7190456120185068;  // std dev = 2.966, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return -0.16493095334339924;  // std dev = 0.093, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | | else if ( location(A, I) )
%   | | | then return 0.20810380147211915;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4184966622816656;  // std dev = 1.272, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.41433422087128857;  // std dev = 0.933, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0757580329794243;  // std dev = 4.359, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5856206305182238;  // std dev = 2.301, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.14845353943981582;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8151379156364241;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05081564106011305;  // std dev = 1.645, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.34734968480299855;  // std dev = 1.349, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.4885914877936842;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4829764163504546;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.43930482451876685;  // std dev = 2.192, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else return 0.015976375713641543;  // std dev = 5.129, 265.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5736018576550017;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1444184152739422;  // std dev = 1.581, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.36738104511377406;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2114540026278577;  // std dev = 1.311, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.060918949924413164;  // std dev = 5.744, 280.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.431179646147995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10424807735571599;  // std dev = 1.575, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.29356227263814666;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4298306003463754;  // std dev = 0.235, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3299923866320942;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.002187540576410544;  // std dev = 2.851, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3359300261781753;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05704143874992419;  // std dev = 4.627, 173.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=51 */
%   | | | else return 0.05044458882922219;  // std dev = 2.227, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2096817728026295;  // std dev = 1.050, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.2614951604326028;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24920067512108135;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5523842794494054;  // std dev = 0.893, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1870873928241829;  // std dev = 0.884, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2754678631091418;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04002994486779798;  // std dev = 4.426, 169.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19558916187204703;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1254434708850312;  // std dev = 0.966, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39711841854702984;  // std dev = 2.931, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else return -0.1485545429021178;  // std dev = 0.503, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21421432590260892;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.019423300947179367;  // std dev = 1.371, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.12536239046410672;  // std dev = 0.588, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.0019844870809299455;  // std dev = 0.347, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21823605257305792;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04354298721517764;  // std dev = 1.909, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.0016791324922146855;  // std dev = 1.364, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.05580249842876617;  // std dev = 1.427, 64.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.03703717206961924;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.039155175121665414;  // std dev = 3.811, 144.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=47 */
%   | | | else return -0.02473820057862121;  // std dev = 1.415, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14994336286596988;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.17827508931444683;  // std dev = 0.115, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.7409361331831648;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.004906189888097018;  // std dev = 0.702, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.014940982483712456;  // std dev = 2.501, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19706171087892382;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.031052625555212158;  // std dev = 3.584, 161.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=47 */
%   | | | else return -0.04864879158767264;  // std dev = 1.450, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.105', 'seconds']
Parameter learned model CLL:-0.197585 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.788, 88, 31], 'false,false,true,false': [5.367, 80, 45], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [0.051, 0, 10], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.966, 10, 76], 'false,false,true,false': [0.093, 192, 0], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.272, 2, 11], 'true,false': [0.933, 1, 6], 'false,true,true': [4.359, 94, 34], 'false,true,false,true': [2.301, 6, 48], 'false,true,false,false': [0.0, 94, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.645, 12, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.349, 2, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.104, 0, 3], 'false,true,true,false': [2.192, 7, 21], 'false,true,false': [5.129, 207, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.581, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.05e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.311, 2, 10], 'false,true': [5.744, 198, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.575, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.038, 0, 9], 'true,true,false': [0.235, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.851, 64, 19], 'false,false,true': [0.05, 0, 8], 'false,false,false,true': [4.627, 122, 51], 'false,false,false,false': [2.227, 22, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [1.05, 1, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [0.893, 1, 33], 'true,false': [0.884, 99, 0], 'false,true': [0.025, 0, 5], 'false,false,true': [4.426, 122, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.966, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.931, 10, 82], 'false,true,false': [0.503, 180, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.371, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.588, 1, 9], 'true,false,true': [0.347, 1, 2], 'true,false,false': [0.095, 0, 5], 'false,true,true': [1.909, 39, 13], 'false,true,false,true': [1.364, 4, 8], 'false,true,false,false': [1.427, 53, 11], 'false,false,true': [0.909, 1, 5], 'false,false,false,true': [3.811, 97, 47], 'false,false,false,false': [1.415, 13, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.115, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.702, 1, 3], 'false,true': [2.501, 88, 32], 'false,false,true': [0.02, 0, 5], 'false,false,false,true': [3.584, 114, 47], 'false,false,false,false': [1.45, 16, 4]}]
{'': [0.05246913580246885, 0.21966923368261637], 'false': [-2.5376526277146434e-16, 0.21301775147929103], 'false,false': [0.2144584789035208, 0.18749999999999983], 'false,false,true': [0.19264176258738913, 0.23040000000000121], 'false,false,false': [0.18749999999999983, nan], 'true': [-1.4802973661668753e-16, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.0002176642576841287, 0.20387613398985557], 'false': [0.10937500000000006, 0.20023019837379927], 'false,false': [0.19861927498562534, 0.23140495867768604], 'false,false,false': [0.23140495867768604, nan], 'false,false,true': [0.10226611434142549, 4.489728900512746e-05], 'false,true': [0.10937500000000006, nan], 'true': [6.344131569286608e-17, 0.00026210404362787544]}
{'': [0.12438776792964493, 0.15756224534789773], 'false': [0.15547186534776514, 0.1914894429188972], 'false,false': [0.1914894429188972, nan], 'false,false,true': [0.0, 0.16909350137112206], 'false,true': [0.1484677546525926, 0.1606468060356146], 'false,true,false': [0.09803922334762574, -4.724353296277262e-18], 'true': [0.12441966025309745, 0.12431727748192567]}
{'': [0.09677945312152288, 0.1267382024192094], 'false': [0.12230181563267381, 0.2224613571440159], 'false,false': [0.0, 0.22733524794987628], 'false,false,false': [0.22733524794987628, nan], 'false,true': [0.15545689590683082, 0.09927838291797565], 'false,true,true': [0.0035713131353436087, 0.17154578269411966], 'true': [0.1011061290422593, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.0961320753741379, 0.12162286832739512], 'false': [0.11784773458796298, 0.1984522975550473], 'false,false': [0.0, 0.20676812358158478], 'false,false,false': [0.20676812358158478, nan], 'true': [1.586032892321652e-17, 0.14325160891876218], 'true,true': [1.586032892321652e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.007733188008435185, 0.11955000415360707], 'false': [0.09796388596858481, 0.12663758444273693], 'false,false': [0.00031308627569920366, 0.1286244373189923], 'false,false,false': [0.12374024274472281, 0.15499288892786556], 'true': [0.008228309764558262, 0.0], 'true,true': [0.00015882146421132405, 0.009191107933240369], 'true,false': [nan, 0.0]}
{'': [0.11332287645967963, 0.1141306538395375], 'false': [0.00012407013734943017, 0.11591078447762795], 'false,false': [0.11591078447762795, nan], 'true': [0.06132785143988935, 0.007888645788512302], 'true,true': [0.06495309909314952, 0.028410374632431575], 'true,true,true': [0.0688547485430776, 0.0], 'true,true,false': [0.0, 0.023464175264372344]}
{'': [0.053037766057148, 0.10066059802224069], 'false': [0.09917209573563598, 0.1276398102464791], 'false,false': [0.0, 0.1342273699895866], 'false,false,false': [0.1342273699895866, nan], 'false,true': [0.09340437649887212, 0.0014074446570843608], 'false,true,true': [nan, 0.0934043764988723], 'true': [-7.93016446160826e-18, 0.08487557585497181], 'false,false,true': [0.0, nan]}
{'': [0.031495202375738676, 0.08620624566470554], 'false': [0.05917622392875496, 0.10428347934379541], 'false,false': [0.137760359595724, 0.10303512405446472], 'false,false,false': [0.1008540300133367, 0.1178589671320689], 'false,true': [0.07005953411446729, 0.051725631420461396], 'false,true,false': [0.1550546948542204, 0.03182972604347329], 'true': [0.03461491640803869, 0.027536724361839408], 'true,false': [0.040081932404154516, 0.0018231922543902213]}
{'': [0.07222056158246609, 0.07056719450821013], 'true': [0.05532839546156717, 0.12303432429176266], 'false': [0.05213828411725227, 0.08176879392350067], 'false,false': [7.694755331948965e-05, 0.08320395355237176], 'false,false,false': [0.07977344053871996, 0.10516918077620221], 'true,true': [0.0012175782487742802, 0.0], 'true,true,true': [-3.96508223080413e-18, 0.0022058702776115067], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 15.45
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.03148226843284571;  // std dev = 3.278, 75.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   | | | else return 0.1914822684328457;  // std dev = 3.055, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.09148226843284571;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.22035365950896124;  // std dev = 5.417, 127.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.49327268722383816;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7432726872238381;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6612011030216403;  // std dev = 3.642, 92.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   | | | else return -0.1618520063341854;  // std dev = 0.151, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.17504716582635083;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.33320549123154836;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.4020486248875514;  // std dev = 0.840, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.568715291554218;  // std dev = 0.030, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.04012273603013898;  // std dev = 3.335, 88.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=19 */
%   | | | else return 0.1418283129844204;  // std dev = 2.781, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.65395058762209;  // std dev = 1.689, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.14526820674434643;  // std dev = 0.073, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.11498409287008367;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7412873445162166;  // std dev = 0.224, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.2006704899386413;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.16948841736693993;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.429266843033868;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.41427081494523577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5242786802739947;  // std dev = 0.203, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.14588947061257146;  // std dev = 2.949, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return 0.06448003204142257;  // std dev = 4.970, 205.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=59 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.367557632859568;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.40615436886794437;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04230372077576411;  // std dev = 1.102, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.26202408436625435;  // std dev = 0.293, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.3406108285962196;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.30998089117983024;  // std dev = 4.305, 119.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=76 */
%   | | | else return -0.15820332197883705;  // std dev = 0.636, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.20533894040676615;  // std dev = 0.689, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11692165063240996;  // std dev = 1.120, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2869452858012381;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.20628687405370674;  // std dev = 1.334, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.14781560622906637;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3080865282284561;  // std dev = 0.045, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.32869203926472906;  // std dev = 0.185, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2319715778635646;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14609520316671953;  // std dev = 0.033, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.010276827137373113;  // std dev = 2.086, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.24096592809303527;  // std dev = 1.700, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2638099470951828;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return -0.03217024028386596;  // std dev = 2.302, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return 0.05412169228007479;  // std dev = 4.040, 154.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24936105709767575;  // std dev = 0.053, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 1.4136946172230158E-4;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4572471611338787;  // std dev = 1.839, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.17337470105672684;  // std dev = 0.106, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then return -0.46566172336512324;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2016097415859135;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3975778066082561;  // std dev = 1.685, 35.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=29 */
%   | | | else return -0.16345501932703813;  // std dev = 0.433, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0.013828110508569224;  // std dev = 0.301, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20777468738967914;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.17388448070521578;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2572392983256523;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.18510880699905585;  // std dev = 2.049, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.3375873140960137;  // std dev = 2.360, 71.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=63 */
%   | | else return -0.1346037625236408;  // std dev = 0.034, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.15728829456976867;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.2136354224968785;  // std dev = 0.547, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0728737113268803;  // std dev = 0.984, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1755160695864989;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17304360062077148;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, E), interaction(E, A) )
%   | | | then return 0.4006177795424077;  // std dev = 0.293, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.16506249627014724;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.1384806363865749;  // std dev = 0.703, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.058244670084090636;  // std dev = 1.773, 84.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16557379821206858;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J) )
%   | | | then return 0.009717148237818392;  // std dev = 3.071, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
%   | | | else return -0.03671024716192948;  // std dev = 1.270, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.029815432459623495;  // std dev = 0.917, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.13825319571623082;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17399368499892276;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( location(A, H) )
%   | | then return -0.01569745366369879;  // std dev = 0.228, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | else return 0.142093395143476;  // std dev = 0.487, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.011901911215880226;  // std dev = 0.858, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.03928799422434431;  // std dev = 1.456, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.03321906126132211;  // std dev = 3.030, 111.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '10.699', 'seconds']
Refined model CLL: -0.187947


******************************************
Best model found
******************************************
Results 

CLL : -0.168122 

AUC ROC : 0.989865 

AUC PR : 0.347158 

Precision : 0.270402 

Recall : 0.837736 

F1 : 0.40884 

Total Learning Time : 15.45 

Total Inference Time : 31.956596851348877 

Total revision time: 70.38723392486573
Best scored revision CLL: -0.187947


Results 

CLL : -0.168122 

AUC ROC : 0.989865 

AUC PR : 0.347158 

Precision : 0.270402 

Recall : 0.837736 

F1 : 0.40884 

Total Learning Time : 70.41822285652161 

Total Inference Time : 31.956596851348877 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.303
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06327714022771751;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.12644161802634063;  // std dev = 5.674, 164.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951233;  // std dev = 3.775, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6083623010998432;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8433143862925092;  // std dev = 0.021, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15654553430481413;  // std dev = 0.039, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | | else if ( location(A, K) )
%   | | | then return 0.227720824843321;  // std dev = 3.333, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.5111341045024221;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.42418425123819503;  // std dev = 0.910, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.575797612107128;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10926069007562858;  // std dev = 2.009, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.684653178771574;  // std dev = 0.270, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1382258942523685;  // std dev = 9.42e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1203158683669563;  // std dev = 3.660, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.319672501769406;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43841540387789146;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4648002551398251;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38644614484384787;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29857261971354837;  // std dev = 0.798, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.05938036204785006;  // std dev = 4.183, 187.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.525493320428187;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.15777921466607514;  // std dev = 3.382, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.1427671870495074;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3490751451640229;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3332084499575407;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05998446055267258;  // std dev = 4.204, 191.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3956959059769779;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1274564782487575;  // std dev = 3.466, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.7382086167296671;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2629383486061708;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.34073259657441196;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.28811208501522756;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30594891110435396;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07394748210812123;  // std dev = 1.063, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2695516194039582;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.060320501342630256;  // std dev = 3.959, 162.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=49 */
%   | | | else return 0.02354799497617591;  // std dev = 3.780, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23464981320057646;  // std dev = 0.104, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22741430114962047;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21695769869371384;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6104683937773426;  // std dev = 1.028, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.19656979196128355;  // std dev = 0.735, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22047323816293804;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.049820896436816996;  // std dev = 3.332, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17787385997910252;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18515656794965346;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44332260185905803;  // std dev = 0.749, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14213853826618947;  // std dev = 0.408, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19000073839515091;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03608605151705751;  // std dev = 3.026, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1558981148380636;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12703740440667288;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1667349511059556;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09831690537391813;  // std dev = 0.544, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2327567860932842;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.02501498297682151;  // std dev = 1.246, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15864375097874478;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026050559084454646;  // std dev = 2.785, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | | else return 0.02436766632019402;  // std dev = 3.034, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14063261372309113;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.10979737895815081;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12385674991582885;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13493026279524145;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.04637242719813801;  // std dev = 1.842, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1386035682794609;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02396803420094088;  // std dev = 2.637, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return -0.004905495602277509;  // std dev = 3.107, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.076', 'seconds']
Parameter learned model CLL:-0.179197 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.522, 31, 8], 'false,false,true,false': [5.674, 120, 44], 'false,false,false,true': [3.775, 57, 19], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.021, 0, 52], 'false,false,true,false': [0.039, 158, 0], 'false,false,false,true': [3.333, 29, 18], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.91, 1, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.009, 20, 8], 'false,true,false,true': [0.27, 0, 48], 'false,true,false,false': [9.42e-08, 113, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.66, 43, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.043, 0, 11], 'true,false': [0.031, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.798, 2, 3], 'false,true,false': [4.183, 135, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.382, 31, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.017, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.044, 0, 9], 'false,true': [4.204, 135, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.466, 33, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.03, 0, 7], 'true,true,false': [0.062, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.063, 24, 3], 'false,false,true': [0.024, 0, 6], 'false,false,false,true': [3.959, 113, 49], 'false,false,false,false': [3.78, 47, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.104, 0, 12], 'true,true,true,false': [0.025, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.028, 1, 36], 'true,false': [0.735, 105, 0], 'false,true': [0.021, 0, 5], 'false,false,true': [3.332, 85, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.023, 0, 6], 'true,false': [0.021, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.749, 0, 56], 'false,true,false': [0.408, 160, 0], 'false,false,true,true': [0.022, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.026, 41, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.027, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.015, 0, 4], 'false,true,true': [0.544, 15, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.246, 50, 14], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [2.785, 75, 36], 'false,false,false,false': [3.034, 42, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.006, 0, 5], 'true,true,true,false': [0.878, 1, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.026, 0, 4], 'false,true': [1.842, 59, 17], 'false,false,true': [0.015, 0, 5], 'false,false,false,true': [2.637, 81, 36], 'false,false,false,false': [3.107, 47, 20]}]
{'': [-2.5376526277146434e-16, 0.19662306777645736], 'false': [-1.4802973661668753e-16, 0.189248165046619], 'false,false': [0.19054090125943446, 0.18594726413656407], 'false,false,true': [0.1630506245890863, 0.19631171921475396], 'false,false,false': [0.18749999999999947, 0.16000000000000003], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.062222222222222415, 0.2036644763197557], 'false': [7.401486830834377e-17, 0.2002744278507929], 'false,false': [0.18626104621647857, 0.24005323657025265], 'false,false,false': [0.236372001197027, 0.22222222222222213], 'false,false,true': [8.797298502526674e-06, 9.574899805383044e-06], 'true': [7.401486830834377e-17, 0.09876543209876568], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.06094744335636688, 0.16121145063041717], 'false': [0.14244258078742458, 0.21447578442354434], 'false,false': [0.21224204795157425, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.21265364126876884], 'false,true': [0.14415958209074883, 0.14214328310936541], 'false,true,false': [0.0015195510603203122, 7.859986015045356e-17], 'true': [0.11818311629766698, 0.00013914430887518314]}
{'': [0.0003172795799432241, 0.12768160494372502], 'false': [0.09594007124601205, 0.22926781736835136], 'false,false': [0.0029149058612280287, 0.2341049376650352], 'false,false,false': [0.23348253393530552, 0.24], 'false,true': [0.10718351978448566, 0.0935762001823617], 'false,true,true': [0.0, 0.12733326433824518], 'false,false,true': [0.0, 0.0], 'true': [0.00016884036312917158, 0.0003145735556000506]}
{'': [0.00021888234710884129, 0.12386503687211879], 'false': [0.09253592835081396, 0.2267901436866869], 'false,false': [0.0014056522691613949, 0.2335476165553526], 'false,false,false': [0.23100083810657374, 0.0], 'false,false,true': [0.0, 0.0], 'true': [6.017998533265345e-05, 0.00021713889131063583], 'true,true': [6.017998533265345e-05, nan]}
{'': [0.0015437452535318633, 0.12154487173105828], 'false': [0.041847669355476666, 0.12898330824597687], 'false,false': [9.877039431339478e-05, 0.131124564634884], 'false,false,false': [0.09674960193048085, 0.2132835557483261], 'true': [0.0018298851485752136, 0.0004423839614203691], 'true,true': [0.00013028965731749973, 0.0009529395202207969], 'true,false': [0.00027125830508752113, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.12788383856048757, 0.08924917683927407], 'true': [0.049876663716342994, 0.005144197856352736], 'false': [8.86343752286689e-05, 0.09177785305609816], 'false,false': [0.09177785305609816, nan], 'true,true': [0.0008304820059325693, 0.03178328199546089], 'true,true,false': [0.0, 0.028567272060506882], 'true,true,true': [0.0009094575570953537, 0.0003117550121221335]}
{'': [8.083264947217339e-05, 0.08671359284732601], 'false': [0.06919045728717906, 0.14603325487788651], 'false,false': [0.00023909633427894594, 0.15006133627637913], 'false,false,false': [0.15006133627637913, nan], 'false,true': [0.01000690594287049, 0.0010397659548246896], 'false,true,true': [nan, 0.010006905942870428], 'false,false,true': [0.00023909633427894594, nan], 'true': [8.491197090202314e-05, 5.504265752079296e-05]}
{'': [0.00016152008518641975, 0.07432537734184562], 'false': [0.025155223813303366, 0.09575585499284145], 'false,false': [5.394763373531841e-05, 0.09802345616042042], 'false,false,false': [0.06985397237460585, 0.1484541019215351], 'false,true': [0.01849633214129031, 0.02548572511143839], 'false,true,false': [0.0, 0.024268630235427448], 'true': [8.239480814504886e-05, 0.0002985491174357979], 'true,false': [0.0, 5.800735400639592e-05]}
{'': [0.06321265727141441, 0.07671631182334808], 'false': [0.044627926122593066, 0.08847632260000131], 'false,false': [4.3291121407179614e-05, 0.09046504652715061], 'false,false,false': [0.059435599573127385, 0.14412068497915292], 'true': [0.08405128495087061, 0.00017403474521224607], 'true,true': [0.10110476066960515, 0.0], 'true,true,true': [6.52895468237491e-06, 0.1926357829608548], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.193
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.024815601766178884;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.06504548682365029;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.1525414584639979;  // std dev = 6.667, 214.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=63 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7385128322212614;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7670719622367217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8219179972987662;  // std dev = 0.993, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15661205607657064;  // std dev = 0.120, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( location(A, J) )
%   | | | then return 0.10325315150063927;  // std dev = 3.638, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.3385472691476983;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.3788202762172368;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05937973099871529;  // std dev = 1.638, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6883548247010051;  // std dev = 0.240, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13940847498870798;  // std dev = 0.047, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.550660127024114;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11776365836442373;  // std dev = 3.701, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | else return 0.8240752338021375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.38106823187689953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5904916739437254;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return -0.03130033873193991;  // std dev = 1.540, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | | else return 0.06534423182707137;  // std dev = 3.922, 157.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=45 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41403200502403614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5831151352150472;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.018972840709063125;  // std dev = 1.963, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.14968582018721419;  // std dev = 3.128, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2207118471601497;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.16624844132254554;  // std dev = 0.392, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.1527198976720017;  // std dev = 1.654, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(A, G), enzyme(A, H) )
%   | | | then return 0.03598977680703079;  // std dev = 1.576, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.11381883261471855;  // std dev = 3.224, 107.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=41 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.37839066769276813;  // std dev = 0.060, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.07554463665139807;  // std dev = 3.663, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.6684443139547864;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26351494553810045;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.36173922787604035;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2819910651033528;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.1242651694657706;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.042997864916767346;  // std dev = 0.683, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.06147071306161789;  // std dev = 0.481, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2746385494962485;  // std dev = 1.29e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.025572557814840607;  // std dev = 3.374, 105.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=28 */
%   | | | else return 0.08707139021087577;  // std dev = 4.176, 120.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2380234714094334;  // std dev = 0.044, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.22341887061016696;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.637243444010666;  // std dev = 0.793, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.17571035599208648;  // std dev = 0.061, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.22341887061016696;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(G, I), interaction(H, H) )
%   | | | then return -0.08550719275560847;  // std dev = 0.592, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.028891214675997912;  // std dev = 2.895, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.037173600729904444;  // std dev = 0.913, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.21768524042235385;  // std dev = 0.969, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17672442011589254;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18475697005862196;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3302689928470327;  // std dev = 0.320, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4540604194434555;  // std dev = 0.899, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.13653187137596623;  // std dev = 0.323, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.1630714804449623;  // std dev = 0.269, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20051236080304818;  // std dev = 0.058, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.02223077526164829;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.10699563997669426;  // std dev = 2.372, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15300795612267798;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.17151219460158895;  // std dev = 0.425, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.009567331628579395;  // std dev = 0.723, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07402604973296405;  // std dev = 0.087, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2044503696299274;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.02258593085258613;  // std dev = 1.400, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16056521510577226;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.054826684845325935;  // std dev = 2.935, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.013916042097645721;  // std dev = 2.695, 113.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.09435040127720823;  // std dev = 0.151, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.18478493741467844;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, G), phenotype(A, I) )
%   | | | then return -0.07177840381459749;  // std dev = 0.348, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.014591244581982212;  // std dev = 1.166, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.0634713077052644;  // std dev = 0.435, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.11022014937975498;  // std dev = 0.580, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.14008383698467974;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.02305377346477099;  // std dev = 3.172, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | | else return 0.013015074898151709;  // std dev = 2.582, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '55.067', 'seconds']
Refined model CLL: -0.18167


******************************************
Best model found
******************************************
Results 

CLL : -0.1974 

AUC ROC : 0.981684 

AUC PR : 0.194518 

Precision : 0.134444 

Recall : 0.815884 

F1 : 0.230848 

Total Learning Time : 7.193 

Total Inference Time : 7.858511686325073 

Total revision time: 26.608824678421023
Best scored revision CLL: -0.179197


Results 

CLL : -0.1974 

AUC ROC : 0.981684 

AUC PR : 0.194518 

Precision : 0.134444 

Recall : 0.815884 

F1 : 0.230848 

Total Learning Time : 26.639813610076907 

Total Inference Time : 7.858511686325073 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.475
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.043863220813798086;  // std dev = 3.254, 70.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=13 */
%   | | | else return 0.18588002753648653;  // std dev = 5.120, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6387639659808863;  // std dev = 0.908, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7508965999392806;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.784207982236917;  // std dev = 1.683, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.159140630770793;  // std dev = 0.106, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08346871775528147;  // std dev = 2.877, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.15288007360931785;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5837195441213994;  // std dev = 0.094, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.631373711613934;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.045616585858782914;  // std dev = 2.825, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6451034419065514;  // std dev = 1.383, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1451373095614534;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4387990035534862;  // std dev = 0.740, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.050343428806760945;  // std dev = 2.592, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07256907437209376;  // std dev = 1.484, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4496138074131502;  // std dev = 0.144, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5362706465361873;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.32461667458773996;  // std dev = 1.203, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.05316518366542494;  // std dev = 4.331, 187.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.43835410253620066;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.631954548866848;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08415739596671276;  // std dev = 2.823, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return -0.10510913843438112;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3233382342600002;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3728132822168327;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.07967033148504539;  // std dev = 4.389, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.33487923728278546;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4060296118625296;  // std dev = 0.101, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2162228249824924;  // std dev = 2.290, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.08522846250812996;  // std dev = 1.455, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2558953364181946;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4121449406536819;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2648174960687715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.002505100411320349;  // std dev = 0.770, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.05745750662239468;  // std dev = 1.341, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15118670736123768;  // std dev = 0.799, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.07046532034737317;  // std dev = 3.936, 148.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | | | else return 0.011150242024006034;  // std dev = 3.166, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2433259385893745;  // std dev = 0.194, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2816152212570766;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24641452327302937;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5852123245667102;  // std dev = 1.073, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17422503224341956;  // std dev = 0.589, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2919543696851246;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06641314322656999;  // std dev = 3.297, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17195246819742582;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.09108481400103295;  // std dev = 0.920, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4102833292074297;  // std dev = 1.716, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14915554310596668;  // std dev = 0.198, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2293885813547637;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.012737425662681828;  // std dev = 2.536, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1493610348145312;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1770654391860207;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.06813882385576797;  // std dev = 0.775, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09007954537800802;  // std dev = 0.320, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.28440525632377295;  // std dev = 0.197, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.014294169858681902;  // std dev = 1.412, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21944332914959228;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05344988710881906;  // std dev = 2.702, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | | | else return 0.029202264423995376;  // std dev = 2.497, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1308839087713397;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.13327868728326026;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.15648977247446128;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18169631499191718;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20742392783730382;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.025663166910261537;  // std dev = 1.751, 99.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1841712119371075;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06491207521991428;  // std dev = 2.545, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   | | | else return 0.07553588763012703;  // std dev = 2.383, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.724', 'seconds']
Parameter learned model CLL:-0.184821 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [1.095, 2, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [1.095, 2, 3], 'false,false,true,true': [3.254, 57, 13], 'false,false,true,false': [5.12, 80, 39], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.908, 1, 7], 'false,true,true': [0.096, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.683, 3, 52], 'false,false,true,false': [0.106, 139, 0], 'false,false,false,true': [2.877, 34, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.094, 0, 11], 'true,false': [0.075, 0, 4], 'false,true,true': [2.825, 52, 14], 'false,true,false,true': [1.383, 2, 42], 'false,true,false,false': [0.0, 104, 0], 'false,false,true,true': [0.74, 1, 3], 'false,false,true,false': [2.592, 31, 9], 'false,false,false,true': [1.484, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.144, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.203, 3, 6], 'false,true,false': [4.331, 138, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.823, 30, 11], 'false,false,false,false': [0.943, 8, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.02, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.093, 0, 6], 'false,true': [4.389, 122, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.101, 0, 2], 'false,false,false,true': [2.29, 13, 9], 'false,false,false,false': [1.455, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.008, 0, 9], 'true,true,false': [0.085, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.77, 1, 2], 'false,true': [1.341, 30, 5], 'false,false,true': [0.799, 1, 5], 'false,false,false,true': [3.936, 102, 46], 'false,false,false,false': [3.166, 44, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.194, 0, 13], 'true,true,true,false': [0.12, 0, 3], 'true,true,false,true': [0.047, 0, 3], 'true,true,false,false': [1.073, 1, 33], 'true,false': [0.589, 101, 0], 'false,true': [0.008, 0, 3], 'false,false,true': [3.297, 66, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.92, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.716, 3, 56], 'false,true,false': [0.198, 131, 0], 'false,false,true,true': [0.106, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.536, 36, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.014, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.775, 1, 5], 'false,true,true': [0.32, 18, 1], 'false,true,false,true': [0.197, 0, 6], 'false,true,false,false': [1.412, 50, 17], 'false,false,true': [0.007, 0, 3], 'false,false,false,true': [2.702, 57, 31], 'false,false,false,false': [2.497, 32, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.012, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.041, 0, 2], 'true,false': [0.068, 0, 3], 'false,true': [1.751, 75, 24], 'false,false,true': [0.006, 0, 3], 'false,false,false,true': [2.545, 51, 31], 'false,false,false,false': [2.383, 24, 12]}]
{'': [0.1388888888888886, 0.20932490643316187], 'false': [0.17283950617283939, 0.2013691577201058], 'false,false': [0.19943450631281395, 0.20999999999999946], 'false,false,false': [0.19834710743801665, 0.24489795918367335], 'false,false,true': [0.15122448979591782, 0.22032342348704237], 'false,true': [0.0, 0.1874999999999999], 'false,true,false': [1.4802973661668753e-16, 0.23999999999999994], 'true': [0.07100591715976314, 0.23999999999999994]}
{'': [0.05378264935097998, 0.1997626206939763], 'false': [0.0013165556360128505, 0.19374709182563485], 'false,false': [0.19541883538633462, 0.18665367752645487], 'false,false,true': [0.0514758116460819, 8.159823624084511e-05], 'false,false,false': [0.18398132019331, 0.22222222222222224], 'true': [-2.220446049250313e-16, 0.1029601991346401], 'false,true': [0.0013165556360128505, nan]}
{'': [0.0014088905960374968, 0.14613894273492187], 'false': [0.1368672555331183, 0.18217671909545607], 'false,false': [0.17763630318427223, 0.2002013357247855], 'false,false,false': [0.2002013357247855, nan], 'false,false,true': [0.1368363693240417, 0.167998320792858], 'false,true': [0.1209095595034602, 0.1433814767111787], 'false,true,false': [0.043459052253854207, -8.113168256876143e-17], 'true': [0.0008043225651116985, 0.0014061115828522541]}
{'': [0.0013770918690417134, 0.12317832533630241], 'false': [0.10691401613400532, 0.18358572709506132], 'false,false': [0.008329140626539, 0.18249586691837869], 'false,false,false': [0.19442779067619165, 0.09876543209876538], 'false,true': [0.14882912824700806, 0.10032613769898138], 'false,true,true': [0.0, 0.1608859576680757], 'false,false,true': [0.0, 0.0], 'true': [0.0013770918690417134, nan]}
{'': [0.0011928168756047666, 0.12793644538200574], 'false': [0.10823474126025397, 0.2173944322137455], 'false,false': [0.004499889602522548, 0.23367961092208997], 'false,false,false': [0.23833256751651033, 0.21164593435181986], 'false,false,true': [0.0, 0.005062375802837887], 'true': [4.4664595550883116e-05, 0.001446377073486919], 'true,true': [4.4664595550883116e-05, nan]}
{'': [0.052319668985982795, 0.11556627595569101], 'false': [0.05138100996835238, 0.12432201788687913], 'false,false': [0.10636306413099715, 0.12457648108288653], 'false,false,false': [0.10469998980833872, 0.17276810840065765], 'true': [0.005757821610329083, 0.16109469140702853], 'true,false': [0.0, 0.19759097364715025], 'true,true': [7.877435620819008e-06, 0.0017932383562137277], 'true,false,true': [0.0, nan]}
{'': [0.11123998251239463, 0.11015368102794812], 'true': [0.04870053541843541, 0.0034364334189032064], 'false': [2.170417229461578e-05, 0.11203375929706759], 'false,false': [0.11203375929706759, nan], 'true,true': [0.0034805590161566535, 0.039758634667088025], 'true,true,false': [0.0007490620830844785, 0.03389384900759542], 'true,true,true': [0.0029015771488218535, 0.004798299242918441]}
{'': [0.05457628594042556, 0.09249832114077008], 'false': [0.08271971556413893, 0.12892775789423602], 'false,false': [0.0037197893085417675, 0.13399221338597636], 'false,false,false': [0.13399221338597636, nan], 'false,true': [0.049938422154648617, 0.00029781344002847553], 'true': [-3.469446951953614e-18, 0.10588278313323743], 'false,true,true': [nan, 0.049938422154648617], 'false,false,true': [0.0037197893085417675, nan]}
{'': [0.03701293653966244, 0.07318045174593328], 'false': [0.03018409806994259, 0.10103715475994775], 'false,false': [1.4935959509881913e-05, 0.10265972654847205], 'false,false,false': [0.08295912808403882, 0.14166895867342816], 'true': [1.8258179254299067e-05, 0.08732635832446548], 'true,false': [0.0, 0.10018575030321379], 'false,true': [0.005394885877276713, 0.034556965286682055], 'false,true,false': [0.006476278185927192, 0.029738392269923926]}
{'': [0.00135329261847799, 0.07168190234435382], 'false': [0.030977201027130637, 0.10077846766603019], 'false,false': [1.1505372436729222e-05, 0.10300661636064115], 'false,false,false': [0.07896468660415315, 0.15769035781358887], 'true': [0.00048521354568302586, 0.0015343482863879136], 'true,true': [1.4751993525224939e-05, 0.0007009330450065826], 'true,true,false': [0.0, 0.0008396096389484339], 'true,true,true': [0.0, 6.91719963292238e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 9.038
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(H, A), interaction(I, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.11983117809016595;  // std dev = 4.547, 107.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=28 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.15814893509951197;  // std dev = 3.834, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | | | else return 0.24276431971489698;  // std dev = 3.038, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7927941835770488;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3861400788776212;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7826740833516708;  // std dev = 1.662, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15937435468401134;  // std dev = 0.164, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else if ( location(A, J) )
%   | | | then return 0.16585156346617105;  // std dev = 2.727, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return -0.007377000149545408;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5125040157100305;  // std dev = 0.229, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.10897777394180239;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.10798318302027343;  // std dev = 2.608, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6502635920467997;  // std dev = 1.384, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14127498903634042;  // std dev = 0.052, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7746890963417785;  // std dev = 0.240, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18029985679057775;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.13459134739999482;  // std dev = 1.886, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.3197001432094222;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.2851157887332295;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.45502768741555105;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6100988631408424;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4688812814212833;  // std dev = 0.885, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.005414634511938425;  // std dev = 2.463, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | | else return 0.1290535156498535;  // std dev = 3.325, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4970039781193179;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.0956827500396435;  // std dev = 1.356, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.029735473637895048;  // std dev = 2.439, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3388336726101805;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.23278020251877773;  // std dev = 0.342, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5288609017359759;  // std dev = 0.719, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.1512221654126037;  // std dev = 0.385, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.19353957279184264;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.019507892727726305;  // std dev = 3.379, 129.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=31 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.37983143906082045;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.021599470021493525;  // std dev = 1.926, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.24296740118764326;  // std dev = 1.724, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25015248973027293;  // std dev = 0.215, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), interaction(D, G) )
%   | | | then return -0.018042599266768662;  // std dev = 0.641, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.06617086296686191;  // std dev = 1.783, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.550485916268196;  // std dev = 0.358, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10107557883290247;  // std dev = 1.658, 49.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.40756958726658415;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07819069324618391;  // std dev = 2.628, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.086589192386145;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03873970665295499;  // std dev = 2.928, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.252543320007573;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2571848295691614;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5180888306279944;  // std dev = 1.226, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.14477037495664186;  // std dev = 0.057, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3027222941157259;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.49511058562633675;  // std dev = 0.182, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.15425695531390513;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.0027745496875505866;  // std dev = 1.991, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.05407577692180988;  // std dev = 1.795, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17934495341150497;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2213842463343283;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.10001201158990444;  // std dev = 0.784, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3614578383679965;  // std dev = 1.567, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | else return -0.1286050688914892;  // std dev = 0.031, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.040835152961266837;  // std dev = 1.034, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.0980320088012867;  // std dev = 1.817, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.23081076406287232;  // std dev = 0.860, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3551667679595816;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.15446997890993774;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.06727022397026343;  // std dev = 0.680, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.21518670818984786;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.07325290303367078;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17741088956985507;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.010225204083972884;  // std dev = 0.155, 92.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=21 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20485080778060816;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.03185873544165152;  // std dev = 2.728, 112.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=26 */
%   | | | else return 0.018306061056766864;  // std dev = 2.169, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.16286608286364274;  // std dev = 0.056, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.2385531510470752;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( enzyme(G, H), phenotype(A, I) )
%   | | | then return -0.025739645516541843;  // std dev = 0.288, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.06296500857159104;  // std dev = 0.587, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.020431607541405786;  // std dev = 0.792, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.08128869994133255;  // std dev = 1.031, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.07263001050037532;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.02574186952206141;  // std dev = 1.748, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return -0.02373417788891538;  // std dev = 3.040, 116.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '6.840', 'seconds']
Refined model CLL: -0.163592


******************************************
Best model found
******************************************
Results 

CLL : -0.176756 

AUC ROC : 0.987347 

AUC PR : 0.256373 

Precision : 0.171961 

Recall : 0.879859 

F1 : 0.287695 

Total Learning Time : 9.038 

Total Inference Time : 8.907648801803589 

Total revision time: 30.238292682647703
Best scored revision CLL: -0.163592


Results 

CLL : -0.176756 

AUC ROC : 0.987347 

AUC PR : 0.256373 

Precision : 0.171961 

Recall : 0.879859 

F1 : 0.287695 

Total Learning Time : 30.269281614303587 

Total Inference Time : 8.907648801803589 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.249
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2236951535869074;  // std dev = 7.430, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14984844055218335;  // std dev = 5.465, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.14719907585902303;  // std dev = 5.413, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1276125698532117;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.12755057343053286;  // std dev = 5.942, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1938036035390314;  // std dev = 3.440, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.11436858229743396;  // std dev = 6.708, 204.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09217774879613819;  // std dev = 7.638, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07033376707081246;  // std dev = 7.664, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7265787510283449;  // std dev = 0.048, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.27558052968450525;  // std dev = 0.063, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09900336371450773;  // std dev = 3.908, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | | else return 0.0815612634880325;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.055411454829674515;  // std dev = 3.732, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.07391301743086116;  // std dev = 5.787, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06378855773398319;  // std dev = 6.804, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019384161626523216;  // std dev = 6.990, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.898', 'seconds']
Parameter learned model CLL:-0.345361 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.43, 151, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.465, 93, 44], 'false,false,false,false': [5.413, 92, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.875, 74, 35], 'false,false,false,false': [5.942, 110, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.44, 29, 20], 'false,false,false,false': [6.708, 137, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.638, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.664, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.048, 0, 35], 'true,false': [0.063, 71, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.908, 42, 24], 'false,false,false,false': [4.28, 53, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.732, 64, 35], 'false,false,false,false': [5.787, 94, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.804, 151, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.99, 173, 87]}]
{'': [nan, 0.23192218063696166], 'false': [nan, 0.2319221806369614], 'false,false': [nan, 0.23192218063696166], 'false,false,false': [nan, 0.2319221806369614]}
{'': [nan, 0.21754703719723179], 'false': [nan, 0.2175470371972307], 'false,false': [nan, 0.21754703719723179], 'false,false,false': [0.21801907400500717, 0.21706447187928563]}
{'': [nan, 0.21797772999528142], 'false': [nan, 0.21797772999528142], 'false,false': [nan, 0.21797772999528195], 'false,false,false': [0.2180042049970108, 0.2179599150222605]}
{'': [nan, 0.22561578111241065], 'false': [nan, 0.22561578111241065], 'false,false': [nan, 0.22561578111241062], 'false,false,false': [0.2415660141607658, 0.22056251781305092]}
{'': [nan, 0.2209951908166037], 'false': [nan, 0.2209951908166037], 'false,false': [nan, 0.22099519081660446], 'false,false,false': [nan, 0.22099519081660446]}
{'': [nan, 0.21919376413689245], 'false': [nan, 0.21919376413689245], 'false,false': [nan, 0.21919376413689243], 'false,false,false': [nan, 0.2191937641368924]}
{'': [0.2221785230524024, 0.22860393776071675], 'false': [nan, 0.22860393776071675], 'false,false': [nan, 0.22860393776071675], 'false,false,false': [0.23140495867768612, 0.2261850327693948], 'true': [6.474828706706554e-05, 5.507008149229079e-05], 'true,true': [nan, 6.474828706706554e-05], 'true,true,false': [nan, 6.474828706706554e-05]}
{'': [nan, 0.1936127848677282], 'false': [nan, 0.1936127848677282], 'false,false': [nan, 0.19361278486772823], 'false,false,false': [0.14065048210258957, 0.22938725890622852]}
{'': [nan, 0.1945389907367018], 'false': [nan, 0.19453899073670108], 'false,false': [nan, 0.19453899073670108], 'false,false,false': [nan, 0.19453899073670108]}
{'': [nan, 0.18795000674513385], 'false': [nan, 0.18795000674513385], 'false,false': [nan, 0.18795000674513296], 'false,false,false': [nan, 0.18795000674513296]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 192.293
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( complex(A, E), enzyme(A, F) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12481560176617898;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( complex(G, H) )
%   | | | then return 0.2285193054698827;  // std dev = 2.509, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.178661755612333;  // std dev = 5.829, 156.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(D, A), enzyme(D, E) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(D, F), complex(A, F) )
%   | | | then return -0.02019562463466202;  // std dev = 0.899, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.16125565253624755;  // std dev = 2.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.8198890195740876;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.14607633614576906;  // std dev = 5.837, 158.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=50 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.23497960738476315;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.8349796073847632;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6906194682215988;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12911615431328471;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( complex(A, F), interaction(G, E) )
%   | | | then return -0.1119930886081196;  // std dev = 0.703, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.10997166559353136;  // std dev = 5.129, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.43889448794869484;  // std dev = 1.026, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1690949912444495;  // std dev = 0.091, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.4314826431110892;  // std dev = 1.116, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.18728800172386018;  // std dev = 4.141, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), complex(A, D) )
%   | then return 0.212756324197625;  // std dev = 0.502, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, E) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5322457632726196;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.10910674429979823;  // std dev = 0.044, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.05237509052160265;  // std dev = 3.766, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | | else return 0.2925194887805477;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.10019436490946679;  // std dev = 5.671, 149.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=49 */
%   | | | else return 0.5260817339156304;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.33389478758137614;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.45720000935350424;  // std dev = 0.184, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.6450413446436318;  // std dev = 0.232, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.738446949965102;  // std dev = 0.153, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.2639084900893116;  // std dev = 0.054, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( complex(I, K), interaction(I, L) )
%   | | | then return 0.13145737058109855;  // std dev = 1.203, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.018889747440310328;  // std dev = 1.805, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.25910451952567265;  // std dev = 2.278, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.09055820881138091;  // std dev = 5.284, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(D, E), interaction(F, D) )
%   | then if ( interaction(A, G), interaction(D, A) )
%   | | then if ( recursion_proteinclass(F, B), complex(G, H) )
%   | | | then return 0.5841735217619674;  // std dev = 0.669, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.03643979366488379;  // std dev = 2.124, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( interaction(F, F), enzyme(D, I) )
%   | | | then return 0.1992203478475124;  // std dev = 1.440, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.02048011771745067;  // std dev = 5.157, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   | else if ( phenotype(A, J), interaction(K, D) )
%   | | then return 0.39445063429813576;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.12473910509294095;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3189055016712084;  // std dev = 1.068, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, N) )
%   | then return -0.04195152333864605;  // std dev = 0.364, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else return -0.19568584372730555;  // std dev = 0.377, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.23594876414716198;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.5557812071012511;  // std dev = 0.308, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.6756088103943362;  // std dev = 0.425, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11048853884316427;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.2254613600999056;  // std dev = 0.059, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2569402101648565;  // std dev = 0.207, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10791397664379002;  // std dev = 0.057, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( location(A, H), interaction(I, A) )
%   | | | then return 0.03022219612340852;  // std dev = 5.217, 134.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=42 */
%   | | | else return 0.20398440705047519;  // std dev = 1.339, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 1.791734502389317E-4;  // std dev = 0.316, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.04686864432182954;  // std dev = 0.661, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.09022025115433865;  // std dev = 3.516, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4538756853396574;  // std dev = 1.134, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.30185436373405683;  // std dev = 0.366, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.43857994571722786;  // std dev = 0.320, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.27106518805602536;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.6014613838868498;  // std dev = 0.375, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08480460615719605;  // std dev = 3.480, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, C), location(E, D) )
%   | | then return 0.3883390388457078;  // std dev = 0.191, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.11724992935505836;  // std dev = 1.116, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, C) )
%   | | then return -0.18220619207441321;  // std dev = 0.046, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( phenotype(A, F), location(C, D) )
%   | | | then return -0.032222216235484054;  // std dev = 3.139, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | else return 0.0486058781362433;  // std dev = 4.452, 103.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=37 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then return -0.24630505481234644;  // std dev = 0.745, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( phenotype(A, I) )
%   | | then return -0.09271163690331757;  // std dev = 0.214, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.054312396806537655;  // std dev = 0.239, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06514749431815552;  // std dev = 1.313, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.4906811618837968;  // std dev = 0.177, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.2226257780606011;  // std dev = 0.089, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( enzyme(F, H), interaction(A, I) )
%   | | then return -0.06883689497577972;  // std dev = 0.256, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.006055560314098504;  // std dev = 2.199, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return 0.12771749710240735;  // std dev = 2.325, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.5303128425527278;  // std dev = 1.161, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.3024783283887709;  // std dev = 0.448, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.12209680690908815;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.20294075265751743;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '44.229', 'seconds']
Refined model CLL: -0.257887


******************************************
Best model found
******************************************
Results 

CLL : -0.283307 

AUC ROC : 0.952774 

AUC PR : 0.335119 

Precision : 0.278912 

Recall : 0.58156 

F1 : 0.377011 

Total Learning Time : 192.293 

Total Inference Time : 222.91713786125183 

Total revision time: 422.85937685203555
Best scored revision CLL: -0.257887


Results 

CLL : -0.283307 

AUC ROC : 0.952774 

AUC PR : 0.335119 

Precision : 0.278912 

Recall : 0.58156 

F1 : 0.377011 

Total Learning Time : 422.99495500755313 

Total Inference Time : 222.91713786125183 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.67
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18935912618231535;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1605443694711156;  // std dev = 5.916, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
%   | | | else return 0.22447778792290543;  // std dev = 5.628, 133.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11704653069647374;  // std dev = 5.322, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   | | | else return 0.14944084915312444;  // std dev = 6.422, 182.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09031376084012635;  // std dev = 4.509, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | | | else return 0.14326025263620834;  // std dev = 6.907, 206.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14089390949657205;  // std dev = 8.025, 273.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.061249286409719675;  // std dev = 8.363, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7321840205168415;  // std dev = 0.067, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26886646280821913;  // std dev = 0.092, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.020871510228565347;  // std dev = 4.016, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | | else return 0.0343655011963381;  // std dev = 5.195, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.017655118832233512;  // std dev = 4.212, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
%   | | | else return 0.05047894987435714;  // std dev = 6.435, 184.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0663844765080248;  // std dev = 7.501, 278.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.010832980641826985;  // std dev = 7.734, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.949', 'seconds']
Parameter learned model CLL:-0.343293 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.34, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.916, 107, 52], 'false,false,false,false': [5.628, 81, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.322, 91, 41], 'false,false,false,false': [6.422, 119, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.509, 68, 29], 'false,false,false,false': [6.907, 131, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.025, 169, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.363, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.067, 0, 41], 'true,false': [0.092, 71, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.016, 54, 23], 'false,false,false,false': [5.195, 83, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.212, 96, 41], 'false,false,false,false': [6.435, 121, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.501, 174, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.734, 217, 104]}]
{'': [nan, 0.22151000040569802], 'false': [nan, 0.22151000040569657], 'false,false': [nan, 0.22151000040569802], 'false,false,false': [nan, 0.22151000040569657]}
{'': [nan, 0.22931131544379882], 'false': [nan, 0.22931131544379715], 'false,false': [nan, 0.22931131544379882], 'false,false,false': [0.22008623076618716, 0.23811408219797522]}
{'': [nan, 0.22178904746363567], 'false': [nan, 0.22178904746363567], 'false,false': [nan, 0.22178904746363373], 'false,false,false': [0.2145480812559608, 0.22659959161447513]}
{'': [nan, 0.2251607249544538], 'false': [nan, 0.2251607249544538], 'false,false': [nan, 0.22516072495445705], 'false,false,false': [0.2095865660537791, 0.23159675213151262]}
{'': [nan, 0.23589893861157232], 'false': [nan, 0.23589893861157232], 'false,false': [nan, 0.23589893861157296], 'false,false,false': [nan, 0.23589893861157296]}
{'': [nan, 0.2206374499127008], 'false': [nan, 0.2206374499127008], 'false,false': [nan, 0.22063744991269996], 'false,false,false': [nan, 0.22063744991270076]}
{'': [0.23266775100319154, 0.21565181407985334], 'true': [0.00011110315836447865, 0.00012009011940585758], 'false': [nan, 0.21565181407985334], 'false,false': [nan, 0.21565181407985334], 'false,false,false': [0.2094788328554563, 0.219446096899994], 'true,true': [nan, 0.00011110315836447865], 'true,true,false': [nan, 0.00011110315836447865]}
{'': [nan, 0.1845327470306825], 'false': [nan, 0.1845327470306825], 'false,false': [nan, 0.18453274703068318], 'false,false,false': [0.1294954491103701, 0.2250517781414551]}
{'': [nan, 0.20236642538535635], 'false': [nan, 0.20236642538535668], 'false,false': [nan, 0.20236642538535668], 'false,false,false': [nan, 0.20236642538535668]}
{'': [nan, 0.1863217310387086], 'false': [nan, 0.1863217310387086], 'false,false': [nan, 0.1863217310387092], 'false,false,false': [nan, 0.1863217310387092]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 39.261
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( phenotype(C, E) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995117;  // std dev = 1.98e-07, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7555848325354089;  // std dev = 1.895, 39.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | | | else return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11901850031690367;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.1914822684328457;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( enzyme(C, E), interaction(C, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.7275644540459002;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.08894032529266176;  // std dev = 0.376, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else if ( phenotype(C, G), complex(C, H) )
%   | | then return 0.12205597584105884;  // std dev = 0.394, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | else return 0.24046262536879123;  // std dev = 0.453, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   else if ( phenotype(A, I), enzyme(A, J) )
%   | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.7303651992964586;  // std dev = 0.036, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.1489635015136835;  // std dev = 0.219, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then return 0.10420702490977392;  // std dev = 0.406, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | else if ( location(A, N) )
%   | | | then return 0.17717739174367964;  // std dev = 3.842, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
%   | | | else return -1.2784210178493072E-4;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6067449638886756;  // std dev = 0.064, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.13327556094243473;  // std dev = 0.085, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.6589064380331479;  // std dev = 0.216, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, F) )
%   | | | then return 0.1622813905373054;  // std dev = 3.492, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
%   | | | else return 0.014563363818689001;  // std dev = 1.866, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), enzyme(K, L) )
%   | | | then return 0.3418671702439624;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6687510896538811;  // std dev = 0.127, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.003293630660271003;  // std dev = 1.830, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.13702071831430715;  // std dev = 4.671, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(A, F), complex(C, F) )
%   | | then return 0.5205668083744425;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.008502712347397565;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.6241232550764727;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(G, A), complex(A, H) )
%   | then if ( complex(G, H), location(G, I) )
%   | | then return -0.0569367129205766;  // std dev = 0.257, 47.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | | else return 0.07185009108139097;  // std dev = 0.319, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(L, J), interaction(L, A) )
%   | | | then return -0.040987663873628795;  // std dev = 1.938, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | | else return 0.09836940396918846;  // std dev = 2.873, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.17406884218723898;  // std dev = 2.654, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.10111598712729278;  // std dev = 3.539, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3845326473196909;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5287902273107533;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( location(A, E), complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.4326367858203959;  // std dev = 0.213, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6176059438675972;  // std dev = 0.298, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.14501864134556136;  // std dev = 0.199, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5497103312723883;  // std dev = 0.840, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.007639889750326598;  // std dev = 2.470, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.08077862635487225;  // std dev = 3.876, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | | else return 0.008696098208948655;  // std dev = 2.498, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.007887496238452937;  // std dev = 1.128, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.35176032957203746;  // std dev = 0.086, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( location(A, E), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( location(G, E), location(F, E) )
%   | | | then return 0.4671072869449099;  // std dev = 0.470, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.05895519979447237;  // std dev = 0.981, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.07103033697989157;  // std dev = 0.246, 108.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=13 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, I), complex(I, J) )
%   | | | then return 0.08548506917929413;  // std dev = 4.225, 124.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | | | else return -0.08204206041287694;  // std dev = 1.299, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.12557808185010821;  // std dev = 1.222, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.4660880369289175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.34884903764582037;  // std dev = 0.097, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.12665380876270876;  // std dev = 0.259, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.2886275138154698;  // std dev = 0.291, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H), interaction(E, H) )
%   | | | then return -0.08434532863716708;  // std dev = 1.315, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.03196325884541617;  // std dev = 2.939, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( phenotype(A, K), phenotype(J, L) )
%   | | | then return 0.15246553831902412;  // std dev = 2.044, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.022243597726723727;  // std dev = 3.402, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.318885387524465;  // std dev = 0.839, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.10007770481265588;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then if ( phenotype(C, E) )
%   | | then return 0.2818865007162823;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.1791314398998211;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.04657328049005679;  // std dev = 0.894, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H), interaction(I, A) )
%   | | | then return 0.06626851128749169;  // std dev = 1.876, 49.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=27 */
%   | | | else return 0.34385149753651867;  // std dev = 3.359, 78.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=54 */
%   | | else return -0.1709163839792815;  // std dev = 0.064, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return -0.14926648962416617;  // std dev = 0.337, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.13546165314469172;  // std dev = 0.964, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.05809022851001877;  // std dev = 0.920, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.19702950019894905;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.03219992852291931;  // std dev = 0.255, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(J, F) )
%   | | | then return 0.12285753927656289;  // std dev = 0.513, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4004258980017523;  // std dev = 1.859, 41.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=36 */
%   | | else return -0.180866909010363;  // std dev = 0.068, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.24682507506832144;  // std dev = 1.507, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return -0.16005429508227859;  // std dev = 0.322, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.0669894152227933;  // std dev = 0.445, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.062329280602021184;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.18890359752596;  // std dev = 0.816, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | | else return 0.3763575137054932;  // std dev = 0.873, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.24009238101604588;  // std dev = 0.682, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.16052984330080153;  // std dev = 3.011, 72.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=47 */
%   | else if ( complex(A, H) )
%   | | then return -0.1011091800042989;  // std dev = 0.061, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.1575412710167965;  // std dev = 0.039, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(I, A), complex(I, J) )
%   | then return 0.5385219049412399;  // std dev = 0.328, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then return 0.1189450018055179;  // std dev = 0.617, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.24955236315825058;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '51.363', 'seconds']
Refined model CLL: -0.188401


******************************************
Best model found
******************************************
Results 

CLL : -0.175216 

AUC ROC : 0.990648 

AUC PR : 0.554317 

Precision : 0.462103 

Recall : 0.713208 

F1 : 0.560831 

Total Learning Time : 39.261 

Total Inference Time : 40.054283142089844 

Total revision time: 88.4557461795807
Best scored revision CLL: -0.188401


Results 

CLL : -0.175216 

AUC ROC : 0.990648 

AUC PR : 0.554317 

Precision : 0.462103 

Recall : 0.713208 

F1 : 0.560831 

Total Learning Time : 88.59132433509828 

Total Inference Time : 40.054283142089844 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.193
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.180955952643372;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13117487796624666;  // std dev = 5.990, 172.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=51 */
%   | | | else return 0.1943123728662864;  // std dev = 5.124, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16066275413619854;  // std dev = 5.354, 126.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
%   | | | else return 0.1743350605403451;  // std dev = 5.531, 132.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.184317561605948;  // std dev = 3.970, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
%   | | | else return 0.1003152392266643;  // std dev = 6.711, 207.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0985881019960876;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09518616316347138;  // std dev = 7.731, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7226463905137458;  // std dev = 0.014, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.27744075081882535;  // std dev = 0.019, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0773301544560987;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | | else return 0.1330961037674722;  // std dev = 3.682, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05128247693757992;  // std dev = 4.194, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | | | else return 0.011954034409900043;  // std dev = 5.779, 158.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026310401752244483;  // std dev = 7.104, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027811305966175304;  // std dev = 7.060, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.109', 'seconds']
Parameter learned model CLL:-0.329848 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.893, 193, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.99, 121, 51], 'false,false,false,false': [5.124, 73, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.354, 82, 44], 'false,false,false,false': [5.531, 84, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.97, 40, 26], 'false,false,false,false': [6.711, 141, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.817, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.731, 170, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 44], 'true,false': [0.019, 85, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.054, 48, 25], 'false,false,false,false': [3.682, 33, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.194, 80, 44], 'false,false,false,false': [5.779, 110, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.104, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.06, 182, 92]}]
{'': [nan, 0.21860264696829915], 'false': [nan, 0.21860264696829887], 'false,false': [nan, 0.21860264696829915], 'false,false,false': [nan, 0.21860264696829887]}
{'': [nan, 0.2182013790405438], 'false': [nan, 0.21820137904053893], 'false,false': [nan, 0.2182013790405438], 'false,false,false': [0.20859248242293027, 0.2303016312711596]}
{'': [nan, 0.22972486317798047], 'false': [nan, 0.22972486317798047], 'false,false': [nan, 0.22972486317797994], 'false,false,false': [0.2275233973613406, 0.23173497001285565]}
{'': [nan, 0.22399742644245446], 'false': [nan, 0.22399742644245446], 'false,false': [nan, 0.2239974264424544], 'false,false,false': [0.23875114784205723, 0.2175874008790455]}
{'': [nan, 0.2229873847430724], 'false': [nan, 0.2229873847430724], 'false,false': [nan, 0.22298738474307242], 'false,false,false': [nan, 0.22298738474307242]}
{'': [nan, 0.22813865017581136], 'false': [nan, 0.22813865017581136], 'false,false': [nan, 0.22813865017581203], 'false,false,false': [nan, 0.2281386501758118]}
{'': [0.22478945173700676, 0.23325952105754633], 'false': [nan, 0.23325952105754633], 'false,false': [nan, 0.23325952105754633], 'false,false,false': [0.22518296115593994, 0.24202806122448933], 'true': [4.220295812858281e-06, 4.146501481811276e-06], 'true,true': [nan, 4.220295812858281e-06], 'true,true,false': [nan, 4.220295812858281e-06]}
{'': [nan, 0.1812080670619974], 'false': [nan, 0.1812080670619974], 'false,false': [nan, 0.18120806706199719], 'false,false,false': [0.14187263534918876, 0.21139879137899645]}
{'': [nan, 0.17961562216089486], 'false': [nan, 0.17961562216089505], 'false,false': [nan, 0.17961562216089505], 'false,false,false': [nan, 0.17961562216089505]}
{'': [nan, 0.1819086725183713], 'false': [nan, 0.1819086725183713], 'false,false': [nan, 0.1819086725183696], 'false,false,false': [nan, 0.1819086725183696]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.321
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(E, A), location(E, F) )
%   | | then if ( recursion_proteinclass(E, B), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15699950981215646;  // std dev = 6.038, 174.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=52 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.18423589162125148;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.4945125714631487;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.72967310150219;  // std dev = 0.073, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(D, E) )
%   | | then return -0.140699871958661;  // std dev = 0.063, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( location(D, F), location(A, F) )
%   | | | then return 0.1236570869532473;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.044468932670156516;  // std dev = 0.933, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.1879428012389614;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.04715703526706847;  // std dev = 3.177, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.2518248938009738;  // std dev = 2.714, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.1552055731491343;  // std dev = 5.282, 130.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), enzyme(A, D) )
%   | then return 0.284495900373717;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.5528463797024319;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7256378690322697;  // std dev = 0.153, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.5730744938845663;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return -0.12496542462869417;  // std dev = 0.061, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.02938571765562893;  // std dev = 1.535, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.2141344815062839;  // std dev = 2.800, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.10560665849607116;  // std dev = 6.276, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.5029102148132698;  // std dev = 0.163, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, A) )
%   | | then return -0.14040705946955223;  // std dev = 0.081, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( phenotype(C, F), phenotype(A, G) )
%   | | | then return -0.018248103469718134;  // std dev = 2.028, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.1242898419099915;  // std dev = 2.485, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   else if ( complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.7475649077420415;  // std dev = 0.091, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.2172003936925096;  // std dev = 0.098, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.49761137271596;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 4.3619802285717216E-4;  // std dev = 1.865, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.13636846760273744;  // std dev = 4.999, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), phenotype(F, C) )
%   | | then return 0.40565755954535937;  // std dev = 0.803, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.7771879321293305;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6457699479321107;  // std dev = 0.183, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.1845402932847593;  // std dev = 0.197, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(A, H) )
%   | | then return 0.3010047357102956;  // std dev = 0.000998, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.387165714349151;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3600652373136824;  // std dev = 0.176, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return -0.09118412615148995;  // std dev = 0.844, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.04736848522367564;  // std dev = 6.221, 208.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=57 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.30001812131712535;  // std dev = 0.092, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.1031926203556321;  // std dev = 1.317, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return -0.17479468477599805;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.22349018412548136;  // std dev = 0.762, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.031648190283939656;  // std dev = 1.401, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.1829691671415455;  // std dev = 0.252, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.09967082335514273;  // std dev = 1.478, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.015979373911365558;  // std dev = 2.903, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.07693017100810728;  // std dev = 5.402, 164.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5076749653302325;  // std dev = 0.208, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.1928836329622193;  // std dev = 0.063, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( enzyme(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), complex(G, H) )
%   | | then return 0.5385444536578246;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6557889593174434;  // std dev = 0.439, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1925190144088719;  // std dev = 0.165, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6027538349395286;  // std dev = 0.703, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.24318095004734022;  // std dev = 0.312, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.030937884145737084;  // std dev = 2.300, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.10775800144582516;  // std dev = 3.207, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.46036130432044947;  // std dev = 0.188, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.18859299650859812;  // std dev = 0.088, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2871502843375054;  // std dev = 0.360, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.13750656302049505;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.601946508717925;  // std dev = 0.563, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1894990801340334;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2012567930500838;  // std dev = 0.164, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.09315227036967134;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.030264710530350483;  // std dev = 4.488, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.13034615807853214;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.15761545530831966;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.023356287152575535;  // std dev = 0.281, 118.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=29 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.43485854868071294;  // std dev = 0.182, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.1872001525309367;  // std dev = 0.063, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(H, A) )
%   | | then if ( phenotype(H, I), location(H, J) )
%   | | | then return 0.15156947524184036;  // std dev = 2.318, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.036843080940293184;  // std dev = 2.378, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.01687712925545548;  // std dev = 0.889, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.23039230831039334;  // std dev = 1.628, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), phenotype(D, E) )
%   | then return 0.028499864321920074;  // std dev = 0.249, 88.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=32 */
%   | else return -0.033660115179422564;  // std dev = 0.237, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   else if ( interaction(A, F), enzyme(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.0036393933335944393;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, H) )
%   | | | then return 0.26519730178180795;  // std dev = 0.460, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.15947368134394702;  // std dev = 0.727, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.026221254682223954;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20568397344458234;  // std dev = 1.374, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.10969509099619715;  // std dev = 2.262, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.022831690667962132;  // std dev = 3.294, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.125', 'seconds']
Refined model CLL: -0.23909


******************************************
Best model found
******************************************
Results 

CLL : -0.252887 

AUC ROC : 0.955148 

AUC PR : 0.249037 

Precision : 0.241058 

Recall : 0.559567 

F1 : 0.336957 

Total Learning Time : 13.321 

Total Inference Time : 6.767071008682251 

Total revision time: 27.92009097480774
Best scored revision CLL: -0.23909


Results 

CLL : -0.252887 

AUC ROC : 0.955148 

AUC PR : 0.249037 

Precision : 0.241058 

Recall : 0.559567 

F1 : 0.336957 

Total Learning Time : 28.055669130325317 

Total Inference Time : 6.767071008682251 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.125
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19941877636935415;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1361931707284151;  // std dev = 6.016, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
%   | | | else return 0.1687332668432881;  // std dev = 4.749, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10551476236667247;  // std dev = 4.443, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | | else return 0.16578566952538454;  // std dev = 6.113, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07915860643609586;  // std dev = 3.689, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return 0.14252116955903915;  // std dev = 6.556, 187.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10140132438763046;  // std dev = 7.552, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06758729147686025;  // std dev = 7.637, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7463818516150573;  // std dev = 0.045, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2548375921258283;  // std dev = 0.073, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06184660700034542;  // std dev = 4.690, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | | | else return 0.046705125329508594;  // std dev = 4.109, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.09058057361832206;  // std dev = 3.303, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   | | | else return 0.04791282078407415;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.034523970629708016;  // std dev = 7.106, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02994901770101191;  // std dev = 7.082, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.425', 'seconds']
Parameter learned model CLL:-0.342411 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.016, 119, 52], 'false,false,false,false': [4.749, 67, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.443, 67, 28], 'false,false,false,false': [6.113, 105, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.689, 48, 19], 'false,false,false,false': [6.556, 120, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.552, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.637, 181, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.045, 0, 28], 'true,false': [0.073, 67, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.69, 66, 33], 'false,false,false,false': [4.109, 52, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.303, 46, 28], 'false,false,false,false': [6.218, 116, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.106, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.082, 173, 86]}]
{'': [nan, 0.22480473670949944], 'false': [nan, 0.22480473670949916], 'false,false': [nan, 0.22480473670949944], 'false,false,false': [nan, 0.22480473670949916]}
{'': [nan, 0.21620891003460105], 'false': [nan, 0.2162089100346018], 'false,false': [nan, 0.21620891003460105], 'false,false,false': [0.21162066960774226, 0.22331144005489673]}
{'': [nan, 0.2222022780145361], 'false': [nan, 0.2222022780145361], 'false,false': [nan, 0.2222022780145364], 'false,false,false': [0.20776215168389714, 0.22928072382770132]}
{'': [nan, 0.22361006159915883], 'false': [nan, 0.22361006159915883], 'false,false': [nan, 0.22361006159915786], 'false,false,false': [0.20316328803742495, 0.22987688510303153]}
{'': [nan, 0.22366383360473113], 'false': [nan, 0.22366383360473113], 'false,false': [nan, 0.2236638336047311], 'false,false,false': [nan, 0.2236638336047311]}
{'': [nan, 0.21846189031076862], 'false': [nan, 0.21846189031076862], 'false,false': [nan, 0.218461890310768], 'false,false,false': [nan, 0.21846189031076824]}
{'': [0.20845193688868946, 0.22098322102472584], 'false': [nan, 0.22098322102472584], 'false,false': [nan, 0.22098322102472584], 'false,false,false': [0.22222222222222252, 0.21926125822229725], 'true': [7.30548793064223e-05, 7.953838694839627e-05], 'true,true': [nan, 7.30548793064223e-05], 'true,true,false': [nan, 7.30548793064223e-05]}
{'': [nan, 0.20028604369550665], 'false': [nan, 0.20028604369550665], 'false,false': [nan, 0.2002860436955062], 'false,false,false': [0.1474217996613733, 0.22222531349537059]}
{'': [nan, 0.19423577642425788], 'false': [nan, 0.19423577642425774], 'false,false': [nan, 0.19423577642425774], 'false,false,false': [nan, 0.19423577642425774]}
{'': [nan, 0.1936223096437901], 'false': [nan, 0.1936223096437901], 'false,false': [nan, 0.19362230964378982], 'false,false,false': [nan, 0.19362230964378982]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.592
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.10139217834275562;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return -0.03073995378937665;  // std dev = 2.494, 63.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.10304689428318584;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return 0.20100607795665398;  // std dev = 4.864, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.42757709712051506;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7239130927369786;  // std dev = 0.060, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1412839245027564;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8284802421176047;  // std dev = 0.169, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.15862093598908086;  // std dev = 0.086, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.3861400788776211;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.15265049578662254;  // std dev = 5.618, 147.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=46 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.6648501142742349;  // std dev = 0.122, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(E, D), interaction(E, E) )
%   | | then return 0.02011473902871128;  // std dev = 0.369, 86.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=17 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.03587371610914151;  // std dev = 1.058, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.27038049197597513;  // std dev = 2.843, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.7237121758185443;  // std dev = 0.495, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.22385928434366753;  // std dev = 2.335, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else return -0.16555547683933625;  // std dev = 0.186, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( interaction(A, K) )
%   | | then return -0.047707811398467866;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.00943504574438928;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5492480532025267;  // std dev = 0.192, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, C) )
%   | | then return -0.15903406319872826;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.32496776210227435;  // std dev = 1.448, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.12604719487849428;  // std dev = 2.955, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.4571248175247116;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4049573044400083;  // std dev = 1.278, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.0560203165591996;  // std dev = 3.712, 88.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   | else if ( interaction(A, K), complex(A, L) )
%   | | then return 0.07709652259332424;  // std dev = 0.282, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else return 0.027325583538079373;  // std dev = 0.374, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.3007621103490147;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.38546662029653284;  // std dev = 0.104, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.010617526395040388;  // std dev = 1.034, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.13235161956530972;  // std dev = 0.024, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return -0.04146392090052109;  // std dev = 0.848, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5079476291374196;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.005394272669850996;  // std dev = 2.510, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | | | else return 0.09217790770608525;  // std dev = 5.431, 165.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=52 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2760671195039649;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(D, A), complex(D, E) )
%   | | then return -0.12027725840159462;  // std dev = 0.152, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | else return 0.053157320930162316;  // std dev = 0.340, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( enzyme(A, G), phenotype(F, H) )
%   | | then return -0.08514310885771913;  // std dev = 0.614, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.38781984592882696;  // std dev = 0.282, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03908068654015067;  // std dev = 2.552, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3789394897906395;  // std dev = 3.405, 67.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=47 */
%   | | | else return -0.20100540601438274;  // std dev = 0.369, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0.2579875604875764;  // std dev = 0.927, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.21425561276378588;  // std dev = 0.066, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.49508781893507714;  // std dev = 0.122, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.1754423586842972;  // std dev = 0.052, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.28440133000378537;  // std dev = 0.259, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.02866548192552587;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5274091083342063;  // std dev = 0.925, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.1653297701697366;  // std dev = 0.341, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.10186030099451109;  // std dev = 2.010, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.03599018318581249;  // std dev = 4.257, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20017990597379137;  // std dev = 0.057, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( complex(A, D) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.43121342390111567;  // std dev = 0.188, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1356708563585082;  // std dev = 0.101, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(H, A), interaction(A, I) )
%   | | | then return -0.0780568324501112;  // std dev = 0.823, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | | else return -0.005457068893310512;  // std dev = 1.518, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( interaction(J, J), phenotype(A, L) )
%   | | | then return 0.20946002633571462;  // std dev = 1.418, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.013569574659312751;  // std dev = 3.034, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.10915643724740744;  // std dev = 3.042, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return 0.21967496215156884;  // std dev = 1.398, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.25602878625099945;  // std dev = 0.304, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, C) )
%   | | then return -0.14282088895873835;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.18184913750616255;  // std dev = 0.944, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.047253075328507525;  // std dev = 2.204, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then return 0.04785509639558936;  // std dev = 0.269, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(J, A) )
%   | | | then return 0.05361068014983655;  // std dev = 1.035, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.032527568864995714;  // std dev = 3.922, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.2335110081231805;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.014228188855572262;  // std dev = 2.041, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1843151831123783;  // std dev = 0.075, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then if ( phenotype(E, F), enzyme(E, H) )
%   | | | then return 0.13500247895993459;  // std dev = 1.454, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.011160772522656116;  // std dev = 2.547, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( location(D, I), location(E, I) )
%   | | | then return -0.0554800244723657;  // std dev = 2.727, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | | | else return -0.13675954818447666;  // std dev = 1.351, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L), phenotype(L, J) )
%   | | | then return -0.04992654591652758;  // std dev = 1.106, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.029469220699054843;  // std dev = 1.473, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.16611550817614684;  // std dev = 1.057, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.06603364954027434;  // std dev = 2.381, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '50.886', 'seconds']
Refined model CLL: -0.233232


******************************************
Best model found
******************************************
Results 

CLL : -0.222904 

AUC ROC : 0.966267 

AUC PR : 0.263461 

Precision : 0.241611 

Recall : 0.508834 

F1 : 0.327645 

Total Learning Time : 17.592 

Total Inference Time : 9.742485046386719 

Total revision time: 34.79603718948364
Best scored revision CLL: -0.233232


Results 

CLL : -0.222904 

AUC ROC : 0.966267 

AUC PR : 0.263461 

Precision : 0.241611 

Recall : 0.508834 

F1 : 0.327645 

Total Learning Time : 34.93161534500122 

Total Inference Time : 9.742485046386719 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.889
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14510545683864134;  // std dev = 4.851, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | | else return 0.19459753323035214;  // std dev = 4.888, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7282213723121569;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7323097008215796;  // std dev = 2.673, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.1632054764376962;  // std dev = 0.041, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1315641692371601;  // std dev = 1.676, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.574670820567857;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5622965486865922;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0717338110367265;  // std dev = 4.344, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5827692496923953;  // std dev = 2.095, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return -0.14571553021871436;  // std dev = 5.37e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12089449327663915;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.13312395246683412;  // std dev = 1.304, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4286689541442513;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.0637728287326762;  // std dev = 0.709, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4409649037970414;  // std dev = 1.849, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else return 0.052705259238545014;  // std dev = 5.018, 213.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.522298624036388;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06565757853961726;  // std dev = 1.690, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.35078525469603317;  // std dev = 0.111, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32034058998883264;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06684040369682151;  // std dev = 5.467, 235.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39339946676362103;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.25468083057695967;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0861920619783595;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.13703225629671745;  // std dev = 0.937, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.4196466642922157;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.304397409553272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.0026894364291912775;  // std dev = 2.333, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2494041607015983;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06910882724618332;  // std dev = 4.679, 181.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=55 */
%   | | | else return 0.016877336501256227;  // std dev = 1.928, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26269201941077147;  // std dev = 0.161, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24400578313222232;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5466646576139597;  // std dev = 1.222, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.17418046483039856;  // std dev = 0.409, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.044661502628621896;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08311973123708216;  // std dev = 3.957, 113.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1912001895177715;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21345319057681703;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39352391930039954;  // std dev = 2.672, 81.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=71 */
%   | | else return -0.15546773909870915;  // std dev = 0.252, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20183777537232905;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.008276922593250339;  // std dev = 1.475, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1791337988889759;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17117772185707794;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.039344997970994104;  // std dev = 1.599, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.3052388130114851;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.001394304404158884;  // std dev = 1.808, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17946356597547172;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.020971145092211065;  // std dev = 3.528, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return 0.024386746892514077;  // std dev = 1.437, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1440428960027486;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2272511633626919;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14823980431164305;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.015269544095484009;  // std dev = 2.395, 119.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1545372657978452;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.014741194749986293;  // std dev = 3.489, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | | else return 0.019814639966337522;  // std dev = 1.435, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.397', 'seconds']
Parameter learned model CLL:-0.195767 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.851, 82, 33], 'false,false,true,false': [4.888, 71, 36], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.024, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.673, 8, 69], 'false,false,true,false': [0.041, 150, 0], 'false,false,false,true': [1.676, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.023, 0, 8], 'true,false': [0.022, 0, 3], 'false,true,true': [4.344, 98, 34], 'false,true,false,true': [2.095, 5, 37], 'false,true,false,false': [5.37e-08, 70, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.304, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.034, 0, 10], 'true,false': [0.709, 1, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.849, 5, 14], 'false,true,false': [5.018, 156, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.69, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.111, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.022, 0, 4], 'false,true': [5.467, 164, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.937, 1, 7], 'true,true,false': [0.108, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.333, 38, 12], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [4.679, 126, 55], 'false,false,false,false': [1.928, 16, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.161, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.222, 2, 33], 'true,false': [0.409, 85, 0], 'false,true': [0.867, 1, 3], 'false,false,true': [3.957, 73, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.02, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.672, 10, 71], 'false,true,false': [0.252, 138, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.475, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.091, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.004, 0, 3], 'false,true,true': [1.599, 39, 11], 'false,true,false,true': [0.835, 2, 1], 'false,true,false,false': [1.808, 41, 17], 'false,false,true': [0.001, 0, 3], 'false,false,false,true': [3.528, 85, 40], 'false,false,false,false': [1.437, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.024, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.004, 0, 3], 'false,true': [2.395, 90, 29], 'false,false,true': [0.001, 0, 3], 'false,false,false,true': [3.489, 91, 40], 'false,false,false,false': [1.435, 10, 4]}]
{'': [0.07638888888888877, 0.2173575312477934], 'false': [1.4802973661668753e-16, 0.21414214576731685], 'false,false': [0.21420745069393737, 0.21301775147928975], 'false,false,true': [0.20461247637051175, 0.2232509389466342], 'false,false,false': [0.25, 0.17283950617283952], 'true': [0.09876543209876527, 1.4802973661668753e-16], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [9.486794123829286e-05, 0.21298306175066295], 'false': [0.0, 0.21150083629829722], 'false,false': [0.21122863138478598, 0.21617741841403879], 'false,false,false': [0.21617741841403879, nan], 'false,false,true': [0.09277016411387685, 1.108958518126831e-05], 'true': [0.0, 0.0001147902088982633], 'false,true': [0.0, nan]}
{'': [0.00012412408382226045, 0.1560831852926808], 'false': [0.15318685066244034, 0.20229643687497534], 'false,false': [0.22222222222222224, 0.18895275610797688], 'false,false,true': [nan, 0.22222222222222224], 'false,false,false': [0.18895275610797688, nan], 'false,true': [0.14293760980238598, 0.16358596061457178], 'false,true,false': [0.10454793170418597, 4.123685520036296e-17], 'true': [6.692084974108115e-05, 0.00016530414712408645]}
{'': [0.07571074401224663, 0.13821603508513802], 'false': [0.1345862233196436, 0.19076037203545304], 'false,false': [0.0, 0.19044516489412594], 'false,false,false': [0.19044516489412594, nan], 'false,true': [0.17984674889610244, 0.1182033585787368], 'false,true,true': [nan, 0.17984674889610253], 'true': [0.00011317655229277079, 0.2516161567095099], 'false,false,true': [nan, 0.0]}
{'': [0.001379717491926598, 0.13181174721583408], 'false': [0.12716805326474231, 0.21302319676299844], 'false,false': [0.0, 0.2273484523827614], 'false,false,false': [0.24999999999999997, 0.20408163265306123], 'true': [0.001761628233219443, 0.00012154248885164198], 'true,true': [0.001761628233219443, nan], 'false,false,true': [nan, 0.0]}
{'': [0.08927591148901604, 0.12253684454194208], 'false': [0.10890113735204836, 0.12505975344276457], 'false,false': [1.1899907537693544e-06, 0.12640432325155404], 'false,false,false': [0.12094125593679067, 0.168917998612024], 'true': [0.09671256905875127, 0.0], 'true,true': [0.10972943769003263, 0.003912989479591881], 'true,false': [nan, 0.0]}
{'': [0.11510442504967115, 0.14076095362479837], 'false': [0.18800580766995498, 0.13853034569360567], 'false,false': [0.13853034569360567, nan], 'true': [0.04787245233473824, 0.001971744854436634], 'true,true': [0.002371076934824695, 0.04265789428637723], 'true,true,false': [nan, 0.04265789428637723], 'true,true,true': [0.002576441407738306, 0.0]}
{'': [0.000158932541748813, 0.10522088271385666], 'false': [0.10313226026945398, 0.13037121309118072], 'false,false': [0.0, 0.1359224617740168], 'false,false,false': [0.1359224617740168, nan], 'false,true': [0.08813485313787846, 0.00046139158110199764], 'false,true,true': [nan, 0.0881348531378785], 'true': [0.0, 7.954465213800832e-05], 'false,false,true': [0.0, nan]}
{'': [0.0007645841896987845, 0.08519226315005063], 'false': [0.06126048554973356, 0.10274229069884379], 'false,false': [7.359033128799078e-07, 0.10443133466183538], 'false,false,false': [0.0996001566369946, 0.14755636143172562], 'false,true': [0.05114947461329904, 0.06930975527749163], 'false,true,false': [0.2322898322064252, 0.05633935037656488], 'true': [0.0010316105837771747, 6.478051498818675e-06], 'true,false': [nan, 6.478051498818675e-06]}
{'': [0.0006124551442526014, 0.07528216697983854], 'false': [0.048188396614682674, 0.0965720750501871], 'false,false': [5.792127989641868e-07, 0.09817673660823786], 'false,false,false': [0.0929489213080897, 0.14707089658266356], 'true': [0.000829704254506701, 5.130606561080479e-06], 'true,true': [0.000829704254506701, nan], 'true,true,true': [8.278146409145577e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 14.211
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( location(G, I), location(A, I) )
%   | | | then return 0.09727936988212063;  // std dev = 4.091, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | | | else return 0.22656998773109124;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.12229987849573878;  // std dev = 3.210, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.23314893509951123;  // std dev = 4.330, 80.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=30 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7480325422264148;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6481731131376092;  // std dev = 3.605, 85.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=69 */
%   | | | else return -0.16194975883087734;  // std dev = 0.098, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.04766576078189182;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.12733423921810821;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5612088330372125;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5888801916661459;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.01496612427506408;  // std dev = 1.961, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.1197952804918394;  // std dev = 3.864, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6456731643897549;  // std dev = 1.673, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14505130475951392;  // std dev = 0.061, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.02169667726779303;  // std dev = 0.645, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.08403754422868759;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.3083798179762976;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3419218329523914;  // std dev = 0.279, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.2346829106545233;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.675271400689251;  // std dev = 0.272, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.14345565452119058;  // std dev = 0.166, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.14529847977086385;  // std dev = 2.685, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.08005033492924155;  // std dev = 3.997, 120.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=37 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5607174582286607;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.034805453578169596;  // std dev = 1.491, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.07728466453666505;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3547759009011138;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19888246617942332;  // std dev = 0.758, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14984968456739273;  // std dev = 0.159, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.06183007469674458;  // std dev = 1.907, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.19023624645616802;  // std dev = 2.244, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.07637343978399791;  // std dev = 4.234, 151.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.42149406034821746;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.26641117793750113;  // std dev = 1.035, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05877679663500035;  // std dev = 1.175, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( enzyme(A, F), location(A, G) )
%   | | then return -0.0019033407762947634;  // std dev = 0.646, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.29970032175498296;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.32341162355364916;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4468141239030384;  // std dev = 1.484, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.16222111449107215;  // std dev = 0.173, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.13832943632817357;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.3370173208838809;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.01677273885462127;  // std dev = 3.750, 136.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=35 */
%   | | | else return 0.08557541024587784;  // std dev = 3.205, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4551729121478051;  // std dev = 0.202, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.1665029718574714;  // std dev = 0.073, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( complex(A, E), enzyme(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3622021453817614;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2624806880406272;  // std dev = 0.573, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.5206362264183475;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15591249527365122;  // std dev = 0.012, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.492943683827362;  // std dev = 1.432, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | | else return -0.17223110531969518;  // std dev = 0.185, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0.17679228958222482;  // std dev = 0.681, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.1635627813377557;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.17661700376641068;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1888347552547407;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.33552636665865815;  // std dev = 1.061, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.24541894956907828;  // std dev = 2.877, 57.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | | else return -0.13161952860093465;  // std dev = 0.025, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.17994476953572847;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.27197138874433235;  // std dev = 0.956, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.007638676180035359;  // std dev = 0.757, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1555306757988173;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.14969653833977972;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.02870601566730757;  // std dev = 1.006, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.05485436946578234;  // std dev = 0.852, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.0010859842610334565;  // std dev = 0.951, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.11540565236753539;  // std dev = 1.223, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.08987388439274097;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.021977038620494525;  // std dev = 2.809, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return -0.0593643670575762;  // std dev = 1.470, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1362396923802408;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.13164348083737532;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.08308420241924061;  // std dev = 0.032, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.012957696242480771;  // std dev = 1.875, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.21626445766334768;  // std dev = 0.421, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.026219996898737736;  // std dev = 1.123, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.07741952000877292;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.011881145558787602;  // std dev = 2.812, 116.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=38 */
%   | | | else return 0.12118851240542514;  // std dev = 1.396, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '42.067', 'seconds']
Refined model CLL: -0.188173


******************************************
Best model found
******************************************
Results 

CLL : -0.192288 

AUC ROC : 0.98803 

AUC PR : 0.289347 

Precision : 0.185053 

Recall : 0.921986 

F1 : 0.308239 

Total Learning Time : 14.211 

Total Inference Time : 30.014359712600708 

Total revision time: 64.78974375724792
Best scored revision CLL: -0.188173


Results 

CLL : -0.192288 

AUC ROC : 0.98803 

AUC PR : 0.289347 

Precision : 0.185053 

Recall : 0.921986 

F1 : 0.308239 

Total Learning Time : 64.84339580535888 

Total Inference Time : 30.014359712600708 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.916
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09845901261889105;  // std dev = 4.853, 129.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=31 */
%   | | | else return 0.152266582158335;  // std dev = 5.636, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08037115732173453;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7271035802978393;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7464964104192312;  // std dev = 2.684, 84.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=76 */
%   | | | else return -0.15768434977711382;  // std dev = 0.051, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | | else if ( location(A, I) )
%   | | | then return 0.18141435609293344;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5643346812640405;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4268445551495637;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05675023768416265;  // std dev = 4.382, 144.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5931357461667155;  // std dev = 2.301, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.14119284242607893;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.823205014188038;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11264936097476179;  // std dev = 1.579, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3802255941400569;  // std dev = 0.980, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.413482528394957;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.48329514303242743;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5355915246047499;  // std dev = 1.666, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.03592625835425326;  // std dev = 5.063, 244.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5584141135560103;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.04593558766216854;  // std dev = 1.710, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3406228369477442;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2614122514897443;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.07148039198287315;  // std dev = 5.633, 269.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41977774839328796;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1500555194362606;  // std dev = 1.545, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.09937387443209697;  // std dev = 1.266, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.4263561997076671;  // std dev = 0.236, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3222472210928311;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.019770408517825102;  // std dev = 2.699, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.28997975242988844;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05199650131555053;  // std dev = 4.658, 175.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=51 */
%   | | | else return 0.2121090024604038;  // std dev = 1.835, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2877509051827002;  // std dev = 0.258, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.25621962846714386;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.25601371339558987;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4706160654040227;  // std dev = 1.549, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.1948488008534558;  // std dev = 0.924, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2210831642960311;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07254772380438422;  // std dev = 4.274, 145.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.199684484883504;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.20338603385801818;  // std dev = 0.068, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return -0.7615362350484883;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.35194121997372446;  // std dev = 3.409, 96.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=82 */
%   | | else return -0.14875439140291127;  // std dev = 0.304, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21049730122056942;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.01085558761230698;  // std dev = 1.411, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18612031073391608;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.29501956318532613;  // std dev = 0.810, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2170926653252748;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.014809736034464005;  // std dev = 1.653, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18164847315788632;  // std dev = 0.723, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.022361779695988356;  // std dev = 1.285, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15662024213733644;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.00434994564325153;  // std dev = 3.939, 174.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=47 */
%   | | | else return 0.019986034315724654;  // std dev = 1.440, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14503663006963072;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.18173569053621852;  // std dev = 0.084, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1966989966361938;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.020451372855662425;  // std dev = 2.562, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.13703476288983968;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03458335708468471;  // std dev = 3.757, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   | | | else return 0.0029748972684975894;  // std dev = 1.392, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.038', 'seconds']
Parameter learned model CLL:-0.201117 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.853, 98, 31], 'false,false,true,false': [5.636, 108, 45], 'false,false,false,true': [1.764, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.024, 0, 10], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.684, 8, 76], 'false,false,true,false': [0.051, 207, 0], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.027, 0, 11], 'true,false': [0.923, 1, 6], 'false,true,true': [4.382, 110, 34], 'false,true,false,true': [2.301, 6, 48], 'false,true,false,false': [0.0, 104, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.579, 9, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.98, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.109, 0, 3], 'false,true,true,false': [1.666, 4, 21], 'false,true,false': [5.063, 186, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.71, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.05e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false,true': [5.633, 187, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.545, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [1.266, 2, 9], 'true,true,false': [0.236, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.699, 53, 19], 'false,false,true': [0.061, 0, 8], 'false,false,false,true': [4.658, 124, 51], 'false,false,false,false': [1.835, 11, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.258, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [5.27e-09, 0, 3], 'true,true,false,false': [1.549, 4, 33], 'true,false': [0.924, 86, 0], 'false,true': [0.023, 0, 5], 'false,false,true': [4.274, 98, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.068, 0, 10], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.409, 14, 82], 'false,true,false': [0.304, 200, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.411, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.115, 0, 9], 'true,false,true': [0.81, 3, 2], 'true,false,false': [0.088, 0, 5], 'false,true,true': [1.653, 39, 13], 'false,true,false,true': [0.723, 1, 8], 'false,true,false,false': [1.285, 42, 11], 'false,false,true': [0.018, 0, 5], 'false,false,false,true': [3.939, 127, 47], 'false,false,false,false': [1.44, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [5.27e-09, 0, 7], 'true,true,true,false': [0.084, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.065, 0, 3], 'false,true': [2.562, 86, 32], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [3.757, 104, 47], 'false,false,false,false': [1.392, 10, 4]}]
{'': [0.05246913580246885, 0.2030790777620988], 'false': [-2.5376526277146434e-16, 0.19555555555555662], 'false,false': [0.1968713847391986, 0.17283950617283936], 'false,false,true': [0.18256114416201066, 0.20761245674740594], 'false,false,false': [0.17283950617283936, nan], 'true': [0.07100591715976314, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [4.8348344665030523e-05, 0.19783043030437547], 'false': [0.10937500000000006, 0.19403838619482813], 'false,false': [0.19263460935357007, 0.22222222222222232], 'false,false,false': [0.22222222222222232, nan], 'false,false,true': [0.08575877986212406, 1.2761495169452296e-05], 'false,true': [0.10937500000000006, nan], 'true': [-1.2688263138573217e-16, 5.821946503408171e-05]}
{'': [0.051869366278287345, 0.14848332571835857], 'false': [0.14528437384236992, 0.2115385303761609], 'false,false': [0.2115385303761609, nan], 'false,false,true': [0.0, 0.1917472009980991], 'false,true': [0.13335334187200878, 0.15481731923541764], 'false,true,false': [0.09804222644612708, -5.124106267500723e-17], 'true': [6.730948561676927e-05, 0.12172043823834862]}
{'': [0.053450752596225365, 0.13102192467597323], 'false': [0.127073233268355, 0.19807620642532553], 'false,false': [0.0, 0.19486664688478525], 'false,false,false': [0.19486664688478525, nan], 'false,true': [0.09985043450325211, 0.10506949350104051], 'false,true,true': [0.003947568596646837, 0.11106575217716358], 'true': [0.05653346875387072, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.05189514812832277, 0.1220539376106256], 'false': [0.11793925861299624, 0.20451590091022176], 'false,false': [0.0, 0.21704574880562816], 'false,false,false': [0.21704574880562816, nan], 'true': [1.586032892321652e-17, 0.08247932119310329], 'true,true': [1.586032892321652e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.11574356098814584, 0.12098253042277803], 'false': [0.10119948753512696, 0.1270859763630675], 'false,false': [0.00046747578494418796, 0.13034171937376823], 'false,false,false': [0.1239868283884508, 0.16040984690957436], 'true': [0.12191037617684793, 0.0], 'true,true': [0.1455944183035724, 0.009307758662040921], 'true,false': [nan, 0.0]}
{'': [0.11288918177062086, 0.12246669719510635], 'false': [0.00011034630964079639, 0.1259504558056633], 'false,false': [0.1259504558056633, nan], 'true': [0.05214249783268616, 0.009924760323932896], 'true,true': [0.004220618275354762, 0.06317598680007483], 'true,true,false': [9.25185853854297e-18, 0.06484430139662285], 'true,true,true': [0.004439853988838023, 0.0]}
{'': [0.0002729131109904836, 0.09780231608778957], 'false': [0.0962094884455347, 0.12730777468698543], 'false,false': [0.0, 0.13273264082895156], 'false,false,false': [0.13273264082895156, nan], 'false,true': [0.13245897459620645, 0.0004625736460565655], 'false,true,true': [0.0, 0.12105698194402949], 'true': [-7.93016446160826e-18, 0.0004583105090558537], 'false,false,true': [0.0, nan]}
{'': [0.08279997937379714, 0.07525162591748881], 'true': [0.0014783456099454319, 0.13199132924652182], 'true,false': [0.13131029526787913, 0.0015428959301175438], 'false': [0.04596189086019853, 0.09267846762678003], 'false,false': [6.559066416554626e-05, 0.09456910699932847], 'false,false,false': [0.08916032762632303, 0.1727676940111257], 'false,true': [0.052524017999676716, 0.04023614628797638], 'false,true,false': [0.058040778446432024, 0.03117107867873395]}
{'': [0.0011586973399548527, 0.07952138489564411], 'false': [0.05564179140440045, 0.0948370873382126], 'false,false': [5.273474573278536e-05, 0.09738425167409041], 'false,false,false': [0.09349820249566586, 0.1383837447550872], 'true': [0.0008752065642361537, 0.0014074613656391843], 'true,true': [0.0008752065642361537, nan], 'true,true,true': [3.96508223080413e-18, 0.001171069560415905]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(F, E), interaction(A, F).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 13.146
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1363444238213183;  // std dev = 7.308, 266.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=74 */
%   | | | else return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7357208520710393;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7129682976494358;  // std dev = 3.083, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.1590597278605344;  // std dev = 0.124, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.34072811053685204;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.15927188946314802;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.48252205594740527;  // std dev = 0.283, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.22069457731129205;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5954130011700849;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10900832847440978;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.0961176285616383;  // std dev = 4.277, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6340087800947198;  // std dev = 1.911, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.1442814067561999;  // std dev = 0.220, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then return 0.583951362952336;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.21033165180645377;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.39864997009691305;  // std dev = 0.232, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.4353282110090667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.56984518245901;  // std dev = 1.705, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.14622208312907978;  // std dev = 0.490, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( location(A, H), enzyme(A, I) )
%   | | | then return 0.15129347271157062;  // std dev = 1.681, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.01792985730478483;  // std dev = 3.042, 88.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4105786685150262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.21319960355844797;  // std dev = 1.319, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.17018458747725584;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.3775031679325974;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0873688153762687;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.26295838539367566;  // std dev = 0.301, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4368867645681309;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.004621659498018423;  // std dev = 2.841, 103.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
%   | | | else return 0.061627357481491396;  // std dev = 4.269, 174.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=54 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3160136875340045;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.08002523819611995;  // std dev = 1.264, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.1074496041737117;  // std dev = 0.812, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.3127587763634018;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.21499750143198212;  // std dev = 1.172, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.36079495615240537;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2519637773476775;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( enzyme(A, H), phenotype(A, I) )
%   | | then return -0.05698956262711391;  // std dev = 0.259, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else return 0.0730087657422415;  // std dev = 0.325, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.3820657743925227;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2905439133752346;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.01983910840572004;  // std dev = 0.313, 224.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=61 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.27046009539157034;  // std dev = 0.043, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.25034948627254733;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.42640285213623774;  // std dev = 2.022, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.15614280245679013;  // std dev = 0.063, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.25193688169081624;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(A, I), complex(G, J) )
%   | | | then return -0.029046826681555234;  // std dev = 1.445, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.05448409816374146;  // std dev = 3.433, 112.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=37 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.0019483275659703259;  // std dev = 0.484, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3916447044028414;  // std dev = 0.589, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20987786496542915;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.18603592955483061;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.24389460897324552;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3200989398033603;  // std dev = 3.084, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.1401722130726896;  // std dev = 0.037, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.1665067244067998;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.025601838269119697;  // std dev = 0.870, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07668720824575267;  // std dev = 0.945, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.15533883906934215;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.5692384872930655;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.20956613777317673;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.25591352896872;  // std dev = 0.934, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1792590247924178;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then return 0.002539985223431811;  // std dev = 0.218, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.021901027715384973;  // std dev = 0.857, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.010923419004973347;  // std dev = 1.953, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.06293563519317358;  // std dev = 2.761, 96.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.15263880898741572;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.09027286823848979;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17495975035652508;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1597587263862349;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(A, I), complex(I, J) )
%   | | then return -0.012051776136567724;  // std dev = 0.205, 112.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=27 */
%   | | else return 0.18299348885545402;  // std dev = 0.271, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.17421305688326577;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, L) )
%   | | | then return 0.023085899119882416;  // std dev = 3.505, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
%   | | | else return -0.10642101332290461;  // std dev = 1.126, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.436', 'seconds']
Refined model CLL: -0.190178


******************************************
Best model found
******************************************
Results 

CLL : -0.169932 

AUC ROC : 0.989072 

AUC PR : 0.34591 

Precision : 0.287979 

Recall : 0.822642 

F1 : 0.426614 

Total Learning Time : 13.146 

Total Inference Time : 19.59882116317749 

Total revision time: 55.87691613388061
Best scored revision CLL: -0.190178


Results 

CLL : -0.169932 

AUC ROC : 0.989072 

AUC PR : 0.34591 

Precision : 0.287979 

Recall : 0.822642 

F1 : 0.426614 

Total Learning Time : 55.930568181991575 

Total Inference Time : 19.59882116317749 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.376
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1340110040650296;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.14573063444591652;  // std dev = 5.599, 153.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15502393509951232;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7385128322212614;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7670719622367217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8208367550188512;  // std dev = 0.991, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16024561682800953;  // std dev = 0.007, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( location(A, K) )
%   | | | then return 0.2874741506947027;  // std dev = 3.141, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return 0.3382108946667297;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.017263560215990376;  // std dev = 2.139, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6670610268282551;  // std dev = 1.007, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14009333413946612;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.04712200503079847;  // std dev = 0.712, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.08627326189551603;  // std dev = 3.725, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2603094698872386;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38610304603911005;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.592967586833696;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06554793336841382;  // std dev = 4.196, 184.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5389748289122991;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5907495819814704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.0824161784877757;  // std dev = 3.537, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.10548343790503752;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.0721961483315637;  // std dev = 4.168, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.4054617286569061;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4443108534303246;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0405247160490097;  // std dev = 3.710, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.19246126737337318;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.36442540609921686;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3125509267724548;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.33894583500833;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07908676576674419;  // std dev = 0.957, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.08083376597124399;  // std dev = 3.871, 147.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=49 */
%   | | | else return 0.10120852606699451;  // std dev = 3.620, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23504551281983135;  // std dev = 0.153, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.25858714092482016;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.25987510649515994;  // std dev = 0.664, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6296449515140894;  // std dev = 0.751, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19629625575601586;  // std dev = 0.584, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09851140423452992;  // std dev = 3.146, 95.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17344126455402586;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1860540140538608;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42907954368070156;  // std dev = 0.733, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14758453761447074;  // std dev = 0.279, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.12376237709434523;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0401849152718781;  // std dev = 3.030, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15968753888766;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12449095163530122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19695643088724832;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0749888850772666;  // std dev = 0.398, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.06553423119010283;  // std dev = 0.294, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.009761259770717462;  // std dev = 1.219, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.015078426832636419;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02508202498636569;  // std dev = 2.629, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
%   | | | else return 0.04441348187533924;  // std dev = 2.994, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13044000654462146;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.18313157957856482;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.130725326887823;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.6622571359952346;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.14378477783819008;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.007095472534476168;  // std dev = 1.317, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15353766932582202;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.033551095589356913;  // std dev = 2.567, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
%   | | | else return -0.0016924655106955095;  // std dev = 3.082, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.988', 'seconds']
Parameter learned model CLL:-0.186603 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [2.407, 21, 8], 'false,false,true,false': [5.599, 109, 44], 'false,false,false,true': [3.655, 45, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.052, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.991, 1, 52], 'false,false,true,false': [0.007, 126, 0], 'false,false,false,true': [3.141, 22, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.139, 35, 8], 'false,true,false,true': [1.007, 1, 48], 'false,true,false,false': [0.0, 110, 0], 'false,false,true,true': [0.712, 1, 1], 'false,false,true,false': [3.725, 48, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.126, 0, 3], 'false,true,false': [4.196, 132, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.537, 41, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.168, 124, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.71, 50, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.103, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.957, 21, 3], 'false,false,true': [7.45e-09, 0, 6], 'false,false,false,true': [3.871, 98, 49], 'false,false,false,false': [3.62, 37, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.153, 0, 12], 'true,true,true,false': [0.013, 0, 2], 'true,true,false,true': [0.664, 1, 1], 'true,true,false,false': [0.751, 0, 36], 'true,false': [0.584, 98, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.146, 59, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.075, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.733, 0, 56], 'false,true,false': [0.279, 158, 0], 'false,false,true,true': [0.823, 1, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.03, 41, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.071, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.066, 0, 4], 'false,true,true': [0.398, 11, 1], 'false,true,false,true': [0.294, 1, 2], 'false,true,false,false': [1.219, 39, 14], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [2.629, 74, 36], 'false,false,false,false': [2.994, 38, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.001, 0, 5], 'true,true,true,false': [0.049, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.052, 0, 4], 'false,true': [1.317, 45, 17], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.567, 67, 36], 'false,false,false,false': [3.082, 47, 20]}]
{'': [-2.5376526277146434e-16, 0.21231833910034664], 'false': [0.12244897959183662, 0.20603537981269648], 'false,false': [0.20408163265306198, 0.2112029384756653], 'false,false,false': [0.2087402343749995, 0.25], 'false,false,true': [0.19976218787158156, 0.20487846554743988], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.0, 0.18750000000000006], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.2212664358450687], 'false': [0.0005664054911388069, 0.21835721111078146], 'false,false': [0.20609360017036152, 0.24722251840976883], 'false,false,false': [0.24671075050630184, 0.25], 'false,false,true': [0.018521203347912987, 3.6925638563412727e-07], 'false,true': [0.0005437492714933434, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-2.5376526277146434e-16, 0.15658894452567118], 'false': [0.13840594344229562, 0.20760186638355363], 'false,false': [0.20553829087810455, 0.24999999999999997], 'false,false,false': [0.24999999999999997, nan], 'false,false,true': [0.25355064030055513, 0.2040823680706552], 'false,true': [0.10640313842660003, 0.1452829080810886], 'false,true,false': [0.02070621277173175, -1.3322676295501878e-16], 'true': [0.0, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.12887878430098845], 'false': [0.0986245583812493, 0.21337394023937956], 'false,false': [0.0006701562638433134, 0.21303198034832121], 'false,false,false': [0.21204826269914065, 0.22222222222222218], 'false,true': [0.011997473679009496, 0.09569299337921795], 'false,true,true': [0.0, 0.005298397012473884], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, -3.700743415417188e-17]}
{'': [-3.172065784643304e-17, 0.12641407949373], 'false': [0.09652140977194197, 0.19991694337055543], 'false,false': [0.0003773136239151875, 0.20157991287440058], 'false,false,false': [0.19952615840847976, 0.25], 'false,false,true': [0.0, 0.0], 'true': [-2.2204460492503132e-17, -3.700743415417188e-17], 'true,true': [-2.2204460492503132e-17, nan]}
{'': [0.003197741974325557, 0.12741671535408863], 'false': [0.03812950264509477, 0.13464178460332343], 'false,false': [9.25185853854297e-18, 0.1377892281080506], 'false,false,false': [0.10193212026148804, 0.22996368362226527], 'true': [0.0037248181086023276, 0.001223002152416978], 'true,true': [2.3790493384824782e-17, 0.00264745196331323], 'true,false': [0.0008230783502159028, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13393694233369383, 0.09953612196564494], 'true': [0.0719776950016485, 0.0034849122045987075], 'false': [-5.551115123125783e-18, 0.10415607813701154], 'false,false': [0.10415607813701154, nan], 'true,true': [0.0017491844838218942, 0.06591391207073338], 'true,true,false': [0.22055498761962364, 0.01567821838581275], 'true,true,true': [0.001948067425335422, 8.085118859765816e-05]}
{'': [0.00044047156808186904, 0.08756267752224652], 'false': [0.06712284033005186, 0.1552528579816693], 'false,false': [0.2257610898160566, 0.15052530027224723], 'false,false,true': [0.2257610898160566, nan], 'false,false,false': [0.15052530027224723, nan], 'false,true': [0.009595339374857697, 0.0004921385042719771], 'false,true,true': [nan, 0.009595339374857665], 'true': [4.625929269271485e-18, 0.0007026474798808163]}
{'': [0.0010913995142875857, 0.07704057944154848], 'false': [0.026399293782039677, 0.09618156040946692], 'false,false': [0.1388888888888889, 0.0945806620678764], 'false,false,false': [0.06283021542948171, 0.15455233843683788], 'false,true': [0.013224751532346202, 0.028375857734059956], 'false,true,false': [0.028862656023079556, 0.028044584669692944], 'true': [0.0005560916245437771, 0.0017214800006787045], 'true,false': [0.0, 0.001101600864205514]}
{'': [0.041337731407591186, 0.07597219095438427], 'false': [0.027976708401371706, 0.09273164582485403], 'false,false': [0.0, 0.09494696242176232], 'false,false,false': [0.06397446305525652, 0.14180883006581205], 'true': [0.054781541548633156, 0.0006719943119869488], 'true,true': [0.0009565007818191675, 0.13973804143112886], 'true,true,false': [0.0, 0.0], 'true,true,true': [3.2563079297998064e-07, 0.00081487486553485]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.435
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( complex(I, H), phenotype(A, J) )
%   | | | then return -0.05851773156715447;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.12345505754849193;  // std dev = 3.090, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.1914822684328447;  // std dev = 5.831, 153.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.4068585879990681;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7373269569258907;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8351399858047046;  // std dev = 0.057, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1628670757015019;  // std dev = 0.126, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.11454747843819163;  // std dev = 3.161, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.23320549123154835;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5754117306292406;  // std dev = 0.035, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14527951065285438;  // std dev = 0.068, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.05123209019261511;  // std dev = 2.053, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.658478211047624;  // std dev = 1.014, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14506899719652608;  // std dev = 0.202, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7772066548335402;  // std dev = 0.245, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1912774416854736;  // std dev = 0.089, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.1892437837079094;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.0982370701804849;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4332861219655687;  // std dev = 0.036, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.511509440753625;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.576715561997601;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38983754308670276;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03436763817539658;  // std dev = 4.209, 202.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.503820006739718;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.36061807185794226;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.07943737365727183;  // std dev = 2.889, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.15695149439086156;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2639840902172152;  // std dev = 0.256, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5433296124426439;  // std dev = 0.141, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1307689082322419;  // std dev = 0.098, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.12071431673896113;  // std dev = 2.434, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | | | else return 0.05406633833334451;  // std dev = 2.522, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return -0.07114416396056344;  // std dev = 0.638, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.28225557056294115;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.021591716983335913;  // std dev = 1.525, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.13241184246306342;  // std dev = 3.044, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2871384409205501;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.3603248738902875;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.22871942404210743;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.12539065579482056;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return -0.0014315248623348008;  // std dev = 0.603, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.045083918088617725;  // std dev = 0.508, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.2698904942752766;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.012048291887054944;  // std dev = 2.637, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 0.07069923113599706;  // std dev = 4.347, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23660724852355844;  // std dev = 0.038, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.4061782762309852;  // std dev = 0.693, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.6454878425538877;  // std dev = 0.995, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return -0.1693864697268989;  // std dev = 0.061, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.22211945529292337;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4855010490936241;  // std dev = 0.272, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.151618980462859;  // std dev = 0.057, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.013860581098841508;  // std dev = 1.362, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.05179465057979425;  // std dev = 1.880, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.18417345701069654;  // std dev = 0.023, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.20905529458737113;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4018979422246457;  // std dev = 0.621, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return -0.10329838711165565;  // std dev = 0.179, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.14199370910017522;  // std dev = 0.196, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(A, J) )
%   | | | then return -0.02491306662052205;  // std dev = 1.388, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.056285232615244415;  // std dev = 1.584, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.036337491931365845;  // std dev = 1.364, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.024398862834354884;  // std dev = 1.615, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17483320385433684;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.22229691553520103;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.026805053591223517;  // std dev = 0.824, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( complex(A, G), location(F, H) )
%   | | then return -0.0868191499775554;  // std dev = 0.089, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else return 0.023472774143407316;  // std dev = 0.362, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( complex(K, J), interaction(K, L) )
%   | | | then return 0.025447243961954073;  // std dev = 0.981, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.13629447660363075;  // std dev = 0.848, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.002078830278815182;  // std dev = 2.378, 127.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=38 */
%   | | | else return 0.02812411766868417;  // std dev = 2.746, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15267532424248764;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.16621037016787438;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then if ( interaction(A, H), complex(H, G) )
%   | | | then return -0.04693698210386658;  // std dev = 0.737, 42.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   | | | else return 0.010964404687679756;  // std dev = 0.651, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.13890723874539018;  // std dev = 0.654, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.02567622399532835;  // std dev = 0.445, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.15908268212531868;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return -0.02802446156726811;  // std dev = 1.976, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.005071865396431176;  // std dev = 3.252, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.505', 'seconds']
Refined model CLL: -0.16278


******************************************
Best model found
******************************************
Results 

CLL : -0.195765 

AUC ROC : 0.981795 

AUC PR : 0.204629 

Precision : 0.131334 

Recall : 0.916968 

F1 : 0.22976 

Total Learning Time : 7.435 

Total Inference Time : 7.2538580894470215 

Total revision time: 26.17699588394165
Best scored revision CLL: -0.16278


Results 

CLL : -0.195765 

AUC ROC : 0.981795 

AUC PR : 0.204629 

Precision : 0.131334 

Recall : 0.916968 

F1 : 0.22976 

Total Learning Time : 26.230647932052612 

Total Inference Time : 7.2538580894470215 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.442
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07126368919787303;  // std dev = 3.198, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.1778210662470527;  // std dev = 5.151, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6021035802978392;  // std dev = 0.944, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7838957551431103;  // std dev = 1.691, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.16034449211110077;  // std dev = 0.081, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else if ( location(A, I) )
%   | | | then return 0.10752272140268043;  // std dev = 2.827, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.058741135785635;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5776176117052397;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5934077266235134;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04234159386202368;  // std dev = 2.818, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6239620445528692;  // std dev = 1.670, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14872913146539835;  // std dev = 0.268, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.39641858692579396;  // std dev = 0.956, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1297384612140284;  // std dev = 2.435, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09314255464292136;  // std dev = 1.451, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.32094689139771926;  // std dev = 1.318, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.575673159285216;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5014025771456098;  // std dev = 0.702, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.06038003159166555;  // std dev = 4.358, 177.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.48774222301878656;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5541960420571599;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.056093506463235916;  // std dev = 2.856, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.11747500025051379;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.35444755925182364;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2242263624963041;  // std dev = 0.947, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.060039154482540096;  // std dev = 4.450, 195.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3689362186636279;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3927911597910782;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06294770510674598;  // std dev = 2.560, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.2651065255621627;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2812378688905472;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4060433784286327;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2878765833925572;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3041744513430907;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.05428569189744446;  // std dev = 1.276, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3176318818012831;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06559339089537156;  // std dev = 4.065, 148.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | | | else return 0.04176421630487946;  // std dev = 3.083, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.254199185354366;  // std dev = 0.149, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2401813890257248;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2787845384241838;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4818360895815944;  // std dev = 2.128, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.1740537366874087;  // std dev = 0.702, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.0018595499927653858;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09616411118788701;  // std dev = 3.230, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18176889879164992;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.10732407594571193;  // std dev = 0.959, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4160398950094377;  // std dev = 1.744, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14676094756577782;  // std dev = 0.217, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19916022310313494;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.019143698545351338;  // std dev = 2.598, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16001054604336923;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19671419024484027;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.030172075477644722;  // std dev = 0.847, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.10398514509217134;  // std dev = 0.424, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.27415517645567267;  // std dev = 0.179, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 1.4069927214986193E-4;  // std dev = 1.641, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22852626228099696;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03214135361301411;  // std dev = 2.706, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return 0.008992704508658172;  // std dev = 2.634, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1363210712621028;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15304545931296465;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.20116105325188116;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17468961332153732;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1726410347183169;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.020432453736266953;  // std dev = 1.861, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19074514783244345;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02367093787798672;  // std dev = 2.780, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | | else return 0.13854637385543328;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.059', 'seconds']
Parameter learned model CLL:-0.185317 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.198, 48, 13], 'false,false,true,false': [5.151, 83, 39], 'false,false,false,true': [2.572, 25, 9], 'false,false,false,false': [1.225, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.944, 1, 7], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.691, 3, 52], 'false,false,true,false': [0.081, 149, 0], 'false,false,false,true': [2.827, 30, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.041, 0, 11], 'true,false': [0.019, 0, 4], 'false,true,true': [2.818, 53, 14], 'false,true,false,true': [1.67, 3, 42], 'false,true,false,false': [0.268, 57, 0], 'false,false,true,true': [0.956, 1, 3], 'false,false,true,false': [2.435, 20, 9], 'false,false,false,true': [1.451, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.318, 2, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.702, 1, 6], 'false,true,false': [4.358, 128, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.856, 32, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.029, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.947, 1, 6], 'false,true': [4.45, 139, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.034, 0, 2], 'false,false,false,true': [2.56, 25, 9], 'false,false,false,false': [1.225, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.052, 0, 9], 'true,true,false': [0.014, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.03, 0, 2], 'false,true': [1.276, 27, 5], 'false,false,true': [0.017, 0, 5], 'false,false,false,true': [4.065, 102, 46], 'false,false,false,false': [3.083, 39, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.149, 0, 13], 'true,true,true,false': [0.028, 0, 3], 'true,true,false,true': [0.043, 0, 3], 'true,true,false,false': [2.128, 5, 33], 'true,false': [0.702, 104, 0], 'false,true': [0.864, 1, 3], 'false,false,true': [3.23, 56, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [0.959, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.744, 3, 56], 'false,true,false': [0.217, 129, 0], 'false,false,true,true': [0.024, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.598, 34, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.029, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.847, 1, 5], 'false,true,true': [0.424, 19, 1], 'false,true,false,true': [0.179, 0, 6], 'false,true,false,false': [1.641, 38, 17], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [2.706, 69, 31], 'false,false,false,false': [2.634, 34, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 8], 'true,true,true,false': [0.015, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.01, 0, 2], 'true,false': [0.023, 0, 3], 'false,true': [1.861, 70, 24], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [2.78, 67, 31], 'false,false,false,false': [2.317, 18, 12]}]
{'': [0.05859374999999978, 0.21340264650283586], 'false': [-2.5376526277146434e-16, 0.20462908966599094], 'false,false': [0.2034100749499843, 0.20999999999999946], 'false,false,false': [0.19463667820069216, 0.24999999999999992], 'false,false,true': [0.16769685568395537, 0.21748185971513095], 'true': [0.07100591715976314, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.06006807111506679, 0.19546888843117094], 'false': [0.10937500000000006, 0.1904956084828254], 'false,false': [0.18961520424593434, 0.19442105291183076], 'false,false,false': [0.1948847537554609, 0.18750000000000003], 'false,false,true': [0.05197141041629139, 4.3755035732201964e-05], 'false,true': [0.10937500000000006, nan], 'true': [-2.220446049250313e-16, 0.11134076148675542]}
{'': [0.00018507598695845692, 0.16965410866365718], 'false': [0.15812520249016151, 0.21482505179287625], 'false,false': [0.21498712142391171, 0.21064481747394592], 'false,false,true': [0.22867644855505698, 0.20447853965017107], 'false,false,false': [0.21064481747394592, nan], 'false,true': [0.11849821953847789, 0.17525567846543383], 'false,true,false': [0.0620077990520363, 0.001256757806505864], 'true': [0.00015458299549826876, 8.6091378776465e-05]}
{'': [0.10213209581979593, 0.13012830084053273], 'false': [0.11374390277786625, 0.19193987862169842], 'false,false': [0.000981357792174416, 0.1920069275400236], 'false,false,false': [0.1896531649567544, 0.2222222222222222], 'false,true': [0.06228556110841943, 0.10730101919179294], 'true': [0.10213209581979593, nan], 'false,true,true': [0.0, 0.07049398348820277], 'false,false,true': [0.0, 0.0]}
{'': [0.06031215375359364, 0.11933104185471914], 'false': [0.10154164986062093, 0.19765222466347596], 'false,false': [0.0005058295255058928, 0.20650714223173466], 'false,false,false': [0.19270150220309443, 0.25000114200929097], 'true': [9.355368427341502e-05, 0.12819744058093668], 'false,false,true': [0.0, 0.0005690582161941016], 'true,true': [9.355368427341502e-05, nan]}
{'': [0.0030118993199000493, 0.11932338764670976], 'false': [0.05084391661291881, 0.12802917173728556], 'false,false': [5.969554045899272e-05, 0.1295928280783615], 'false,false,false': [0.11163671484131658, 0.1793163239474991], 'true': [0.0035425414554909928, 0.00035761884662072196], 'true,true': [0.0003028113865684147, 4.826204137070578e-05], 'true,false': [0.0, 0.0004478881033534027], 'true,false,true': [0.0, nan]}
{'': [0.1124466546306619, 0.12325391446202812], 'false': [0.18676569862216533, 0.11991147471074246], 'false,false': [0.11991147471074246, nan], 'true': [0.09123433529018143, 0.00474151083056027], 'true,true': [0.001466487689576565, 0.1132409817328223], 'true,true,false': [0.0006157397767058611, 0.11911562387908378], 'true,true,true': [0.0017091601830790948, 0.00025525176059599625]}
{'': [0.05889999677540232, 0.09601822247937668], 'false': [0.0846419605071977, 0.13966584893671752], 'false,false': [0.00019575102166669023, 0.14677768718685033], 'false,false,false': [0.14677768718685033, nan], 'false,true': [0.05156447672692528, 0.00036647252899917016], 'true': [6.938893903907228e-18, 0.11502897772652311], 'false,true,true': [nan, 0.051564476726925254], 'false,false,true': [0.00019575102166669023, nan]}
{'': [0.046374931309686, 0.0784000335688722], 'false': [0.044064819475328476, 0.09665306603140561], 'false,false': [1.7270504159838662e-06, 0.09780378686173456], 'false,false,false': [0.07323259115557991, 0.15085240233451858], 'true': [8.217758067393665e-05, 0.10589219484850934], 'true,false': [0.0, 0.1195785688483376], 'false,true': [0.009008456762013117, 0.051316371813127995], 'false,true,false': [0.005354649691807776, 0.04894507290802233]}
{'': [0.0004663575580409231, 0.07653673938492253], 'false': [0.03682930013950393, 0.10272667986411138], 'false,false': [1.3244636426860505e-06, 0.10468448627706865], 'false,false,false': [0.07887497358029674, 0.1788920935277827], 'true': [0.0004361008401048011, 0.0001730064187432471], 'true,true': [6.611032362754676e-05, 0.0001904784802656915], 'true,true,false': [0.0, 5.2138676403266915e-05], 'true,true,true': [3.469446951953614e-18, 0.00010678749359704573]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.111
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.09814893509951236;  // std dev = 3.020, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return 0.1872628591501442;  // std dev = 5.906, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), interaction(I, H) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7980857169307387;  // std dev = 1.390, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15912183925696383;  // std dev = 0.153, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.3377861504831108;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09144832069169612;  // std dev = 2.595, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4471420989636494;  // std dev = 0.327, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.03446319967668382;  // std dev = 1.514, 37.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | | else return 0.14379597927495266;  // std dev = 2.146, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6219276530612736;  // std dev = 1.667, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14298051488087068;  // std dev = 0.042, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8210205838538792;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1807575176888114;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.3053664367462845;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.03539281434302773;  // std dev = 2.496, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4551204372782086;  // std dev = 0.028, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6434051109840709;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4152903174676216;  // std dev = 0.933, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.032445036090324585;  // std dev = 1.903, 65.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | | | else return 0.07739070836187434;  // std dev = 3.796, 133.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=40 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.4792647031913867;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.0207352968086133;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.038393001897082564;  // std dev = 2.214, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.18193290055864997;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.35360519906062815;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.002953662544975274;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.33628699587830857;  // std dev = 7.45e-09, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1069000323718636;  // std dev = 0.005, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.03327788575295597;  // std dev = 3.626, 137.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=36 */
%   | | | else return 0.10913401047063474;  // std dev = 2.591, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4034980220221736;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.02890486545727561;  // std dev = 1.828, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.09710563695665454;  // std dev = 2.092, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.3248013703288307;  // std dev = 0.077, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.31235951597458395;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.368943487445386;  // std dev = 0.624, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.11778186860204735;  // std dev = 0.086, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.09600740527493756;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.3787300519170745;  // std dev = 0.875, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.283237322644519;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.04426801613476697;  // std dev = 4.021, 162.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=46 */
%   | | | else return 0.14218662212007124;  // std dev = 2.711, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4628138228983695;  // std dev = 0.186, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return -0.16031408888400575;  // std dev = 0.051, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( complex(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.02351715209549157;  // std dev = 1.356, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.0581484048398094;  // std dev = 0.996, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else return -0.06484364515955345;  // std dev = 0.285, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4985981001200137;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15451144749982001;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.016479227208100505;  // std dev = 2.089, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.09648726962700206;  // std dev = 1.638, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1505400716535419;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, E) )
%   | | then return 0.1665666303777572;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.23688641072616684;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), location(A, I) )
%   | | | then return 0.36602104753218095;  // std dev = 0.369, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.5142486485175526;  // std dev = 0.403, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return -0.136578287856082;  // std dev = 0.036, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.031762821866232416;  // std dev = 0.716, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.05173391650665213;  // std dev = 1.815, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.16098391371849072;  // std dev = 1.299, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13864423571962597;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.22441073837540582;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17567865267325264;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, J), interaction(J, J) )
%   | | | then return -0.030757201576380663;  // std dev = 1.396, 81.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=14 */
%   | | | else return 0.053411486636981545;  // std dev = 0.845, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.18156089150073815;  // std dev = 0.420, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1997658535022885;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.006797696111457089;  // std dev = 3.481, 140.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=41 */
%   | | | else return 0.06544120071001576;  // std dev = 0.713, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13103819261863595;  // std dev = 0.029, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.1577476275122829;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.032347815734956736;  // std dev = 0.264, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06411553894899305;  // std dev = 0.888, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.05064332397881351;  // std dev = 1.182, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.001308490719091834;  // std dev = 0.942, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.22019846488723505;  // std dev = 1.069, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.0969898514257157;  // std dev = 1.422, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.028288852629730635;  // std dev = 2.990, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.480', 'seconds']
Refined model CLL: -0.179894


******************************************
Best model found
******************************************
Results 

CLL : -0.198628 

AUC ROC : 0.984166 

AUC PR : 0.214071 

Precision : 0.148169 

Recall : 0.915194 

F1 : 0.255047 

Total Learning Time : 8.111 

Total Inference Time : 8.49963903427124 

Total revision time: 29.265541103363038
Best scored revision CLL: -0.179894


Results 

CLL : -0.198628 

AUC ROC : 0.984166 

AUC PR : 0.214071 

Precision : 0.148169 

Recall : 0.915194 

F1 : 0.255047 

Total Learning Time : 29.319193151474 

Total Inference Time : 8.49963903427124 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.778
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10259337954395552;  // std dev = 4.993, 135.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=33 */
%   | | | else return 0.17673300589597127;  // std dev = 4.953, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.760154121460784;  // std dev = 2.345, 75.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=69 */
%   | | | else return -0.16023825387061996;  // std dev = 0.059, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( location(A, I) )
%   | | | then return 0.213669654637719;  // std dev = 1.593, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4442553256351735;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07798183278432538;  // std dev = 4.335, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6021412419666634;  // std dev = 1.898, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.1438708464048146;  // std dev = 7.74e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3142977363155965;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.051969397260496174;  // std dev = 1.383, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3464179076401509;  // std dev = 0.946, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.444757028945841;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.48965607935048133;  // std dev = 1.624, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return 0.05936781106150278;  // std dev = 4.899, 214.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.542499269002302;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1893872645828443;  // std dev = 1.552, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3584331454979836;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14144102931443542;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07133729125306006;  // std dev = 5.380, 230.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4080358557616479;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.12601481977299187;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03667637417127978;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28673098263054503;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.38084923572131574;  // std dev = 0.169, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31429254345951185;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -9.718264229206058E-4;  // std dev = 2.276, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3136081753863984;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05777634251465525;  // std dev = 4.705, 188.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=55 */
%   | | | else return 0.02946640933510469;  // std dev = 1.855, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25198039444459075;  // std dev = 0.180, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.25078698800912413;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5653042265440308;  // std dev = 0.840, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17572303169766462;  // std dev = 0.463, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25035194221294405;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06141102185177963;  // std dev = 3.925, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.187636685412381;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.05203018743376618;  // std dev = 1.041, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4166839852955721;  // std dev = 2.394, 78.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=71 */
%   | | else return -0.14988559873372984;  // std dev = 0.187, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20665517162212266;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06147956800123198;  // std dev = 1.357, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17416015336020946;  // std dev = 0.094, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.8174902702301151;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.1871224627668294;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.028814658557126577;  // std dev = 1.482, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.10923950810082776;  // std dev = 0.595, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -8.319283815276942E-4;  // std dev = 1.766, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21501462135899876;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04867023415123158;  // std dev = 3.228, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | | else return 0.007737068904916068;  // std dev = 1.405, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1393866160373524;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22970404985652249;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05630108246881907;  // std dev = 0.362, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.016427398715907295;  // std dev = 2.366, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.07387424322223571;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.021700855367082605;  // std dev = 3.310, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | | else return 7.270215028968416E-4;  // std dev = 1.418, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.487', 'seconds']
Parameter learned model CLL:-0.195857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.993, 102, 33], 'false,false,true,false': [4.953, 77, 36], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.279, 9, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.345, 6, 69], 'false,false,true,false': [0.059, 141, 0], 'false,false,false,true': [1.593, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.335, 96, 34], 'false,true,false,true': [1.898, 4, 37], 'false,true,false,false': [7.74e-08, 68, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.383, 9, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.946, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.624, 4, 14], 'false,true,false': [4.899, 157, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.552, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.021, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.9, 1, 4], 'false,true': [5.38, 159, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.02, 0, 7], 'true,true,false': [0.169, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.276, 41, 12], 'false,false,true': [0.02, 0, 3], 'false,false,false,true': [4.705, 133, 55], 'false,false,false,false': [1.855, 17, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.18, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.84, 1, 33], 'true,false': [0.463, 83, 0], 'false,true': [0.017, 0, 3], 'false,false,true': [3.925, 89, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.041, 2, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.394, 7, 71], 'false,true,false': [0.187, 138, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.357, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.094, 0, 8], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.032, 0, 3], 'false,true,true': [1.482, 32, 11], 'false,true,false,true': [0.595, 2, 1], 'false,true,false,false': [1.766, 38, 17], 'false,false,true': [0.015, 0, 3], 'false,false,false,true': [3.228, 79, 40], 'false,false,false,false': [1.405, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.005, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.362, 1, 3], 'false,true': [2.366, 84, 29], 'false,false,true': [0.883, 1, 3], 'false,false,false,true': [3.31, 90, 40], 'false,false,false,false': [1.418, 10, 4]}]
{'': [-1.6148698540002277e-16, 0.20224965706447215], 'false': [1.4802973661668753e-16, 0.19865617416431838], 'false,false': [0.20081620707596287, 0.16620498614958432], 'false,false,true': [0.18469135802469258, 0.21708826063121742], 'false,false,false': [0.18750000000000003, 0.14876033057851243], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [8.074349270001139e-17, 0.21941547335849404], 'false': [0.0, 0.2182612662676998], 'false,false': [0.21749216183573236, 0.23055525511608962], 'false,false,false': [0.23055525511608962, nan], 'false,false,true': [0.07334878759853619, 2.454282253184143e-05], 'true': [7.401486830834377e-17, -1.7763568394002506e-16], 'false,true': [0.0, nan]}
{'': [0.07638888888888877, 0.15669271468366733], 'false': [0.15412107973639977, 0.1949536144824609], 'false,false': [0.24999999999999992, 0.15940077994209598], 'false,false,true': [nan, 0.24999999999999992], 'false,false,false': [0.15940077994209598, nan], 'false,true': [0.14456144684826192, 0.1636445866105045], 'false,true,false': [0.08785957510886563, 8.816476960258596e-17], 'true': [0.09876543209876533, 0.0]}
{'': [0.0753929088468047, 0.13336217785944648], 'false': [0.12806950845585716, 0.2291666184999582], 'false,false': [0.0, 0.24074799965312427], 'false,false,false': [0.24074799965312427, nan], 'false,true': [0.14654189014158348, 0.11215082616972911], 'false,true,true': [nan, 0.1465418901415834], 'true': [0.08144092775279503, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.07903052645725482, 0.13026552470543595], 'false': [0.12585789923943994, 0.20214385997315465], 'false,false': [0.0, 0.2095813864763385], 'false,false,false': [0.24000000000000005, 0.1875], 'true': [6.1327086078771e-05, 0.16212081812684281], 'true,true': [6.1327086078771e-05, nan], 'false,false,true': [nan, 0.0]}
{'': [0.004338085105671191, 0.1165552071197391], 'false': [0.0977344849581603, 0.12051857389516318], 'false,false': [0.00012878306599796904, 0.12129048641212051], 'false,false,false': [0.117747316570313, 0.14953795838156364], 'true': [0.0047718523288238, 0.0], 'true,true': [5.9237755258639045e-05, 0.00956718110507491], 'true,false': [nan, 0.0]}
{'': [0.11444942170415132, 0.11750929611854993], 'false': [9.834255615540077e-05, 0.1194284499700867], 'false,false': [0.1194284499700867, nan], 'true': [0.03453501204005703, 0.002582314786937166], 'true,true': [0.002948316189912587, 0.02074005858569131], 'true,true,false': [nan, 0.020740058585691206], 'true,true,true': [0.0032430183344565487, 0.0]}
{'': [0.09770031014862601, 0.10317243270368798], 'false': [0.10074952625569861, 0.14312645163493534], 'false,false': [0.0, 0.1534324285619474], 'false,false,false': [0.1534324285619474, nan], 'false,true': [0.07346608866642856, 0.00025353811703292766], 'true': [-9.25185853854297e-18, 0.15493256700707742], 'false,true,true': [nan, 0.07346608866642856], 'false,false,true': [0.0, nan]}
{'': [0.12971241298763048, 0.07788020574912248], 'true': [0.001105662627726177, 0.24241870923736158], 'true,false': [0.0, 0.0003324847424332755], 'false': [0.05658454181077491, 0.09194483231792303], 'false,false': [7.974180579968977e-05, 0.0933745692457049], 'false,false,false': [0.087589372846462, 0.1410495855713539], 'false,true': [0.05109814721126339, 0.06043888881392026], 'false,true,false': [0.11787602621947779, 0.05669808145976183]}
{'': [0.013470017193078505, 0.07453250959858083], 'false': [0.04952694916154917, 0.09313693963834505], 'false,false': [0.1948628809039754, 0.09007476016172274], 'false,false,false': [0.08426358753024712, 0.1436385153971155], 'true': [0.0008957182469358539, 0.03268082789184582], 'true,true': [0.0008957182469358539, nan], 'true,true,true': [4.0231400380880925e-06, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 12.465
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1020513741239026;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.23652731347789074;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.16249676118646883;  // std dev = 5.838, 161.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.5384069886278803;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6678178463091982;  // std dev = 3.405, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | | else return -0.16295142847350064;  // std dev = 0.106, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.3425760545905862;  // std dev = 1.218, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0038615830026756115;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.3553664367462846;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1397176129772327;  // std dev = 0.185, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.1358426217539295;  // std dev = 4.200, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.648901003818296;  // std dev = 1.658, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14268056074093416;  // std dev = 0.032, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.3869853168443814;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.08208358667441347;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08666789858402224;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.11703900695247715;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.454479684801748;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.0578423487460647;  // std dev = 0.742, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.38134613200479;  // std dev = 3.793, 99.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=68 */
%   | | | else return -0.15076325142883057;  // std dev = 0.511, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else return -0.011124650962886501;  // std dev = 0.281, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6580674240446671;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.3873915580065918;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03858134621492539;  // std dev = 1.228, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.38644549486074586;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3429987668180592;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.0378433327714346;  // std dev = 1.650, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | | else return 0.06225100018038693;  // std dev = 1.208, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.11394091758752127;  // std dev = 1.559, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.0618408420369236;  // std dev = 4.378, 173.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=55 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.49915660052162203;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.04320709565025757;  // std dev = 1.432, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.1521561733679083;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28008919242023883;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.22961463791801093;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.37694624651831954;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( enzyme(G, I), phenotype(A, J) )
%   | | | then return -0.09387886371418504;  // std dev = 0.715, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.10982165318992257;  // std dev = 2.110, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else return -0.13502086370873775;  // std dev = 0.189, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.04715685220798954;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.004938928591395211;  // std dev = 3.361, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | | else return 0.07445910993889338;  // std dev = 3.286, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.281852561381693;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.4616673624677989;  // std dev = 1.287, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.5478565673600536;  // std dev = 0.355, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.16646090969436989;  // std dev = 0.067, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.01145473721632631;  // std dev = 0.897, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5395214742353537;  // std dev = 0.232, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.15646378549178463;  // std dev = 0.404, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.014562798595801672;  // std dev = 1.330, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.11274806676052826;  // std dev = 2.219, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( interaction(A, A), phenotype(A, E) )
%   | | then return 0.19534479025620474;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.06316332754003925;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.10185843959137081;  // std dev = 0.801, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.23802977098875963;  // std dev = 2.778, 54.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=41 */
%   | | | else return 0.38118682903411266;  // std dev = 0.897, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.1344060688367956;  // std dev = 0.036, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.23842588107608953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.3546597291390781;  // std dev = 0.706, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.02154579546053826;  // std dev = 0.780, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.21363097239457762;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.03333889255593388;  // std dev = 0.285, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.34337907024811914;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11481593289860566;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.010038242717896242;  // std dev = 1.389, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return -0.028638262709457765;  // std dev = 1.663, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -8.099904386054124E-4;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return -0.12428148438759734;  // std dev = 1.218, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.01603578632521517;  // std dev = 3.070, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.15743796001230415;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.3591727373600662;  // std dev = 0.892, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.024045178725995348;  // std dev = 0.584, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( complex(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.3519621659667032;  // std dev = 0.090, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(I, A), complex(I, F) )
%   | | | then return -0.4732601159463404;  // std dev = 0.462, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.2203386859723943;  // std dev = 0.724, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, A) )
%   | | then return -0.07579905063090506;  // std dev = 0.019, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.0193798306311103;  // std dev = 2.448, 98.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   | | | else return 0.024642668043066602;  // std dev = 2.799, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '32.652', 'seconds']
Refined model CLL: -0.177027


******************************************
Best model found
******************************************
Results 

CLL : -0.189018 

AUC ROC : 0.990752 

AUC PR : 0.379481 

Precision : 0.216443 

Recall : 0.914894 

F1 : 0.350068 

Total Learning Time : 12.465 

Total Inference Time : 26.3090341091156 

Total revision time: 59.53279802131652
Best scored revision CLL: -0.177027


Results 

CLL : -0.189018 

AUC ROC : 0.990752 

AUC PR : 0.379481 

Precision : 0.216443 

Recall : 0.914894 

F1 : 0.350068 

Total Learning Time : 64.78451582717895 

Total Inference Time : 26.3090341091156 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.859
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08777856472914089;  // std dev = 4.887, 135.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=31 */
%   | | | else return 0.24607996958227032;  // std dev = 5.248, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.609733748384724;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.7432932079534634;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6172406828146435;  // std dev = 4.068, 97.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=76 */
%   | | | else return -0.1637631165462446;  // std dev = 0.140, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | | else if ( location(A, I) )
%   | | | then return 0.14443085832463678;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5970202307361432;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5720823990358371;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07267819679555303;  // std dev = 4.468, 137.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5668358074668405;  // std dev = 2.606, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.15216982971420015;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2677554201954394;  // std dev = 0.775, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.04974549121532186;  // std dev = 1.635, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3313309965956745;  // std dev = 1.334, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.442309149381251;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4556030072273434;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5141190438045832;  // std dev = 1.993, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else return 0.013955976705142465;  // std dev = 5.339, 270.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12618783709987955;  // std dev = 0.590, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.01708132481336315;  // std dev = 1.761, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2441796000349618;  // std dev = 0.964, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1884500946358009;  // std dev = 1.279, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.0791061201093618;  // std dev = 5.768, 269.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.511608994379048;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0144033875162002;  // std dev = 1.761, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3153651901580115;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.16773833698731594;  // std dev = 1.194, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.38576133800926526;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.02425536179830559;  // std dev = 2.865, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.31297103069833426;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.04368386291886077;  // std dev = 4.842, 188.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=51 */
%   | | | else return 0.14311259667520165;  // std dev = 2.127, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2964167061023375;  // std dev = 0.301, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2992386422971798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.1279940116961111;  // std dev = 1.020, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5433663079161342;  // std dev = 1.185, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1651678283808443;  // std dev = 0.278, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25328135942956836;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08109726654782536;  // std dev = 4.436, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.09283973894060862;  // std dev = 0.815, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.13146903903319657;  // std dev = 0.970, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3403467362641635;  // std dev = 3.737, 100.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=82 */
%   | | else return -0.1506191721827926;  // std dev = 0.222, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.24045901028415984;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.069649406768016;  // std dev = 1.421, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.20621991193597633;  // std dev = 0.127, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.026714511311002758;  // std dev = 0.449, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.09347708592986649;  // std dev = 0.705, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.015949726323972173;  // std dev = 1.845, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2269419460297763;  // std dev = 0.466, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.02859000334107966;  // std dev = 1.363, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18758293836534337;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 9.402014980084169E-4;  // std dev = 4.268, 171.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=47 */
%   | | | else return 0.1354985806681995;  // std dev = 1.316, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.031072618859212087;  // std dev = 0.949, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05551078119182662;  // std dev = 0.931, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.2581645318656248;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20754343362115457;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.026527632528895787;  // std dev = 2.661, 121.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16066121103222883;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04362752143779423;  // std dev = 3.909, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   | | | else return -0.002896144461596791;  // std dev = 1.440, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.512', 'seconds']
Parameter learned model CLL:-0.200132 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.887, 104, 31], 'false,false,true,false': [5.248, 71, 45], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.027, 0, 10], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [4.068, 21, 76], 'false,false,true,false': [0.14, 167, 0], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.017, 0, 11], 'true,false': [0.02, 0, 6], 'false,true,true': [4.468, 103, 34], 'false,true,false,true': [2.606, 8, 48], 'false,true,false,false': [0.0, 110, 0], 'false,false,true,true': [0.775, 1, 1], 'false,false,true,false': [1.635, 12, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.334, 2, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.1, 0, 3], 'false,true,true,false': [1.993, 5, 21], 'false,true,false': [5.339, 212, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.59, 1, 1], 'false,false,false,true': [1.761, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.964, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.279, 2, 10], 'false,true': [5.768, 187, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.761, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.014, 0, 9], 'true,true,false': [1.194, 2, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.865, 53, 19], 'false,false,true': [0.027, 0, 8], 'false,false,false,true': [4.842, 137, 51], 'false,false,false,false': [2.127, 16, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.301, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [1.02, 2, 3], 'true,true,false,false': [1.185, 2, 33], 'true,false': [0.278, 100, 0], 'false,true': [0.02, 0, 5], 'false,false,true': [4.436, 96, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.815, 1, 7], 'true,false': [0.97, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.737, 18, 82], 'false,true,false': [0.222, 165, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.421, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.127, 0, 9], 'true,false,true': [0.449, 1, 2], 'true,false,false': [0.705, 1, 5], 'false,true,true': [1.845, 36, 13], 'false,true,false,true': [0.466, 1, 8], 'false,true,false,false': [1.363, 45, 11], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [4.268, 124, 47], 'false,false,false,false': [1.316, 6, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.949, 1, 7], 'true,true,true,false': [0.931, 1, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.115, 0, 3], 'false,true': [2.661, 89, 32], 'false,false,true': [0.014, 0, 5], 'false,false,false,true': [3.909, 102, 47], 'false,false,false,false': [1.44, 11, 4]}]
{'': [0.09418282548476423, 0.21797088819596735], 'false': [-2.5376526277146434e-16, 0.2112029384756668], 'false,false': [0.21110776019428287, 0.21301775147928975], 'false,false,false': [0.21301775147928975, nan], 'false,false,true': [0.1768998628257899, 0.23744054696789646], 'true': [0.07100591715976314, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05305628988235562, 0.20842458862288224], 'false': [-6.344131569286608e-17, 0.20495744583976525], 'false,false': [0.204539375797959, 0.2130177514792899], 'false,false,false': [0.2130177514792899, nan], 'false,false,true': [0.17063254724738114, 0.0001171223883304534], 'true': [0.10937499999999989, 7.326434810881466e-05], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.00018213892218993063, 0.15366627019685486], 'false': [0.15170710760518002, 0.1865787317317656], 'false,false': [0.1865787317317656, nan], 'false,false,true': [0.30061316027949875, 0.16704350270397494], 'false,true': [0.14574404481684006, 0.15648664838395496], 'false,true,false': [0.12130124656538863, -6.45947941600091e-17], 'true': [2.5771615965528774e-05, 6.640937875616408e-05]}
{'': [0.09432126863496085, 0.13245319343560585], 'false': [0.1300685066839095, 0.16530042322631053], 'false,false': [0.17377504359478338, 0.16327462163643003], 'false,false,true': [nan, 0.17377504359478338], 'false,false,false': [0.16327462163643003, nan], 'false,true': [0.13762325864040156, 0.10557751512852342], 'false,true,true': [0.003341704751114801, 0.15276306410260934], 'true': [0.098913120672802, 0.0]}
{'': [0.12896941301823323, 0.12678066663801668], 'true': [0.11618703228453771, 0.1362486890652162], 'false': [0.12369342350305683, 0.1668265219265889], 'false,false': [0.0, 0.1632461944110904], 'false,false,false': [0.1632461944110904, nan], 'true,true': [0.11618703228453771, nan], 'false,false,true': [nan, 0.0]}
{'': [0.08534617847912095, 0.12585662377122375], 'false': [0.11400422811158092, 0.1292934295537718], 'false,false': [9.034440519135878e-05, 0.13173947081343224], 'false,false,false': [0.1246924141944728, 0.17401014956951075], 'true': [0.0892797114849402, 0.0], 'true,true': [2.2292514970964935e-05, 0.17815647312064153], 'true,false': [nan, 0.0]}
{'': [0.1082269915698188, 0.13393176614783953], 'false': [7.932983909298974e-05, 0.1376103212013168], 'false,false': [0.1376103212013168, nan], 'true': [0.08589171711908107, 0.000772040621320591], 'true,true': [0.005672756166449369, 0.11040182670868962], 'true,true,false': [0.20821650987301993, 0.040087715698624904], 'true,true,true': [0.006050442203136338, 0.0]}
{'': [0.08486235050947095, 0.11146058050719784], 'false': [0.1095129887563144, 0.14620974106094983], 'false,false': [0.0, 0.1553726498871029], 'false,false,false': [0.1553726498871029, nan], 'false,true': [0.13963182810172148, 0.0002978171977968404], 'false,true,true': [nan, 0.13963182810172148], 'true': [0.08305963276547708, 0.08554511361200902], 'false,false,true': [0.0, nan]}
{'': [0.047173805101462435, 0.08763475657394336], 'false': [0.0526308684794199, 0.10898933129555449], 'false,false': [5.107752542178323e-05, 0.11113534972085175], 'false,false,false': [0.10650688767211766, 0.17317642248768844], 'false,true': [0.06949289549087033, 0.03969720780965824], 'true': [0.001787101238305444, 0.08088556644236114], 'true,false': [0.06721592573785183, 0.08290504677884533], 'false,true,false': [0.02415563589263788, 0.033153895910818944]}
{'': [0.10280076900861991, 0.08578839193702396], 'true': [0.11591531517429521, 0.004390677930380726], 'true,true': [0.11799391612929568, 0.0], 'true,true,true': [0.11250303587589813, 0.12395068849909348], 'false': [0.05851531248026305, 0.10330056559964589], 'false,false': [3.985619414134667e-05, 0.10601352133305737], 'false,false,false': [0.1025720746316473, 0.13823207520231395], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 18.295
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.8196873966379734;  // std dev = 0.981, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.04276431971489699;  // std dev = 3.128, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | | else return 0.16974313799806207;  // std dev = 5.441, 138.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109544;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7372321343150519;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6871386373845934;  // std dev = 2.974, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.1505771291134801;  // std dev = 0.190, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.23206298647174775;  // std dev = 1.023, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06928594064872468;  // std dev = 1.083, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.48538195822088476;  // std dev = 0.257, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4582767960877708;  // std dev = 0.338, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5509769940537406;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03738169777677158;  // std dev = 4.087, 140.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=31 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6215042602266819;  // std dev = 1.677, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.1324271682710327;  // std dev = 0.153, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then return 0.2856734876004409;  // std dev = 0.934, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.14890660445682904;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.010622098558204484;  // std dev = 1.014, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.43462532729212616;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.04294618071484409;  // std dev = 0.957, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.47597056881251976;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4346253272921261;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.535286839132538;  // std dev = 0.089, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.12506115943707016;  // std dev = 0.037, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13585847991478703;  // std dev = 0.006, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.13987489889287527;  // std dev = 2.498, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.048393745186157286;  // std dev = 4.717, 209.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.35255350480300435;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.205073116432089;  // std dev = 0.972, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F), phenotype(A, G) )
%   | | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2645887897226924;  // std dev = 3.421, 85.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=51 */
%   | | | else return -0.12752429296525233;  // std dev = 0.265, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.032290505447014485;  // std dev = 2.072, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
%   | | | else return 0.05251988777430088;  // std dev = 2.613, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5416153250770369;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.11538747286023114;  // std dev = 1.237, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.1843121364998509;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.26117231689950404;  // std dev = 0.197, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.4073893991156702;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.4220936236238703;  // std dev = 0.871, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.025444099852553876;  // std dev = 1.652, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.08928347303504011;  // std dev = 0.801, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.02256662886186919;  // std dev = 1.656, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.32253041130984855;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return -0.0443869525022784;  // std dev = 1.832, 68.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | | else return 0.05740613958172447;  // std dev = 4.022, 162.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2609875864246929;  // std dev = 0.060, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), location(A, F) )
%   | | | then return 0.3303932738969868;  // std dev = 2.377, 36.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=30 */
%   | | | else return 0.5629639508197288;  // std dev = 0.221, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.1464195007072428;  // std dev = 0.060, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26764971846097646;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.01234606033649629;  // std dev = 2.310, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | | else return -0.1453265724537149;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.03252940820333981;  // std dev = 1.264, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.1382200958834131;  // std dev = 2.461, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1899843207774017;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.21603802786529833;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.08063739180160917;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.19021029652012986;  // std dev = 1.001, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.36359767832075646;  // std dev = 2.801, 76.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=66 */
%   | | else return -0.12892954449877855;  // std dev = 0.033, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.26054361490555145;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.010116994794963778;  // std dev = 1.044, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.14669936854547375;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17117171977297277;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.09381581649186917;  // std dev = 0.618, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20025034534718672;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(A, A) )
%   | | then return -0.16282085264193455;  // std dev = 0.120, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.0038012039018052524;  // std dev = 2.528, 113.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=30 */
%   | | | else return -0.04804042430743589;  // std dev = 0.496, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.19530289429734596;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.03196675854075104;  // std dev = 1.635, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return 0.007657818995968722;  // std dev = 3.214, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.15883148759282556;  // std dev = 0.028, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.8276995825683676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.007287159314780023;  // std dev = 0.563, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.023973173052192417;  // std dev = 0.212, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.059444322186805267;  // std dev = 1.651, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return -0.06725062255100857;  // std dev = 0.221, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.16652472634946416;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.009409614100932839;  // std dev = 1.732, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0.06251746835211199;  // std dev = 2.764, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '25.292', 'seconds']
Refined model CLL: -0.174522


******************************************
Best model found
******************************************
Results 

CLL : -0.153145 

AUC ROC : 0.991566 

AUC PR : 0.384546 

Precision : 0.333858 

Recall : 0.8 

F1 : 0.471111 

Total Learning Time : 18.295 

Total Inference Time : 54.56071591377258 

Total revision time: 95.69661207580566
Best scored revision CLL: -0.174522


Results 

CLL : -0.153145 

AUC ROC : 0.991566 

AUC PR : 0.384546 

Precision : 0.333858 

Recall : 0.8 

F1 : 0.471111 

Total Learning Time : 100.94832988166809 

Total Inference Time : 54.56071591377258 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.405
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11621345122854462;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.13840371216957503;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12957750652808375;  // std dev = 3.721, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7397104467804845;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8409064943342706;  // std dev = 0.008, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15899144715270042;  // std dev = 0.014, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1413512540019594;  // std dev = 3.549, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.1749654757066864;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5605000451702024;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5720179264406184;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05431567167033643;  // std dev = 2.076, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6827980521871737;  // std dev = 0.266, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13936336436959176;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19391892602252953;  // std dev = 3.490, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.31262632249377476;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.42338704998963905;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4376504085699868;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3868860981539505;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5854532750390039;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05452089630953046;  // std dev = 4.221, 189.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5071142015244338;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1232831444765975;  // std dev = 3.465, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.11942706089195616;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3168308517460615;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33246046319182576;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.029321231969606072;  // std dev = 4.312, 225.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38256966548771965;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06037628535953644;  // std dev = 3.679, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.2371595209712768;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2510939958984169;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.08892147567489521;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.24734167601487944;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2970834422953249;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.08998010091353799;  // std dev = 0.968, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1245483514976874;  // std dev = 0.951, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.037083773522063185;  // std dev = 4.124, 185.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=49 */
%   | | | else return 0.06919369799874087;  // std dev = 3.704, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2473725848490944;  // std dev = 0.209, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.224366237988741;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22265285485346653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.641585934752312;  // std dev = 0.732, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.1953701303285179;  // std dev = 0.606, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2521834906876855;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.055216106637915104;  // std dev = 3.405, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16997534219961263;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19453458170749305;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4524448860033719;  // std dev = 0.749, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13565695647958884;  // std dev = 0.341, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.18777866872643195;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04049006531043148;  // std dev = 3.049, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15374249695065878;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.15904289928756266;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18226630174997527;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08709649357139893;  // std dev = 0.400, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18528646321926656;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.023284448610834327;  // std dev = 1.242, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17745057202675402;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.009207149621632717;  // std dev = 2.875, 130.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=36 */
%   | | | else return 0.01992173976309519;  // std dev = 3.077, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1288230441290502;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15436694874524312;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.127008455545778;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.002928787935513677;  // std dev = 0.680, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.010310704523803057;  // std dev = 1.320, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.153012502434525;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.027901413988971568;  // std dev = 2.693, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | | else return 0.036832361817317666;  // std dev = 3.014, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.211', 'seconds']
Parameter learned model CLL:-0.172697 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.436, 23, 8], 'false,false,true,false': [5.628, 113, 44], 'false,false,false,true': [3.721, 51, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.044, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.008, 0, 52], 'false,false,true,false': [0.014, 138, 0], 'false,false,false,true': [3.549, 42, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.034, 0, 6], 'true,false': [0.054, 0, 8], 'false,true,true': [2.076, 27, 8], 'false,true,false,true': [0.266, 0, 48], 'false,true,false,false': [0.0, 116, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.49, 33, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.054, 0, 11], 'true,false': [0.032, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.125, 0, 3], 'false,true,false': [4.221, 137, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.465, 36, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.007, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.051, 0, 9], 'false,true': [4.312, 169, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.679, 46, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.009, 0, 7], 'true,true,false': [0.903, 2, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.968, 29, 3], 'false,false,true': [0.951, 1, 6], 'false,false,false,true': [4.124, 136, 49], 'false,false,false,false': [3.704, 44, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.209, 0, 12], 'true,true,true,false': [0.021, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.732, 0, 36], 'true,false': [0.606, 91, 0], 'false,true': [0.002, 0, 5], 'false,false,true': [3.405, 85, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.004, 0, 6], 'true,false': [0.051, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.749, 0, 56], 'false,true,false': [0.341, 139, 0], 'false,false,true,true': [0.018, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.049, 43, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.059, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.058, 0, 4], 'false,true,true': [0.4, 20, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.242, 53, 14], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.875, 94, 36], 'false,false,false,false': [3.077, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.005, 0, 5], 'true,true,true,false': [0.039, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.68, 1, 4], 'false,true': [1.32, 52, 17], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.693, 83, 36], 'false,false,false,false': [3.014, 41, 20]}]
{'': [0.06222222222222188, 0.2067920717081183], 'false': [-1.4802973661668753e-16, 0.19976218787158279], 'false,false': [0.2000905387052973, 0.19891161568774582], 'false,false,true': [0.19146722164412083, 0.20171203699947338], 'false,false,false': [0.1977551020408158, 0.22222222222222224], 'true': [-2.9605947323337506e-16, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [0.00024070779516849328, 0.20544903028400618], 'false': [7.401486830834377e-17, 0.2020983573350352], 'false,false': [0.19874187013108915, 0.21110443141004515], 'false,false,false': [0.20988993270148065, 0.2222222222222223], 'false,false,true': [1.1352615971396483e-06, 1.3335004580078655e-06], 'true': [7.401486830834377e-17, 0.00024572254090116097], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0003259543886402483, 0.15989600157963346], 'false': [0.13766243388326038, 0.22918481513471353], 'false,false': [0.22796577096259737, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.2298476729795558], 'false,true': [0.12317333426513592, 0.14036686936099255], 'false,true,false': [0.0014762560558065907, -1.5313421029312504e-17], 'true': [0.00019147524322819334, 0.000369958781002655]}
{'': [0.0003132020298894605, 0.12769299562712183], 'false': [0.09726859089682953, 0.2187610854381568], 'false,false': [0.002007067658097633, 0.22226997861540795], 'false,false,false': [0.22227379794325622, 0.22222222222222218], 'false,true': [0.011299758419155037, 0.09428719508193681], 'false,true,true': [0.0, 0.005209113624848438], 'false,false,true': [0.0, 0.0], 'true': [0.00026038032809175526, 0.00034703321901156475]}
{'': [0.00024320596624037374, 0.112086086526151], 'false': [0.08264450288471113, 0.20656745570065457], 'false,false': [0.0009565974220616669, 0.21033440428244893], 'false,false,false': [0.2081810195666537, 0.25000000000000006], 'false,false,true': [0.0, 0.0], 'true': [8.854051522932949e-06, 0.00028615691943621887], 'true,true': [8.854051522932949e-06, nan]}
{'': [0.05757740850482764, 0.11526360552733068], 'false': [0.029301987567246893, 0.1239086338062183], 'false,false': [0.12906712356546277, 0.12359204903503636], 'false,false,false': [0.09192391837986352, 0.2143667000887352], 'true': [0.06922598638012374, 0.000476901083080387], 'true,true': [1.1257759255732327e-05, 0.13581500431912047], 'true,false': [1.5329443141545718e-05, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13774411050944066, 0.09349469320521121], 'true': [0.044445428813534825, 0.004040850417552034], 'false': [1.0850422437314045e-06, 0.09581853566638968], 'false,false': [0.09581853566638968, nan], 'true,true': [0.0032281850872646505, 0.019102664679865534], 'true,true,false': [0.0, 0.014889917891237737], 'true,true,true': [0.003655034638637931, 0.00021340892543175727]}
{'': [0.0003337135997963409, 0.09165829651054498], 'false': [0.0742734530916306, 0.1437086056416012], 'false,false': [0.0001638678195116025, 0.1475980758240544], 'false,false,false': [0.1475980758240544, nan], 'false,true': [0.010013130915675334, 0.0008375216017613072], 'false,true,true': [nan, 0.010013130915675397], 'true': [3.240241716148673e-06, 0.00032307308469700646], 'false,false,true': [0.0001638678195116025, nan]}
{'': [0.0006447437332668631, 0.0683565559581012], 'false': [0.020739230119721293, 0.08889058465540385], 'false,false': [6.49245965339551e-07, 0.09048393552622837], 'false,false,false': [0.0635742724209397, 0.1434116729235117], 'false,true': [0.007631793644149322, 0.023589764281601956], 'false,true,false': [0.0, 0.02303301387835755], 'true': [0.00038274191103471807, 0.0007497817847882615], 'true,false': [0.0, 0.0008293619465990845]}
{'': [0.03499138252749505, 0.07187347836590405], 'false': [0.02526285198321616, 0.08871911398818644], 'false,false': [5.116549050693253e-07, 0.09078069197162204], 'false,false,false': [0.060964047434171977, 0.1488948572607524], 'true': [0.0002954911615371647, 0.09255598028787142], 'true,true': [0.0003434013427748052, 0.0], 'true,true,true': [6.012838350849537e-06, 0.0004979086024140128], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.652
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.04564893509951222;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.12229987849573772;  // std dev = 4.539, 106.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=28 */
%   | | | else return 0.21467067422994648;  // std dev = 5.136, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8368500650205808;  // std dev = 0.052, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15926125964472077;  // std dev = 0.157, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.038807211391403564;  // std dev = 1.783, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.23217027046212446;  // std dev = 3.099, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10898875613883809;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.10586835238208615;  // std dev = 1.972, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6782928089296999;  // std dev = 0.267, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14109492083333094;  // std dev = 0.068, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.19637533798155188;  // std dev = 0.508, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1048706874983595;  // std dev = 3.688, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else return 0.3093095202122489;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.41751358415830986;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.08418025082497664;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.549862408323035;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.01032798072294363;  // std dev = 2.353, 76.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   | | | else return 0.0848064942728746;  // std dev = 3.375, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5179215988920574;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.018948204113835805;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.15247166039940574;  // std dev = 2.863, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.336008352385301;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3292099056185671;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return -0.1339171983645194;  // std dev = 0.300, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.02555985535692134;  // std dev = 1.005, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3855058272767528;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05292439549674768;  // std dev = 3.983, 172.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3903271307268012;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, J) )
%   | | | then return 0.051342904030047584;  // std dev = 3.582, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.440369733285164;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21049304351260403;  // std dev = 0.246, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), enzyme(F, G) )
%   | | then if ( complex(A, H), enzyme(A, G) )
%   | | | then return 0.16653434922078528;  // std dev = 0.940, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04041326179259555;  // std dev = 1.832, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( interaction(D, I), complex(D, J) )
%   | | | then return -0.02129996590887358;  // std dev = 1.805, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.04280610648271371;  // std dev = 1.880, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5395010620516019;  // std dev = 0.613, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.15631910195074786;  // std dev = 0.199, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.04426646502549507;  // std dev = 2.826, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | | | else return 0.09690144785370251;  // std dev = 2.104, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2361324269988676;  // std dev = 0.023, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.24598799872385646;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6212888230746088;  // std dev = 0.743, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18043905075547403;  // std dev = 0.071, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.22664098252016895;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4424694345223063;  // std dev = 0.310, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.13883841146879378;  // std dev = 0.126, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.001926914257779658;  // std dev = 0.712, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.09484848450295161;  // std dev = 2.146, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18686274143704232;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, E) )
%   | | then return 0.18593543364659176;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.038747924514931864;  // std dev = 0.809, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.3105118659473432;  // std dev = 0.275, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.4174062104698816;  // std dev = 0.494, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1312217915287626;  // std dev = 0.031, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.21712030943142308;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, J), enzyme(A, K) )
%   | | | then return 0.2104330943010408;  // std dev = 1.315, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -6.131964848256785E-4;  // std dev = 2.620, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16519175362096122;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.15957784608803877;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), location(G, H) )
%   | | | then return -0.07277973484447754;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.04980478730603399;  // std dev = 0.350, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.21771510214162343;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.027452556548696525;  // std dev = 1.398, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.17682974206803112;  // std dev = 0.119, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.015107624059520729;  // std dev = 2.087, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | | else return 0.033207403450593836;  // std dev = 3.082, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14600358905596628;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.04035706166003644;  // std dev = 0.676, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.13257365340650307;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.022036341489011478;  // std dev = 0.495, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(H, A), complex(H, I) )
%   | | then return -0.031799333951665384;  // std dev = 0.163, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | | else return 0.011585517773178247;  // std dev = 0.164, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15296786072987367;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.039812115929016414;  // std dev = 1.955, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.01057481371036696;  // std dev = 3.123, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '38.332', 'seconds']
Refined model CLL: -0.167734


******************************************
Best model found
******************************************
Results 

CLL : -0.186434 

AUC ROC : 0.986958 

AUC PR : 0.247303 

Precision : 0.14681 

Recall : 0.938628 

F1 : 0.253906 

Total Learning Time : 7.652 

Total Inference Time : 7.382075071334839 

Total revision time: 26.732658226013186
Best scored revision CLL: -0.167734


Results 

CLL : -0.186434 

AUC ROC : 0.986958 

AUC PR : 0.247303 

Precision : 0.14681 

Recall : 0.938628 

F1 : 0.253906 

Total Learning Time : 31.984376031875613 

Total Inference Time : 7.382075071334839 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.519
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.009311725797186775;  // std dev = 3.322, 86.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=13 */
%   | | | else return 0.14282046794622713;  // std dev = 5.282, 137.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7727186076513649;  // std dev = 1.928, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.15338388393396934;  // std dev = 0.096, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( location(A, I) )
%   | | | then return 0.15495904233092686;  // std dev = 2.746, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return -0.010166306697677565;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1267950081748558;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05506746099875576;  // std dev = 2.825, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6738588496382296;  // std dev = 1.010, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14377071420971346;  // std dev = 0.302, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.43621434992108865;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.052523606076469956;  // std dev = 2.572, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08141960473779826;  // std dev = 1.504, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44587729107272234;  // std dev = 0.182, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.54173024811448;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.45852698261640157;  // std dev = 0.998, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.04178465044098457;  // std dev = 4.443, 197.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.44674360528646384;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5423617145671837;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07632751322000647;  // std dev = 2.822, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.1708449382797804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31456432427249487;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24224050113778736;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.057000061162247324;  // std dev = 4.527, 200.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.34060926668753533;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3742722432629365;  // std dev = 0.048, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.20296105414445578;  // std dev = 2.289, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.23363367536013288;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25251053421756253;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.37279885668943613;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.26870760216392586;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.29183388280146144;  // std dev = 0.042, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.04388268776397684;  // std dev = 1.276, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3378050900704001;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06124961747927621;  // std dev = 4.087, 159.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=46 */
%   | | | else return 0.08966590729777123;  // std dev = 2.994, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.16083434552236991;  // std dev = 0.988, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.2301334680016648;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2750077825110622;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6015141353945492;  // std dev = 0.696, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17840354510995154;  // std dev = 0.563, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25670954247815286;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08525427217315144;  // std dev = 3.305, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18141718840843724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.10216261334481012;  // std dev = 0.838, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4132664123282223;  // std dev = 1.876, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.13735142337171177;  // std dev = 0.208, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19199872484624517;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.015871571607921613;  // std dev = 2.436, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.07825806465362885;  // std dev = 0.844, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.20127899371102986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.04947500521891882;  // std dev = 0.693, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09233928487210681;  // std dev = 0.296, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.15895147848723606;  // std dev = 0.547, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.007577574512977153;  // std dev = 1.434, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19470971468930162;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07623582221983005;  // std dev = 2.677, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   | | | else return 0.002025555024025039;  // std dev = 2.455, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14598429548821557;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15847558919310972;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1699348484219111;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17321216486494606;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.06300963438220558;  // std dev = 0.794, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01543320114590626;  // std dev = 1.716, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16612415096560176;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.00674999966965726;  // std dev = 2.878, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
%   | | | else return 0.018530189103815056;  // std dev = 2.420, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.462', 'seconds']
Parameter learned model CLL:-0.180318 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.322, 73, 13], 'false,false,true,false': [5.282, 98, 39], 'false,false,false,true': [2.527, 22, 9], 'false,false,false,false': [1.519, 10, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.0, 0, 7], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.928, 4, 52], 'false,false,true,false': [0.096, 132, 0], 'false,false,false,true': [2.746, 24, 11], 'false,false,false,false': [0.926, 6, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.309, 3, 4], 'false,true,true': [2.825, 51, 14], 'false,true,false,true': [1.01, 1, 42], 'false,true,false,false': [0.302, 95, 0], 'false,false,true,true': [0.746, 1, 3], 'false,false,true,false': [2.572, 27, 9], 'false,false,false,true': [1.504, 9, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.182, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.998, 1, 6], 'false,true,false': [4.443, 148, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.822, 30, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.903, 1, 6], 'false,true': [4.527, 144, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.048, 0, 2], 'false,false,false,true': [2.289, 13, 9], 'false,false,false,false': [1.311, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.013, 0, 9], 'true,true,false': [0.024, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.042, 0, 2], 'false,true': [1.276, 26, 5], 'false,false,true': [0.082, 0, 5], 'false,false,false,true': [4.087, 113, 46], 'false,false,false,false': [2.994, 28, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.988, 1, 13], 'true,true,true,false': [0.039, 0, 3], 'true,true,false,true': [0.019, 0, 3], 'true,true,false,false': [0.696, 0, 33], 'true,false': [0.563, 98, 0], 'false,true': [0.064, 0, 3], 'false,false,true': [3.305, 63, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.838, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.876, 3, 56], 'false,true,false': [0.208, 136, 0], 'false,false,true,true': [0.034, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.436, 30, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.844, 1, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.693, 1, 5], 'false,true,true': [0.296, 20, 1], 'false,true,false,true': [0.547, 2, 6], 'false,true,false,false': [1.434, 50, 17], 'false,false,true': [0.052, 0, 3], 'false,false,false,true': [2.677, 51, 31], 'false,false,false,false': [2.455, 32, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.018, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.003, 0, 2], 'true,false': [0.794, 1, 3], 'false,true': [1.716, 74, 24], 'false,false,true': [0.046, 0, 3], 'false,false,false,true': [2.878, 77, 31], 'false,false,false,false': [2.42, 29, 12]}]
{'': [-2.3684757858670006e-16, 0.19197879482124836], 'false': [-2.5376526277146434e-16, 0.18224410498113433], 'false,false': [0.1788091455689848, 0.19834710743801603], 'false,false,false': [0.2060353798126952, 0.17751479289940816], 'false,false,true': [0.12831260140616496, 0.20363365123341734], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [2.3684757858670006e-16, 0.204304808175017], 'false': [-6.344131569286608e-17, 0.20002796730801137], 'false,false': [0.1991986031478846, 0.20372023619514484], 'false,false,false': [0.21543009070050348, 0.12244897959183673], 'false,false,true': [0.06638169539903568, 7.024349955632741e-05], 'true': [1.1102230246251565e-16, -2.5376526277146434e-16], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.13888888888888873, 0.15289382265558357], 'false': [0.1429530855320578, 0.19168564086251824], 'false,false': [0.1926109991261275, 0.18853208319126513], 'false,false,true': [0.139197219794799, 0.18382400480507144], 'false,false,false': [0.18853208319126513, nan], 'false,true': [0.12277511802136286, 0.15145555514000716], 'false,true,false': [0.023727452498122355, 0.0009629622759029823], 'true': [-2.0185873175002846e-16, 0.24489795918367352]}
{'': [0.0022123746422985017, 0.12436620813649746], 'false': [0.10802978110103577, 0.19362073336241517], 'false,false': [0.002031738404982164, 0.19668195072157976], 'false,false,false': [0.1942040451196971, 0.22222222222222218], 'false,true': [0.12536849842913927, 0.10020563482509513], 'false,true,true': [0.0, 0.14241293599532343], 'true': [0.0022123746422985017, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.052202629981820445, 0.12199632125985822], 'false': [0.10248729714208406, 0.2196895534691296], 'false,false': [0.0010072853261475594, 0.24012624876048783], 'false,false,false': [0.23823050477238386, 0.2453705835969675], 'true': [-7.401486830834377e-17, 0.11637800844284245], 'false,false,true': [0.0, 0.0011331959919159973], 'true,true': [-7.401486830834377e-17, nan]}
{'': [0.00268855311581441, 0.11839288262368342], 'false': [0.052542250998743135, 0.12649230529357194], 'false,false': [0.0013320011227325513, 0.12782822236054242], 'false,false,false': [0.10505401071501516, 0.21340612352493174], 'true': [0.0031404898113006363, 0.0007064928046368509], 'true,true': [1.891547752048201e-05, 0.0001468378540077364], 'true,false': [0.0, 0.0008814642549132556], 'true,false,true': [0.0, nan]}
{'': [0.11480776353382542, 0.1135398421443911], 'true': [0.0684009872185509, 0.0032331152923262036], 'false': [0.0013672423469139883, 0.11621063595897035], 'false,false': [0.11621063595897035, nan], 'true,true': [0.0581709899559573, 0.02159195275530632], 'true,true,true': [0.06968059651422422, 0.0005046010799506229], 'true,true,false': [0.00012317938988805807, 0.014659792885450202]}
{'': [0.045482476191575055, 0.0919275773095753], 'false': [0.08225479047356725, 0.13384082187616866], 'false,false': [0.00038891441862320036, 0.14130504937309], 'false,false,false': [0.14130504937309, nan], 'false,true': [0.059679775782352944, 0.00031697810824288567], 'false,true,true': [nan, 0.059679775782352944], 'true': [-6.938893903907228e-18, 0.08782430854889209], 'false,false,true': [0.00038891441862320036, nan]}
{'': [0.06731407900249237, 0.07318926468975398], 'false': [0.029317739608835203, 0.10398374062913836], 'false,false': [0.0009053735022973483, 0.10595314875341892], 'false,false,false': [0.08736883037184352, 0.1370035330756045], 'true': [0.06468257211795203, 0.0714185259719755], 'true,false': [0.0, 0.0800295492165267], 'false,true': [0.004183445399991666, 0.03405598712106836], 'false,true,false': [0.03736381847656646, 0.030702950130496003]}
{'': [0.04571036206027553, 0.06884331109168469], 'false': [0.030040609769412568, 0.09354229955036523], 'false,false': [0.0007002470369264491, 0.09493046980810702], 'false,false,false': [0.07671886027680395, 0.14280192738543576], 'true': [0.00014566803789613545, 0.15780399631044817], 'true,true': [5.860418537166068e-05, 6.099424479252824e-06], 'true,true,true': [0.0, 0.00016819499212076747], 'true,true,false': [0.0, 5.568869029616563e-06]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.638
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.07091489254632087;  // std dev = 2.806, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.12917697248268875;  // std dev = 4.598, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | | | else return 0.174604631302044;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7398727907934263;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7322259441501944;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8033038828566498;  // std dev = 1.386, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15523004681711966;  // std dev = 0.140, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.4410408674051819;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1633538485463479;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5020575499097354;  // std dev = 0.245, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.10938084555147021;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.10672403559504974;  // std dev = 2.658, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6262140153032717;  // std dev = 1.678, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.13873613737727755;  // std dev = 0.036, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), phenotype(J, I) )
%   | | | then return 0.042886693178715705;  // std dev = 2.074, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.16709656317984314;  // std dev = 1.589, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.2098309172544277;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.15284280089354638;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.44435371139330493;  // std dev = 0.025, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.17553810367383957;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6463197479793863;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.49601453552986613;  // std dev = 0.684, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.011269434752781356;  // std dev = 2.447, 95.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
%   | | | else return 0.10838100797763622;  // std dev = 3.466, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.541588299379488;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.03008217514404169;  // std dev = 2.147, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.20087221356089197;  // std dev = 1.860, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.28390788673018424;  // std dev = 0.250, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, G) )
%   | | | then return -0.023470853035111393;  // std dev = 1.571, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | | | else return 0.15208026527868346;  // std dev = 0.750, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.029501460122954234;  // std dev = 1.047, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.06510877231363257;  // std dev = 3.975, 145.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=44 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.4073696434324876;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07403631009915428;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.13910465132296376;  // std dev = 1.589, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.032341887909852776;  // std dev = 2.515, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.3188177753624126;  // std dev = 0.074, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.36436432158407756;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.09565374913469336;  // std dev = 0.000691, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.0036991728732194604;  // std dev = 0.506, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.05708389892757416;  // std dev = 0.674, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.19691681993235063;  // std dev = 0.666, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.15072542189453528;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.04026882887649193;  // std dev = 3.343, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | | | else return 0.09301526335165246;  // std dev = 3.692, 104.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2609449469168086;  // std dev = 0.063, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.26441362677453184;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5545516982680878;  // std dev = 1.440, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.16049135538880085;  // std dev = 0.063, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.286948541447546;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.42845013618020106;  // std dev = 1.110, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return -0.1685624452716649;  // std dev = 0.356, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.08745121805826056;  // std dev = 1.365, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.18084423369270466;  // std dev = 1.277, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return -0.1636261906979732;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16970714263536013;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.22138793119484995;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.3864685515339338;  // std dev = 1.307, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return 0.20675239433243947;  // std dev = 1.624, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else return -0.13528317623271555;  // std dev = 0.041, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.23527873795303753;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.0424833762226961;  // std dev = 2.028, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.08985310450825251;  // std dev = 1.559, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.166996949900701;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.21614978145218797;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.33176477027567775;  // std dev = 0.173, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.12694249850545078;  // std dev = 0.565, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.05630774169805783;  // std dev = 1.398, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
%   | | | else return 0.10228332719015275;  // std dev = 0.463, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.19488316776721581;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.033161673790017436;  // std dev = 2.290, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | | else return 0.04203612110935071;  // std dev = 2.791, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1378362685482893;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1701341510039882;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17805776180802033;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18585159886529548;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.03272627806768085;  // std dev = 0.122, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else return 0.0063218634593011245;  // std dev = 0.185, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.166107361419929;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.03737466444623838;  // std dev = 2.133, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.010005019196770814;  // std dev = 2.874, 119.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '38.885', 'seconds']
Refined model CLL: -0.171049


******************************************
Best model found
******************************************
Results 

CLL : -0.191433 

AUC ROC : 0.986515 

AUC PR : 0.243358 

Precision : 0.1599 

Recall : 0.904594 

F1 : 0.271762 

Total Learning Time : 7.638 

Total Inference Time : 8.149127006530762 

Total revision time: 28.293632919311523
Best scored revision CLL: -0.171049


Results 

CLL : -0.191433 

AUC ROC : 0.986515 

AUC PR : 0.243358 

Precision : 0.1599 

Recall : 0.904594 

F1 : 0.271762 

Total Learning Time : 33.54535072517395 

Total Inference Time : 8.149127006530762 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.837
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.16090122867749257;  // std dev = 4.797, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
%   | | | else return 0.17957750652808252;  // std dev = 4.943, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7439602270421642;  // std dev = 2.521, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.1638671708211041;  // std dev = 0.016, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else if ( location(A, I) )
%   | | | then return 0.15864562727534626;  // std dev = 1.641, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4578173858811223;  // std dev = 0.915, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04586710959198455;  // std dev = 4.451, 141.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6509418581372329;  // std dev = 1.380, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14377425524571824;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.1900212500693772;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.0599787499306228;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05003814354076825;  // std dev = 1.371, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.35994414688846105;  // std dev = 0.921, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.4828135067975883;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.557380295583107;  // std dev = 1.415, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.03796442790513204;  // std dev = 5.000, 229.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5429785547379585;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.295969638498649;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2282096406550111;  // std dev = 0.963, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3700634195953358;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06088056894749821;  // std dev = 5.368, 243.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4083866146529417;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.24911986256416027;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10784491612451595;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.30164454947369546;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.23773593730949263;  // std dev = 0.587, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31452991656851725;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.018788020644837585;  // std dev = 2.266, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2910978165321301;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05883001020981246;  // std dev = 4.735, 184.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=55 */
%   | | | else return 0.056639042251910694;  // std dev = 1.825, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.273802131742514;  // std dev = 0.210, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.03504011420183614;  // std dev = 0.404, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5420727846907952;  // std dev = 1.242, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17026467211854027;  // std dev = 0.410, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23488822005192433;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07168883550820383;  // std dev = 3.929, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1979684610715039;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.036194637041423096;  // std dev = 0.878, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36587865867494646;  // std dev = 2.979, 83.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=71 */
%   | | else return -0.15269918779381675;  // std dev = 0.247, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.25759325391747834;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06623589344124473;  // std dev = 1.335, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1912559769273427;  // std dev = 0.133, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19459938444506963;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.003961897905212905;  // std dev = 1.334, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.19476096457537317;  // std dev = 0.746, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.032960092268950573;  // std dev = 1.616, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18972496163333444;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.028582362938008938;  // std dev = 3.444, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | | else return 0.004331515365306216;  // std dev = 1.391, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14847917317046333;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.270713190912492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16593186298198725;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.015204595685835157;  // std dev = 2.406, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.16227420796403869;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.035048565330717346;  // std dev = 3.328, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return -0.0482447476654891;  // std dev = 1.457, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.439', 'seconds']
Parameter learned model CLL:-0.197416 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.797, 76, 33], 'false,false,true,false': [4.943, 76, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.521, 7, 69], 'false,false,true,false': [0.016, 150, 0], 'false,false,false,true': [1.641, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.915, 1, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.451, 107, 34], 'false,true,false,true': [1.38, 2, 37], 'false,true,false,false': [0.0, 60, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.225, 6, 2], 'false,false,false,true': [1.371, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.921, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.415, 2, 14], 'false,true,false': [5.0, 172, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.414, 4, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.963, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.028, 0, 4], 'false,true': [5.368, 172, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.301, 11, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.022, 0, 7], 'true,true,false': [0.587, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.266, 32, 12], 'false,false,true': [0.024, 0, 3], 'false,false,false,true': [4.735, 129, 55], 'false,false,false,false': [1.825, 13, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.21, 0, 10], 'true,true,true,false': [0.404, 1, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.242, 1, 33], 'true,false': [0.41, 85, 0], 'false,true': [0.021, 0, 3], 'false,false,true': [3.929, 81, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.878, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.979, 12, 71], 'false,true,false': [0.247, 157, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.335, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.133, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.026, 0, 3], 'false,true,true': [1.334, 29, 11], 'false,true,false,true': [0.746, 1, 1], 'false,true,false,false': [1.616, 34, 17], 'false,false,true': [0.018, 0, 3], 'false,false,false,true': [3.444, 90, 40], 'false,false,false,false': [1.391, 9, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.034, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.023, 0, 3], 'false,true': [2.406, 75, 29], 'false,false,true': [0.016, 0, 3], 'false,false,false,true': [3.328, 85, 40], 'false,false,false,false': [1.457, 12, 4]}]
{'': [-1.6148698540002277e-16, 0.21832806664751522], 'false': [0.18750000000000006, 0.2156472948870406], 'false,false': [0.21473761798488994, 0.2314049586776858], 'false,false,false': [0.22222222222222224, 0.24000000000000005], 'false,false,true': [0.21109334231125462, 0.21811224489796038], 'false,true': [0.0, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.07638888888888891, 0.21415721401215432], 'false': [0.0, 0.21270967274258198], 'false,false': [0.2120771969879757, 0.22433953534545525], 'false,false,false': [0.22433953534545525, nan], 'false,false,true': [0.08364478103089991, 1.6369682434872837e-06], 'true': [7.401486830834377e-17, 0.13888888888888884], 'false,true': [0.0, nan]}
{'': [0.07341221515315995, 0.15778569063723305], 'false': [0.15637865288300365, 0.1719011411521206], 'false,false': [0.17283950617283955, 0.1709902138459454], 'false,false,true': [0.0, 0.18750000000000003], 'false,false,false': [0.1709902138459454, nan], 'false,true': [0.1405147186168403, 0.170022399454939], 'false,true,false': [0.04882338177178797, -6.661338147750939e-17], 'true': [0.09310570872346208, 0.0]}
{'': [0.07180038993000822, 0.13245685306078264], 'false': [0.12669554404903005, 0.22826709203963866], 'false,false': [0.0, 0.2500212113555136], 'false,false,false': [0.2500212113555136, nan], 'false,true': [0.12517706743106094, 0.10918251400550322], 'false,true,true': [nan, 0.12517706743106116], 'true': [0.0770696248050903, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.08176184433457359, 0.1231326201431443], 'false': [0.11858970682090665, 0.181029251037896], 'false,false': [0.0, 0.1812985160446093], 'false,false,false': [0.25, 0.13017751479289935], 'true': [0.11583629140607071, 0.00019795379181239414], 'true,true': [0.11583629140607071, nan], 'false,false,true': [nan, 0.0]}
{'': [0.029735081006024445, 0.12444467595991192], 'false': [0.11673853926028434, 0.12576184717992137], 'false,false': [0.00018410113061691677, 0.1268306326914521], 'false,false,false': [0.12182403205861343, 0.17531125619341673], 'true': [0.03232951971460795, 0.0], 'true,true': [6.761019181527368e-05, 0.08618875456483305], 'true,false': [nan, 0.0]}
{'': [0.11290332575179758, 0.1251208568390706], 'false': [0.00014033062959351028, 0.1275751756574535], 'false,false': [0.1275751756574535, nan], 'true': [0.06122274228223985, 0.0019770053620038995], 'true,true': [0.030550459865106155, 0.04537787386119926], 'true,true,false': [nan, 0.04537787386119931], 'true,true,true': [0.0044053037390516135, 0.08178996309542019]}
{'': [0.07082519327691093, 0.10073545785042916], 'false': [0.09806011908478816, 0.15130442923753998], 'false,false': [0.0, 0.162007907399341], 'false,false,false': [0.162007907399341, nan], 'false,true': [0.10689160448730069, 0.00038871306799780466], 'false,true,true': [nan, 0.10689160448730073], 'true': [4.625929269271485e-18, 0.12856500148316413], 'false,false,true': [0.0, nan]}
{'': [0.0016615150201624497, 0.07934478649316855], 'false': [0.05446373796904159, 0.09507379930735017], 'false,false': [0.00010309255926021128, 0.09651792501672599], 'false,false,false': [0.0912283126475743, 0.1488794090646115], 'false,true': [0.04446643861477733, 0.061663700668746796], 'false,true,false': [0.2782782270510519, 0.05121214997358792], 'true': [0.002198567396991459, 0.00022124562219688151], 'true,false': [nan, 0.00022124562219688151]}
{'': [0.0013393986102385028, 0.07764642538537445], 'false': [0.055657570986850716, 0.09272829936761309], 'false,false': [8.080972482606141e-05, 0.09431034125145298], 'false,false,false': [0.08861983075075272, 0.13261694390884396], 'true': [0.0017757973050638032, 0.00017223324393539816], 'true,true': [0.0017757973050638032, nan], 'true,true,true': [0.0001618382476888114, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 12.092
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.274815601766179;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.1511721909134651;  // std dev = 6.674, 215.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=63 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5948983667888561;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5952713605780217;  // std dev = 4.075, 91.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=69 */
%   | | | else return -0.15852764296165076;  // std dev = 0.160, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.33001660192516413;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12444684824765918;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5983316888706818;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.12629936695128632;  // std dev = 3.968, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | | else return 0.01947481106722739;  // std dev = 1.710, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6599750090025149;  // std dev = 1.665, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.1422097680610067;  // std dev = 0.037, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10810398221792235;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.037955661550197056;  // std dev = 1.078, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.15451602699837505;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.45292265658490416;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.02101938133705633;  // std dev = 0.648, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.15291553051012716;  // std dev = 2.078, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.058568034768349056;  // std dev = 3.129, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.17541555282259802;  // std dev = 2.909, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | | | else return 0.12032486592612905;  // std dev = 2.772, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5459752643937943;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.1583395890268162;  // std dev = 1.345, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.015541123227937593;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.33247094222564794;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.192332211866219;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5927791032165631;  // std dev = 0.975, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.16727186423621343;  // std dev = 0.400, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.10945995828221801;  // std dev = 1.705, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.06451520552821355;  // std dev = 4.447, 159.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=46 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4105836143582653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.033183613247400934;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.16570719005100343;  // std dev = 1.336, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.14674462082916434;  // std dev = 0.290, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else return 0.3160170359439648;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.0030516757017810484;  // std dev = 1.555, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.08159178664238714;  // std dev = 0.784, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.020017547698505153;  // std dev = 0.607, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13071150596021278;  // std dev = 1.415, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.3437484898649947;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.0826868300438676;  // std dev = 2.530, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.03402577013565721;  // std dev = 4.368, 171.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A), location(A, F) )
%   | | | then return 0.21107603716235812;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3152645486212515;  // std dev = 0.207, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.42906142748255643;  // std dev = 0.769, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.6260653787400109;  // std dev = 0.338, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.17008957425408314;  // std dev = 0.053, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.02083656316465854;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(J, L), complex(A, L) )
%   | | | then return -0.20449420469134502;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06333193271575162;  // std dev = 3.796, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else return 0.26176618004357;  // std dev = 0.759, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18406912009605883;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.009420980501562213;  // std dev = 0.405, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.26969650477444135;  // std dev = 2.854, 55.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=41 */
%   | | | else return 0.4974003891745037;  // std dev = 0.492, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( location(A, I) )
%   | | | then return -0.15762037152777547;  // std dev = 0.306, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | | else return -0.12105588159598173;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.19727421184817784;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.17955247467759372;  // std dev = 0.799, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.04358507066882456;  // std dev = 1.186, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19413355690247305;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.04092780349745026;  // std dev = 0.804, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3261257228420179;  // std dev = 0.541, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.11834925364697578;  // std dev = 0.153, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.06316772816919863;  // std dev = 1.320, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return -0.006083188561147104;  // std dev = 0.585, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.01490277592702538;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.01143152368913817;  // std dev = 2.801, 84.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=23 */
%   | | | else return 0.05617446029872767;  // std dev = 2.410, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1662742858064471;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.196059800457509;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.25718858583307264;  // std dev = 0.518, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.12003651476836827;  // std dev = 0.355, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.025666958017724797;  // std dev = 0.990, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.03974540879709076;  // std dev = 1.096, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2620109541848632;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.02019822551702615;  // std dev = 2.452, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return 0.008042039328641464;  // std dev = 2.843, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '37.303', 'seconds']
Refined model CLL: -0.18582


******************************************
Best model found
******************************************
Results 

CLL : -0.192221 

AUC ROC : 0.98806 

AUC PR : 0.349285 

Precision : 0.191781 

Recall : 0.794326 

F1 : 0.308966 

Total Learning Time : 12.092 

Total Inference Time : 38.70346403121948 

Total revision time: 71.63289318466187
Best scored revision CLL: -0.18582


Results 

CLL : -0.192221 

AUC ROC : 0.98806 

AUC PR : 0.349285 

Precision : 0.191781 

Recall : 0.794326 

F1 : 0.308966 

Total Learning Time : 71.70078025245667 

Total Inference Time : 38.70346403121948 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.011
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6581489350995123;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10033643509951119;  // std dev = 4.847, 128.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=31 */
%   | | | else return 0.22400259363609695;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.6330193346218546;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.6495893698896272;  // std dev = 0.937, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.628028269218737;  // std dev = 3.964, 96.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=76 */
%   | | | else return -0.16380790489697658;  // std dev = 0.111, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1034052172989958;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4503935195162429;  // std dev = 1.316, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.47091203610849985;  // std dev = 0.919, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0881157134468336;  // std dev = 4.385, 129.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6360108958280402;  // std dev = 1.919, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.149337665306851;  // std dev = 8.69e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8221165393441665;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09096403813497224;  // std dev = 1.604, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.49787670697279574;  // std dev = 0.091, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.4605492174167909;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4737106202605135;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.46003525648071913;  // std dev = 2.151, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else return 0.018358111405209324;  // std dev = 5.223, 260.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5637544753536068;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.10547419587937337;  // std dev = 1.611, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3918747724966068;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3627391517809182;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.087319096286717;  // std dev = 5.709, 252.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4237639369283831;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.005560878283763677;  // std dev = 1.717, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3029945458746817;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3117442575090797;  // std dev = 0.724, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32495233399783663;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.02351682705223374;  // std dev = 2.837, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.04823812401366401;  // std dev = 1.606, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.04070409678062263;  // std dev = 4.689, 192.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=51 */
%   | | | else return 0.06513648626172684;  // std dev = 2.171, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.22614225741876562;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.2580636626694166;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.311947964237811;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.49229630504005445;  // std dev = 1.861, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.17586952569410308;  // std dev = 0.729, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.09885462797886461;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.059673178226396104;  // std dev = 4.392, 157.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.07746857736689683;  // std dev = 0.948, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.04105911274173524;  // std dev = 1.468, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3286296079867009;  // std dev = 3.859, 101.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=82 */
%   | | else return -0.15126680163298165;  // std dev = 0.207, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2117981030915631;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.006037508908352268;  // std dev = 1.464, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.21031756896211226;  // std dev = 0.129, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.15236397686690017;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2274692306349026;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.022186738198438763;  // std dev = 1.899, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.28808428488322896;  // std dev = 0.182, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.05267137185163891;  // std dev = 1.529, 66.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.28714768227097526;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.063303834739831;  // std dev = 3.803, 135.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=47 */
%   | | | else return 0.14209960218947176;  // std dev = 1.298, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.03588080482740026;  // std dev = 0.939, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.180766195412806;  // std dev = 0.129, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20219517355701966;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.0375561860352886;  // std dev = 2.740, 140.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2321152189167337;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.006874778216851802;  // std dev = 4.056, 163.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=47 */
%   | | | else return 0.0056640851171764406;  // std dev = 1.418, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.413', 'seconds']
Parameter learned model CLL:-0.200164 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.549, 3, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.847, 97, 31], 'false,false,true,false': [5.342, 78, 45], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.937, 1, 10], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.964, 20, 76], 'false,false,true,false': [0.111, 174, 0], 'false,false,false,true': [1.713, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.316, 2, 11], 'true,false': [0.919, 1, 6], 'false,true,true': [4.385, 95, 34], 'false,true,false,true': [1.919, 4, 48], 'false,true,false,false': [8.69e-08, 101, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.604, 10, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.091, 0, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.111, 0, 3], 'false,true,true,false': [2.151, 7, 21], 'false,true,false': [5.223, 202, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.611, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [2.11e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.065, 0, 10], 'false,true': [5.709, 170, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.717, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.002, 0, 9], 'true,true,false': [0.724, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.837, 53, 19], 'false,false,true': [1.606, 4, 8], 'false,false,false,true': [4.689, 141, 51], 'false,false,false,false': [2.171, 24, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.951, 1, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.861, 3, 33], 'true,false': [0.729, 102, 0], 'false,true': [1.367, 3, 5], 'false,false,true': [4.392, 110, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.948, 1, 7], 'true,false': [1.468, 3, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.859, 19, 82], 'false,true,false': [0.207, 181, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.464, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.129, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.121, 0, 5], 'false,true,true': [1.899, 39, 13], 'false,true,false,true': [0.182, 0, 8], 'false,true,false,false': [1.529, 55, 11], 'false,false,true': [0.009, 0, 5], 'false,false,false,true': [3.803, 88, 47], 'false,false,false,false': [1.298, 6, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.939, 1, 7], 'true,true,true,false': [0.129, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.096, 0, 3], 'false,true': [2.74, 108, 32], 'false,false,true': [0.008, 0, 5], 'false,false,false,true': [4.056, 116, 47], 'false,false,false,false': [1.418, 11, 4]}]
{'': [0.12749999999999959, 0.21797088819596735], 'false': [-2.5376526277146434e-16, 0.2112029384756668], 'false,false': [0.21110776019428287, 0.21301775147928975], 'false,false,false': [0.21301775147928975, nan], 'false,false,true': [0.18353271484375117, 0.23200475907198212], 'true': [0.15999999999999973, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09233542028032535, 0.20511687713031898], 'false': [0.10937500000000006, 0.20157910594750805], 'false,false': [0.20190294186765637, 0.1955555555555555], 'false,false,true': [0.16365510589134713, 7.025339471488562e-05], 'false,false,false': [0.1955555555555555, nan], 'false,true': [0.10937500000000006, nan], 'true': [0.10937500000000011, 0.07982739190021663]}
{'': [0.12891811966200528, 0.1590177970337481], 'false': [0.1565237567468398, 0.20470193826002028], 'false,false': [0.20470193826002028, nan], 'false,false,true': [0.0, 0.18368457327696244], 'false,true': [0.14903634250570963, 0.16243959376142003], 'false,true,false': [0.07079688318674758, 7.474768878664421e-17], 'true': [0.13315857993995733, 0.120769322955763]}
{'': [0.0005604808808169035, 0.1318526191263708], 'false': [0.12836475807667097, 0.19931345592630426], 'false,false': [0.0, 0.1996437734744004], 'false,false,false': [0.1996437734744004, nan], 'false,true': [0.14972722321692872, 0.10491139051440272], 'false,true,true': [0.0041172577492209666, 0.16531019266420746], 'true': [0.0005135496725413025, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.00045408185542307385, 0.13165966639599802], 'false': [0.12933804755271824, 0.15618713666352796], 'false,false': [0.0, 0.15519152242955067], 'false,false,false': [0.15519152242955067, nan], 'true': [6.344131569286608e-17, 0.0004223985211945669], 'true,true': [6.344131569286608e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.030905190913318566, 0.12081965843009565], 'false': [0.11177691217856237, 0.12349437703008796], 'false,false': [0.21489554400419641, 0.11820870981166542], 'false,false,false': [0.11450633918912279, 0.138609078229754], 'true': [0.03281743068308042, 0.0], 'true,true': [4.867221924387266e-07, 0.07496758077938145], 'true,false': [nan, 0.0]}
{'': [0.11280565688252178, 0.12939342390391387], 'false': [0.2335389264203046, 0.1228681708103415], 'false,false': [0.1228681708103415, nan], 'true': [0.09290329795781609, 0.0052091682014596685], 'true,true': [0.05327534929977869, 0.09114252989673843], 'true,true,false': [0.0, 0.09623577733453409], 'true,true,true': [0.05654511885965153, 0.0]}
{'': [0.14574999192523258, 0.10681784231540024], 'true': [0.112367722147538, 0.1657879179866481], 'false': [0.10589132242842524, 0.12132403871719194], 'false,false': [0.0, 0.12610866787043631], 'false,false,false': [0.12610866787043631, nan], 'false,true': [0.14741768721614273, 0.00023561670091292212], 'false,true,true': [nan, 0.14741768721614285], 'false,false,true': [0.0, nan]}
{'': [0.0024638104449793974, 0.08641536490192796], 'false': [0.05400470765621163, 0.1095657516534189], 'false,false': [1.4819760639706025e-05, 0.11175327739028854], 'false,false,false': [0.10711927966258179, 0.1685316649855226], 'false,true': [0.06932627271742799, 0.04322154144106806], 'false,true,false': [0.004139218106591083, 0.035405882743871964], 'true': [0.001840808954915174, 0.003254377931666013], 'true,false': [0.0, 0.0029444722061735653]}
{'': [0.05918948338679978, 0.08179100540556976], 'false': [0.05362002415167367, 0.10223782415217791], 'false,false': [1.1254605612176504e-05, 0.10372194643870158], 'false,false,false': [0.10093833252135079, 0.13396920875006485], 'true': [0.06929379839695564, 0.0030908865290616566], 'true,true': [0.06929379839695564, nan], 'true,true,true': [0.11019319238075137, 0.002765972282321958]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 22.992
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7672398441904213;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6914822684328455;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), enzyme(J, K) )
%   | | | then return 0.08183314562582816;  // std dev = 3.633, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | | else return -0.030739953789376648;  // std dev = 2.108, 45.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.22448556876287729;  // std dev = 4.842, 101.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=37 */
%   | | | else return 0.10233498161113995;  // std dev = 3.984, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7374506595744976;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4874506595744976;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.756958931589116;  // std dev = 0.084, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7603601738230863;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7446721344747866;  // std dev = 2.686, 84.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=76 */
%   | | | else return -0.15817943460155937;  // std dev = 0.164, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.22856831366187796;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.05449302769045579;  // std dev = 1.241, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.5739858446605637;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.059886077843468034;  // std dev = 0.888, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.6048984929185165;  // std dev = 0.099, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.08289641557094783;  // std dev = 3.782, 98.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   | | | else return 0.007510180168039985;  // std dev = 1.985, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6343618486998975;  // std dev = 1.922, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.13694907013904786;  // std dev = 0.085, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then return 0.6059161749275681;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.16779299476577317;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.47901456251920366;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.30286795853935233;  // std dev = 0.320, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.43700165827513837;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5173100540479662;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.011887638015889615;  // std dev = 3.782, 130.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=27 */
%   | | | else return 0.07829745325490445;  // std dev = 4.541, 161.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4359147693435095;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.02650321583456755;  // std dev = 1.556, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.1708111124806814;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.37058147989006335;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2731140621609502;  // std dev = 0.263, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5754893132055415;  // std dev = 0.248, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.12751778449935067;  // std dev = 0.045, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(A, I), location(A, J) )
%   | | | then return 0.06345343099993342;  // std dev = 4.423, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
%   | | | else return 0.022504813638088948;  // std dev = 3.502, 113.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=28 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3332164089310701;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.15832614852895918;  // std dev = 1.179, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.04547442036751406;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18880809544505492;  // std dev = 0.319, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.2470330075751801;  // std dev = 0.675, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3477406086941694;  // std dev = 0.117, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.26368752633997694;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.4611810223400982;  // std dev = 2.888, 86.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=77 */
%   | | | else return -0.07513406203834455;  // std dev = 1.579, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | else return -0.15390212829621722;  // std dev = 0.050, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return 0.10753230346511694;  // std dev = 0.318, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.32582272119141603;  // std dev = 0.560, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41264704556813475;  // std dev = 0.187, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | else return -0.14946325410998734;  // std dev = 0.073, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, A), phenotype(E, G) )
%   | | then if ( phenotype(F, G), phenotype(A, H) )
%   | | | then return 0.15362188685864206;  // std dev = 1.180, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.07261857012851965;  // std dev = 1.583, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( interaction(F, F), phenotype(A, I) )
%   | | | then return -0.03147959754434281;  // std dev = 1.670, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | | else return 0.03374177459340784;  // std dev = 2.338, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4470620717599019;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11221500632027291;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.08555311820938132;  // std dev = 0.707, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, E) )
%   | | then return 0.15329139105632714;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.07790340985133053;  // std dev = 0.574, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.21784772571554975;  // std dev = 0.132, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.15973727393913706;  // std dev = 1.831, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.2739764158128004;  // std dev = 3.043, 78.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=66 */
%   | | else return -0.12509688916413572;  // std dev = 0.386, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.1540446132008939;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.006022154168752139;  // std dev = 1.379, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.09624449743810574;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1647541555812504;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.0199271102052775;  // std dev = 0.272, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.1546141711576787;  // std dev = 0.844, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.15290368279990674;  // std dev = 0.759, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10609643273381202;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.01813335350251453;  // std dev = 2.089, 94.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.18046320766710217;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.04789730780409441;  // std dev = 1.349, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.0163486390252792;  // std dev = 3.174, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1510562983057198;  // std dev = 0.167, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( complex(A, H), interaction(F, A) )
%   | | | then return 0.08922867804869862;  // std dev = 1.155, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.004813511165197284;  // std dev = 1.727, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.018361903376639996;  // std dev = 0.464, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.16009947135477293;  // std dev = 0.295, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.15531621264541765;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.1774190612035484;  // std dev = 1.134, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.010927568586095145;  // std dev = 3.357, 174.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '38.337', 'seconds']
Refined model CLL: -0.180017


******************************************
Best model found
******************************************
Results 

CLL : -0.149679 

AUC ROC : 0.990643 

AUC PR : 0.381072 

Precision : 0.282895 

Recall : 0.811321 

F1 : 0.419512 

Total Learning Time : 22.992 

Total Inference Time : 39.93052911758423 

Total revision time: 86.40127108383179
Best scored revision CLL: -0.180017


Results 

CLL : -0.149679 

AUC ROC : 0.990643 

AUC PR : 0.381072 

Precision : 0.282895 

Recall : 0.811321 

F1 : 0.419512 

Total Learning Time : 86.46915815162659 

Total Inference Time : 39.93052911758423 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.359
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08672036367094095;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.1889760027686843;  // std dev = 5.426, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.21000078695136415;  // std dev = 3.509, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.835662379974132;  // std dev = 0.036, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16392669981477095;  // std dev = 0.062, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( location(A, K) )
%   | | | then return 0.14663261505654465;  // std dev = 3.509, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.11633027806169584;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.039400332144104586;  // std dev = 2.116, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6549809455024463;  // std dev = 1.007, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14492774118489202;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.629681053512678;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16172831105359894;  // std dev = 3.549, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06182082912982567;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38758724876454653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4052240802913903;  // std dev = 0.641, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06277949556434353;  // std dev = 4.170, 181.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.475312022761995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5089458279354843;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1051998898661309;  // std dev = 3.495, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.0378377112942232;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207118471601496;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05854852155165416;  // std dev = 4.188, 190.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return -0.1279250023523369;  // std dev = 0.690, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.1677276065211889;  // std dev = 0.780, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.15451012678281198;  // std dev = 3.407, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.03496940083813426;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3628538152375952;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3902600367133323;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2551722425694892;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.42423034774771895;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.058903366097994035;  // std dev = 1.008, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.042446802503726705;  // std dev = 3.994, 176.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=49 */
%   | | | else return 0.09124331089368477;  // std dev = 3.599, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23471261767843274;  // std dev = 0.154, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3137729105649661;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6277720513560057;  // std dev = 0.686, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19486180361517672;  // std dev = 0.607, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.034733185582271314;  // std dev = 3.396, 130.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17348899338734958;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17619462165579539;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43194959148602335;  // std dev = 1.062, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.1441880536665027;  // std dev = 0.429, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.08468541778058887;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.008328169594867683;  // std dev = 3.116, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16936895640710123;  // std dev = 0.112, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1264059436176702;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1909792534554655;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.12171212321070458;  // std dev = 0.829, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20681854416846757;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.025246509469855145;  // std dev = 1.259, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15286060929554168;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.00995745349278231;  // std dev = 3.004, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return 0.021836361656995137;  // std dev = 3.050, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1296002678921044;  // std dev = 0.000273, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2189102754812824;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12966127234011582;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13174146679221002;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.013396320637935794;  // std dev = 1.358, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13409816926485707;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03652803184954967;  // std dev = 2.659, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | | else return 0.008206101790933226;  // std dev = 3.061, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.587', 'seconds']
Parameter learned model CLL:-0.179271 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.484, 27, 8], 'false,false,true,false': [5.426, 89, 44], 'false,false,false,true': [3.509, 35, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.068, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.036, 0, 52], 'false,false,true,false': [0.062, 136, 0], 'false,false,false,true': [3.509, 39, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.116, 31, 8], 'false,true,false,true': [1.007, 1, 48], 'false,true,false,false': [0.0, 98, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.549, 36, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.641, 1, 3], 'false,true,false': [4.17, 129, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.495, 38, 18], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.188, 134, 56], 'false,false,true,true': [0.69, 1, 1], 'false,false,true,false': [0.78, 1, 1], 'false,false,false,true': [3.407, 30, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.107, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.008, 18, 3], 'false,false,true': [7.45e-09, 0, 6], 'false,false,false,true': [3.994, 127, 49], 'false,false,false,false': [3.599, 37, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.154, 0, 12], 'true,true,true,false': [0.016, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.686, 0, 36], 'true,false': [0.607, 91, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.396, 94, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.004, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.062, 1, 56], 'false,true,false': [0.429, 140, 0], 'false,false,true,true': [0.821, 1, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.116, 50, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.112, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.101, 0, 4], 'false,true,true': [0.829, 16, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.259, 48, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [3.004, 81, 36], 'false,false,false,false': [3.05, 42, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.000273, 0, 5], 'true,true,true,false': [0.036, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.026, 0, 4], 'false,true': [1.358, 51, 17], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.659, 75, 36], 'false,false,false,false': [3.061, 45, 20]}]
{'': [-2.5376526277146434e-16, 0.22317181926278284], 'false': [0.12244897959183662, 0.21760000000000143], 'false,false': [0.21371882086167865, 0.22776238842720795], 'false,false,false': [0.22805212620027385, 0.22222222222222224], 'false,false,true': [0.17632653061224507, 0.22138051896659025], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.22222222222222224, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.20790757363425838], 'false': [0.0008585132404309951, 0.20390286062426238], 'false,false': [0.1999532892503155, 0.21479871440531287], 'false,false,false': [0.21601441566783924, 0.20408163265306126], 'false,false,true': [2.4460411755565194e-05, 2.8191160748213065e-05], 'false,true': [0.0009271942996655014, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-2.5376526277146434e-16, 0.16341815974560536], 'false': [0.14301375124408777, 0.22306677796652188], 'false,false': [0.22479617913244282, 0.1875], 'false,false,true': [0.0, 0.22496864628054777], 'false,false,false': [0.1875, nan], 'false,true': [0.11478523889969817, 0.1490824609427055], 'false,true,false': [0.020678111469542473, -1.2235110883624173e-16], 'true': [-1.1102230246251565e-16, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.12888370958147685], 'false': [0.09871109242988468, 0.21291228117291175], 'false,false': [0.00028280821261206235, 0.21482055598530964], 'false,false,false': [0.21815628466689546, 0.18749999999999997], 'false,true': [0.08230615429393773, 0.0960765018997753], 'false,true,true': [0.0, 0.1028204813021609], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, 3.700743415417188e-17]}
{'': [0.0, 0.12775762682811598], 'false': [0.0923343048409216, 0.24244833290594767], 'false,false': [0.27169801142228334, 0.2342033791336442], 'false,false,true': [0.23834519833571927, 0.3042587008595363], 'false,false,false': [0.23693741043325683, 0.1875], 'true': [0.0, -3.700743415417188e-17], 'true,true': [0.0, nan]}
{'': [0.004714297412448014, 0.11740749102718842], 'false': [0.04838401398297244, 0.12234141957469359], 'false,false': [9.25185853854297e-18, 0.12447972876068053], 'false,false,false': [0.09062321555054387, 0.22722053941013295], 'true': [0.003716269840785405, 0.005331481898319519], 'true,false': [0.004562178031662326, 0.0], 'true,false,true': [0.0, 0.0], 'true,true': [2.3790493384824782e-17, 0.0028409013670746552]}
{'': [0.1330803111691816, 0.08649737754630717], 'true': [0.04058130615550376, 0.004054358313662562], 'false': [-5.551115123125783e-18, 0.08868962249594829], 'false,false': [0.08868962249594829, nan], 'true,true': [0.0024811561232420437, 0.017322176313558743], 'true,true,false': [0.0, 0.013080753692139938], 'true,true,true': [0.0019797225178528146, 0.0001321606887450949]}
{'': [3.1871235165340358e-06, 0.09340437520842972], 'false': [0.07491034750859141, 0.14247056446642697], 'false,false': [0.2247191677607305, 0.13870601763960577], 'false,false,true': [0.2247191677607305, nan], 'false,false,false': [0.13870601763960577, nan], 'false,true': [0.019776766451610785, 0.0013156043656216334], 'false,true,true': [nan, 0.019776766451610816], 'true': [0.0, 2.4401414423363965e-06]}
{'': [0.0018793214896222726, 0.07975809375320694], 'false': [0.031131891473994262, 0.1001498836032838], 'false,false': [0.0, 0.1024239344308183], 'false,false,false': [0.07715321371730786, 0.15001999706734773], 'false,true': [0.040385496050329844, 0.026416187278003128], 'false,true,false': [0.0, 0.02558537894148217], 'true': [0.001399067848287515, 0.002695168999372921], 'true,false': [0.0, 0.0025350187805345675]}
{'': [0.0014590731305312021, 0.07415607591279003], 'false': [0.027117123360597448, 0.09133608324414913], 'false,false': [0.0, 0.09360846971253953], 'false,false,false': [0.06370846428551157, 0.1441625890872265], 'true': [0.0018038651157629344, 0.00016258380570500705], 'true,true': [0.002031315093114199, 0.0], 'true,true,true': [1.4886170709993429e-08, 0.0004316420282831357], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.303
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( enzyme(H, J), enzyme(A, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.09003299307052685;  // std dev = 3.506, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.09952824544433996;  // std dev = 3.259, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return 0.21109011157010013;  // std dev = 5.213, 119.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8205340072499492;  // std dev = 1.001, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15678620726902393;  // std dev = 0.121, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.28046267672618697;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.11993636093671327;  // std dev = 2.796, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41250929388914165;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.44425532563517345;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.06581934479200936;  // std dev = 0.801, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.13604204633553948;  // std dev = 1.819, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6853635056836196;  // std dev = 0.283, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1371104437806072;  // std dev = 0.128, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2140502949639251;  // std dev = 3.373, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else return 0.14623465046340264;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4481224881110066;  // std dev = 0.004, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3862777360015902;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6079507856585271;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.014772727720000009;  // std dev = 1.893, 60.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | | else return 0.05887561747569683;  // std dev = 3.779, 152.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5020818274010755;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.013180983530630967;  // std dev = 1.721, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.10315772556968439;  // std dev = 3.267, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3415587323072579;  // std dev = 0.004, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(F, E), enzyme(F, G) )
%   | | then if ( interaction(F, D), interaction(H, F) )
%   | | | then return 0.053645642967071;  // std dev = 1.620, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return -0.03559450873654321;  // std dev = 1.305, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.006918589320695482;  // std dev = 1.149, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.08213377695439653;  // std dev = 2.854, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
%   | else if ( interaction(A, K) )
%   | | then if ( interaction(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6405729973122777;  // std dev = 1.271, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return -0.228451869141984;  // std dev = 0.331, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.31386717700377514;  // std dev = 0.539, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1207820121013084;  // std dev = 1.345, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2898899354988199;  // std dev = 0.044, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return -0.3007638636395309;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2729289175824765;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.243363366645719;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.10533851455156387;  // std dev = 0.014, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.015042352596482296;  // std dev = 0.227, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.26771722264881065;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.06800696214007323;  // std dev = 2.491, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | | else return 0.04981988481466955;  // std dev = 4.245, 158.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23345874931143662;  // std dev = 0.131, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.09850021058678908;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.49856039004758823;  // std dev = 0.241, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | else return -0.15834993629942049;  // std dev = 0.050, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.21876437304824967;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5076991871758618;  // std dev = 0.222, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.14643086931469215;  // std dev = 0.040, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.05284985600907415;  // std dev = 2.306, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.08898389533258762;  // std dev = 0.967, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18039523677316494;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), location(A, F) )
%   | | then return -0.2825980359647632;  // std dev = 0.888, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.18381183719340236;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.4085223654287725;  // std dev = 0.093, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13613381597479213;  // std dev = 0.037, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.11770519408686125;  // std dev = 0.962, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.0018922688239623915;  // std dev = 0.640, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.013584391858342239;  // std dev = 1.393, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.028771583162074153;  // std dev = 1.860, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17350708223828726;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17501313526659773;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.0015197176735474993;  // std dev = 0.396, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.0840960515760913;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.2086715372641551;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.018720065058499217;  // std dev = 1.363, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15769919371618385;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.04674765122717451;  // std dev = 1.754, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.008133150225591693;  // std dev = 3.141, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13536363666037643;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.03692919474093034;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.11720574491021374;  // std dev = 0.609, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.14201545146816558;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(H, A), complex(H, I) )
%   | | then return 0.049171229333393206;  // std dev = 0.194, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else return -0.028822597691517068;  // std dev = 0.130, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1378641860313497;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.015501737748533712;  // std dev = 2.116, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return 0.030300856291577465;  // std dev = 2.798, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.122', 'seconds']
Refined model CLL: -0.158796


******************************************
Best model found
******************************************
Results 

CLL : -0.185416 

AUC ROC : 0.984812 

AUC PR : 0.221171 

Precision : 0.14238 

Recall : 0.924188 

F1 : 0.246747 

Total Learning Time : 8.303 

Total Inference Time : 7.605481863021851 

Total revision time: 27.88607293319702
Best scored revision CLL: -0.158796


Results 

CLL : -0.185416 

AUC ROC : 0.984812 

AUC PR : 0.221171 

Precision : 0.14238 

Recall : 0.924188 

F1 : 0.246747 

Total Learning Time : 27.95396000099182 

Total Inference Time : 7.605481863021851 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.554
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09029179224236951;  // std dev = 3.159, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return 0.1407576307516857;  // std dev = 5.289, 138.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5944734122109543;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.739872790793426;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7382961055728581;  // std dev = 2.321, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | | else return -0.15749690618699339;  // std dev = 0.039, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else if ( location(A, I) )
%   | | | then return 0.09573738843625962;  // std dev = 2.861, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5637160055651471;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.25264818908211367;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0363284337151924;  // std dev = 2.852, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6612993730347724;  // std dev = 1.386, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1398255942477674;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4392947178359552;  // std dev = 0.741, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.053466950445036916;  // std dev = 2.576, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09251209368324897;  // std dev = 1.422, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.39253592265898346;  // std dev = 0.915, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return -0.4919511921650085;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5413180231810231;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6157348293137844;  // std dev = 0.177, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.04124722963700237;  // std dev = 4.474, 203.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.44094777658376927;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5983299371368789;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06631974138117158;  // std dev = 2.856, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return -0.0023032923596604618;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32745299997994504;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.40150121112288933;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.05907475882270254;  // std dev = 4.577, 196.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.33664882067828505;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39342985997127705;  // std dev = 0.080, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.15415262869357585;  // std dev = 2.409, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.25147520039239896;  // std dev = 1.234, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2581503902818025;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.1821959132680961;  // std dev = 0.979, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2660194621497374;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3054854508667921;  // std dev = 0.071, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.05107747503196269;  // std dev = 1.244, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3189538700784997;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.10376885800691843;  // std dev = 3.917, 134.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=46 */
%   | | | else return 0.04965231422656456;  // std dev = 3.084, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25682710598790703;  // std dev = 0.248, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.23605487997773925;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.27427447103706337;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5251751181774532;  // std dev = 1.673, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.17139019898550412;  // std dev = 0.497, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24666755284749967;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08204776099369841;  // std dev = 3.424, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1713194532544854;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.20855605072000014;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4180106285951274;  // std dev = 1.810, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14589046656389573;  // std dev = 0.224, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19644134680686856;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.02424205847771832;  // std dev = 2.522, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15346794443110406;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.21555225642678644;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19492678781187714;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09619700349210586;  // std dev = 0.306, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2493941092837222;  // std dev = 0.171, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.007574427051259971;  // std dev = 1.484, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.22212085714836743;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.028934056178389053;  // std dev = 2.762, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | | | else return -0.03315775570524317;  // std dev = 2.654, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12998491226866338;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1530484895907731;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12687949307510527;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19265740342500648;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1670856697989137;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.031375683971379235;  // std dev = 1.879, 108.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.15000281084500103;  // std dev = 0.985, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.044461057438264825;  // std dev = 2.734, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | | else return 0.006184943442681547;  // std dev = 2.606, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.220', 'seconds']
Parameter learned model CLL:-0.179566 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.159, 43, 13], 'false,false,true,false': [5.289, 99, 39], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.935, 1, 7], 'false,true,true': [0.062, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.321, 6, 52], 'false,false,true,false': [0.039, 152, 0], 'false,false,false,true': [2.861, 32, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.045, 0, 11], 'true,false': [1.155, 2, 4], 'false,true,true': [2.852, 54, 14], 'false,true,false,true': [1.386, 2, 42], 'false,true,false,false': [0.0, 92, 0], 'false,false,true,true': [0.741, 1, 3], 'false,false,true,false': [2.576, 30, 9], 'false,false,false,true': [1.422, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.915, 1, 15], 'true,false': [0.022, 2, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.177, 0, 6], 'false,true,false': [4.474, 154, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.856, 33, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.026, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.085, 0, 6], 'false,true': [4.577, 140, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.08, 0, 2], 'false,false,false,true': [2.409, 17, 9], 'false,false,false,false': [1.234, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.009, 0, 9], 'true,true,false': [0.979, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.071, 0, 2], 'false,true': [1.244, 24, 5], 'false,false,true': [0.058, 0, 5], 'false,false,false,true': [3.917, 88, 46], 'false,false,false,false': [3.084, 35, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.248, 0, 13], 'true,true,true,false': [0.066, 0, 3], 'true,true,false,true': [0.022, 0, 3], 'true,true,false,false': [1.673, 3, 33], 'true,false': [0.497, 104, 0], 'false,true': [0.046, 0, 3], 'false,false,true': [3.424, 56, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.06, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.81, 3, 56], 'false,true,false': [0.224, 127, 0], 'false,false,true,true': [0.058, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.522, 32, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.044, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.094, 0, 5], 'false,true,true': [0.306, 23, 1], 'false,true,false,true': [0.171, 0, 6], 'false,true,false,false': [1.484, 50, 17], 'false,false,true': [1.08, 2, 3], 'false,false,false,true': [2.762, 73, 31], 'false,false,false,false': [2.654, 43, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.027, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.016, 0, 2], 'true,false': [0.062, 0, 3], 'false,true': [1.879, 84, 24], 'false,false,true': [0.985, 2, 3], 'false,false,false,true': [2.734, 60, 31], 'false,false,false,false': [2.606, 33, 12]}]
{'': [-2.3684757858670006e-16, 0.206312147272239], 'false': [0.10937499999999978, 0.19764435507038336], 'false,false': [0.19619513232011984, 0.2040816326530607], 'false,false,false': [0.19834710743801665, 0.2222222222222221], 'false,false,true': [0.17825255102040763, 0.20274102079395132], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, 0.18750000000000006], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05859375000000017, 0.19409652509724148], 'false': [0.0005548461954016608, 0.18823631270937355], 'false,false': [0.18607004929883256, 0.19815355940490056], 'false,false,false': [0.1904013452929949, 0.0], 'false,false,true': [0.09285783979686522, 1.016629566168378e-05], 'true': [1.1102230246251565e-16, 0.10937500000000022], 'false,true': [0.0005548461954016608, nan]}
{'': [0.10064983276285447, 0.15260175524535813], 'false': [0.14447501541457636, 0.18387965831577824], 'false,false': [0.17963509240548034, 0.2021232199787558], 'false,false,false': [0.2021232199787558, nan], 'false,false,true': [0.13732741367643117, 0.1701266144277691], 'false,true': [0.11965357896512581, 0.15458754839906935], 'false,true,false': [0.04365641446216879, -6.275173617446536e-17], 'true': [0.00018590746522892135, 0.2222222222222222]}
{'': [0.12376772760451837, 0.12160444068763913], 'true': [0.05228404984355109, 0.00024385521255052], 'false': [0.10573972065118799, 0.18761271084267772], 'false,false': [0.005504254324525504, 0.1880667276371283], 'false,false,false': [0.18543736173926045, 0.2222222222222222], 'false,true': [0.005169429765390048, 0.09860985184183411], 'false,false,true': [0.0, 0.0], 'false,true,true': [0.0, 0.005239878387954959]}
{'': [0.0018461521377240184, 0.1252985198142562], 'false': [0.10686584071817096, 0.21403862007628266], 'false,false': [0.0028658545983931507, 0.23033503994348511], 'false,false,false': [0.2231557293767674, 0.2537496433259115], 'false,false,true': [0.0, 0.0032240864231923017], 'true': [7.727130531726751e-05, 0.001209590842252047], 'true,true': [7.727130531726751e-05, nan]}
{'': [0.05834472551468321, 0.1258333491330641], 'false': [0.053394370286465896, 0.1341406100718614], 'false,false': [0.000677235465978554, 0.13638420586179661], 'false,false,false': [0.11448522018279825, 0.19412678835093722], 'true': [0.0697467948788736, 0.0020398611123565447], 'true,true': [9.583406025365843e-06, 0.1915650795867268], 'true,false': [0.0, 0.0025406035800632637], 'true,false,true': [0.0, nan]}
{'': [0.10770161835235129, 0.1311699277604095], 'false': [0.0006992765456174758, 0.13476559320433373], 'false,false': [0.13476559320433373, nan], 'true': [0.06849948948677625, 0.002372177796500354], 'true,true': [0.004179422506486397, 0.07627483481568707], 'true,true,false': [0.0001587156648405937, 0.07777544976527295], 'true,true,true': [0.00472598956860818, 0.001460383371390252]}
{'': [0.000581780270972924, 0.09691970672863243], 'false': [0.08675470762453254, 0.13714310107706323], 'false,false': [0.0011284376775334976, 0.14452410930355888], 'false,false,false': [0.14452410930355888, nan], 'false,true': [0.05552725722023028, 0.0003959146959522882], 'false,true,true': [nan, 0.05552725722023028], 'false,false,true': [0.0011284376775334976, nan], 'true': [-3.469446951953614e-18, 0.0005071711074630035]}
{'': [0.0011644786373131502, 0.07336082942371734], 'false': [0.02995551653050964, 0.09895998224102927], 'false,false': [0.23346387933375193, 0.09312342733518128], 'false,false,false': [0.07332717677948722, 0.12803457091892523], 'false,true': [0.0038903073782961158, 0.03554504376456073], 'false,true,false': [0.0048752163020889154, 0.03286423969683904], 'true': [0.00019504980633322234, 0.0015203879418615313], 'true,false': [0.0, 0.0017535638709697432]}
{'': [0.0008119836717690732, 0.07698873907254693], 'false': [0.03270017679543912, 0.10951624926458345], 'false,false': [0.19400040697144036, 0.10523819744963944], 'false,false,false': [0.08216366025594771, 0.15091974122626858], 'true': [0.0005952498426638646, 0.0012773160548351138], 'true,true': [0.0001584322259456955, 0.0010469609455557166], 'true,true,false': [0.0, 0.0001281969216670245], 'true,true,true': [0.0, 0.00036661825061409456]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
1;false,false,false;location(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 9.99
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.25814893509951237;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.1372187025413717;  // std dev = 5.883, 172.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7398727907934262;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.739872790793426;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7334940000322623;  // std dev = 2.318, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | | else return -0.15731746047141498;  // std dev = 0.185, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else if ( location(A, H) )
%   | | | then return 0.13008469014256246;  // std dev = 2.796, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.09061100593203598;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5595171078416127;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5807165438879357;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.26165178541782536;  // std dev = 0.991, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03454599488543534;  // std dev = 2.511, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6334654456259311;  // std dev = 1.737, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14204756395484705;  // std dev = 0.053, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), enzyme(L, M) )
%   | | | then return 0.07208023161260242;  // std dev = 1.619, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.32334922799417976;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.4890671841757222;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4251246847715256;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.48508604753552653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3453914846638807;  // std dev = 1.316, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.12508390571547956;  // std dev = 0.105, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.06779043195958713;  // std dev = 4.330, 175.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.532428924316973;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5938485117882117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.21178717636729963;  // std dev = 1.637, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.05360725853158594;  // std dev = 2.264, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.326064279709522;  // std dev = 0.021, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( phenotype(F, G), location(E, H) )
%   | | | then return 0.04979417846529788;  // std dev = 3.869, 146.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=39 */
%   | | | else return -0.08631445370131931;  // std dev = 0.810, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04595463002953219;  // std dev = 1.264, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.1264751297749834;  // std dev = 1.789, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.4007044204960667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08270810870624719;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.3435796081942667;  // std dev = 1.126, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.03303473067830135;  // std dev = 2.514, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.29528025901292615;  // std dev = 0.068, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.3093338820357664;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.057911888184600656;  // std dev = 0.848, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.07147646832303045;  // std dev = 0.130, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.06535333971855262;  // std dev = 0.929, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03401690158942884;  // std dev = 0.513, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.11092214119247905;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.037776860136140226;  // std dev = 2.543, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return 0.10010900359392734;  // std dev = 4.325, 137.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2582792571339264;  // std dev = 0.074, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2282314800969206;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5964737483861656;  // std dev = 0.586, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17508361430870711;  // std dev = 0.066, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.02179582760979526;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), enzyme(I, J) )
%   | | | then return 0.16410659531396773;  // std dev = 1.527, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.05338314670715024;  // std dev = 2.614, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.00981984099332812;  // std dev = 1.078, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.033254925327380655;  // std dev = 0.763, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1622083345204206;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.046346613193698455;  // std dev = 0.789, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.24765849117391506;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.3259162931561286;  // std dev = 0.819, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.46652828804430563;  // std dev = 1.479, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.14372995221691798;  // std dev = 0.036, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.28787063217009523;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.00967446447908908;  // std dev = 1.725, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.24586820928838954;  // std dev = 1.268, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1780469489977851;  // std dev = 0.047, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, F), interaction(F, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2922294149840973;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.043503877785563784;  // std dev = 2.583, 110.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=22 */
%   | | else if ( location(A, G), location(E, G) )
%   | | | then return 0.025066822286138244;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09460930036139638;  // std dev = 0.710, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), enzyme(J, K) )
%   | | | then return -0.04568350776004313;  // std dev = 1.155, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.040689550517903975;  // std dev = 0.860, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.2290163724704876;  // std dev = 1.037, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.04397506062879224;  // std dev = 2.222, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.12737555760995262;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( location(C, E), interaction(D, C) )
%   | | | then return 0.14258452143404998;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18281141946243357;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.22629043676487293;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.1941581859774407;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), interaction(A, H) )
%   | | | then return -0.06577170595204714;  // std dev = 1.224, 38.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | | else return -0.005793213215895791;  // std dev = 2.031, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.025122922512931786;  // std dev = 1.329, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.016301017061293745;  // std dev = 2.908, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '43.259', 'seconds']
Refined model CLL: -0.190749


******************************************
Best model found
******************************************
Results 

CLL : -0.190484 

AUC ROC : 0.983444 

AUC PR : 0.227429 

Precision : 0.15034 

Recall : 0.780919 

F1 : 0.252139 

Total Learning Time : 9.99 

Total Inference Time : 8.081026077270508 

Total revision time: 30.81645306968689
Best scored revision CLL: -0.179566


Results 

CLL : -0.190484 

AUC ROC : 0.983444 

AUC PR : 0.227429 

Precision : 0.15034 

Recall : 0.780919 

F1 : 0.252139 

Total Learning Time : 30.88434013748169 

Total Inference Time : 8.081026077270508 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.288
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20754652546095814;  // std dev = 7.523, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19762767646037513;  // std dev = 5.279, 120.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | | else return 0.1695436869590626;  // std dev = 5.333, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1366367874595358;  // std dev = 4.830, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return 0.10460427830792637;  // std dev = 6.028, 173.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11204753184965019;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.12113900844738641;  // std dev = 6.674, 200.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1018521197293592;  // std dev = 7.588, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09276218973175474;  // std dev = 7.530, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7230511442236208;  // std dev = 0.011, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.27713609070182443;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04600920877703045;  // std dev = 4.040, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | | | else return 0.07302348853530227;  // std dev = 4.294, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.026744930025951193;  // std dev = 3.821, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.02096911302813886;  // std dev = 6.016, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032898249867774405;  // std dev = 7.031, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04054799258412533;  // std dev = 6.960, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.042', 'seconds']
Parameter learned model CLL:-0.332767 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.523, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.279, 76, 44], 'false,false,false,false': [5.333, 84, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.83, 70, 35], 'false,false,false,false': [6.028, 121, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.651, 40, 20], 'false,false,false,false': [6.674, 133, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.588, 170, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.53, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.011, 0, 35], 'true,false': [0.014, 58, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.04, 51, 24], 'false,false,false,false': [4.294, 54, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.821, 74, 35], 'false,false,false,false': [6.016, 119, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.031, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.96, 166, 87]}]
{'': [nan, 0.22731891421106204], 'false': [nan, 0.22731891421106193], 'false,false': [nan, 0.22731891421106204], 'false,false,false': [nan, 0.22731891421106193]}
{'': [nan, 0.22816305790948882], 'false': [nan, 0.22816305790948918], 'false,false': [nan, 0.22816305790948882], 'false,false,false': [0.23222222222222186, 0.22394444788889495]}
{'': [nan, 0.21489132169887878], 'false': [nan, 0.21489132169887878], 'false,false': [nan, 0.21489132169887806], 'false,false,false': [0.22219891526617952, 0.21006852822637814]}
{'': [nan, 0.2225979640731036], 'false': [nan, 0.2225979640731036], 'false,false': [nan, 0.2225979640731038], 'false,false,false': [0.22222222222222202, 0.22269161240989388]}
{'': [nan, 0.224064081011152], 'false': [nan, 0.224064081011152], 'false,false': [nan, 0.22406408101115138], 'false,false,false': [nan, 0.22406408101115138]}
{'': [nan, 0.22682418708431598], 'false': [nan, 0.22682418708431598], 'false,false': [nan, 0.22682418708431587], 'false,false,false': [nan, 0.22682418708431593]}
{'': [0.23480056736766966, 0.2215771399582157], 'true': [3.5379440942863637e-06, 3.4012221171451774e-06], 'false': [nan, 0.2215771399582157], 'false,false': [nan, 0.2215771399582157], 'false,false,false': [0.21760000000000043, 0.22486615110053595], 'true,true': [nan, 3.5379440942863637e-06], 'true,true,false': [nan, 3.5379440942863637e-06]}
{'': [nan, 0.1813874870325527], 'false': [nan, 0.1813874870325527], 'false,false': [nan, 0.18138748703255275], 'false,false,false': [0.1339333288821941, 0.21162305738663528]}
{'': [nan, 0.1844795568006999], 'false': [nan, 0.18447955680069986], 'false,false': [nan, 0.18447955680069986], 'false,false,false': [nan, 0.18447955680069986]}
{'': [nan, 0.19148816959988638], 'false': [nan, 0.19148816959988638], 'false,false': [nan, 0.19148816959988646], 'false,false,false': [nan, 0.19148816959988646]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 27.298
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(D, F), complex(A, F) )
%   | | then if ( phenotype(D, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.524815601766179;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return 0.14063481080572696;  // std dev = 5.990, 177.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=50 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.7914672519125427;  // std dev = 0.053, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.15444298667995776;  // std dev = 0.093, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( complex(A, F), phenotype(A, G) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7706644020000497;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1483797002744616;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.12655042570289088;  // std dev = 1.804, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.20727233352673696;  // std dev = 1.673, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.7395866383178792;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.03234959161554218;  // std dev = 1.490, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.15859683565392182;  // std dev = 5.523, 142.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=46 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( enzyme(C, D), location(A, E) )
%   | then return -0.0076928259006553605;  // std dev = 0.324, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.5473136335711493;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.006437508521222915;  // std dev = 1.478, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.08591088713198437;  // std dev = 2.816, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.5823199921766181;  // std dev = 0.366, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( complex(A, H), complex(G, H) )
%   | | | then return -0.10028147528961422;  // std dev = 1.266, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.14629751215124862;  // std dev = 5.059, 125.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=42 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.31467263626145175;  // std dev = 0.562, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.047020576261867134;  // std dev = 0.373, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.4542490445416557;  // std dev = 0.330, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1618427925481452;  // std dev = 0.157, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( phenotype(C, F), complex(C, G) )
%   | | | then return 0.15898260429777683;  // std dev = 2.475, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.01351815612234808;  // std dev = 2.381, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5269153946415653;  // std dev = 0.172, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( enzyme(I, K), enzyme(A, K) )
%   | | | then return -0.15875635426613116;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1483984477983814;  // std dev = 4.945, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.027439022997390893;  // std dev = 0.888, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.01907686261728906;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(A, E), interaction(C, C) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.09754155877514196;  // std dev = 0.715, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.3370601042982691;  // std dev = 0.639, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.011566151815427972;  // std dev = 0.311, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6391838622447844;  // std dev = 0.140, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.19970120754173304;  // std dev = 0.054, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.09055883280650108;  // std dev = 1.199, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.2712083481532869;  // std dev = 1.657, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.13817262065383745;  // std dev = 2.397, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.05361326225732949;  // std dev = 3.982, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.34232399962213433;  // std dev = 0.211, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return -0.0766468046257606;  // std dev = 0.235, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( interaction(G, C), interaction(A, H) )
%   | | | then return 0.3154380915094862;  // std dev = 1.173, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.09920963252607252;  // std dev = 2.125, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then return -0.0351999477684329;  // std dev = 0.308, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | else if ( interaction(K, A), enzyme(A, L) )
%   | | then if ( complex(A, M) )
%   | | | then return 0.02788871938393864;  // std dev = 1.376, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.13443327818248438;  // std dev = 2.291, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( interaction(N, A), phenotype(A, P) )
%   | | | then return 0.07203468909872267;  // std dev = 2.743, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0.019064916448525416;  // std dev = 3.673, 84.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.48690208658193845;  // std dev = 0.140, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.1704718983380756;  // std dev = 0.068, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.29078576570124903;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(E, F) )
%   | | | then return -0.1576077871811732;  // std dev = 1.055, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return -0.019061718959650063;  // std dev = 1.612, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5627464358749734;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2190055429113366;  // std dev = 0.028, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2756593090237928;  // std dev = 2.167, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.1154020397845162;  // std dev = 3.859, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, C), interaction(C, A) )
%   | then return -0.02495086299047139;  // std dev = 0.148, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.44235753031159447;  // std dev = 0.092, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.013452310503973232;  // std dev = 0.331, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B), interaction(A, H) )
%   | | then return 0.4857780737923686;  // std dev = 0.428, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(G, I), location(F, J) )
%   | | | then return 0.062406025687646645;  // std dev = 3.984, 103.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=38 */
%   | | | else return 0.3285377210722651;  // std dev = 1.528, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.10417290214491905;  // std dev = 0.424, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return -0.09477639132512419;  // std dev = 1.270, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.04554796963739823;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.29882624156881415;  // std dev = 0.130, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, E), enzyme(A, F) )
%   | | then return -0.042722239141810295;  // std dev = 0.201, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.15028740093636636;  // std dev = 0.996, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return -0.015650574119697072;  // std dev = 2.447, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.38371472438432325;  // std dev = 0.399, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11674391202293959;  // std dev = 0.291, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then return -0.024625761697210247;  // std dev = 0.259, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.096028631656359;  // std dev = 1.673, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.01751957435726957;  // std dev = 3.746, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.14876266518964826;  // std dev = 0.103, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3417474678418154;  // std dev = 0.147, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.2455820712903368;  // std dev = 0.222, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.116095925049966;  // std dev = 0.090, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(E, A), interaction(E, E) )
%   | | | then return -0.031055504419959683;  // std dev = 2.672, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return 4.8764322683407345E-4;  // std dev = 5.070, 181.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=55 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.987', 'seconds']
Refined model CLL: -0.257477


******************************************
Best model found
******************************************
Results 

CLL : -0.259179 

AUC ROC : 0.91548 

AUC PR : 0.274601 

Precision : 0.2625 

Recall : 0.521277 

F1 : 0.349169 

Total Learning Time : 27.298 

Total Inference Time : 16.867056846618652 

Total revision time: 51.93868712043762
Best scored revision CLL: -0.257477


Results 

CLL : -0.259179 

AUC ROC : 0.91548 

AUC PR : 0.274601 

Precision : 0.2625 

Recall : 0.521277 

F1 : 0.349169 

Total Learning Time : 52.03357604598999 

Total Inference Time : 16.867056846618652 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.626
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1872628591501458;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1508642264418156;  // std dev = 5.959, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
%   | | | else return 0.16500124679291084;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14185184543049895;  // std dev = 5.238, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.1490824932936175;  // std dev = 6.455, 186.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13858280219116012;  // std dev = 4.344, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return 0.1258807024089658;  // std dev = 7.039, 221.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11498147843425856;  // std dev = 8.221, 297.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06343209825595364;  // std dev = 8.410, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7315703686565036;  // std dev = 0.000821, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2684363310225955;  // std dev = 0.001, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08121058718023615;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | | else return 0.05252871533404778;  // std dev = 5.205, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05186781291622399;  // std dev = 4.077, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
%   | | | else return 0.058863627414503024;  // std dev = 6.446, 185.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023148164809075746;  // std dev = 7.760, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01196846244198548;  // std dev = 7.785, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.419', 'seconds']
Parameter learned model CLL:-0.327133 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.959, 112, 52], 'false,false,false,false': [5.897, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.238, 83, 41], 'false,false,false,false': [6.455, 123, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.344, 54, 29], 'false,false,false,false': [7.039, 146, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.221, 193, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.41, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.000821, 0, 41], 'true,false': [0.001, 79, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.871, 43, 23], 'false,false,false,false': [5.205, 84, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.077, 78, 41], 'false,false,false,false': [6.446, 122, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.76, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.785, 231, 104]}]
{'': [nan, 0.22079794904662914], 'false': [nan, 0.22079794904662772], 'false,false': [nan, 0.22079794904662914], 'false,false,false': [nan, 0.22079794904662772]}
{'': [nan, 0.21901961355188496], 'false': [nan, 0.2190196135518887], 'false,false': [nan, 0.21901961355188496], 'false,false,false': [0.21653777513385133, 0.22151000040569838]}
{'': [nan, 0.22295439926390584], 'false': [nan, 0.22295439926390584], 'false,false': [nan, 0.22295439926390592], 'false,false,false': [0.22130493756598246, 0.2240331274884468]}
{'': [nan, 0.22508989698663306], 'false': [nan, 0.22508989698663306], 'false,false': [nan, 0.22508989698663293], 'false,false,false': [0.22731891421106123, 0.22420870379373284]}
{'': [nan, 0.22753772545685919], 'false': [nan, 0.22753772545685919], 'false,false': [nan, 0.22753772545685874], 'false,false,false': [nan, 0.22753772545685874]}
{'': [nan, 0.2176348238266588], 'false': [nan, 0.2176348238266588], 'false,false': [nan, 0.2176348238266566], 'false,false,false': [nan, 0.21763482382665844]}
{'': [0.22493358641878214, 0.22166872228904147], 'true': [1.644220222304994e-08, 1.718019261593787e-08], 'false': [nan, 0.22166872228904147], 'false,false': [nan, 0.22166872228904147], 'false,false,false': [0.2270431588613402, 0.21852237252861662], 'true,true': [nan, 1.644220222304994e-08], 'true,true,false': [nan, 1.644220222304994e-08]}
{'': [nan, 0.19138111504357982], 'false': [nan, 0.19138111504357982], 'false,false': [nan, 0.19138111504357957], 'false,false,false': [0.13967261340546466, 0.2246231013502699]}
{'': [nan, 0.1852908885541217], 'false': [nan, 0.18529088855412149], 'false,false': [nan, 0.18529088855412149], 'false,false,false': [nan, 0.18529088855412149]}
{'': [nan, 0.18089155500735898], 'false': [nan, 0.18089155500735898], 'false,false': [nan, 0.18089155500735898], 'false,false,false': [nan, 0.18089155500735898]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 25.348
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7152917922423687;  // std dev = 0.350, 35.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | else return 0.11557467767376993;  // std dev = 0.437, 202.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=52 */
%   else if ( location(A, F), interaction(G, A) )
%   | then if ( interaction(H, G), interaction(H, H) )
%   | | then if ( complex(A, I), location(G, F) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2152917922423694;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.09148226843284561;  // std dev = 0.423, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( location(A, L) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.5666050723623534;  // std dev = 0.808, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.7968427893462159;  // std dev = 0.166, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then return 0.8434896279134562;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7701156578663294;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.15651037208654386;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.0803122661810939;  // std dev = 4.495, 122.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   | | | else return 0.1404889488552776;  // std dev = 5.840, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5356643985269537;  // std dev = 0.326, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), interaction(D, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7520560871957933;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.062401933270752115;  // std dev = 2.066, 49.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.773379952435247;  // std dev = 0.372, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.17691498172919332;  // std dev = 0.057, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( phenotype(I, K), phenotype(A, K) )
%   | | | then return 0.07692111397850306;  // std dev = 2.427, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.1556162289084945;  // std dev = 4.298, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.24894800264870182;  // std dev = 2.579, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.41273489005650504;  // std dev = 1.119, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( complex(C, E), location(A, F) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.5764021494644203;  // std dev = 0.216, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, E) )
%   | | | then return -0.023677636541761835;  // std dev = 1.679, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.1279748059193512;  // std dev = 4.655, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.7843530789490183;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.2216443850251733;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(H, A), complex(H, I) )
%   | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.4462383501903158;  // std dev = 0.341, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(H, K), interaction(K, A) )
%   | | | then return -0.10359437319510793;  // std dev = 1.320, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.14658427898267604;  // std dev = 3.135, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | else return 0.01488238161536818;  // std dev = 0.385, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.38300161491151674;  // std dev = 0.246, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(E, E), complex(A, F) )
%   | | | then return -0.09198822330683683;  // std dev = 0.680, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.05323439996613145;  // std dev = 3.512, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | else if ( phenotype(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5697363764369682;  // std dev = 1.946, 36.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=31 */
%   | | | else return -0.1961687617708038;  // std dev = 0.175, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.019942408101737717;  // std dev = 1.642, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.28017321433679104;  // std dev = 1.355, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.02565710227890398;  // std dev = 1.857, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | | else return 0.03048611123296685;  // std dev = 3.174, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.14859536052944622;  // std dev = 0.372, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.4068576420873911;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( phenotype(E, G), complex(E, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.01768215574897834;  // std dev = 1.670, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.142436938718271;  // std dev = 1.833, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else return -0.0311839393656901;  // std dev = 0.302, 79.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=14 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.5518105658591652;  // std dev = 0.916, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.21068027962968078;  // std dev = 0.387, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.2307854363248833;  // std dev = 1.583, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.06812404296857458;  // std dev = 4.472, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2870521231836471;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5588487640827154;  // std dev = 0.126, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.18313299820642848;  // std dev = 0.049, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( complex(F, H) )
%   | | | then return -0.01510326267804435;  // std dev = 1.579, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.18332444899419265;  // std dev = 0.741, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.4273851107988764;  // std dev = 1.135, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.06984399345138297;  // std dev = 4.540, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then return -0.14659024779384014;  // std dev = 0.753, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.11910808633193085;  // std dev = 0.737, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2641601038407011;  // std dev = 0.184, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( phenotype(D, E), interaction(D, F) )
%   | | then if ( recursion_proteinclass(F, B), interaction(F, G) )
%   | | | then return 0.3937820897776674;  // std dev = 1.356, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return -0.0949532576759975;  // std dev = 2.806, 105.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=16 */
%   | | else if ( interaction(D, H), interaction(A, H) )
%   | | | then return -0.1526377465614967;  // std dev = 0.875, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.036692512983986444;  // std dev = 0.549, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3642023825107059;  // std dev = 0.523, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.14293965230498623;  // std dev = 0.189, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.04280090801992881;  // std dev = 2.712, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.16351682640235024;  // std dev = 2.983, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( location(A, E) )
%   | then if ( phenotype(C, F), location(C, E) )
%   | | then if ( interaction(C, C) )
%   | | | then return 0.11591019398968383;  // std dev = 0.677, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.012795514333157168;  // std dev = 1.825, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else return -0.04737109281177349;  // std dev = 0.264, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else return 0.129445972720651;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( complex(A, G) )
%   | then return 0.01199631984076034;  // std dev = 0.239, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), interaction(H, J) )
%   | | | then return 0.1187353839959289;  // std dev = 1.541, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.03029024412361587;  // std dev = 3.974, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.03481617686047282;  // std dev = 1.471, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.47241044848621927;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.30613915967774047;  // std dev = 0.215, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else if ( interaction(A, D) )
%   | | then return -0.17193227943240474;  // std dev = 0.037, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0.03106754187801084;  // std dev = 0.325, 109.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=37 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then return -0.3848287740822017;  // std dev = 0.709, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.206429935896253;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B), location(A, K) )
%   | | | then return 0.4569885034798192;  // std dev = 0.270, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.09849976806390892;  // std dev = 1.984, 54.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=9 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.05137521878007811;  // std dev = 3.051, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | | else return -0.13756710716651224;  // std dev = 1.710, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.161', 'seconds']
Refined model CLL: -0.233563


******************************************
Best model found
******************************************
Results 

CLL : -0.252132 

AUC ROC : 0.947419 

AUC PR : 0.334147 

Precision : 0.386555 

Recall : 0.520755 

F1 : 0.44373 

Total Learning Time : 25.348 

Total Inference Time : 14.483848094940186 

Total revision time: 48.9098320236206
Best scored revision CLL: -0.233563


Results 

CLL : -0.252132 

AUC ROC : 0.947419 

AUC PR : 0.334147 

Precision : 0.386555 

Recall : 0.520755 

F1 : 0.44373 

Total Learning Time : 49.00472094917297 

Total Inference Time : 14.483848094940186 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.334
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20401359675364783;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.12625436972867077;  // std dev = 5.997, 173.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=51 */
%   | | | else return 0.15945668186739806;  // std dev = 5.249, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13675148097981513;  // std dev = 5.447, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return 0.1262561420006176;  // std dev = 5.732, 152.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15244433686033226;  // std dev = 4.076, 72.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | | else return 0.10497201329363283;  // std dev = 6.720, 209.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09410636084728083;  // std dev = 7.885, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07738243859738765;  // std dev = 7.881, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7339728420981061;  // std dev = 0.009, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26622731975199837;  // std dev = 0.012, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11716318038311507;  // std dev = 3.959, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | | | else return 0.07588970629189086;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06943208024141395;  // std dev = 4.176, 120.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | | else return 0.07475335804847424;  // std dev = 5.573, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03296258784398369;  // std dev = 7.106, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.018628616250345308;  // std dev = 7.143, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.268', 'seconds']
Parameter learned model CLL:-0.324919 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.997, 122, 51], 'false,false,false,false': [5.249, 84, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.447, 91, 44], 'false,false,false,false': [5.732, 104, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.076, 46, 26], 'false,false,false,false': [6.72, 143, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.885, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.881, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.009, 0, 44], 'true,false': [0.012, 86, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.959, 42, 25], 'false,false,false,false': [3.901, 45, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.176, 76, 44], 'false,false,false,false': [5.573, 88, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.106, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.143, 191, 92]}]
{'': [nan, 0.22624229747300717], 'false': [nan, 0.2262422974730067], 'false,false': [nan, 0.22624229747300717], 'false,false,false': [nan, 0.2262422974730067]}
{'': [nan, 0.21341381018873304], 'false': [nan, 0.21341381018872893], 'false,false': [nan, 0.21341381018873304], 'false,false,false': [0.2078920110929178, 0.22041600000000067]}
{'': [nan, 0.21787632988532282], 'false': [nan, 0.21787632988532282], 'false,false': [nan, 0.2178763298853227], 'false,false,false': [0.21977286978368213, 0.21614008927738557]}
{'': [nan, 0.22024569121949036], 'false': [nan, 0.22024569121949036], 'false,false': [nan, 0.22024569121949078], 'false,false,false': [0.23070987654321007, 0.2160633640238292]}
{'': [nan, 0.2196929907021616], 'false': [nan, 0.2196929907021616], 'false,false': [nan, 0.21969299070216147], 'false,false,false': [nan, 0.21969299070216147]}
{'': [nan, 0.21944295210869993], 'false': [nan, 0.21944295210869993], 'false,false': [nan, 0.21944295210869988], 'false,false,false': [nan, 0.21944295210869944]}
{'': [0.22399674990080626, 0.22925718507670406], 'false': [nan, 0.22925718507670406], 'false,false': [nan, 0.22925718507670406], 'false,false,false': [0.23390510135887688, 0.22383217993079593], 'true': [1.8744228092095547e-06, 1.7330177530237437e-06], 'true,true': [nan, 1.8744228092095547e-06], 'true,true,false': [nan, 1.8744228092095547e-06]}
{'': [nan, 0.1894642663552716], 'false': [nan, 0.1894642663552716], 'false,false': [nan, 0.1894642663552709], 'false,false,false': [0.14531141131481004, 0.22840939473773178]}
{'': [nan, 0.18362011455401303], 'false': [nan, 0.18362011455401317], 'false,false': [nan, 0.18362011455401317], 'false,false,false': [nan, 0.18362011455401317]}
{'': [nan, 0.18028555670992324], 'false': [nan, 0.18028555670992324], 'false,false': [nan, 0.1802855567099229], 'false,false,false': [nan, 0.1802855567099229]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.311
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( complex(A, F), phenotype(D, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1624967611864688;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.10405057444377466;  // std dev = 3.363, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.183730330448349;  // std dev = 5.322, 129.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then if ( interaction(C, A) )
%   | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.801478138447162;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.7969827858295363;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, A) )
%   | | | then return -0.14202131081564962;  // std dev = 0.091, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.08402990423908385;  // std dev = 4.909, 138.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=34 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, E), interaction(G, G) )
%   | | | then return 0.22735427056648452;  // std dev = 2.297, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.13291794109697674;  // std dev = 4.249, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | else return 0.04353897161947777;  // std dev = 0.756, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6044862869918772;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, E), interaction(C, C) )
%   | | then return 0.025475488683662298;  // std dev = 0.344, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( interaction(C, C), enzyme(C, F) )
%   | | | then return 0.8336777161825064;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19556285678490706;  // std dev = 3.144, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.571964288116235;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( phenotype(H, J), complex(H, K) )
%   | | | then return 0.3579552417617054;  // std dev = 1.396, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.04590255677489856;  // std dev = 2.830, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.0858262877043877;  // std dev = 2.632, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.17413588519472312;  // std dev = 3.903, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.41852994535108684;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5350043811689329;  // std dev = 0.089, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( complex(A, G), enzyme(A, F) )
%   | | then if ( interaction(E, E), complex(E, G) )
%   | | | then return 0.018634392374416848;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14347643436608984;  // std dev = 0.899, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( complex(E, H) )
%   | | | then return 0.05592273820863667;  // std dev = 1.977, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return -0.14802455971084744;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.47877744871885525;  // std dev = 0.237, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.14634310599426947;  // std dev = 3.683, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return 0.0380076410595648;  // std dev = 5.391, 159.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(C, E) )
%   | then return 0.3952545234331917;  // std dev = 0.210, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, C), complex(A, F) )
%   | | then return 0.36526972496291443;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.30154388554460076;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.4331091855478287;  // std dev = 0.192, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( enzyme(A, I), interaction(H, H) )
%   | | | then return 0.07398860618358735;  // std dev = 0.680, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.08268570657258911;  // std dev = 0.944, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.147518402530229;  // std dev = 3.316, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | | else return 0.057805475167022016;  // std dev = 5.849, 175.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=48 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D) )
%   | then return 0.03851592879116648;  // std dev = 0.395, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
%   | else if ( complex(A, F), location(D, G) )
%   | | then return 0.5281517537584145;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(C, H) )
%   | | | then return 0.19708798135573194;  // std dev = 1.424, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 8.733118631987733E-4;  // std dev = 0.779, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( phenotype(A, I), interaction(J, A) )
%   | then return -0.010135773556793409;  // std dev = 0.351, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( interaction(K, M) )
%   | | | then return 0.06140681769978177;  // std dev = 2.941, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.2852743102191413;  // std dev = 0.992, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.3492605419900193;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.18837211987460387;  // std dev = 2.414, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.554959705229166;  // std dev = 0.200, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.21827841717972887;  // std dev = 0.063, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7315102576219767;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2703614841473489;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7178512025086535;  // std dev = 0.330, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.2442334087978561;  // std dev = 0.061, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3008981928172657;  // std dev = 3.307, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return -0.2384552905403906;  // std dev = 0.263, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.04815298324239007;  // std dev = 0.316, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, E), interaction(A, F) )
%   | then return 0.04616295052712557;  // std dev = 0.293, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | else if ( complex(A, D), phenotype(C, G) )
%   | | then return 0.09068378437408132;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5428850432304468;  // std dev = 0.709, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.2031269119349973;  // std dev = 0.271, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( complex(A, I) )
%   | then return 0.03636221330287942;  // std dev = 0.329, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.49150600835017366;  // std dev = 0.410, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19772808762668348;  // std dev = 0.265, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.1854605773774975;  // std dev = 1.603, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.06324056599622017;  // std dev = 3.353, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16582625797665837;  // std dev = 0.053, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(D, F), enzyme(A, G) )
%   | | then if ( phenotype(A, H), complex(A, I) )
%   | | | then return -0.17170364785304648;  // std dev = 0.068, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09109701743505845;  // std dev = 0.651, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(D, D) )
%   | | | then return -0.046626331258350646;  // std dev = 1.716, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | | else return 0.030667708549040006;  // std dev = 3.371, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return 0.26549292215951703;  // std dev = 0.811, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.13757158002647574;  // std dev = 1.665, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return -0.050130419308512975;  // std dev = 1.621, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.07093897422326266;  // std dev = 2.877, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1602913223046228;  // std dev = 0.043, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), phenotype(D, G) )
%   | | then if ( phenotype(A, H), enzyme(A, E) )
%   | | | then return -0.048650069653182894;  // std dev = 0.586, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.12219703483160971;  // std dev = 1.270, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.1168784621535833;  // std dev = 0.061, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.19084356262197474;  // std dev = 0.833, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( interaction(J, A) )
%   | | then if ( complex(A, K), complex(J, K) )
%   | | | then return -0.03855386382425598;  // std dev = 1.841, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.04127473023804804;  // std dev = 3.817, 127.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=44 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.2009016449865984;  // std dev = 1.399, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.04562872887481686;  // std dev = 2.465, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.873', 'seconds']
Refined model CLL: -0.248638


******************************************
Best model found
******************************************
Results 

CLL : -0.232661 

AUC ROC : 0.977658 

AUC PR : 0.219378 

Precision : 0.171154 

Recall : 0.642599 

F1 : 0.270311 

Total Learning Time : 15.311 

Total Inference Time : 7.765743017196655 

Total revision time: 30.944174070358276
Best scored revision CLL: -0.248638


Results 

CLL : -0.232661 

AUC ROC : 0.977658 

AUC PR : 0.219378 

Precision : 0.171154 

Recall : 0.642599 

F1 : 0.270311 

Total Learning Time : 31.039062995910644 

Total Inference Time : 7.765743017196655 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.297
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1790444574875725;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16826020197819722;  // std dev = 5.888, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
%   | | | else return 0.15568158562599596;  // std dev = 4.806, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16091823770563346;  // std dev = 4.267, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.16697336464725104;  // std dev = 6.113, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16444783037792493;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.10670328308842927;  // std dev = 6.740, 208.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06975633511375069;  // std dev = 7.726, 281.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0789462033095202;  // std dev = 7.603, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7312512878563636;  // std dev = 0.034, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.26936460553748065;  // std dev = 0.042, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08804101414960143;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   | | | else return 0.04428621651772828;  // std dev = 4.169, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.01812571794832149;  // std dev = 3.489, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | | else return 0.031248411365269898;  // std dev = 6.341, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06199168072286958;  // std dev = 7.005, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.038098000309392595;  // std dev = 7.066, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.528', 'seconds']
Parameter learned model CLL:-0.338504 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.642, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.888, 104, 52], 'false,false,false,false': [4.806, 72, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.267, 52, 28], 'false,false,false,false': [6.113, 105, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.432, 31, 19], 'false,false,false,false': [6.74, 141, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.726, 195, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.603, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.034, 0, 28], 'true,false': [0.042, 47, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.628, 61, 33], 'false,false,false,false': [4.169, 57, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.489, 64, 28], 'false,false,false,false': [6.341, 131, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.005, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.066, 168, 86]}]
{'': [nan, 0.21792158609935472], 'false': [nan, 0.2179215860993546], 'false,false': [nan, 0.21792158609935472], 'false,false,false': [nan, 0.2179215860993546]}
{'': [nan, 0.2204999708641681], 'false': [nan, 0.2204999708641678], 'false,false': [nan, 0.2204999708641681], 'false,false,false': [0.22222222222222124, 0.21787112851548504]}
{'': [nan, 0.22873167717722184], 'false': [nan, 0.22873167717722184], 'false,false': [nan, 0.2287316771772226], 'false,false,false': [0.2275801271965297, 0.2292847844440698]}
{'': [nan, 0.22224699498196773], 'false': [nan, 0.22224699498196773], 'false,false': [nan, 0.22224699498196754], 'false,false,false': [0.23559999999999973, 0.21839093011080807]}
{'': [nan, 0.21239738524519744], 'false': [nan, 0.21239738524519744], 'false,false': [nan, 0.21239738524519808], 'false,false,false': [nan, 0.21239738524519808]}
{'': [nan, 0.22063689327933658], 'false': [nan, 0.22063689327933658], 'false,false': [nan, 0.22063689327933655], 'false,false,false': [nan, 0.22063689327933667]}
{'': [0.23428285855968822, 0.22089084102698442], 'true': [4.116222996148571e-05, 3.776116637183615e-05], 'false': [nan, 0.22089084102698442], 'false,false': [nan, 0.22089084102698442], 'false,false,false': [0.227818017202355, 0.21192742415229035], 'true,true': [nan, 4.116222996148571e-05], 'true,true,false': [nan, 4.116222996148571e-05]}
{'': [nan, 0.18645491276885318], 'false': [nan, 0.18645491276885318], 'false,false': [nan, 0.1864549127688532], 'false,false,false': [0.13231604366930785, 0.21275184439977582]}
{'': [nan, 0.19945283686281112], 'false': [nan, 0.19945283686281132], 'false,false': [nan, 0.19945283686281132], 'false,false,false': [nan, 0.19945283686281132]}
{'': [nan, 0.19655484121416417], 'false': [nan, 0.19655484121416417], 'false,false': [nan, 0.19655484121416383], 'false,false,false': [nan, 0.19655484121416383]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 20.734
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), interaction(F, F) )
%   | | | then return -0.08302753548872309;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.04148226843284566;  // std dev = 2.997, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5248156017661796;  // std dev = 4.163, 78.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=52 */
%   | | | else return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.7593788990384173;  // std dev = 0.155, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.011516497514618406;  // std dev = 0.359, 116.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=20 */
%   else if ( interaction(F, A), complex(A, G) )
%   | then if ( interaction(H, F), complex(H, G) )
%   | | then return 0.5548605450493735;  // std dev = 0.786, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7816289395752952;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14867624400246976;  // std dev = 0.114, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( phenotype(A, L), interaction(M, J) )
%   | | | then return 0.1352465541728373;  // std dev = 2.034, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.27029386843855385;  // std dev = 2.593, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11354212661196436;  // std dev = 3.278, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.020150914624542327;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.5634195626276071;  // std dev = 0.101, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6769637108542993;  // std dev = 0.158, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.14394843293053058;  // std dev = 0.145, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.48060381918792033;  // std dev = 0.749, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.028008115754704303;  // std dev = 3.253, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.43871333824784126;  // std dev = 1.218, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.1285314477237573;  // std dev = 5.143, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, A), phenotype(C, D) )
%   | then return -0.029804048865383483;  // std dev = 0.262, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.016190990166402464;  // std dev = 0.887, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2518987974241494;  // std dev = 2.007, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0.07602002833883431;  // std dev = 0.396, 183.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=55 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.4490311386410097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5593727827619819;  // std dev = 1.258, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.15804638568595195;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.029130441830254334;  // std dev = 1.464, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.19209592532414974;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.49167336975892684;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3985910704412377;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5930820327261738;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.5827579403639158;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3421748738594152;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(J, A), location(A, K) )
%   | | | then return -0.10146037781814475;  // std dev = 1.255, 34.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | | | else return 0.0774380494116363;  // std dev = 3.918, 92.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=26 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.03186473889258406;  // std dev = 1.703, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.13139610861111972;  // std dev = 3.868, 81.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=30 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.32708137587826835;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.44757367570942785;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.6160406893161333;  // std dev = 1.561, 56.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=54 */
%   | | | else return 0.018120883455967546;  // std dev = 2.852, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.15253439076441166;  // std dev = 0.264, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.19980732549889027;  // std dev = 0.214, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.0926374934541344;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07396494585954878;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.11512100682896649;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4682897637247093;  // std dev = 0.184, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.16574147241199208;  // std dev = 0.088, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( interaction(E, A), location(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.34995917820392486;  // std dev = 0.089, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(H, E), interaction(H, A) )
%   | | | then return -0.07456912469564497;  // std dev = 1.900, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | | else return 0.04141277765203396;  // std dev = 3.289, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), interaction(K, I) )
%   | | | then return -9.083909480847647E-4;  // std dev = 0.753, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.13784065111203392;  // std dev = 1.234, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.26940784326974265;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.38588142615092336;  // std dev = 0.852, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.18579236996464918;  // std dev = 0.245, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.03354323818175381;  // std dev = 0.299, 102.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=20 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(H, F), complex(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.06216360750265218;  // std dev = 1.323, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.2221342321000534;  // std dev = 1.048, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(F, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3508185744308342;  // std dev = 1.146, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.20552455560938218;  // std dev = 0.461, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( complex(A, L), phenotype(A, M) )
%   | | then return 0.03757078330210778;  // std dev = 0.292, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.260815828376646;  // std dev = 0.625, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12934838223426456;  // std dev = 2.109, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return -0.042777057640719235;  // std dev = 0.765, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1494769564802345;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2621647438906811;  // std dev = 0.196, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.09080466934498513;  // std dev = 0.094, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else return -0.028607159924050815;  // std dev = 0.185, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), interaction(J, K) )
%   | | | then return 0.02377996790005057;  // std dev = 2.436, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.34994007213256156;  // std dev = 0.849, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( location(A, L) )
%   | | | then return 0.0014283952879704756;  // std dev = 3.808, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return -0.1148762272411676;  // std dev = 1.146, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.07006195354317753;  // std dev = 0.243, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.20898688981094643;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), enzyme(G, I) )
%   | | | then return 0.5301352811102804;  // std dev = 0.388, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2955342523801048;  // std dev = 1.950, 43.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=35 */
%   | | else return -0.17054492312076722;  // std dev = 0.071, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return -0.09840568171098335;  // std dev = 0.752, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.19797958596524584;  // std dev = 0.804, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( location(A, M) )
%   | | | then return -0.03521348825845951;  // std dev = 2.728, 84.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | | else return 0.2175432430110701;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '2.253', 'seconds']
Refined model CLL: -0.201053


******************************************
Best model found
******************************************
Results 

CLL : -0.220437 

AUC ROC : 0.981322 

AUC PR : 0.289204 

Precision : 0.196133 

Recall : 0.75265 

F1 : 0.311176 

Total Learning Time : 20.734 

Total Inference Time : 13.70335078239441 

Total revision time: 42.038377862930304
Best scored revision CLL: -0.201053


Results 

CLL : -0.220437 

AUC ROC : 0.981322 

AUC PR : 0.289204 

Precision : 0.196133 

Recall : 0.75265 

F1 : 0.311176 

Total Learning Time : 42.13326678848267 

Total Inference Time : 13.70335078239441 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.84
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0972793698821198;  // std dev = 5.011, 138.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=33 */
%   | | | else return 0.16849376268571795;  // std dev = 4.983, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4337591264966688;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.504142292933094;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7146107381175588;  // std dev = 2.949, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.15902471187918416;  // std dev = 0.058, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( location(A, I) )
%   | | | then return 0.06590179033805584;  // std dev = 1.735, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.572614596029985;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6243590738810859;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11772735233859066;  // std dev = 4.272, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6367417157310573;  // std dev = 1.664, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.1430076398945099;  // std dev = 5.96e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.298339648012959;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0442694525488786;  // std dev = 1.418, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4376722461529642;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.48387492949397637;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5376194942339352;  // std dev = 1.414, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.0519935962224933;  // std dev = 5.058, 211.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5971103705318159;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.0838447858841166;  // std dev = 1.691, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.1943200928989373;  // std dev = 0.944, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.36796944393169495;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06462577497849997;  // std dev = 5.441, 237.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4492575239179448;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.3964975738528313;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09757110946547577;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2741810190835747;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.15615404488134166;  // std dev = 0.772, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3423298934230271;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.006733157468401576;  // std dev = 2.276, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.039894611724271334;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07630362398724899;  // std dev = 4.683, 173.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=55 */
%   | | | else return 0.04898525319507727;  // std dev = 1.834, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.27469973026852024;  // std dev = 0.295, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2698746837609646;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5361647947000048;  // std dev = 1.187, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18605145800930958;  // std dev = 0.611, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2800074321702047;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06621808224099751;  // std dev = 4.007, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17783133294297293;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.05493461210655187;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39922841808344944;  // std dev = 2.568, 81.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=71 */
%   | | else return -0.1535252721475873;  // std dev = 0.255, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2200915144046196;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04112526565648495;  // std dev = 1.381, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18681300857908495;  // std dev = 0.185, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.3335483017446887;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.20150958850749615;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.02489974925699399;  // std dev = 1.534, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.337604190890746;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.023623420649182728;  // std dev = 1.697, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21766440054580574;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026489564667253124;  // std dev = 3.404, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | | else return -0.04041320162298874;  // std dev = 1.476, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13984785104144268;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.30713811359246634;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17115628202217506;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 7.720608123459739E-4;  // std dev = 2.182, 105.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.18287744446833096;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.02427606692198932;  // std dev = 3.362, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | | else return 0.07420381465236638;  // std dev = 1.327, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.555', 'seconds']
Parameter learned model CLL:-0.200262 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [5.011, 105, 33], 'false,false,true,false': [4.983, 80, 36], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.195, 2, 5], 'false,true,true': [0.746, 1, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.949, 10, 69], 'false,false,true,false': [0.058, 151, 0], 'false,false,false,true': [1.735, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.084, 0, 8], 'true,false': [1.49e-08, 0, 3], 'false,true,true': [4.272, 77, 34], 'false,true,false,true': [1.664, 3, 37], 'false,true,false,false': [5.96e-08, 66, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.418, 10, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.095, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.414, 3, 14], 'false,true,false': [5.058, 154, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.691, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.944, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.01, 0, 4], 'false,true': [5.441, 166, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.011, 0, 7], 'true,true,false': [0.772, 2, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.276, 35, 12], 'false,false,true': [0.86, 1, 3], 'false,false,false,true': [4.683, 118, 55], 'false,false,false,false': [1.834, 14, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.295, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.187, 2, 33], 'true,false': [0.611, 75, 0], 'false,true': [0.009, 0, 3], 'false,false,true': [4.007, 81, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.91, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.568, 10, 71], 'false,true,false': [0.255, 157, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.381, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.185, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.049, 0, 3], 'false,true,true': [1.534, 30, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.697, 33, 17], 'false,false,true': [0.007, 0, 3], 'false,false,false,true': [3.404, 90, 40], 'false,false,false,false': [1.476, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.06, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.043, 0, 3], 'false,true': [2.182, 76, 29], 'false,false,true': [0.006, 0, 3], 'false,false,false,true': [3.362, 90, 40], 'false,false,false,false': [1.327, 7, 4]}]
{'': [-1.6148698540002277e-16, 0.2031632880374251], 'false': [1.4802973661668753e-16, 0.1995870416518347], 'false,false': [0.1978578957157918, 0.2314049586776858], 'false,false,false': [0.25, 0.20408163265306126], 'false,false,true': [0.18194706994329043, 0.21403091557669568], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.1301775147928995, 0.20907929046857032], 'false': [0.13910247278836857, 0.2080512649729001], 'false,false': [0.2099481652518949, 0.17712873373368077], 'false,false,true': [0.11011535983468573, 2.2603558906825525e-05], 'false,false,false': [0.17712873373368077, nan], 'false,true': [0.13910247278836857, nan], 'true': [7.401486830834377e-17, 0.20408163265306117]}
{'': [0.0011801613170612638, 0.1685611925625045], 'false': [0.16691725483163136, 0.18870841737518879], 'false,false': [0.25, 0.1546608419992101], 'false,false,true': [nan, 0.25], 'false,true': [0.16438915235468624, 0.16899020887519628], 'false,true,false': [0.0692523761466286, 5.3828995133340925e-17], 'false,false,false': [0.1546608419992101, nan], 'true': [0.0008924969960275031, 7.401486830834377e-17]}
{'': [0.0009961326836369028, 0.14218454944459474], 'false': [0.1372364724965, 0.2217843348627741], 'false,false': [0.0, 0.2200274140006321], 'false,false,false': [0.2200274140006321, nan], 'false,true': [0.11766891273279846, 0.12122900259878823], 'false,true,true': [nan, 0.11766891273279857], 'true': [0.0009016834112814731, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.08095337132950033, 0.1297495271581276], 'false': [0.12492469140548378, 0.21320868493155645], 'false,false': [0.0, 0.22828878605714573], 'false,false,false': [0.22222222222222224, 0.20408163265306126], 'true': [0.11136502411576353, 2.7334347575375118e-05], 'true,true': [0.11136502411576353, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0499003177692613, 0.12869490893188515], 'false': [0.11024397069269314, 0.13225637462633913], 'false,false': [0.18486561384311107, 0.1311431345355019], 'false,false,false': [0.1267928446995425, 0.16810418433565028], 'true': [0.05299978732448286, 0.0], 'true,true': [1.7985431922234213e-05, 0.11904826276778921], 'true,false': [nan, 0.0]}
{'': [0.12270548050929256, 0.13059075865262876], 'false': [2.4362575386497703e-05, 0.13272215445846525], 'false,false': [0.13272215445846525, nan], 'true': [0.044990774991253236, 0.004977632871153741], 'true,true': [0.007924460238822246, 0.0402373825958344], 'true,true,false': [nan, 0.04023738259583445], 'true,true,true': [0.008714789801449917, 0.0]}
{'': [0.07277149904602201, 0.09931039224799065], 'false': [0.09657632504268293, 0.14897429461560885], 'false,false': [0.0, 0.15892505622914196], 'false,false,false': [0.15892505622914196, nan], 'false,true': [0.081413298975155, 0.00041412784206087304], 'false,true,true': [nan, 0.08141329897515491], 'true': [4.625929269271485e-18, 0.13799119609587138], 'false,false,true': [0.0, nan]}
{'': [0.02410687841093985, 0.08032633232513432], 'false': [0.05867033611390147, 0.09357764554731172], 'false,false': [1.74185011788582e-05, 0.09470672895010068], 'false,false,false': [0.0891105204417916, 0.13619046131403476], 'false,true': [0.057359586033735394, 0.0583916366550217], 'false,true,false': [0.0, 0.05762645126887731], 'true': [0.0042965279938936216, 0.05427613720739696], 'true,false': [0.0, 0.0007964464629161885]}
{'': [0.0027447525421781427, 0.07219534928684468], 'false': [0.045335727168073985, 0.09138506857875542], 'false,false': [1.3429425646004542e-05, 0.09283052015722142], 'false,false,false': [0.08694239869698143, 0.16011910234651638], 'true': [0.003510962470635589, 0.0006229073827282947], 'true,true': [0.003510962470635589, nan], 'true,true,true': [0.0005142745448204319, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 11.488
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.14386322081379807;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.11901850031690298;  // std dev = 4.212, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | | | else return 0.24050187627598194;  // std dev = 4.908, 102.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=39 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, E), location(A, F) )
%   | | then return 0.05280674554428779;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7309549878123675;  // std dev = 2.641, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.16377062961156008;  // std dev = 0.165, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.03633320255058203;  // std dev = 0.902, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.21260277524470045;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6064752625860313;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.11259906491904419;  // std dev = 3.872, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | | | else return 0.0017587659881800452;  // std dev = 1.692, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6268164600451307;  // std dev = 1.665, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14811023896111616;  // std dev = 0.246, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.019739634031039816;  // std dev = 0.688, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1714997733740736;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1811087646591116;  // std dev = 0.483, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4303049008226303;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.41751358415830986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), location(F, G) )
%   | | then if ( location(A, G), interaction(F, A) )
%   | | | then return 0.008800442087481267;  // std dev = 2.421, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | | else return 0.13952911280229824;  // std dev = 2.642, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.14042474689555517;  // std dev = 3.845, 104.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=40 */
%   | | | else return 0.3368044470268121;  // std dev = 0.560, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6112662631480733;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.09398711070232968;  // std dev = 1.432, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.04964859023463031;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3183287774010068;  // std dev = 0.000973, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3487427378595353;  // std dev = 0.132, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), location(A, G) )
%   | | then if ( interaction(F, H), complex(H, I) )
%   | | | then return 0.06803774680237616;  // std dev = 2.779, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.0034532752065097065;  // std dev = 2.268, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.07204528346409236;  // std dev = 4.044, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.04510254949880913;  // std dev = 0.756, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.46042588744890234;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.15864026153832061;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.05902518863567693;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1263112464720783;  // std dev = 0.330, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.4157332815728039;  // std dev = 0.219, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3499966049040113;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.48987871188661014;  // std dev = 0.305, 40.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | | else return -0.18014116932363394;  // std dev = 0.054, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return 0.16117385716026758;  // std dev = 2.917, 58.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=27 */
%   | | | else return 0.06140857812749379;  // std dev = 1.855, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.0699149501475927;  // std dev = 0.613, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.28622931857097583;  // std dev = 0.841, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25881459766306925;  // std dev = 0.073, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.5261192515148921;  // std dev = 0.393, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.6667795181221057;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.16717763617960923;  // std dev = 0.055, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.20001565680544675;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G), complex(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.44980610186847797;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1933128215156816;  // std dev = 0.424, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.06023765551743748;  // std dev = 3.186, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
%   | | | else return -0.0013609232118820455;  // std dev = 0.681, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1874373585695499;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.16705224358409299;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.21107048985700708;  // std dev = 1.177, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.32629401512641754;  // std dev = 2.640, 71.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=62 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.13024462854582494;  // std dev = 0.218, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.17813944301764129;  // std dev = 0.298, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.22655526048704444;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.11351681468190208;  // std dev = 0.875, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.10239784531516974;  // std dev = 0.712, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17696053997351852;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.5582601838338932;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.18541805807663062;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.050021390682181595;  // std dev = 1.164, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return 0.07072537343723627;  // std dev = 1.012, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.040106527463339356;  // std dev = 0.211, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14830620400987746;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return -0.039195333463799005;  // std dev = 1.427, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.027744353280590522;  // std dev = 2.989, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15312097128391078;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.1121966350287252;  // std dev = 0.761, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(A, I), complex(G, I) )
%   | | | then return -0.10730041292355758;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.014007162712619575;  // std dev = 2.043, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.0999620533749402;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.02764459535034249;  // std dev = 0.716, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.13073987357342218;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.029889311028165038;  // std dev = 2.875, 106.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=38 */
%   | | | else return -0.009326749837602772;  // std dev = 1.324, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.971', 'seconds']
Refined model CLL: -0.194537


******************************************
Best model found
******************************************
Results 

CLL : -0.189449 

AUC ROC : 0.989853 

AUC PR : 0.30448 

Precision : 0.201563 

Recall : 0.914894 

F1 : 0.330346 

Total Learning Time : 11.488 

Total Inference Time : 32.07819986343384 

Total revision time: 64.09338467407227
Best scored revision CLL: -0.194537


Results 

CLL : -0.189449 

AUC ROC : 0.989853 

AUC PR : 0.30448 

Precision : 0.201563 

Recall : 0.914894 

F1 : 0.330346 

Total Learning Time : 64.1674136428833 

Total Inference Time : 32.07819986343384 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.975
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.13007875966091456;  // std dev = 4.751, 114.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=31 */
%   | | | else return 0.15616218013262403;  // std dev = 5.620, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6355008377444861;  // std dev = 0.961, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7696614314428981;  // std dev = 0.104, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7231238219274984;  // std dev = 2.975, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return -0.16023455430891023;  // std dev = 0.024, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | | else if ( location(A, I) )
%   | | | then return 0.14443085832463678;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5725210981745126;  // std dev = 0.009, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5915509747005777;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05022777519336298;  // std dev = 4.428, 143.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5542477956235929;  // std dev = 2.746, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.14168853904370365;  // std dev = 0.035, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8160374281799243;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06449769046256074;  // std dev = 1.613, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4356213960902815;  // std dev = 0.035, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.43384738103455545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5463314509902634;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5553342433816968;  // std dev = 1.658, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return 0.04285827613246563;  // std dev = 5.120, 235.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5268969958238949;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.10278565314228792;  // std dev = 1.609, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32649031276628954;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33750934983827446;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.07640237066913198;  // std dev = 5.675, 265.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3967069896510943;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.046213716075855144;  // std dev = 1.653, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1618115683874423;  // std dev = 0.952, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.4568106355181973;  // std dev = 0.189, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.30663210817335995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.008026732483867781;  // std dev = 2.767, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.15358134231039078;  // std dev = 0.947, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05131892363016047;  // std dev = 4.645, 182.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=51 */
%   | | | else return 0.005931045467110757;  // std dev = 2.321, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2792048821740523;  // std dev = 0.285, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2455396747296038;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24324143451339564;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4267417655998184;  // std dev = 2.267, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.16448736024426708;  // std dev = 0.327, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.0655663836353194;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04587355294469664;  // std dev = 4.478, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1836803685071763;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.12462057878085352;  // std dev = 0.892, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return -0.7838668273234151;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.35846486803196187;  // std dev = 3.451, 98.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | | else return -0.15144342178674897;  // std dev = 0.453, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20292960968628282;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.11583211797947617;  // std dev = 1.361, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17908444710385377;  // std dev = 0.137, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18253407238472563;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.19858103875042998;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.035606679989871555;  // std dev = 1.787, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.16201653005856742;  // std dev = 0.977, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.06232400706965989;  // std dev = 1.605, 73.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.03339161771962201;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04673058924703458;  // std dev = 3.867, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
%   | | | else return 0.08083439069900185;  // std dev = 1.391, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1353601942486039;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.06687893167501055;  // std dev = 0.703, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04746725407910478;  // std dev = 0.489, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.017911559722798096;  // std dev = 2.334, 145.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.19467819380825327;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.018421442677276023;  // std dev = 3.968, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
%   | | | else return 0.00544505482202827;  // std dev = 1.445, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.882', 'seconds']
Parameter learned model CLL:-0.199865 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [1.095, 3, 2], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.751, 83, 31], 'false,false,true,false': [5.62, 106, 45], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.961, 1, 10], 'false,true,true': [0.104, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.975, 10, 76], 'false,false,true,false': [0.024, 193, 0], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.009, 0, 11], 'true,false': [0.017, 0, 6], 'false,true,true': [4.428, 109, 34], 'false,true,false,true': [2.746, 9, 48], 'false,true,false,false': [0.035, 105, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.613, 11, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.035, 0, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.019, 0, 3], 'false,true,true,false': [1.658, 3, 21], 'false,true,false': [5.12, 177, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.609, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.05e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.022, 0, 10], 'false,true': [5.675, 183, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.653, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.952, 1, 9], 'true,true,false': [0.189, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.767, 53, 19], 'false,false,true': [0.947, 1, 8], 'false,false,false,true': [4.645, 131, 51], 'false,false,false,false': [2.321, 32, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.285, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [2.267, 5, 33], 'true,false': [0.327, 109, 0], 'false,true': [0.912, 1, 5], 'false,false,true': [4.478, 117, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.892, 1, 10], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.451, 16, 82], 'false,true,false': [0.453, 200, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.361, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.137, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.115, 0, 5], 'false,true,true': [1.787, 44, 13], 'false,true,false,true': [0.977, 1, 8], 'false,true,false,false': [1.605, 62, 11], 'false,false,true': [0.912, 1, 5], 'false,false,false,true': [3.867, 96, 47], 'false,false,false,false': [1.391, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.703, 1, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.489, 1, 3], 'false,true': [2.334, 113, 32], 'false,false,true': [0.003, 0, 5], 'false,false,false,true': [3.968, 109, 47], 'false,false,false,false': [1.445, 10, 4]}]
{'': [0.05246913580246885, 0.2104141473401904], 'false': [0.23140495867768587, 0.20495833548988254], 'false,true': [0.24000000000000005, 0.1388888888888887], 'false,false': [0.204542541829833, 0.21301775147928975], 'false,false,false': [0.21301775147928975, nan], 'false,false,true': [0.1979839950754091, 0.20920135081794775], 'false,true,false': [0.18750000000000006, 0.0], 'true': [0.07100591715976314, 0.0]}
{'': [0.05365128171018628, 0.20404541291978462], 'false': [0.0015579144586279625, 0.19881974310377223], 'false,false': [0.1981115212472629, 0.2130177514792899], 'false,false,false': [0.2130177514792899, nan], 'false,false,true': [0.10291107748636497, 3.0759345811566147e-06], 'true': [-1.2688263138573217e-16, 0.08396355121935367], 'false,true': [0.0015579144586279625, nan]}
{'': [0.00010424571198447092, 0.1507750222351414], 'false': [0.14836129901481737, 0.19574456433702173], 'false,false': [0.19574456433702173, nan], 'false,false,true': [0.0, 0.17349345337397212], 'false,true': [0.137097297493642, 0.1569896824926119], 'false,true,false': [0.13224412962822266, 1.1496391350274137e-05], 'true': [6.8925981076197536e-06, 4.840299684290746e-05]}
{'': [7.071855749602876e-05, 0.13794435245900682], 'false': [0.1347241934211857, 0.19687157565139843], 'false,false': [0.0, 0.19916765508125575], 'false,false,false': [0.19916765508125575, nan], 'false,true': [0.1018453674171802, 0.11154222483389052], 'false,true,true': [0.0001260669536008082, 0.11455127438947843], 'true': [7.495334207952009e-05, 0.0], 'false,false,true': [nan, 0.0]}
{'': [5.793948856865317e-05, 0.12473472777409916], 'false': [0.12151189874926675, 0.17804813465332334], 'false,false': [0.0, 0.18224016437053525], 'false,false,false': [0.18224016437053525, nan], 'true': [1.586032892321652e-17, 4.850099845166156e-05], 'true,true': [1.586032892321652e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.07463076503208971, 0.11730254739519115], 'false': [0.1063457234543461, 0.12032817212563818], 'false,false': [0.09955535308777995, 0.12068882345393406], 'false,false,false': [0.1185605384421695, 0.1282375935073802], 'true': [0.07922640203092779, 0.0], 'true,true': [0.09056920676051039, 0.005931446476613589], 'true,false': [nan, 0.0]}
{'': [0.0995898178152606, 0.12287291617780845], 'false': [0.13872032762883887, 0.12227944550566458], 'false,false': [0.12227944550566458, nan], 'true': [0.09698888016264089, 0.0009828397013188688], 'true,true': [0.005143879254361272, 0.1276226120849318], 'true,true,false': [0.0, 0.13523424939843645], 'true,true,true': [0.005415970400968032, 0.0]}
{'': [0.0450003912291928, 0.10241206373932082], 'false': [0.0998434184462764, 0.15488197747649746], 'false,false': [0.0, 0.1683299928252867], 'false,false,false': [0.1683299928252867, nan], 'false,true': [0.1333356746892691, 0.0010277878485211779], 'false,true,true': [0.0, 0.12151521550325739], 'true': [-3.96508223080413e-18, 0.07228053653305365], 'false,false,true': [0.0, nan]}
{'': [0.0020800770954142664, 0.08496342044048336], 'false': [0.05128333502311596, 0.11083115129708584], 'false,false': [0.1387375176430121, 0.1097345584226493], 'false,false,false': [0.10456601672063572, 0.1758456076520276], 'false,true': [0.05604913546074404, 0.047968723420421605], 'false,true,false': [0.10614109721703197, 0.035272907786036506], 'true': [0.0020946983747711645, 0.00193620074438445], 'true,false': [0.0, 0.0026371081479833747]}
{'': [0.04218248548024521, 0.07363044741595007], 'false': [0.03756661118834532, 0.1027748706870833], 'false,false': [1.4923812376221867e-06, 0.10489920866058652], 'false,false,false': [0.10090740644711091, 0.14922477096132108], 'true': [0.03652060384890597, 0.05976018321891983], 'true,true': [0.03652060384890597, nan], 'true,true,true': [0.0, 0.07069636603597525]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(F, E), interaction(A, F).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 13.985
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.0298661068166841;  // std dev = 3.752, 99.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=17 */
%   | | | else return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.13446472457319622;  // std dev = 3.898, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | | else return 0.20720553887309606;  // std dev = 4.908, 106.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.41851933418886933;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7316156329526724;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7027904884104573;  // std dev = 3.209, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.1589742660868535;  // std dev = 0.135, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2310089010048398;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.1689910989951602;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5757189779615305;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.42616623148002475;  // std dev = 0.358, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14020073294200858;  // std dev = 0.143, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.10465966930543774;  // std dev = 4.244, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6002409118456659;  // std dev = 2.280, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.14202845094440764;  // std dev = 0.095, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.29604974476961443;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7158219754285046;  // std dev = 0.197, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.17525855362389017;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.19002355044343835;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.46957388886763834;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.45045886188935447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5023780911219026;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.557257690584312;  // std dev = 1.687, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return 0.010582460087175066;  // std dev = 0.312, 276.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=58 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3790825095642325;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.08311217919429496;  // std dev = 1.289, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.09330495918574228;  // std dev = 0.905, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.2560797966092553;  // std dev = 0.295, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.15757771629914033;  // std dev = 0.985, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3608516411956018;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( phenotype(A, H), location(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.49439635538121324;  // std dev = 2.153, 58.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=51 */
%   | | | else return -0.14503400049604592;  // std dev = 0.425, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else return 0.03275702504909852;  // std dev = 0.323, 118.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=31 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2947287929158309;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.1853498806522883;  // std dev = 1.370, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.17925389511482143;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.32859898106438795;  // std dev = 0.069, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.2373514011003317;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(F, F), complex(A, I) )
%   | | | then return 0.08220180649677991;  // std dev = 0.788, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03058595759422896;  // std dev = 2.029, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | else return 0.3543870971733017;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, J) )
%   | | then if ( location(A, K) )
%   | | | then return 0.06242143467404166;  // std dev = 2.672, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | | | else return 0.3289242948976942;  // std dev = 0.569, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.04419913306706345;  // std dev = 3.842, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | | else return -0.0586102689550693;  // std dev = 0.856, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3916135674055293;  // std dev = 0.183, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | else return -0.16297739837570252;  // std dev = 0.076, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( phenotype(A, E), location(A, F) )
%   | then if ( phenotype(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), complex(H, I) )
%   | | | then return 0.47463799675053414;  // std dev = 0.993, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0.2619738737448844;  // std dev = 0.576, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.14773298891313513;  // std dev = 0.091, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.2929652389521509;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.005498226638317415;  // std dev = 2.324, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else if ( location(A, L) )
%   | | | then return 0.12347398792154674;  // std dev = 1.215, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.06322053770377453;  // std dev = 0.890, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17951200093359132;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.1783241644425819;  // std dev = 0.910, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20869675011844593;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29134547547920653;  // std dev = 2.938, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.12863041279172016;  // std dev = 0.036, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.14231175256703654;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.10340905178991051;  // std dev = 0.719, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.057688303379151665;  // std dev = 0.948, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return -0.0827439526937983;  // std dev = 0.822, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.182072418125933;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.06588885275175108;  // std dev = 0.202, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(G, I), complex(G, J) )
%   | | | then return 0.29419975717619173;  // std dev = 0.243, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.05227886600484807;  // std dev = 1.236, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return -0.01107069571506205;  // std dev = 0.238, 239.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=58 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then return 0.14511603715733518;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.26702009792865383;  // std dev = 0.748, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.11534295028831724;  // std dev = 0.730, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1465829519581332;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.3207218435885747;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17850025762992838;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1392156015131939;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(I, A), interaction(I, I) )
%   | | then return -0.06933076839247504;  // std dev = 0.222, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | else return 0.029934073183757345;  // std dev = 0.217, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.18334564504759523;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return -0.0527664633114267;  // std dev = 2.084, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.030370390820941874;  // std dev = 2.948, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.164', 'seconds']
Refined model CLL: -0.179667


******************************************
Best model found
******************************************
Results 

CLL : -0.160864 

AUC ROC : 0.988928 

AUC PR : 0.342293 

Precision : 0.298999 

Recall : 0.788679 

F1 : 0.43361 

Total Learning Time : 13.985 

Total Inference Time : 25.54683494567871 

Total revision time: 62.52332993507385
Best scored revision CLL: -0.179667


Results 

CLL : -0.160864 

AUC ROC : 0.988928 

AUC PR : 0.342293 

Precision : 0.298999 

Recall : 0.788679 

F1 : 0.43361 

Total Learning Time : 62.59735890388489 

Total Inference Time : 25.54683494567871 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.43
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.15444523139580865;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.16370449065506681;  // std dev = 5.528, 144.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1460277229783002;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8372239474955036;  // std dev = 0.003, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1627669519767578;  // std dev = 0.006, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else if ( location(A, K) )
%   | | | then return 0.14924295020625433;  // std dev = 3.517, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.08942719256451159;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.44425532563517334;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.044179979267973;  // std dev = 2.077, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6785750602302691;  // std dev = 0.257, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1448477847533449;  // std dev = 0.301, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13788555078293654;  // std dev = 3.639, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.01541168751307872;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43485032175037525;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4265947324208203;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38788829123389335;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4043027007278075;  // std dev = 0.624, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.043964960467904;  // std dev = 4.217, 200.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.521110468150356;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1294854334556944;  // std dev = 3.465, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.20638029876391925;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31730472829404216;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23938705936124743;  // std dev = 0.947, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.04997739147641024;  // std dev = 4.225, 200.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3925470392128716;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0902727432107052;  // std dev = 3.610, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.09801751037495716;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2685262629672616;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.34694200335531267;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2540953390020848;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.303821569717601;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.08557358269308105;  // std dev = 1.027, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.28668227630899307;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.04900722503177469;  // std dev = 4.001, 173.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=49 */
%   | | | else return 0.09701229303357028;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23639736484995832;  // std dev = 0.115, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22668400109167847;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23454960161589933;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6178985937113547;  // std dev = 1.057, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.1998748485838752;  // std dev = 0.593, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23125466979887704;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04558437308271178;  // std dev = 3.403, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17880005049993872;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19111521732301995;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44508600007299476;  // std dev = 0.764, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13741639471890835;  // std dev = 0.193, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1894685116412358;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.043593877624972105;  // std dev = 3.052, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1545930923654758;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12758432775762807;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17157231090284547;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.12145988433288249;  // std dev = 0.815, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.21228701269379846;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.02743005048656664;  // std dev = 1.254, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.004005466386385048;  // std dev = 0.924, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03623831608801914;  // std dev = 2.645, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return 0.0589378618917204;  // std dev = 2.974, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1277077660674537;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14413232309823168;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.15002157818568684;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13910725669184523;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03322170048417566;  // std dev = 1.557, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16527492950439968;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.045949401114156414;  // std dev = 2.565, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
%   | | | else return -0.016430432292000238;  // std dev = 3.133, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.137', 'seconds']
Parameter learned model CLL:-0.177183 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.373, 19, 8], 'false,false,true,false': [5.528, 100, 44], 'false,false,false,true': [3.678, 47, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.003, 0, 52], 'false,false,true,false': [0.006, 149, 0], 'false,false,false,true': [3.517, 40, 18], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [2.077, 28, 8], 'false,true,false,true': [0.257, 0, 48], 'false,true,false,false': [0.301, 105, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.639, 42, 20], 'false,false,false,true': [0.894, 4, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.043, 0, 11], 'true,false': [0.022, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.624, 1, 3], 'false,true,false': [4.217, 148, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.465, 36, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.947, 1, 9], 'false,true': [4.225, 144, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.61, 41, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.049, 0, 7], 'true,true,false': [0.065, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.027, 26, 3], 'false,false,true': [0.019, 0, 6], 'false,false,false,true': [4.001, 124, 49], 'false,false,false,false': [3.636, 39, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.115, 0, 12], 'true,true,true,false': [0.024, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.057, 1, 36], 'true,false': [0.593, 99, 0], 'false,true': [0.016, 0, 5], 'false,false,true': [3.403, 86, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.033, 0, 6], 'true,false': [0.025, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.764, 0, 56], 'false,true,false': [0.193, 136, 0], 'false,false,true,true': [0.021, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.052, 42, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.035, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.004, 0, 4], 'false,true,true': [0.815, 19, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.254, 53, 14], 'false,false,true': [0.924, 1, 5], 'false,false,false,true': [2.645, 76, 36], 'false,false,false,false': [2.974, 37, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.001, 0, 5], 'true,true,true,false': [0.017, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.029, 0, 4], 'false,true': [1.557, 65, 17], 'false,false,true': [0.013, 0, 5], 'false,false,false,true': [2.565, 67, 36], 'false,false,false,false': [3.133, 53, 20]}]
{'': [-2.5376526277146434e-16, 0.2170095793419414], 'false': [-1.4802973661668753e-16, 0.21050051644754258], 'false,false': [0.2116206696077432, 0.2076124567474044], 'false,false,true': [0.2085048010973938, 0.21219135802469224], 'false,false,false': [0.2050045913682272, 0.25], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.0, 0.20054396711877542], 'false': [7.401486830834377e-17, 0.19681475353211436], 'false,false': [0.19177415291739144, 0.2105688909530724], 'false,false,false': [0.21331711908450812, 0.18750000000000006], 'false,false,true': [2.0638223082650816e-07, 2.1423234588252534e-07], 'false,true': [0.0, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.062222222222222, 0.1608312418279879], 'false': [0.1425672942523358, 0.21081881825909882], 'false,false': [0.21297149457725817, 0.16000000000000006], 'false,false,true': [0.0, 0.21364000614136294], 'false,false,false': [0.16000000000000006, nan], 'false,true': [0.11981477762641513, 0.14700604192408298], 'false,true,false': [0.0013800331728014796, 0.000864149163375773], 'true': [-1.1102230246251565e-16, 0.0987654320987654]}
{'': [0.00018176455932031717, 0.12281606642141986], 'false': [0.09169402047672368, 0.22055963063529493], 'false,false': [0.0026830785932153434, 0.22430279749818138], 'false,false,false': [0.22234826635507263, 0.24], 'false,true': [0.07790189695872281, 0.08892935595786082], 'false,true,true': [0.0, 0.09732348463059667], 'false,false,true': [0.0, 0.0], 'true': [0.00017174998304920146, 0.00016493450753144825]}
{'': [0.0611027182511374, 0.12002456434245112], 'false': [0.08924084217550987, 0.2129428298281043], 'false,false': [0.0012900737043128607, 0.21748505528882717], 'false,false,false': [0.217245340684137, 0.2222222222222223], 'true': [5.126329638782678e-07, 0.08963010001625066], 'false,false,true': [0.0, 0.0], 'true,true': [5.126329638782678e-07, nan]}
{'': [0.0018235344705187506, 0.1171742115608636], 'false': [0.03637144265626049, 0.12449486066899908], 'false,false': [6.190551601280754e-05, 0.12643139196002975], 'false,false,false': [0.09253906139256933, 0.22409216675549828], 'true': [0.00202919299761079, 0.0005378460860477977], 'true,true': [0.00034101060857809936, 0.0010704941434866722], 'true,false': [2.8993032337443214e-07, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1331416467881325, 0.09251104018768036], 'true': [0.0518624793771157, 0.00354645220608809], 'false': [5.409763023201952e-05, 0.09494303634642257], 'false,false': [0.09494303634642257, nan], 'true,true': [0.0010015750426480127, 0.03318291334965901], 'true,true,false': [0.0, 0.030212473852421994], 'true,true,true': [0.001107275869062831, 0.0002864991394443961]}
{'': [0.00015762591987570192, 0.09158627526597542], 'false': [0.07333660868942408, 0.1461510587181678], 'false,false': [0.00021978865501215417, 0.15019353751624262], 'false,false,false': [0.15019353751624262, nan], 'false,true': [0.010431825787274005, 0.0002734414710497206], 'false,true,true': [nan, 0.0104318257872741], 'false,false,true': [0.00021978865501215417, nan], 'true': [0.00017768555878846606, 7.75826190281409e-05]}
{'': [0.00021327047974270145, 0.07448324383603949], 'false': [0.028155774019585106, 0.09558392126342942], 'false,false': [0.14237361016966876, 0.09384408390848188], 'false,false,false': [0.06245686254338893, 0.15517574032688847], 'false,true': [0.033230010008514256, 0.024393612959112753], 'false,true,false': [0.0, 0.02345614948462904], 'true': [0.0001336189500318299, 0.00031361105940386214], 'true,false': [0.0, 5.0252920180474114e-06]}
{'': [0.0001470116718412478, 0.07328248935240532], 'false': [0.02955030878532511, 0.0920708612784899], 'false,false': [3.23131964647394e-05, 0.09410319650452009], 'false,false,false': [0.06389765996549071, 0.13444470534889089], 'true': [0.00012072010845871062, 0.00020985662887181705], 'true,true': [9.870589445871297e-05, 0.0], 'true,true,true': [2.1456424986465715e-07, 9.425431543767099e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.627
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.034619523334806335;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.12229987849573878;  // std dev = 3.210, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.1874902524647813;  // std dev = 6.073, 167.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8361104938332442;  // std dev = 0.038, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16000074417001778;  // std dev = 0.147, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.040389696886375934;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.19940504233049222;  // std dev = 3.192, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41250929388914165;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11992440078754081;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.09309442760657251;  // std dev = 1.994, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6774696608901697;  // std dev = 0.261, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1417959729649999;  // std dev = 0.070, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14786104969850464;  // std dev = 3.594, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else return 0.14764825769894593;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4325548053752744;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3881507797686613;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6076327587996441;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.022724009750944595;  // std dev = 2.328, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | | | else return 0.08114214567699388;  // std dev = 3.372, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5186205353204083;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.3076345480202213;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0826808545946715;  // std dev = 3.462, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.34917070792977767;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2206165851306713;  // std dev = 0.301, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( location(F, H) )
%   | | | then return 0.04261557110917131;  // std dev = 3.621, 149.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=41 */
%   | | | else return -0.040832554495164465;  // std dev = 0.875, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.09424407916993302;  // std dev = 1.376, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.15244271720650907;  // std dev = 1.121, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3557376835657934;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.004174238066322059;  // std dev = 3.296, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | | else return 0.22694675080086338;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2998159326733504;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2777141366551252;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.103731274480428;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.12231889390809463;  // std dev = 0.671, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.1191678324225606;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.051546898941456525;  // std dev = 0.481, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.27653258219249194;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.029536144964987437;  // std dev = 2.992, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.09237889388391131;  // std dev = 4.399, 120.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23792650950793148;  // std dev = 0.034, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.22051069744128637;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6157981224259793;  // std dev = 1.063, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.1954478981855681;  // std dev = 0.071, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.225616913304654;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6220994807811977;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17796129200505073;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.01388756196664138;  // std dev = 2.150, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.048718729034816034;  // std dev = 2.239, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18029461298053126;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18643078803608437;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.335981402629553;  // std dev = 0.334, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.47171517903626026;  // std dev = 0.182, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.11757644149249356;  // std dev = 0.494, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.15580135296542175;  // std dev = 0.093, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return -0.11024741941431433;  // std dev = 0.732, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.01656354852194914;  // std dev = 2.120, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.11544303557134997;  // std dev = 2.149, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1631486585951719;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1822171815748353;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return -0.021346346562050447;  // std dev = 0.371, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.0765225452778919;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.200471512972976;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.016268901344713173;  // std dev = 1.506, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.16177820079101224;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.03373090038982747;  // std dev = 1.674, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return -0.007919674316290539;  // std dev = 3.725, 140.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=39 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14787960112358509;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.14599757979381092;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G), complex(A, H) )
%   | | then if ( interaction(I, A), enzyme(I, G) )
%   | | | then return -0.054107766946735796;  // std dev = 0.231, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.09590922477464456;  // std dev = 0.740, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.013922792603771323;  // std dev = 0.992, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return -0.05952892145895897;  // std dev = 0.414, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.14102982047047966;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return -0.01303642419853313;  // std dev = 2.311, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | | | else return 0.027051209148119072;  // std dev = 3.218, 113.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.269', 'seconds']
Refined model CLL: -0.173859


******************************************
Best model found
******************************************
Results 

CLL : -0.19252 

AUC ROC : 0.981969 

AUC PR : 0.192463 

Precision : 0.135338 

Recall : 0.909747 

F1 : 0.235624 

Total Learning Time : 7.627 

Total Inference Time : 7.3399481773376465 

Total revision time: 26.653749067306517
Best scored revision CLL: -0.173859


Results 

CLL : -0.19252 

AUC ROC : 0.981969 

AUC PR : 0.192463 

Precision : 0.135338 

Recall : 0.909747 

F1 : 0.235624 

Total Learning Time : 26.727778036117552 

Total Inference Time : 7.3399481773376465 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.483
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06782635445435108;  // std dev = 3.205, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | | else return 0.1367203636709404;  // std dev = 5.304, 140.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6219687014732397;  // std dev = 0.970, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8059772954708118;  // std dev = 1.385, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15595022027009375;  // std dev = 0.053, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0678328738125822;  // std dev = 2.904, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.337786654782979;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.570373070184618;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4352669004786914;  // std dev = 0.858, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.02305312382080943;  // std dev = 2.853, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6707398532620428;  // std dev = 0.999, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.13952630972497584;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6651757687203743;  // std dev = 0.194, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12571658067799493;  // std dev = 2.436, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.19289631467782384;  // std dev = 1.363, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4538259098191994;  // std dev = 0.219, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5803778099186067;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4508170106367676;  // std dev = 0.995, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.03776052889657249;  // std dev = 4.340, 209.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.42121245737396174;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5551894812004663;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.12454348471526251;  // std dev = 2.704, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.7523468163954892;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3119938119421698;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.39896543247448607;  // std dev = 0.123, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.04492845866558713;  // std dev = 4.584, 208.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32322054199479855;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09629774025875244;  // std dev = 0.674, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.14002588029699545;  // std dev = 2.374, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.0164041981498531;  // std dev = 1.543, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.24737866076126544;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4062238883588336;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2568833165637876;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.030286506321244484;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0665003565000713;  // std dev = 1.296, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1610911575185011;  // std dev = 0.880, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05266788850307773;  // std dev = 4.132, 163.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=46 */
%   | | | else return 0.050665367921707775;  // std dev = 3.049, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23773595745749218;  // std dev = 0.182, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.29803217337015225;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2558386012237876;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5275744418103349;  // std dev = 1.563, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.17274449584940707;  // std dev = 0.804, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.06812331079922382;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08582906860977768;  // std dev = 3.287, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16813124917643008;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.126829071339978;  // std dev = 0.884, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4175276494180663;  // std dev = 1.847, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.13602649746279402;  // std dev = 0.271, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.24088560329934292;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06487991280306457;  // std dev = 2.424, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14895152078546214;  // std dev = 0.042, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.20383927997822304;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19867085225943845;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09003701262212992;  // std dev = 0.306, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2769946200057623;  // std dev = 0.187, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.007425003195813792;  // std dev = 1.437, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2752120783835795;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03449491879893649;  // std dev = 2.840, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return 0.013042205724276218;  // std dev = 2.495, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12830688150137548;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1420805529459257;  // std dev = 0.033, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12854372297084782;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1658367398762043;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.010860503892831275;  // std dev = 0.610, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.0333284619511137;  // std dev = 1.844, 117.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2238541677370021;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03650840398714644;  // std dev = 2.770, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | | else return -0.012979445849692855;  // std dev = 2.509, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.188', 'seconds']
Parameter learned model CLL:-0.1799 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.095, 2, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.205, 49, 13], 'false,false,true,false': [5.304, 101, 39], 'false,false,false,true': [2.449, 18, 9], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.97, 1, 7], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.385, 2, 52], 'false,false,true,false': [0.053, 147, 0], 'false,false,false,true': [2.904, 36, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.111, 0, 11], 'true,false': [0.858, 1, 4], 'false,true,true': [2.853, 60, 14], 'false,true,false,true': [0.999, 1, 42], 'false,true,false,false': [0.0, 95, 0], 'false,false,true,true': [0.194, 0, 3], 'false,false,true,false': [2.436, 20, 9], 'false,false,false,true': [1.363, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.219, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.995, 1, 6], 'false,true,false': [4.34, 160, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.704, 23, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.02, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.123, 0, 6], 'false,true': [4.584, 152, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.674, 1, 2], 'false,false,false,true': [2.374, 16, 9], 'false,false,false,false': [1.543, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.002, 0, 9], 'true,true,false': [0.022, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.782, 1, 2], 'false,true': [1.296, 35, 5], 'false,false,true': [0.88, 1, 5], 'false,false,false,true': [4.132, 117, 46], 'false,false,false,false': [3.049, 32, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.182, 0, 13], 'true,true,true,false': [0.124, 0, 3], 'true,true,false,true': [0.028, 0, 3], 'true,true,false,false': [1.563, 3, 33], 'true,false': [0.804, 113, 0], 'false,true': [0.858, 1, 3], 'false,false,true': [3.287, 63, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [0.884, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.847, 3, 56], 'false,true,false': [0.271, 139, 0], 'false,false,true,true': [0.109, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.424, 21, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.042, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.086, 0, 5], 'false,true,true': [0.306, 22, 1], 'false,true,false,true': [0.187, 0, 6], 'false,true,false,false': [1.437, 43, 17], 'false,false,true': [0.022, 0, 3], 'false,false,false,true': [2.84, 68, 31], 'false,false,false,false': [2.495, 26, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.033, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.01, 0, 2], 'true,false': [0.61, 1, 3], 'false,true': [1.844, 93, 24], 'false,false,true': [0.019, 0, 3], 'false,false,false,true': [2.77, 65, 31], 'false,false,false,false': [2.509, 32, 12]}]
{'': [0.10380622837370206, 0.20531760195650783], 'false': [-2.5376526277146434e-16, 0.19607499868699904], 'false,false': [0.19115772963435043, 0.2191380569758943], 'false,false,false': [0.2222222222222223, 0.20999999999999988], 'false,false,true': [0.1657127991675333, 0.20096938775510262], 'true': [-1.4802973661668753e-16, 0.23999999999999994], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.061131195754811296, 0.195129153844323], 'false': [0.10937500000000006, 0.19022561064002916], 'false,false': [0.19136074510013934, 0.18512043416816176], 'false,false,true': [0.0355201772991253, 1.9019727676227602e-05], 'false,false,false': [0.17938510999344182, 0.24999999999999997], 'false,true': [0.10937500000000006, nan], 'true': [1.1102230246251565e-16, 0.1175088072015994]}
{'': [0.05068553239220974, 0.1504113937054587], 'false': [0.1366000544185309, 0.21552494147926327], 'false,false': [0.21132894029439242, 0.23208835383830512], 'false,false,false': [0.23208835383830512, nan], 'false,false,true': [0.01254345729561098, 0.20461018556796162], 'false,true': [0.10996625228749649, 0.14806119534282736], 'false,true,false': [0.023213216703242705, -8.180590707764311e-17], 'true': [0.0011279362446339001, 0.14716284091570975]}
{'': [0.003211540689272881, 0.11639643242575541], 'false': [0.09799234386528978, 0.21035129558291776], 'false,false': [0.003988853980757286, 0.21978306493924324], 'false,false,false': [0.21498621492389414, 0.0], 'false,true': [0.12563777620394276, 0.09014126364206258], 'false,true,true': [0.0, 0.14148777985854458], 'false,false,true': [0.0, 0.0], 'true': [0.003211540689272881, nan]}
{'': [0.0028442632545013927, 0.1207137912208404], 'false': [0.10103785450566125, 0.22298094068693558], 'false,false': [0.12338047133160882, 0.2340224228922056], 'false,false,false': [0.2254546934572495, 0.2379629111632476], 'false,false,true': [0.0, 0.15163380562187756], 'true': [4.447217392410262e-05, 0.002505512208556974], 'true,true': [4.447217392410262e-05, nan]}
{'': [0.050238907677428765, 0.11526778248637268], 'false': [0.04201337422743564, 0.1265707287932899], 'false,false': [0.12908456043292965, 0.12616782536479096], 'false,false,false': [0.10472273787505086, 0.20215489920170368], 'true': [0.005412478110368961, 0.1624198308861961], 'true,false': [0.0, 0.20372324591190435], 'true,true': [3.8140581013232674e-07, 0.00012152208218715876], 'true,false,true': [0.0, nan]}
{'': [0.1048948277334219, 0.11774489197893705], 'false': [0.18404077719406908, 0.11491099481268019], 'false,false': [0.11491099481268019, nan], 'true': [0.06288089693538207, 0.005724640242475419], 'true,true': [0.0035981557837981154, 0.06789342130598196], 'true,true,false': [0.00026644518663338873, 0.06784897441393184], 'true,true,true': [0.00255512304893686, 0.005164011958154117]}
{'': [0.04925968898542994, 0.0949939785057361], 'false': [0.08169549562919867, 0.16596698331010434], 'false,false': [0.003928642791002172, 0.1781162412818576], 'false,false,false': [0.1781162412818576, nan], 'false,true': [0.05780544550870447, 0.0005282532912983856], 'false,true,true': [nan, 0.057805445508704596], 'true': [6.938893903907228e-18, 0.09766644302384289], 'false,false,true': [0.003928642791002172, nan]}
{'': [0.0011698026569297824, 0.0759377236761317], 'false': [0.03196412577279704, 0.10345832050689387], 'false,false': [0.00015795259187902552, 0.10441655352722516], 'false,false,false': [0.08149547693547216, 0.16379942296992167], 'false,true': [0.0040578894044423245, 0.037844595167557844], 'false,true,false': [0.005831710227907729, 0.03443972199724441], 'true': [0.00017425358105324084, 0.001230044326856523], 'true,false': [0.0, 0.0014716010847137862]}
{'': [0.024906999343081, 0.0683967208451699], 'false': [0.029066334794456278, 0.09903399965187887], 'false,false': [0.00011926467330130215, 0.10028993594287637], 'false,false,false': [0.07991903417733741, 0.1430561930876652], 'true': [0.0002763863973379235, 0.09293952885834737], 'true,true': [0.00014183055857289184, 0.0003408599911623132], 'true,true,false': [0.0, 4.770028344240618e-05], 'true,true,true': [0.0, 0.0005573815728145484]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
3;false,false,false;location(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.531
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return 0.10452574669371527;  // std dev = 3.579, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | | else return 0.18682026377084107;  // std dev = 5.617, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7272428531314972;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7350122940520397;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7398727907934263;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7994852423547234;  // std dev = 1.384, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15897914769273883;  // std dev = 0.143, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.5866249677114631;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1393975523434545;  // std dev = 2.508, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5660714572465122;  // std dev = 0.093, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2637906299691349;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.1090161551111113;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.11035130626920098;  // std dev = 2.609, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6421489947361537;  // std dev = 1.447, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1433839242517888;  // std dev = 0.036, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5705855640958207;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return -0.04808547953077634;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.09879895753240009;  // std dev = 2.779, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.34543760780628874;  // std dev = 0.309, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.05000935035910353;  // std dev = 0.669, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.34136796068497455;  // std dev = 1.043, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.02075352682192708;  // std dev = 2.482, 97.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=16 */
%   | | | else return 0.09574955580438049;  // std dev = 3.499, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.408877592222861;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.029617110276425107;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, K), interaction(A, L) )
%   | | | then return 0.050230807864261824;  // std dev = 2.856, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.04818407574917371;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3737506535458357;  // std dev = 0.056, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09703606547982054;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.049851568775961634;  // std dev = 1.262, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( location(A, F) )
%   | | | then return 0.06504056211340972;  // std dev = 4.080, 165.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
%   | | | else return 0.10576894840370783;  // std dev = 0.856, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.31486220451030955;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39631466497877127;  // std dev = 0.115, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.031902347973867914;  // std dev = 1.942, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.2404798821195284;  // std dev = 1.938, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3121964198777274;  // std dev = 0.084, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( enzyme(D, G), phenotype(D, H) )
%   | | | then return -0.20178993242347879;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.03127766763270305;  // std dev = 1.771, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( function(A, I), function(D, I) )
%   | | | then return 0.0027315497875602113;  // std dev = 1.289, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.1697120496598497;  // std dev = 0.862, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K), interaction(A, L) )
%   | | | then return -0.09559775940231537;  // std dev = 0.377, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.048486640594475286;  // std dev = 4.079, 162.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=49 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.12116236245998697;  // std dev = 1.703, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.39084440076124466;  // std dev = 1.054, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4598838021710367;  // std dev = 0.207, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | else return -0.17539474199121716;  // std dev = 0.074, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), phenotype(G, H) )
%   | | | then return 0.43426092240403813;  // std dev = 1.092, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.20032682230189916;  // std dev = 0.687, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.1576657926441576;  // std dev = 0.087, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6248970543204704;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18653147656911398;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.047754209340081163;  // std dev = 1.077, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.15618041377081263;  // std dev = 0.764, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.14226596502536498;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.03104004057477394;  // std dev = 0.813, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.25714465968540223;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.38542145774502495;  // std dev = 0.175, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.13061115581547497;  // std dev = 0.375, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(A, K), complex(I, L) )
%   | | | then return 0.07822999758039616;  // std dev = 1.250, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.09976034618357084;  // std dev = 1.755, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.02839995051043979;  // std dev = 0.703, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08784510140814199;  // std dev = 1.228, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.12939485834348957;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.07472107974648609;  // std dev = 0.289, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.30432058549890445;  // std dev = 0.281, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.11121022617688973;  // std dev = 0.169, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.06560038550886828;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.20191484836930546;  // std dev = 0.506, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.22099960089267653;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.005280461860138748;  // std dev = 2.401, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return 0.06270353573645389;  // std dev = 2.419, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13060788316613517;  // std dev = 0.036, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.18032889062238908;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.014416139273011302;  // std dev = 0.821, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.06420150805772123;  // std dev = 0.579, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.04535186504957323;  // std dev = 1.181, 68.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=12 */
%   | | | else return 0.020232125226243996;  // std dev = 0.470, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.037520440401833305;  // std dev = 0.775, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.11217149089012031;  // std dev = 2.281, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.031223250665073303;  // std dev = 2.188, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '36.004', 'seconds']
Refined model CLL: -0.179023


******************************************
Best model found
******************************************
Results 

CLL : -0.196891 

AUC ROC : 0.985934 

AUC PR : 0.279087 

Precision : 0.155246 

Recall : 0.904594 

F1 : 0.26501 

Total Learning Time : 8.531 

Total Inference Time : 8.882254838943481 

Total revision time: 29.927742780685428
Best scored revision CLL: -0.179023


Results 

CLL : -0.196891 

AUC ROC : 0.985934 

AUC PR : 0.279087 

Precision : 0.155246 

Recall : 0.904594 

F1 : 0.26501 

Total Learning Time : 30.001771749496463 

Total Inference Time : 8.882254838943481 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.936
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1501843333295994;  // std dev = 4.834, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   | | | else return 0.2110901115700993;  // std dev = 4.826, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6972694494457295;  // std dev = 3.074, 80.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=69 */
%   | | | else return -0.1650449081038648;  // std dev = 0.053, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | | else if ( location(A, I) )
%   | | | then return 0.19155063429832564;  // std dev = 1.602, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.44425532563517334;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07611823055684948;  // std dev = 4.374, 129.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6303820318257752;  // std dev = 1.666, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.15179314068956848;  // std dev = 0.295, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11068519615080293;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1283359321832014;  // std dev = 1.306, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43658399550958177;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.3052429710541589;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42806716520892785;  // std dev = 1.963, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else return 0.0495780566414099;  // std dev = 5.016, 215.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5234931185527992;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.11896403036241475;  // std dev = 1.625, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.23855326121800452;  // std dev = 0.974, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12637702232292866;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.051588959096421166;  // std dev = 5.515, 255.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39425734025516157;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1350994267178549;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03633952381088559;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.289695631825868;  // std dev = 0.000203, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.44931322243098437;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.30497696530389284;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.008696437774150339;  // std dev = 2.409, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.297681675131214;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07711628042138938;  // std dev = 4.636, 178.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=55 */
%   | | | else return 0.04853956487303003;  // std dev = 1.884, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2667920182501796;  // std dev = 0.182, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2444037311982441;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.6094220764551599;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5982140724382565;  // std dev = 0.417, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1828397332974612;  // std dev = 0.479, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23941650455245653;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06613238530259272;  // std dev = 3.989, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.09683152470468051;  // std dev = 0.600, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.07378898301964533;  // std dev = 1.216, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2973063455823291;  // std dev = 3.622, 93.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=71 */
%   | | else return -0.1560518394906458;  // std dev = 0.320, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2021211603181403;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.046457252090087345;  // std dev = 1.474, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.20450042566359816;  // std dev = 0.146, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1839274916155893;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.010575387849977434;  // std dev = 1.491, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3798812900921821;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.010295300645921521;  // std dev = 1.726, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.03630916307083831;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.010179380601186139;  // std dev = 3.659, 147.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=40 */
%   | | | else return 0.05259588025248902;  // std dev = 1.358, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.16473974619322287;  // std dev = 0.112, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2363457055235625;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1579308389383778;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.001280289996053113;  // std dev = 2.343, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.15619321136445735;  // std dev = 1.027, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.027937321436981712;  // std dev = 3.586, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | | else return 0.15793081567912204;  // std dev = 1.265, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.384', 'seconds']
Parameter learned model CLL:-0.19363 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.834, 80, 33], 'false,false,true,false': [4.826, 66, 36], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.074, 11, 69], 'false,false,true,false': [0.053, 159, 0], 'false,false,false,true': [1.602, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.374, 95, 34], 'false,true,false,true': [1.666, 3, 37], 'false,true,false,false': [0.295, 70, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.306, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.039, 0, 10], 'true,false': [0.866, 3, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.963, 5, 14], 'false,true,false': [5.016, 158, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.625, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.974, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.878, 1, 4], 'false,true': [5.515, 184, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.000203, 0, 7], 'true,true,false': [0.097, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.409, 43, 12], 'false,false,true': [0.019, 0, 3], 'false,false,false,true': [4.636, 123, 55], 'false,false,false,false': [1.884, 13, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.182, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.417, 0, 33], 'true,false': [0.479, 83, 0], 'false,true': [0.017, 0, 3], 'false,false,true': [3.989, 84, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.6, 1, 6], 'true,false': [1.216, 2, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.622, 22, 71], 'false,true,false': [0.32, 133, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.474, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.146, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.022, 0, 3], 'false,true,true': [1.491, 37, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.726, 42, 17], 'false,false,true': [0.855, 1, 3], 'false,false,false,true': [3.659, 107, 40], 'false,false,false,false': [1.358, 9, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.112, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.019, 0, 3], 'false,true': [2.343, 77, 29], 'false,false,true': [1.027, 2, 3], 'false,false,false,true': [3.586, 91, 40], 'false,false,false,false': [1.265, 4, 4]}]
{'': [-1.6148698540002277e-16, 0.22027348394768143], 'false': [1.4802973661668753e-16, 0.2171583303140686], 'false,false': [0.21793401838831816, 0.20408163265306106], 'false,false,true': [0.20675072441068348, 0.22837370242214663], 'false,false,false': [0.25, 0.16000000000000003], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [2.4223047810003414e-16, 0.20823400893239388], 'false': [0.0, 0.20656464770619062], 'false,false': [0.20513370350763804, 0.23324049940805633], 'false,false,false': [0.23324049940805633, nan], 'false,false,true': [0.11811506420144377, 1.75700324751895e-05], 'true': [7.401486830834377e-17, 0.0], 'false,true': [0.0, nan]}
{'': [0.0763888888888888, 0.1606273024041307], 'false': [0.15796885654350523, 0.2026402894117405], 'false,false': [0.22222222222222218, 0.18946104814509188], 'false,false,true': [nan, 0.22222222222222218], 'false,false,false': [0.18946104814509188, nan], 'false,true': [0.14829362278260838, 0.16759127962559167], 'false,true,false': [0.06937505998731068, 0.0012428335230079833], 'true': [0.0987654320987655, 0.0]}
{'': [0.16599036106220844, 0.13912651842436455], 'true': [0.00015586310961721584, 0.18750000000000003], 'false': [0.1346661017644427, 0.21480216007511335], 'false,false': [0.0, 0.2201143567589002], 'false,false,false': [0.2201143567589002, nan], 'false,true': [0.20281912074368044, 0.11701154135797336], 'false,true,true': [nan, 0.2028191207436806], 'false,false,true': [nan, 0.0]}
{'': [0.1352483489592217, 0.12368164503888233], 'true': [0.1185256772878194, 0.15426092605029912], 'false': [0.11928519523964537, 0.20178977634825873], 'false,false': [0.0, 0.21000083276264941], 'false,false,false': [0.23999999999999994, 0.18750000000000006], 'true,true': [0.1185256772878194, nan], 'false,false,true': [nan, 0.0]}
{'': [0.00581061164538732, 0.12288765911197227], 'false': [0.10555750961627333, 0.12604312185573427], 'false,false': [0.00012162229340428876, 0.12721262059300087], 'false,false,false': [0.12076152059693421, 0.18691137407816028], 'true': [0.00629503488765133, 0.0], 'true,true': [5.883969232480167e-09, 0.003148993234835159], 'true,false': [nan, 0.0]}
{'': [0.12340030485013001, 0.12597306056576874], 'false': [9.265487849343297e-05, 0.12830924592141577], 'false,false': [0.12830924592141577, nan], 'true': [0.052465325841136036, 0.0027654339778018715], 'true,true': [0.003041683382507654, 0.04675662151800159], 'true,true,false': [0.0, 0.0052798103627838796], 'true,true,true': [0.0033002848664748117, 0.0]}
{'': [0.13863035273846186, 0.1088626074999903], 'true': [0.05148365334393897, 0.21122137330493138], 'false': [0.1082857977564303, 0.11155434387640666], 'false,false': [0.0, 0.11433606377728989], 'false,false,false': [0.11433606377728989, nan], 'false,true': [0.14109154866711326, 0.0007684341614269302], 'false,true,true': [nan, 0.14109154866711343], 'false,false,true': [0.0, nan]}
{'': [0.0020780583871435787, 0.07850709365183228], 'false': [0.0495675900944208, 0.09753961760278232], 'false,false': [0.18292201226961738, 0.09534424084179613], 'false,false,false': [0.09108316224828328, 0.14187422873818156], 'false,true': [0.04628680373141191, 0.051867487852922924], 'false,true,false': [0.0, 0.050470034423282274], 'true': [0.002682175192964348, 0.00015926524531093464], 'true,false': [nan, 0.00015926524531093464]}
{'': [0.0016342062630194665, 0.08543236031632621], 'false': [0.05179844755199388, 0.10987034594013456], 'false,false': [0.21079760907626133, 0.1049650346562343], 'false,false,false': [0.09818213654422306, 0.20010924721572865], 'true': [0.0021323170849093936, 0.000125280456848569], 'true,true': [0.0021323170849093936, nan], 'true,true,true': [0.0017960071348727402, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 12.502
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, G), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08037115732173457;  // std dev = 2.789, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.274815601766179;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.18051735615214295;  // std dev = 5.762, 152.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7148825615300701;  // std dev = 2.812, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.1665061899188836;  // std dev = 0.098, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.1480810227596001;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.08472376771444956;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5655379819307462;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3460526174841312;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.019807650785348588;  // std dev = 1.936, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.10196013920977957;  // std dev = 3.744, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5701472342388785;  // std dev = 2.272, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return -0.1443420826396747;  // std dev = 0.049, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.7585190663182991;  // std dev = 0.235, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17305637417589814;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.07800415029679852;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.36265707709221956;  // std dev = 0.272, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.016631481944102078;  // std dev = 0.668, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( location(A, G), location(F, G) )
%   | | | then return -0.026890527626114283;  // std dev = 1.849, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.03899777997251089;  // std dev = 1.149, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.13604428601807558;  // std dev = 2.483, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.0801156047532295;  // std dev = 4.505, 159.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.36908564344411743;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2811014503343766;  // std dev = 1.114, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0596704903269415;  // std dev = 0.722, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then return 0.3434142129292811;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.41750477903657257;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, I), phenotype(G, J) )
%   | | | then return -0.016504618978754035;  // std dev = 1.692, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | | else return 0.08196087444873879;  // std dev = 1.434, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.18510755179288324;  // std dev = 2.135, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.10117063993802278;  // std dev = 4.269, 137.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=47 */
%   | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | then return 0.2879775210950478;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return -0.07782686227928196;  // std dev = 0.758, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.08219414548201909;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.270897747756082;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.19522996323136654;  // std dev = 0.712, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.23268628949871895;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.20722767414054263;  // std dev = 0.167, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.23752765411356028;  // std dev = 1.410, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.06339082289753827;  // std dev = 1.684, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3082649469269348;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.0581440378674466;  // std dev = 3.809, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   | | | else return 0.12569651037656085;  // std dev = 2.958, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2607409062642238;  // std dev = 0.227, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1937397421792375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5289795762055931;  // std dev = 1.284, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.19142292410178535;  // std dev = 0.070, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2467777746240759;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(A, J), phenotype(I, K) )
%   | | | then return 0.058790314708998634;  // std dev = 2.136, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.01387906467085444;  // std dev = 3.368, 103.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=25 */
%   | | else return 0.1753878767290918;  // std dev = 0.826, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.19084368056447717;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2012606797019306;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.34003863745943236;  // std dev = 1.491, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.45239370794598754;  // std dev = 1.939, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | else if ( location(A, I) )
%   | | | then return -0.16617911659102821;  // std dev = 0.352, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | | else return -0.12112986283481511;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.16525581990757798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.0707370372386371;  // std dev = 0.599, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.24130209228671823;  // std dev = 0.774, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17572515722139165;  // std dev = 0.048, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.06245261428019671;  // std dev = 1.216, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return 0.0211634105086778;  // std dev = 1.136, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.3627897954936522;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.017943967175747623;  // std dev = 1.654, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.29824037717077884;  // std dev = 1.251, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.25577450598204854;  // std dev = 0.673, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return -0.05542717559002432;  // std dev = 1.952, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.05188118627975845;  // std dev = 2.596, 79.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=30 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15068658403953455;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1556633067410691;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( location(G, F) )
%   | | | then return -0.08057892093678226;  // std dev = 1.581, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | | else return 0.05727687624269029;  // std dev = 0.540, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(E, H), location(E, F) )
%   | | | then return -0.004648396615287794;  // std dev = 1.785, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.15751072141341693;  // std dev = 0.901, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1563018764546489;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.005977884205919555;  // std dev = 2.044, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.036441429092911815;  // std dev = 2.590, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.980', 'seconds']
Refined model CLL: -0.201273


******************************************
Best model found
******************************************
Results 

CLL : -0.201719 

AUC ROC : 0.987258 

AUC PR : 0.315943 

Precision : 0.171518 

Recall : 0.77305 

F1 : 0.280747 

Total Learning Time : 12.502 

Total Inference Time : 15.785908937454224 

Total revision time: 49.06625202941895
Best scored revision CLL: -0.19363


Results 

CLL : -0.201719 

AUC ROC : 0.987258 

AUC PR : 0.315943 

Precision : 0.171518 

Recall : 0.77305 

F1 : 0.280747 

Total Learning Time : 54.42130593109131 

Total Inference Time : 15.785908937454224 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.089
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0894922186816008;  // std dev = 4.881, 134.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=31 */
%   | | | else return 0.1728342497848262;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7473839334745777;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5667620061760993;  // std dev = 1.292, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7241572916128824;  // std dev = 2.970, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return -0.15903689817386202;  // std dev = 0.077, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | | else if ( location(A, I) )
%   | | | then return 0.051173749741241795;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.586866843321895;  // std dev = 0.015, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4789560664823041;  // std dev = 0.921, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07393672582042983;  // std dev = 4.352, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5945108087349218;  // std dev = 2.302, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.1435389211871811;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8215729575093732;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.008908677193155499;  // std dev = 1.703, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.30939096438859853;  // std dev = 1.565, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else return 0.4472525494933173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5014507996377008;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.36706738516949594;  // std dev = 2.486, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | | else return 0.022189304316889466;  // std dev = 5.179, 254.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5531799977463097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.049141256516721465;  // std dev = 1.687, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2387942553958799;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4020869064151643;  // std dev = 0.105, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.09497612098253803;  // std dev = 5.556, 253.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4158939181677648;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07886103130983509;  // std dev = 1.663, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3166069415863382;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.40881666301017705;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31961399094366316;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.003314045146291608;  // std dev = 2.960, 82.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.10527887755999402;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.012867188902287302;  // std dev = 4.780, 220.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=51 */
%   | | | else return 0.15060830696365607;  // std dev = 2.008, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2780364965320761;  // std dev = 0.197, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2544229772355614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.05910174044256805;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.43984950223672203;  // std dev = 2.119, 40.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=33 */
%   | else return -0.17029773835043618;  // std dev = 0.496, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.262488555938624;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04871843529043453;  // std dev = 4.521, 157.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.07868008803748529;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.08243357493897133;  // std dev = 1.247, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4113489778856794;  // std dev = 2.908, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else return -0.1446042547487737;  // std dev = 0.242, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20922830455122388;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.17894730056516733;  // std dev = 1.261, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19192758913063654;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.3441034916114291;  // std dev = 0.907, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.20285851797324797;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -1.4109519003539475E-4;  // std dev = 1.709, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.16873890657648347;  // std dev = 0.926, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.042780483072648284;  // std dev = 1.382, 69.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.034037662356005007;  // std dev = 0.917, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01769377089151611;  // std dev = 3.853, 166.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=47 */
%   | | | else return 0.10778710118959563;  // std dev = 1.293, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.15936251969221674;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.046998464134702926;  // std dev = 0.831, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.4982181604330863;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06276484468466702;  // std dev = 0.437, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.019054358952688536;  // std dev = 2.614, 129.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19597636954999406;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06375934450669966;  // std dev = 3.622, 130.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=47 */
%   | | | else return -0.08683893626446997;  // std dev = 1.542, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.842', 'seconds']
Parameter learned model CLL:-0.199141 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.881, 103, 31], 'false,false,true,false': [5.553, 98, 45], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.292, 2, 10], 'false,true,true': [0.074, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.97, 10, 76], 'false,false,true,false': [0.077, 191, 0], 'false,false,false,true': [1.764, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.015, 0, 11], 'true,false': [0.921, 1, 6], 'false,true,true': [4.352, 98, 34], 'false,true,false,true': [2.302, 6, 48], 'false,true,false,false': [0.0, 77, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.703, 18, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.565, 3, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.038, 0, 3], 'false,true,true,false': [2.486, 11, 21], 'false,true,false': [5.179, 196, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.687, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.935, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.105, 0, 10], 'false,true': [5.556, 171, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.663, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.034, 0, 9], 'true,true,false': [0.168, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.96, 63, 19], 'false,false,true': [1.259, 2, 8], 'false,false,false,true': [4.78, 169, 51], 'false,false,false,false': [2.008, 15, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.197, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.886, 1, 3], 'true,true,false,false': [2.119, 7, 33], 'true,false': [0.496, 91, 0], 'false,true': [0.034, 0, 5], 'false,false,true': [4.521, 110, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.901, 1, 7], 'true,false': [1.247, 2, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.908, 10, 82], 'false,true,false': [0.242, 195, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.261, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.067, 0, 9], 'true,false,true': [0.907, 3, 2], 'true,false,false': [0.064, 0, 5], 'false,true,true': [1.709, 39, 13], 'false,true,false,true': [0.926, 2, 8], 'false,true,false,false': [1.382, 58, 11], 'false,false,true': [0.917, 1, 5], 'false,false,false,true': [3.853, 119, 47], 'false,false,false,false': [1.293, 6, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.831, 1, 6], 'true,true,false,true': [0.012, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.437, 1, 3], 'false,true': [2.614, 97, 32], 'false,false,true': [0.027, 0, 5], 'false,false,false,true': [3.622, 83, 47], 'false,false,false,false': [1.542, 15, 4]}]
{'': [0.09418282548476423, 0.20753058802045343], 'false': [0.10937499999999978, 0.20061728395061834], 'false,false': [0.19909030483910944, 0.2314049586776858], 'false,false,false': [0.2314049586776858, nan], 'false,false,true': [0.1778235687235476, 0.21565846740672026], 'false,true': [0.22222222222222224, 0.0], 'true': [0.1224489795918365, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09543354315532668, 0.20181562230106992], 'false': [0.0007884305269265646, 0.1975034383743271], 'false,false': [0.198856269842927, 0.17283950617283939], 'false,false,true': [0.10257783464475481, 3.07766411570945e-05], 'false,false,false': [0.17283950617283939, nan], 'true': [-6.344131569286608e-17, 0.1390836381881906], 'false,true': [0.0007884305269265646, nan]}
{'': [0.049913929664455146, 0.15999125607170978], 'false': [0.15979781006471055, 0.15476263360159515], 'false,true': [0.1435121571856444, 0.17242994420420366], 'false,true,false': [0.09812486674152891, -5.190653102143589e-17], 'false,false': [0.15476263360159515, nan], 'false,false,true': [0.0, 0.131810353305383], 'true': [1.9364014765190582e-05, 0.12120344827765384]}
{'': [0.12342198133869493, 0.13046729519787134], 'false': [0.12790622144690708, 0.17145586134634722], 'false,false': [0.0, 0.1674273306568342], 'false,false,false': [0.1674273306568342, nan], 'false,true': [0.17809534947232075, 0.1056075238643261], 'false,true,true': [0.00048588842684449407, 0.19319833055240854], 'true': [0.12896758426098384, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.05581069968068703, 0.12590317343017216], 'false': [0.12201852086382338, 0.19138620253289285], 'false,false': [0.0, 0.19748390111603728], 'false,false,false': [0.19748390111603728, nan], 'true': [0.10937499999999997, 0.0011083750355006749], 'true,true': [0.10937499999999997, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0038254156820137775, 0.11210974185522098], 'false': [0.10686936411667891, 0.1135249140309729], 'false,false': [0.15849975333471744, 0.11144843231263503], 'false,false,false': [0.10385227111377697, 0.16125801644195303], 'true': [0.004008715879459857, 0.0], 'true,true': [0.00013002862821165362, 0.004725167121294967], 'true,false': [nan, 0.0]}
{'': [0.1117516146792395, 0.12751964626295922], 'false': [0.00022511513059011445, 0.130163190479319], 'false,false': [0.130163190479319, nan], 'true': [0.10061629551675481, 0.002701736491406309], 'true,true': [0.002468807962051456, 0.13189099415429612], 'true,true,false': [0.1961469960694632, 0.11228640686175588], 'true,true,true': [0.002598545266173587, 0.0]}
{'': [0.11831513077637812, 0.09979307516644473], 'true': [0.10138782254431548, 0.1295943674655187], 'false': [0.09698824180433757, 0.15902086117740713], 'false,false': [0.0, 0.17659815183243419], 'false,false,false': [0.17659815183243419, nan], 'false,true': [0.09192051573245442, 0.00029997834028015893], 'false,true,true': [nan, 0.09192051573245441], 'false,false,true': [0.0, nan]}
{'': [0.10027720756647705, 0.07540939492086458], 'true': [0.0004975536473062419, 0.15742663917631672], 'true,false': [0.1644563991630921, 0.0008131592250871622], 'false': [0.04644337753635634, 0.09580578298958911], 'false,false': [0.1401631537389104, 0.09428944606444935], 'false,false,false': [0.08944051679257013, 0.1671260460955024], 'false,true': [0.056146557964615394, 0.039956565968303916], 'false,true,false': [0.08571422679587756, 0.027661672541393897]}
{'': [0.07817732721048236, 0.08179138996512557], 'false': [0.05298880254696087, 0.10377772876921806], 'false,false': [0.00014868858555163177, 0.10651078903514735], 'false,false,false': [0.10089229480493124, 0.12516533621859585], 'true': [0.08553593581081526, 0.0477763320937818], 'true,true': [0.05253502018295098, 7.204854215364653e-05], 'true,true,true': [0.0, 0.09875719987523597], 'true,true,false': [7.204854215364653e-05, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 13.706
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, G) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.21814893509951236;  // std dev = 3.394, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.1277141524908172;  // std dev = 6.730, 230.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=62 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7283527732630032;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7272428531314972;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6655385093890104;  // std dev = 3.635, 92.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   | | | else return -0.15967714274674508;  // std dev = 0.109, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.16279984750994822;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5044090687670678;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, A), complex(A, E) )
%   | | then return 0.23355388727320728;  // std dev = 1.109, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5647905720405905;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4571968300988477;  // std dev = 0.338, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1180508916875324;  // std dev = 0.105, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.09338411167059063;  // std dev = 4.292, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5802970830962229;  // std dev = 2.607, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.13944945495512054;  // std dev = 0.037, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then return 0.5728795571542357;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.22719039674244063;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4645276064456433;  // std dev = 0.044, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.4133381998904745;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.49973472409055075;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4508613330227992;  // std dev = 2.048, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.1379605832810518;  // std dev = 0.235, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0.09132242174962402;  // std dev = 4.984, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.41326071585096713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.03640032091576947;  // std dev = 1.091, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.10011325733689036;  // std dev = 0.983, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3599500507094317;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E) )
%   | | then return 0.3774218615621174;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3137563966947807;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10673180022309707;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.11731775778310063;  // std dev = 4.419, 142.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=52 */
%   | | | else return 0.05817334622320043;  // std dev = 3.445, 100.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=30 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3178299186270216;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.040682278312584155;  // std dev = 1.296, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.08050677639597478;  // std dev = 0.797, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18006183663649017;  // std dev = 0.311, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.09372797594261591;  // std dev = 1.186, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.42168661436062743;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.2506727369608099;  // std dev = 0.713, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, G), location(A, H) )
%   | then return -0.009660013496561221;  // std dev = 0.323, 147.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=34 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5716736887182126;  // std dev = 0.132, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.21948820033098598;  // std dev = 0.317, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( location(A, L) )
%   | | | then return 0.038903532362227176;  // std dev = 4.076, 137.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
%   | | | else return 0.0879774613810792;  // std dev = 1.443, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.29484854849779896;  // std dev = 0.072, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( enzyme(A, E), interaction(F, A) )
%   | | | then return 0.23934755313533748;  // std dev = 1.391, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.5225756037657093;  // std dev = 0.934, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.17878066666530923;  // std dev = 0.104, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24141164531449094;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), interaction(H, J) )
%   | | | then return 0.09281620031507196;  // std dev = 3.480, 94.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=34 */
%   | | | else return -0.05608500492004194;  // std dev = 1.510, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.037720837960039354;  // std dev = 1.052, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.10923482291371284;  // std dev = 1.318, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.025702073711217577;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.20595763468831244;  // std dev = 0.015, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), location(A, I) )
%   | | | then return 0.2525610933426667;  // std dev = 2.195, 42.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=33 */
%   | | | else return 0.41657376578867567;  // std dev = 2.442, 56.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=49 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.1272471348299334;  // std dev = 0.344, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | | else return -0.16709518456335526;  // std dev = 0.218, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.24494288204017067;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.1120527907620018;  // std dev = 1.022, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.15050323530831636;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14278944210648492;  // std dev = 0.195, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G), phenotype(F, E) )
%   | | | then return 0.1305416516611872;  // std dev = 0.661, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.35774162238705925;  // std dev = 0.544, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( location(A, H), interaction(A, I) )
%   | | | then return -0.08192397781368393;  // std dev = 1.737, 93.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=11 */
%   | | | else return 0.020580727943215613;  // std dev = 3.357, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | else if ( complex(A, J), location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.2728018606138986;  // std dev = 0.735, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.13498265341222113;  // std dev = 0.063, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.16253937984632028;  // std dev = 0.891, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07013277214590148;  // std dev = 1.150, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.16054385658838657;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.05247221045942146;  // std dev = 0.960, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.33214509906896655;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.21676909467186892;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( complex(A, H), location(A, I) )
%   | | then return -0.057599091351085555;  // std dev = 0.204, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | | else return 0.022248437107252033;  // std dev = 0.231, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1419985364314101;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.0652359284277932;  // std dev = 2.741, 68.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=29 */
%   | | | else return -0.002785791212859069;  // std dev = 2.557, 80.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.034', 'seconds']
Refined model CLL: -0.199229


******************************************
Best model found
******************************************
Results 

CLL : -0.178815 

AUC ROC : 0.988614 

AUC PR : 0.320238 

Precision : 0.246324 

Recall : 0.758491 

F1 : 0.371878 

Total Learning Time : 13.706 

Total Inference Time : 20.162679195404053 

Total revision time: 57.16088001251221
Best scored revision CLL: -0.199141


Results 

CLL : -0.178815 

AUC ROC : 0.988614 

AUC PR : 0.320238 

Precision : 0.246324 

Recall : 0.758491 

F1 : 0.371878 

Total Learning Time : 62.51593391418457 

Total Inference Time : 20.162679195404053 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.501
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1005731775237548;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.17020567268816375;  // std dev = 5.502, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10173867868925592;  // std dev = 3.791, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7397104467804845;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.837575061436712;  // std dev = 0.024, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16228359774736653;  // std dev = 0.042, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1851420270561319;  // std dev = 3.448, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.2453075170381945;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41619486429673985;  // std dev = 0.936, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5720179264406184;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05693646305786434;  // std dev = 2.081, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6570471439453365;  // std dev = 1.011, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.1428181527004182;  // std dev = 1.19e-07, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1978374588959243;  // std dev = 3.473, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.32588061403634205;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4362711117029574;  // std dev = 0.064, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4614055335773961;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3930118531694633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5861694228103347;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06522600104544556;  // std dev = 4.141, 181.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5061347405789682;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07778713191311497;  // std dev = 3.575, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.2781842683588489;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3454474857976231;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3327543556105985;  // std dev = 0.065, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.041316758032573855;  // std dev = 4.284, 204.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3818756669886908;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.09650549224589414;  // std dev = 3.582, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.09339931615491921;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26145049771550966;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3497949249703393;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2648507138809558;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.22983133060929833;  // std dev = 0.745, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.08591387614383661;  // std dev = 0.962, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.27274910457770246;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.049699921475247016;  // std dev = 3.992, 173.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=49 */
%   | | | else return 0.08105414438578985;  // std dev = 3.662, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.234750949927131;  // std dev = 0.118, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.27822180311483896;  // std dev = 0.097, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.19597364222316727;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6347924014108273;  // std dev = 0.738, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.1991783440837548;  // std dev = 0.598, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2274031607631434;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05069960288426925;  // std dev = 3.369, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17975712359097304;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07133314364276806;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41062213188507096;  // std dev = 1.514, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14451197867776794;  // std dev = 0.394, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22697888306714337;  // std dev = 0.084, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05527081711422419;  // std dev = 2.983, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1569864475756463;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13421819659563028;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18757101206334154;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07644613126514686;  // std dev = 0.412, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18972243655435583;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.017483264315983023;  // std dev = 1.343, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17922409206907836;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03212847817644148;  // std dev = 2.742, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | | else return 0.029099519455666474;  // std dev = 3.018, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14229646869016097;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1618317223047672;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12437782741302716;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13822165144654358;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.005653489053192584;  // std dev = 1.325, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.012779220409230426;  // std dev = 0.916, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04221947324343494;  // std dev = 2.642, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
%   | | | else return 0.03064248684712347;  // std dev = 2.995, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.479', 'seconds']
Parameter learned model CLL:-0.181385 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.462, 25, 8], 'false,false,true,false': [5.502, 97, 44], 'false,false,false,true': [3.791, 59, 19], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.044, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.024, 0, 52], 'false,false,true,false': [0.042, 142, 0], 'false,false,false,true': [3.448, 35, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.936, 1, 6], 'true,false': [0.054, 0, 8], 'false,true,true': [2.081, 27, 8], 'false,true,false,true': [1.011, 1, 48], 'false,true,false,false': [1.19e-07, 114, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.473, 32, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.064, 0, 11], 'true,false': [0.033, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.128, 0, 3], 'false,true,false': [4.141, 129, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.575, 44, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.009, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.065, 0, 9], 'false,true': [4.284, 148, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.582, 39, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.038, 0, 7], 'true,true,false': [0.063, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.745, 1, 1], 'false,true': [0.962, 26, 3], 'false,false,true': [0.042, 0, 6], 'false,false,false,true': [3.992, 124, 49], 'false,false,false,false': [3.662, 41, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.118, 0, 12], 'true,true,true,false': [0.097, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.738, 0, 36], 'true,false': [0.598, 97, 0], 'false,true': [0.022, 0, 5], 'false,false,true': [3.369, 84, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.024, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.514, 2, 56], 'false,true,false': [0.394, 119, 0], 'false,false,true,true': [0.084, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.983, 39, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.037, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.066, 0, 4], 'false,true,true': [0.412, 11, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.343, 41, 14], 'false,false,true': [0.019, 0, 5], 'false,false,false,true': [2.742, 78, 36], 'false,false,false,false': [3.018, 42, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.007, 0, 5], 'true,true,true,false': [0.064, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.027, 0, 4], 'false,true': [1.325, 47, 17], 'false,false,true': [0.916, 1, 5], 'false,false,false,true': [2.642, 70, 36], 'false,false,false,false': [2.995, 40, 20]}]
{'': [0.06222222222222188, 0.20861946825890273], 'false': [-1.4802973661668753e-16, 0.20166845826583427], 'false,false': [0.20953890870656694, 0.1829002758020027], 'false,false,true': [0.1836547291092747, 0.21467733011418025], 'false,false,false': [0.18425378040762605, 0.16000000000000003], 'true': [-2.9605947323337506e-16, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [0.00024070779516849328, 0.2075573072016694], 'false': [7.401486830834377e-17, 0.20428591717359676], 'false,false': [0.196151631914447, 0.22598265550205848], 'false,false,false': [0.22434820535782612, 0.24000000000000005], 'false,false,true': [1.1303644616698595e-05, 1.2195485075161238e-05], 'true': [7.401486830834377e-17, 0.000245722540901272], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.06462428806018797, 0.16066127779978265], 'false': [0.13800561374409512, 0.23122176057920846], 'false,false': [0.22997812809299195, 0.25000000000000006], 'false,false,false': [0.25000000000000006, nan], 'false,false,true': [0.0, 0.23198895477977968], 'false,true': [0.12369165524126376, 0.1407864112665479], 'false,true,false': [0.02087366774532232, 1.246566203087895e-16], 'true': [0.12510803299858933, 0.000369958781002655]}
{'': [0.0004719377521469971, 0.12767672340712635], 'false': [0.09766022381581702, 0.20886657791766663], 'false,false': [0.001963427341333701, 0.21106862114421085], 'false,false,false': [0.20612303974947738, 0.24999999999999994], 'false,true': [0.01111860012320548, 0.09474243601685504], 'false,true,true': [0.0, 0.005497338486881868], 'false,false,true': [0.0, 0.0], 'true': [0.0003673733480862105, 0.00035897408185211105]}
{'': [0.0003489022591170692, 0.12050629346089013], 'false': [0.08997566535101131, 0.2163224165275989], 'false,false': [0.0009352532140045472, 0.22132095970135865], 'false,false,false': [0.22127386816638916, 0.22222222222222224], 'false,false,true': [0.0, 0.0], 'true': [1.669580847527552e-05, 0.0004759201290965483], 'true,true': [1.669580847527552e-05, nan]}
{'': [0.0698004539143313, 0.11583802535867094], 'false': [0.03191117944423541, 0.1235806514747995], 'false,false': [0.00029050053672495985, 0.12558764881131382], 'false,false,false': [0.09211378322348215, 0.2197949142246247], 'true': [0.0022936687721188346, 0.19857098282447655], 'true,false': [2.341820173172582e-05, 0.2771455587637749], 'true,true': [0.00020396868102343487, 0.0009839925870915173], 'true,false,true': [0.0, 0.0]}
{'': [0.1337399001043111, 0.09198238289662453], 'true': [0.04392473919666727, 0.0036835410031582374], 'false': [9.951922944206881e-05, 0.09456186965474168], 'false,false': [0.09456186965474168, nan], 'true,true': [0.0018913095591395201, 0.01977771716853493], 'true,true,false': [0.0, 0.015122722433021214], 'true,true,true': [0.0011553466431700188, 0.00468733127478449]}
{'': [0.062158116039338865, 0.09854589187210214], 'false': [0.08171458845866478, 0.14697340976647347], 'false,false': [0.003556971487485683, 0.1508683065712159], 'false,false,false': [0.1508683065712159, nan], 'false,true': [0.03950887190038701, 0.0013019103750180805], 'true': [9.581652576015158e-05, 0.09883067861060117], 'false,true,true': [nan, 0.03950887190038704], 'false,false,true': [0.003556971487485683, nan]}
{'': [0.000666834672390323, 0.07598153513276205], 'false': [0.030417777332042227, 0.09245800180134044], 'false,false': [7.028773583700465e-05, 0.09447623934511955], 'false,false,false': [0.06595748220269014, 0.14690801145811402], 'false,true': [0.01412816167635836, 0.03308424098840053], 'false,true,false': [0.0, 0.03278084105239707], 'true': [0.0001544222270811129, 0.0013342408551085705], 'true,false': [0.0, 0.001098496485219376]}
{'': [0.0004788971312722569, 0.07901632188699452], 'false': [0.027437400045239698, 0.09773201937611421], 'false,false': [0.13973477336632978, 0.09612377474066068], 'false,false,false': [0.06585862526890902, 0.14950662221453342], 'true': [0.0005833364810207853, 0.00018898186461940164], 'true,true': [0.000601715044952815, 0.0], 'true,true,true': [8.698217312513857e-06, 0.0013515600907364432], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 8.341
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.16151972161636516;  // std dev = 4.337, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | | | else return 0.11901850031690332;  // std dev = 5.572, 161.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8404214875057641;  // std dev = 0.025, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15519854666160912;  // std dev = 0.138, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.03534214642048666;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.1918716634151203;  // std dev = 3.125, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5787526129430666;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5540859847587529;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1093839142296776;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10813448914080241;  // std dev = 1.980, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.682729277774794;  // std dev = 0.268, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13956704874556658;  // std dev = 0.036, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12044645953027351;  // std dev = 3.690, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else return 0.8383008252729967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.42485661188479706;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3869024119322071;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5957731495201779;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.11542519633337414;  // std dev = 0.134, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.09424517678382746;  // std dev = 3.987, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5254607574014178;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.021669704213171322;  // std dev = 1.982, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.1304974494661402;  // std dev = 3.162, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32595570769552223;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then if ( interaction(E, G), phenotype(G, F) )
%   | | | then return -0.032043401277010254;  // std dev = 0.897, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.05883449339767764;  // std dev = 1.259, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08304145836345919;  // std dev = 2.303, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.041595282941515564;  // std dev = 3.042, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return -0.17928815283985033;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.39567246566435277;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.097411434593113;  // std dev = 2.502, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return -0.012785391006160014;  // std dev = 2.952, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2938965623336331;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3609566982225464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1561814869371264;  // std dev = 0.572, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.30593307304367057;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.03936239176511922;  // std dev = 0.172, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.25187088697267457;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08184858509829163;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.11961271957855661;  // std dev = 3.865, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | | else return 0.06045869467099677;  // std dev = 3.563, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24404578499512278;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.20843388101531968;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.601663395053605;  // std dev = 1.419, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.18500004026934627;  // std dev = 0.063, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2317759581399009;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.49276321660034555;  // std dev = 0.187, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.15432972348200363;  // std dev = 0.067, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.10351894056186;  // std dev = 1.359, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.0426787663353158;  // std dev = 1.940, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.18571254989241912;  // std dev = 0.027, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.32985831916719216;  // std dev = 0.874, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.4340106628199654;  // std dev = 0.550, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.13009164201438206;  // std dev = 0.254, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return -0.14584374187500787;  // std dev = 0.275, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( phenotype(J, K), complex(A, L) )
%   | | | then return 0.23905111873368;  // std dev = 1.043, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08820441404610219;  // std dev = 1.643, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.018540270135845492;  // std dev = 2.038, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.047529858231137166;  // std dev = 1.179, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1680431861745305;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.16667480804257756;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.06425144401405904;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.024571853300272357;  // std dev = 0.335, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.20746041483498318;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.017264202822939542;  // std dev = 1.431, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1660501489603851;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.0032463677099674178;  // std dev = 2.299, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0.06671700259058565;  // std dev = 3.048, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14558060031447934;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(E, F), location(A, F) )
%   | | then if ( phenotype(D, G), phenotype(A, H) )
%   | | | then return -0.03316176255129603;  // std dev = 0.998, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.02330164041861307;  // std dev = 1.995, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | | else if ( interaction(I, E), enzyme(I, J) )
%   | | | then return -0.09562319887140473;  // std dev = 0.287, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.027024268413067664;  // std dev = 1.134, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else if ( interaction(A, K) )
%   | | then if ( complex(K, L), interaction(K, M) )
%   | | | then return 0.08057273369043301;  // std dev = 2.305, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return -0.054292446182981596;  // std dev = 2.110, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.06473321190854356;  // std dev = 0.934, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.10565273116853871;  // std dev = 0.496, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.061', 'seconds']
Refined model CLL: -0.175904


******************************************
Best model found
******************************************
Results 

CLL : -0.198123 

AUC ROC : 0.981705 

AUC PR : 0.213019 

Precision : 0.134375 

Recall : 0.931408 

F1 : 0.234866 

Total Learning Time : 8.341 

Total Inference Time : 7.372122049331665 

Total revision time: 27.521183959960936
Best scored revision CLL: -0.175904


Results 

CLL : -0.198123 

AUC ROC : 0.981705 

AUC PR : 0.213019 

Precision : 0.134375 

Recall : 0.931408 

F1 : 0.234866 

Total Learning Time : 32.8762378616333 

Total Inference Time : 7.372122049331665 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.524
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07481560176617903;  // std dev = 3.191, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.15585885876363392;  // std dev = 5.233, 131.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.11529179224236952;  // std dev = 2.586, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7508965999392805;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.44327268722383817;  // std dev = 1.435, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8218536948976112;  // std dev = 0.994, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15813183542296616;  // std dev = 0.056, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1363993284771799;  // std dev = 2.781, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return -0.007205816422951206;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5619730703982267;  // std dev = 0.086, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5955890986769172;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05758370876163794;  // std dev = 2.766, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6468966365664236;  // std dev = 1.380, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14157460212872283;  // std dev = 7.15e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6896399067897928;  // std dev = 0.165, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0171519452575096;  // std dev = 2.651, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15367402203449476;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.42994520553300675;  // std dev = 0.141, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.608496014899499;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4927236059136106;  // std dev = 0.691, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.04455094823257066;  // std dev = 4.353, 195.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4523793935621794;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6751182152734317;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07350812820853643;  // std dev = 2.797, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.01770240169309198;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3158274760648141;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.35038696374310874;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.047724744439515264;  // std dev = 4.531, 204.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.34446912885516956;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4292712324550854;  // std dev = 0.120, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06476190303195517;  // std dev = 2.553, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.013793830967150705;  // std dev = 1.507, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25113049260825854;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.47281079963922407;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.27132507919262505;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3313564483048587;  // std dev = 0.108, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.054676323100900065;  // std dev = 1.244, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.12264592905597765;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05091786633161116;  // std dev = 4.058, 163.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=46 */
%   | | | else return 0.18844002190309928;  // std dev = 2.762, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2536760025683807;  // std dev = 0.259, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.24971070379319157;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22755955969468836;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5705000291330329;  // std dev = 1.089, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1773251921850679;  // std dev = 0.546, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2898001803242946;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0894523061871095;  // std dev = 3.228, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16935933413164794;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08885015370075115;  // std dev = 0.870, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38043088367476774;  // std dev = 2.150, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return -0.14124127742993917;  // std dev = 0.221, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20658964593923748;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.00984691987442255;  // std dev = 2.495, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15335143750266605;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.21046184607869378;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20446112121283053;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.10549509586793465;  // std dev = 0.394, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.15345249385071175;  // std dev = 0.549, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.0013313047740787065;  // std dev = 1.416, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.030635871231027456;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.035104663093514885;  // std dev = 2.731, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | | else return -0.005152442484527537;  // std dev = 2.515, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12865704316075377;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15798370123077904;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12461131952978588;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -1.6411926356983222E-4;  // std dev = 0.481, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.03095968030511783;  // std dev = 0.578, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.018415645236706944;  // std dev = 1.734, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.025344859531272135;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0045879823410247605;  // std dev = 2.865, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | | else return 0.0053017535099261544;  // std dev = 2.495, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.237', 'seconds']
Parameter learned model CLL:-0.175995 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.095, 2, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.191, 47, 13], 'false,false,true,false': [5.233, 92, 39], 'false,false,false,true': [2.586, 26, 9], 'false,false,false,false': [1.095, 2, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.096, 0, 7], 'false,true,true': [1.435, 3, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.994, 1, 52], 'false,false,true,false': [0.056, 122, 0], 'false,false,false,true': [2.781, 25, 11], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.086, 0, 11], 'true,false': [0.096, 0, 4], 'false,true,true': [2.766, 47, 14], 'false,true,false,true': [1.38, 2, 42], 'false,true,false,false': [7.15e-08, 95, 0], 'false,false,true,true': [0.165, 0, 3], 'false,false,true,false': [2.651, 37, 9], 'false,false,false,true': [1.367, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.141, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.691, 1, 6], 'false,true,false': [4.353, 146, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.797, 31, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.006, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.111, 0, 6], 'false,true': [4.531, 148, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.12, 0, 2], 'false,false,false,true': [2.553, 26, 9], 'false,false,false,false': [1.507, 9, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.012, 0, 9], 'true,true,false': [0.059, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.108, 0, 2], 'false,true': [1.244, 27, 5], 'false,false,true': [0.883, 1, 5], 'false,false,false,true': [4.058, 117, 46], 'false,false,false,false': [2.762, 20, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.259, 0, 13], 'true,true,true,false': [0.101, 0, 3], 'true,true,false,true': [0.036, 0, 3], 'true,true,false,false': [1.089, 1, 33], 'true,false': [0.546, 101, 0], 'false,true': [0.006, 0, 3], 'false,false,true': [3.228, 60, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.87, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.15, 5, 56], 'false,true,false': [0.221, 115, 0], 'false,false,true,true': [0.089, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.495, 32, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.056, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.115, 0, 5], 'false,true,true': [0.394, 21, 1], 'false,true,false,true': [0.549, 2, 6], 'false,true,false,false': [1.416, 46, 17], 'false,false,true': [0.863, 1, 3], 'false,false,false,true': [2.731, 71, 31], 'false,false,false,false': [2.515, 35, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.034, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.481, 1, 2], 'true,false': [0.578, 2, 3], 'false,true': [1.734, 72, 24], 'false,false,true': [0.863, 1, 3], 'false,false,false,true': [2.865, 84, 31], 'false,false,false,false': [2.495, 33, 12]}]
{'': [0.10380622837370206, 0.208819873601653], 'false': [0.10937499999999978, 0.20029609639999377], 'false,false': [0.19813053370247607, 0.20999999999999946], 'false,false,false': [0.19102040816326543, 0.23999999999999994], 'false,false,true': [0.1697222222222217, 0.2090787250160253], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, 0.18750000000000006], 'true': [-1.4802973661668753e-16, 0.23999999999999994]}
{'': [0.0008601496821952992, 0.2127336699552579], 'false': [0.20580655048856217, 0.2088469498649035], 'false,false': [0.20842885466277225, 0.21031460618731218], 'false,false,false': [0.21478781451582005, 0.15999999999999995], 'false,false,true': [0.018632129706885336, 2.6119396660082962e-05], 'false,true': [0.20580655048856217, nan], 'true': [1.1102230246251565e-16, 0.0013165556360129774]}
{'': [0.0013301277501005515, 0.15034878651068456], 'false': [0.14180652659913318, 0.17998087441910618], 'false,false': [0.16992617500459714, 0.23375041049515838], 'false,false,false': [0.23375041049515838, nan], 'false,false,true': [0.009116474894537522, 0.15272559730103583], 'false,true': [0.1254593643096824, 0.14820479874436046], 'false,true,false': [0.04329851186675147, 5.3758167508165475e-17], 'true': [0.0006748230823600695, 0.002303521524415264]}
{'': [0.0013168062191478923, 0.12038084217295614], 'false': [0.10385071122154413, 0.18793644804642362], 'false,false': [0.011025018377181506, 0.18663312665805395], 'false,false,false': [0.18627976041285763, 0.18750000000000003], 'false,true': [0.0612069120409105, 0.09716513977081029], 'false,true,true': [0.0, 0.06827535028288387], 'false,false,true': [0.0, 0.0], 'true': [0.0013168062191478923, nan]}
{'': [0.0011163783965993416, 0.11717313959025775], 'false': [0.10062787190289468, 0.18440714850494455], 'false,false': [0.006392352688862957, 0.18815286731768657], 'false,false,false': [0.1861699337297308, 0.18934099559366113], 'false,false,true': [0.0, 0.007191396774970854], 'true': [4.512140096076441e-06, 0.0020675628682023293], 'true,true': [4.512140096076441e-06, nan]}
{'': [0.009623923472527912, 0.11677906519037845], 'false': [0.04836727496161035, 0.12523537246246086], 'false,false': [0.13001378369572267, 0.12502175765477097], 'false,false,false': [0.10101771196229607, 0.22445169268193393], 'true': [0.010748427053322632, 0.004699154854557815], 'true,true': [1.4818697515973768e-05, 0.0008775514901885606], 'true,false': [0.0, 0.005847477189340311], 'true,false,true': [0.0, nan]}
{'': [0.10864632106708524, 0.11207856149223809], 'false': [1.068685891730814e-05, 0.11449206625648106], 'false,false': [0.11449206625648106, nan], 'true': [0.04766207806735694, 0.0029470760770596224], 'true,true': [0.004830326064318213, 0.04083697404249678], 'true,true,false': [0.00043059180804976466, 0.034866445854108155], 'true,true,true': [0.005160293124426238, 0.003387693383419201]}
{'': [0.048937074460205704, 0.09808104036790674], 'false': [0.088167879599869, 0.13497024448232595], 'false,false': [0.002625097241484705, 0.1415230729768694], 'false,false,false': [0.1415230729768694, nan], 'false,true': [0.07576862009948444, 0.0004229891176289382], 'false,true,true': [nan, 0.07576862009948444], 'true': [0.0, 0.09463328485358405], 'false,false,true': [0.002625097241484705, nan]}
{'': [0.0016677952704417555, 0.07128508499122314], 'false': [0.03096925921143128, 0.09536202619305846], 'false,false': [0.18606921788912265, 0.09285337949546352], 'false,false,false': [0.07313801779620416, 0.13453048146246863], 'false,true': [0.007073532755064369, 0.0348754301691711], 'false,true,false': [0.03765236896055508, 0.031823307323400274], 'true': [0.0003140266964267779, 0.0022269313976136427], 'true,false': [0.0, 0.0026663162273170616]}
{'': [0.03568589283877715, 0.07005890227736591], 'false': [0.031327916161599516, 0.09254428386843681], 'false,false': [0.18604478279169281, 0.09018462424298715], 'false,false,false': [0.07135712439246206, 0.13829897990217183], 'true': [0.01969454247938104, 0.06685052720273886], 'true,true': [0.00025583414984333975, 0.06064079518706038], 'true,true,false': [0.0, 0.07696216605122856], 'true,true,true': [0.0, 0.0005911284503717293]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 8.875
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.05814893509951236;  // std dev = 2.828, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | | else return 0.1649671169176941;  // std dev = 6.118, 176.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=54 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.50517232473028;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7313730497173963;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.801123122253572;  // std dev = 1.390, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15651019287236234;  // std dev = 0.143, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.051029016217602634;  // std dev = 2.188, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.2144949470511714;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5650865929151411;  // std dev = 0.021, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6088268958348951;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.10925620032356088;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.13018316427525453;  // std dev = 2.548, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5836239516804226;  // std dev = 2.111, 47.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=42 */
%   | | | else return -0.14147172630724714;  // std dev = 0.041, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5853765520859349;  // std dev = 1.691, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.173574352299421;  // std dev = 0.076, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.05172012318725098;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return -0.06093774013206302;  // std dev = 1.056, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.429684449548918;  // std dev = 0.034, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5230323101995711;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5978357273751023;  // std dev = 0.123, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.11564632551428627;  // std dev = 0.105, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.06328575159102998;  // std dev = 4.297, 175.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=49 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.41023381130044106;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.018492069877438642;  // std dev = 2.329, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.2485087454319415;  // std dev = 1.337, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3212979714833435;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3920539384489084;  // std dev = 0.195, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08921450389642784;  // std dev = 1.86e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.022084008128250683;  // std dev = 3.613, 149.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=36 */
%   | | | else return 0.056518540974973684;  // std dev = 2.786, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.3157802212581896;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.017553112075143724;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.012826163432605855;  // std dev = 2.318, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.19170131774394938;  // std dev = 1.276, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.29554296333091945;  // std dev = 0.062, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.09397115599989178;  // std dev = 0.479, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A), location(A, G) )
%   | then if ( enzyme(F, H), phenotype(A, I) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.10320532675627134;  // std dev = 1.300, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.20861763065004044;  // std dev = 1.219, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(A, K), interaction(F, K) )
%   | | | then return -0.009408824858862153;  // std dev = 1.653, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | | else return 0.07972834847741124;  // std dev = 3.367, 104.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=36 */
%   | else if ( phenotype(A, L), complex(A, M) )
%   | | then return 0.5452921982526149;  // std dev = 0.767, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.04753684104843119;  // std dev = 1.824, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.25038160568744344;  // std dev = 1.197, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2534842680807994;  // std dev = 0.060, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.3297294486211736;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5347201223969075;  // std dev = 0.990, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1706622340620124;  // std dev = 0.070, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return -0.14637718913935754;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5023525565557004;  // std dev = 0.108, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17719484246665992;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.1007935066300464;  // std dev = 1.910, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.009815632935074007;  // std dev = 2.292, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16209548258642026;  // std dev = 1.86e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2575282723030478;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.26787083359011954;  // std dev = 1.197, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.43885731314306964;  // std dev = 1.189, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | | else if ( location(A, I), interaction(A, J) )
%   | | | then return -0.11509479515798432;  // std dev = 0.246, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.1594647690295025;  // std dev = 0.176, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( enzyme(L, M), interaction(A, L) )
%   | | | then return -0.06243100675725563;  // std dev = 1.347, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.10653857590402684;  // std dev = 1.343, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.35144063029157985;  // std dev = 0.671, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.08644927362469162;  // std dev = 0.221, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19142050791450194;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.08698073006996176;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, A), phenotype(A, H) )
%   | | then return 0.026569107133439365;  // std dev = 0.186, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | else return -0.03189944979958398;  // std dev = 0.261, 85.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.378341921973476;  // std dev = 0.280, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.16316141037589052;  // std dev = 0.475, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.039201201300329384;  // std dev = 1.433, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.07149719701939897;  // std dev = 1.716, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13110049030361748;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2505243378074458;  // std dev = 0.905, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.16073896892826903;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2453794067588918;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then return -0.0042055959375049854;  // std dev = 0.248, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.32062645292808906;  // std dev = 0.619, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.15560701601836488;  // std dev = 0.680, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.18793490429809032;  // std dev = 0.965, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.04762307455819628;  // std dev = 0.997, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.103', 'seconds']
Refined model CLL: -0.171982


******************************************
Best model found
******************************************
Results 

CLL : -0.186946 

AUC ROC : 0.98844 

AUC PR : 0.266161 

Precision : 0.165254 

Recall : 0.964664 

F1 : 0.282171 

Total Learning Time : 8.875 

Total Inference Time : 8.860576152801514 

Total revision time: 30.461555074691773
Best scored revision CLL: -0.171982


Results 

CLL : -0.186946 

AUC ROC : 0.98844 

AUC PR : 0.266161 

Precision : 0.165254 

Recall : 0.964664 

F1 : 0.282171 

Total Learning Time : 35.81660897636414 

Total Inference Time : 8.860576152801514 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.78
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.15544623239680821;  // std dev = 4.816, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | | else return 0.13721870254137156;  // std dev = 5.094, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6808756944132524;  // std dev = 3.308, 82.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=69 */
%   | | | else return -0.1606176883747169;  // std dev = 0.016, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | else if ( location(A, I) )
%   | | | then return 0.06849645251990004;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4532966991324727;  // std dev = 0.954, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.3460526174841312;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09860611930479977;  // std dev = 4.304, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5839484978343039;  // std dev = 2.268, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return -0.13902652124809817;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16859058574000152;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2917644373420321;  // std dev = 1.133, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.37775237412836105;  // std dev = 0.943, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.48394242897313966;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5721240838314715;  // std dev = 1.317, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.049999258259469964;  // std dev = 5.117, 226.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4826602601642266;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.0663432437350912;  // std dev = 1.721, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3543510392544506;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41062789343733663;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07782569435373538;  // std dev = 5.436, 231.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3653896094826885;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.13367334378922;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.006880934767525949;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28278109664243084;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.38918338836569416;  // std dev = 0.149, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.28548048143219495;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.031826333045985616;  // std dev = 2.305, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.31417825609220557;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.10188782538818884;  // std dev = 4.685, 158.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=55 */
%   | | | else return 0.03031570084111708;  // std dev = 1.943, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2515974463298457;  // std dev = 0.176, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.23095668082048104;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5710965319287327;  // std dev = 0.923, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17689332934442015;  // std dev = 0.427, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25073880025749096;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04748709409954394;  // std dev = 4.111, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18281347500488232;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20271189537465067;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39798035747579347;  // std dev = 2.789, 80.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | | else return -0.16102870512460118;  // std dev = 0.269, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19249581623763112;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.050959291400210875;  // std dev = 1.444, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16894465593527164;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.037169879756064325;  // std dev = 0.481, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0489566611561336;  // std dev = 1.624, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3269244712962338;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0022285544112564505;  // std dev = 1.777, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1753842836843346;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.036529665299552525;  // std dev = 3.461, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return 0.08023102076671706;  // std dev = 1.395, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.07612692535885396;  // std dev = 1.184, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.22938991690171606;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2762182641902876;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.02498622437913714;  // std dev = 0.678, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.0010473090446895472;  // std dev = 2.301, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.09741492022032375;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03563797084322381;  // std dev = 3.471, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | | else return -0.021336862718296337;  // std dev = 1.518, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.575', 'seconds']
Parameter learned model CLL:-0.199412 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.816, 78, 33], 'false,false,true,false': [5.094, 93, 36], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.308, 13, 69], 'false,false,true,false': [0.016, 160, 0], 'false,false,false,true': [1.764, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.954, 1, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [4.304, 84, 34], 'false,true,false,true': [2.268, 6, 37], 'false,true,false,false': [0.0, 78, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.133, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.943, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.317, 2, 14], 'false,true,false': [5.117, 169, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.721, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.013, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.022, 0, 4], 'false,true': [5.436, 160, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.042, 0, 7], 'true,true,false': [0.149, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.305, 45, 12], 'false,false,true': [0.019, 0, 3], 'false,false,false,true': [4.685, 103, 55], 'false,false,false,false': [1.943, 18, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.176, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.923, 1, 33], 'true,false': [0.427, 97, 0], 'false,true': [0.016, 0, 3], 'false,false,true': [4.111, 92, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.034, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.789, 9, 71], 'false,true,false': [0.269, 144, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.444, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.098, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.481, 1, 3], 'false,true,true': [1.624, 36, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.777, 43, 17], 'false,false,true': [0.013, 0, 3], 'false,false,false,true': [3.461, 85, 40], 'false,false,false,false': [1.395, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [1.184, 2, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.678, 1, 3], 'false,true': [2.301, 71, 29], 'false,false,true': [0.862, 1, 3], 'false,false,false,true': [3.471, 78, 40], 'false,false,false,false': [1.518, 12, 4]}]
{'': [-1.6148698540002277e-16, 0.20686390532544405], 'false': [1.4802973661668753e-16, 0.20336416902602744], 'false,false': [0.2048437500000003, 0.1799307958477507], 'false,false,true': [0.20891161431702107, 0.20118983234180748], 'false,false,false': [0.18750000000000003, 0.17283950617283952], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.07638888888888906, 0.20365045386466546], 'false': [0.0, 0.20190973030168244], 'false,false': [0.2038544729173821, 0.1728427706718401], 'false,false,true': [0.1334437155093757, 1.5096896994637454e-06], 'false,false,false': [0.1728427706718401, nan], 'true': [7.401486830834377e-17, 0.13888888888888884], 'false,true': [0.0, nan]}
{'': [0.1301074140902466, 0.16337758680919312], 'false': [0.15973229720232046, 0.22185266194972286], 'false,false': [0.2222222222222222, 0.21389720281798388], 'false,false,true': [nan, 0.2222222222222222], 'false,false,false': [0.21389720281798388, nan], 'false,true': [0.15696239086006003, 0.1622497664377385], 'false,true,false': [0.1196207797183216, -9.678867394168032e-17], 'true': [0.10106073873078818, 0.18750000000000003]}
{'': [0.07489538201357487, 0.13610532666589878], 'false': [0.1321885393669804, 0.19528903445311085], 'false,false': [0.0, 0.19747581228112301], 'false,false,false': [0.19747581228112301, nan], 'false,true': [0.10837865220537996, 0.1158501069313623], 'false,true,true': [nan, 0.10837865220538007], 'true': [0.08076435912672326, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.0007934325248769883, 0.13194761612576608], 'false': [0.12794574942196912, 0.18972364854209486], 'false,false': [0.0, 0.19645090818911842], 'false,false,false': [0.2222222222222223, 0.17283950617283947], 'true': [2.3729921028582878e-05, 0.00012499478915242723], 'true,true': [2.3729921028582878e-05, nan], 'false,false,true': [nan, 0.0]}
{'': [0.004418362838395584, 0.13225346880290836], 'false': [0.09320148192408843, 0.14043439516157583], 'false,false': [0.00011700468273081095, 0.14195007269119322], 'false,false,false': [0.13893901194884362, 0.15732582383881563], 'true': [0.0047825732555919044, 0.0], 'true,true': [0.0002540962933649725, 0.00742400612201453], 'true,false': [nan, 0.0]}
{'': [0.11056222993707962, 0.12611183371589424], 'false': [8.85366357610921e-05, 0.12805797164626642], 'false,false': [0.12805797164626642, nan], 'true': [0.03871137896549739, 0.0018794085503449482], 'true,true': [0.0028404628477116264, 0.025069909465109466], 'true,true,false': [nan, 0.025069909465109362], 'true,true,true': [0.0030857781142271112, 0.0]}
{'': [0.00020543823814963357, 0.10893716955603548], 'false': [0.10680629959918943, 0.14031365966333198], 'false,false': [0.0, 0.14900055806746165], 'false,false,false': [0.14900055806746165, nan], 'false,true': [0.09726626337043358, 0.000502343987213645], 'false,true,true': [nan, 0.09726626337043373], 'true': [4.625929269271485e-18, 0.0002359929603589994], 'false,false,true': [0.0, nan]}
{'': [0.02392374833912343, 0.08152145156382525], 'false': [0.05533288849598575, 0.10000837371796148], 'false,false': [5.21780979711034e-05, 0.10180650495044365], 'false,false,false': [0.09584183570072415, 0.1621959503257144], 'false,true': [0.056139221659342584, 0.05352925319194881], 'false,true,false': [0.0, 0.05264531373423436], 'true': [0.0012080675713575725, 0.057778715449935014], 'true,false': [nan, 0.057778715449935014]}
{'': [0.13329113649289437, 0.08628425506920623], 'true': [0.13956564737001015, 0.1147698030205201], 'true,true': [0.1486861935538204, 0.0], 'true,true,true': [0.1558728276359801, 0.0], 'false': [0.05296138818308308, 0.1101423355619902], 'false,false': [0.18583417417290987, 0.1074208764240161], 'false,false,false': [0.10207466941229801, 0.1439906192861474], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 17.46
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.02119241336038191;  // std dev = 3.543, 92.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=15 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.12005369700427426;  // std dev = 2.849, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.1944321209402189;  // std dev = 5.022, 113.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7319045176838227;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7334306228142465;  // std dev = 2.556, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.15759895032838797;  // std dev = 0.128, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2555495645596654;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.002856666694302572;  // std dev = 1.303, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.39917883604690646;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.5660111120875003;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13404327328924803;  // std dev = 0.033, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.10524318470818089;  // std dev = 4.078, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6834379799893828;  // std dev = 0.972, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.1414790812633891;  // std dev = 0.071, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8250760067902397;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1759385599128394;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.13914627766741972;  // std dev = 1.004, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44923117351941;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4119125565213566;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3969380077309001;  // std dev = 1.184, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.009452710827990013;  // std dev = 2.523, 82.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=13 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.06462764288049162;  // std dev = 2.769, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.15685789115715534;  // std dev = 3.134, 75.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=30 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.06273878213141643;  // std dev = 0.825, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1240176864761709;  // std dev = 1.167, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.051011621231575134;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3316704741943847;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.16170750059060415;  // std dev = 0.873, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.380527093974324;  // std dev = 0.996, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.0469324340336448;  // std dev = 4.141, 142.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=38 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06674063848908393;  // std dev = 1.366, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.023108688110628904;  // std dev = 2.525, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5364278806382681;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1380859706953569;  // std dev = 1.113, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.044687772445568257;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28219536678346274;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3473034842627894;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.057613593891341075;  // std dev = 0.652, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(G, I) )
%   | | | then return -0.01197569720125948;  // std dev = 1.567, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.21300661277445707;  // std dev = 0.737, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.14135735796717921;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.04273358623497597;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.08183027171426895;  // std dev = 4.583, 176.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=57 */
%   | | | else return 0.022940825818695876;  // std dev = 1.494, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25872698918863224;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, E), interaction(E, F) )
%   | | | then return 0.31751854533945656;  // std dev = 2.081, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | else return 0.5939266534976837;  // std dev = 0.378, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.18700709540964533;  // std dev = 0.105, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.04245039333506645;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4732024541971016;  // std dev = 1.556, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return -0.1699890201709276;  // std dev = 0.132, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return -0.0662034283993299;  // std dev = 0.717, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.16031609029043964;  // std dev = 2.038, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17370520947662724;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.25281751356112514;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G) )
%   | | | then return 0.33841923482388675;  // std dev = 2.572, 77.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=68 */
%   | | | else return 0.08771352747085961;  // std dev = 0.984, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.11793735566598522;  // std dev = 0.138, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return -0.16895726300554229;  // std dev = 0.218, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.35627444795548613;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.05327155305791552;  // std dev = 0.624, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1791467151630193;  // std dev = 1.013, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15507555493837996;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.022004271703850803;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.11284424780838453;  // std dev = 1.168, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.04008341901010168;  // std dev = 1.029, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5607547656732216;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0297784071600723;  // std dev = 1.815, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.23287868339871062;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.0011769094804710515;  // std dev = 1.988, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.01169915927893234;  // std dev = 2.693, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13593031152885443;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22657539750670483;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), enzyme(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, H), enzyme(G, F) )
%   | | | then return 0.38997660699229736;  // std dev = 0.381, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.21860638602797805;  // std dev = 1.157, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return -0.12367549441868603;  // std dev = 0.022, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.1722136149044391;  // std dev = 2.597, 69.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=46 */
%   | | | else return -0.13985554479146817;  // std dev = 0.591, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return 0.047203139999925044;  // std dev = 0.458, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07084258441880606;  // std dev = 0.499, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '9.385', 'seconds']
Refined model CLL: -0.184391


******************************************
Best model found
******************************************
Results 

CLL : -0.175393 

AUC ROC : 0.985354 

AUC PR : 0.273091 

Precision : 0.165829 

Recall : 0.93617 

F1 : 0.28175 

Total Learning Time : 17.46 

Total Inference Time : 40.91635298728943 

Total revision time: 79.21914695739747
Best scored revision CLL: -0.184391


Results 

CLL : -0.175393 

AUC ROC : 0.985354 

AUC PR : 0.273091 

Precision : 0.165829 

Recall : 0.93617 

F1 : 0.28175 

Total Learning Time : 79.27746700286866 

Total Inference Time : 40.91635298728943 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.008
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08278661625893156;  // std dev = 4.903, 138.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=31 */
%   | | | else return 0.19396983062189962;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.5125115261625018;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.5617086083123202;  // std dev = 1.281, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.762737198193532;  // std dev = 0.103, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6934932311043008;  // std dev = 3.318, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.15948398666309027;  // std dev = 0.101, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( location(A, I) )
%   | | | then return 0.17780077116908885;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.6130126727764069;  // std dev = 0.048, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6092494174458877;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09184112364680651;  // std dev = 4.333, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5813587248059546;  // std dev = 2.464, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.14848055030683177;  // std dev = 0.189, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3196606846416381;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.16563516602287476;  // std dev = 1.527, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3039937884192081;  // std dev = 1.592, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else return 0.4420441147874937;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5508223181724523;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5706629831869295;  // std dev = 1.513, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return 0.015149554002601496;  // std dev = 5.248, 263.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5858442925954859;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.05878072170260946;  // std dev = 1.702, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.39873377436521906;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1435295447986788;  // std dev = 1.527, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.06323257399187987;  // std dev = 5.728, 284.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4405248491570183;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.026734354431864154;  // std dev = 1.787, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.31831490241872973;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.430962196352571;  // std dev = 0.140, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3363601587276489;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.00750017474667142;  // std dev = 2.715, 79.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.33935754258976825;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.04284592348860975;  // std dev = 4.766, 189.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=51 */
%   | | | else return 0.024561913548276824;  // std dev = 2.336, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.28460471201050463;  // std dev = 0.201, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2658234300833059;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.28108929546228123;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4965010349869819;  // std dev = 1.641, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.17693701223121364;  // std dev = 0.635, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2600208658065675;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06802559387981832;  // std dev = 4.412, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.07092550715638432;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.14598245661135084;  // std dev = 0.789, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3862422416582529;  // std dev = 3.107, 94.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else return -0.14532423910623354;  // std dev = 0.443, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21725406419823956;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.004306433368520828;  // std dev = 1.534, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19066692037647004;  // std dev = 0.065, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.16546584110358886;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21216088617254786;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03589907545378633;  // std dev = 1.759, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.25910936938426987;  // std dev = 0.161, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.04954182752144399;  // std dev = 1.565, 62.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1897468329513276;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03168639249020125;  // std dev = 3.741, 166.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=47 */
%   | | | else return 0.2458810530028;  // std dev = 1.227, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.03337495802944085;  // std dev = 0.932, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.16402624450480796;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18679457315261871;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.005886958718859035;  // std dev = 2.324, 115.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1622851941027688;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.038666306690589444;  // std dev = 3.795, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
%   | | | else return -0.015170917778558482;  // std dev = 1.476, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.551', 'seconds']
Parameter learned model CLL:-0.200113 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [1.0, 2, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.903, 107, 31], 'false,false,true,false': [5.467, 89, 45], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [1.247, 2, 7], 'true,false': [1.281, 2, 10], 'false,true,true': [0.103, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.318, 13, 76], 'false,false,true,false': [0.101, 185, 0], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.048, 0, 11], 'true,false': [0.017, 0, 6], 'false,true,true': [4.333, 90, 34], 'false,true,false,true': [2.464, 7, 48], 'false,true,false,false': [0.189, 80, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.527, 7, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.592, 3, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.065, 0, 3], 'false,true,true,false': [1.513, 3, 21], 'false,true,false': [5.248, 205, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.702, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.527, 3, 10], 'false,true': [5.728, 202, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.787, 17, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.058, 0, 9], 'true,true,false': [0.14, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.715, 60, 19], 'false,false,true': [0.043, 0, 8], 'false,false,false,true': [4.766, 138, 51], 'false,false,false,false': [2.336, 30, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.201, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.641, 3, 33], 'true,false': [0.635, 103, 0], 'false,true': [0.023, 0, 5], 'false,false,true': [4.412, 106, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.789, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.107, 12, 82], 'false,true,false': [0.443, 207, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.534, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.065, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.05, 0, 5], 'false,true,true': [1.759, 43, 13], 'false,true,false,true': [0.161, 0, 8], 'false,true,false,false': [1.565, 51, 11], 'false,false,true': [0.019, 0, 5], 'false,false,false,true': [3.741, 119, 47], 'false,false,false,false': [1.227, 4, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.932, 1, 7], 'true,true,true,false': [0.066, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.032, 0, 3], 'false,true': [2.324, 83, 32], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [3.795, 100, 47], 'false,false,false,false': [1.476, 12, 4]}]
{'': [0.05246913580246885, 0.20671366154677767], 'false': [0.20999999999999988, 0.20061728395061834], 'false,true': [0.25, 0.1388888888888887], 'false,false': [0.20134083044982734, 0.18749999999999983], 'false,false,true': [0.17417559336274008, 0.22304522165293053], 'false,false,false': [0.18749999999999983, nan], 'false,true,false': [1.4802973661668753e-16, 0.22222222222222224], 'true': [0.07100591715976314, 0.0]}
{'': [0.15285309927859475, 0.20574549206699166], 'false': [0.0015088265522094396, 0.2008779608392085], 'false,false': [0.19979100277013115, 0.22222222222222232], 'false,false,false': [0.22222222222222232, nan], 'false,false,true': [0.12372885689884215, 5.5536848054171204e-05], 'true': [0.17283950617283933, 0.13682600001131504], 'false,true': [0.0015088265522094396, nan]}
{'': [0.00015481034903498588, 0.16684924999345696], 'false': [0.16391310747888124, 0.2209730688178608], 'false,false': [0.2209730688178608, nan], 'false,false,true': [0.25, 0.21204562029182758], 'false,true': [0.15140131732540166, 0.17384880705829941], 'false,true,false': [0.11041564388552358, 0.00044729035185167023], 'true': [0.00020857663237006108, 4.707512385149215e-05]}
{'': [0.12758292736337276, 0.1323457410359475], 'false': [0.1287327605579522, 0.19723595589985252], 'false,false': [0.0, 0.1930227691413625], 'false,false,false': [0.1930227691413625, nan], 'false,true': [0.08501669442832231, 0.10471703112546887], 'true': [0.1333449236467149, 0.0], 'false,true,true': [0.00139423424899839, 0.09542576284093596], 'false,false,true': [nan, 0.0]}
{'': [0.13139126241452803, 0.11864869916356928], 'true': [0.0, 0.17934518413863051], 'false': [0.11551727799515324, 0.15468857859798502], 'false,false': [0.0, 0.15213055760025085], 'false,false,false': [0.15213055760025085, nan], 'true,true': [0.0, nan], 'false,false,true': [nan, 0.0]}
{'': [0.00432794369904585, 0.11503280860824197], 'false': [0.09327804054512603, 0.1218377378273676], 'false,false': [0.00022776959711748312, 0.12305411132928454], 'false,false,false': [0.12017043087328921, 0.1364035903542335], 'true': [0.004570864660549641, 0.0], 'true,true': [0.00037225863200767643, 0.003255126004992263], 'true,false': [nan, 0.0]}
{'': [0.10504900388233998, 0.124352822075736], 'false': [0.0001098467977951767, 0.12724652520187443], 'false,false': [0.12724652520187443, nan], 'true': [0.05999450388966907, 0.003914278079986881], 'true,true': [0.0025347058329731054, 0.07233509762394445], 'true,true,false': [0.0, 0.07479362107785868], 'true,true,true': [0.002681640187411164, 0.0]}
{'': [0.08016354583970643, 0.09535989691319594], 'false': [0.09341821598382065, 0.12609511044288188], 'false,false': [0.0, 0.13071372627869166], 'false,false,false': [0.13071372627869166, nan], 'false,true': [0.102727246785136, 0.0009486847527030627], 'false,true,true': [nan, 0.10272724678513598], 'true': [0.10925378964847164, 0.05663498566198861], 'false,false,true': [0.0, nan]}
{'': [0.0006334337138151694, 0.07402112781578359], 'false': [0.049680595266506304, 0.0891560273988884], 'false,false': [6.931982703075046e-05, 0.09110238918457617], 'false,false,false': [0.08431462991866376, 0.18817843688162758], 'false,true': [0.05526150821275969, 0.04500789639135003], 'false,true,false': [0.0032237429884571928, 0.039511907330373144], 'true': [0.00047642432877766555, 0.0007979171182007241], 'true,false': [0.0, 0.0004941047557689815]}
{'': [0.05621676041199422, 0.07857030998029071], 'false': [0.0469790035000532, 0.09944027555094341], 'false,false': [5.395594655913105e-05, 0.10199440833332016], 'false,false,false': [0.09798744383400168, 0.136194458041572], 'true': [0.066512837287745, 0.0003515710498701169], 'true,true': [0.066512837287745, nan], 'true,true,true': [0.10853316101867516, 0.0007315911754561255]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 12.445
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( enzyme(I, J), interaction(H, I) )
%   | | | then return 0.1914822684328457;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.06926004621062345;  // std dev = 3.872, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.28368084999312904;  // std dev = 3.390, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.15338703033760617;  // std dev = 4.674, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.7289931222161078;  // std dev = 0.074, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6809781977434901;  // std dev = 3.437, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.1601188868561005;  // std dev = 0.133, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.18698435178546802;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.1615672420055066;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.47655156081550487;  // std dev = 0.279, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( complex(A, E) )
%   | | then return 0.5894209519162528;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.16120488881241804;  // std dev = 0.921, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return 0.05102054234512946;  // std dev = 0.366, 144.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=34 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6566614544970084;  // std dev = 1.671, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.142766296448368;  // std dev = 0.096, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then return 0.46431234297924;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.040730581325428845;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.17014434835072595;  // std dev = 0.931, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( phenotype(E, G), interaction(H, E) )
%   | | | then return -0.05519059784090049;  // std dev = 1.200, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.47510881814199607;  // std dev = 0.220, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4402261095650258;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5197795288160103;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(I, A) )
%   | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.461957247025223;  // std dev = 0.379, 31.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | | else return 0.015288797441026306;  // std dev = 0.310, 271.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=58 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5086177920573789;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.035133596057790435;  // std dev = 1.149, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1096690912208006;  // std dev = 1.148, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3622125608348234;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.06506893597841752;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3737906281889488;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1388888639156788;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.04426168305426683;  // std dev = 3.734, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | | else return 0.10128194560848998;  // std dev = 4.238, 150.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=51 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3836360713917808;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.20303816662266166;  // std dev = 1.014, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.049820200385982165;  // std dev = 1.179, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.009048214425964485;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.30722007695599196;  // std dev = 0.185, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3023727614582434;  // std dev = 0.282, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.2978035261683061;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12309541913287633;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.06703493302103436;  // std dev = 0.343, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2015494373232708;  // std dev = 0.270, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return -0.09619638639415379;  // std dev = 1.568, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return 0.082530226872799;  // std dev = 4.765, 171.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=57 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.29677197258742843;  // std dev = 0.081, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.024211050091785896;  // std dev = 0.747, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.44719891085784663;  // std dev = 1.933, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | else return -0.16915324476978713;  // std dev = 0.071, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2650038308883972;  // std dev = 0.139, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B), interaction(G, H) )
%   | | | then return -0.4997159648750739;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.022339430225056345;  // std dev = 4.286, 151.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=42 */
%   | | else if ( location(A, I) )
%   | | | then return 0.5165919280941021;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08657516565546408;  // std dev = 0.788, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.23097815182773082;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07999725601296631;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.23588292799460478;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.2713740184867349;  // std dev = 2.033, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return 0.3971393673503191;  // std dev = 2.364, 71.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=64 */
%   | | else return -0.14938514382728466;  // std dev = 0.448, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.18963942761202457;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.176294423108894;  // std dev = 1.064, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06533280682512695;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1989859448068554;  // std dev = 0.137, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.28040920480149756;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.21979170215774788;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( complex(H, J), interaction(H, H) )
%   | | | then return -0.0652988850878148;  // std dev = 1.359, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.01948391335450281;  // std dev = 2.027, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | else return -0.08346487272369535;  // std dev = 0.128, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.007921790693911171;  // std dev = 0.952, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.03374230713378141;  // std dev = 3.549, 134.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=43 */
%   | | | else return -0.043759413762314556;  // std dev = 1.897, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.1760933056166511;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.05030963586752879;  // std dev = 0.665, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.17676153496282246;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.055465572066186;  // std dev = 0.612, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.20898937577335522;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, J), interaction(K, A) )
%   | then return -0.014038248232196836;  // std dev = 0.226, 131.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=32 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.17949822386859604;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, M), location(A, N) )
%   | | | then return 0.051840304014658146;  // std dev = 3.243, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
%   | | | else return -0.001219513772390663;  // std dev = 2.207, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.870', 'seconds']
Refined model CLL: -0.201788


******************************************
Best model found
******************************************
Results 

CLL : -0.179143 

AUC ROC : 0.988882 

AUC PR : 0.277058 

Precision : 0.263228 

Recall : 0.750943 

F1 : 0.389814 

Total Learning Time : 12.445 

Total Inference Time : 22.820715188980103 

Total revision time: 58.35899894523621
Best scored revision CLL: -0.200113


Results 

CLL : -0.179143 

AUC ROC : 0.988882 

AUC PR : 0.277058 

Precision : 0.263228 

Recall : 0.750943 

F1 : 0.389814 

Total Learning Time : 58.4173189907074 

Total Inference Time : 22.820715188980103 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.396
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0803711573217346;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.14573063444591652;  // std dev = 5.599, 153.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14173102465175114;  // std dev = 3.689, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6083623010998434;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8220620273600512;  // std dev = 0.984, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15896090768030086;  // std dev = 0.039, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else if ( location(A, K) )
%   | | | then return 0.17053137712965385;  // std dev = 3.468, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.8400054967148541;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5644469591288815;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.575797612107128;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08499748863575025;  // std dev = 2.054, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6850335390901955;  // std dev = 0.271, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14024817101432238;  // std dev = 4.94e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18555244617392233;  // std dev = 0.523, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.15299795552488502;  // std dev = 3.577, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.1495270337947265;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.34371991623983256;  // std dev = 0.945, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.44158298325953527;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3863559632081175;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4104841347473929;  // std dev = 0.630, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.05667408543293475;  // std dev = 4.195, 190.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5092052613843618;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5173379700945642;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09152802474143705;  // std dev = 3.545, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.3271088880415826;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3355619606831005;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.34732749004552826;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.08019137623643967;  // std dev = 4.119, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.38405307146486634;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3898463144697282;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10659885882518037;  // std dev = 3.543, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return -0.10378914741877772;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2659827607503213;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3366115047352948;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2980851060812596;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.26735123350220125;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30199736463237237;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.05652390486191548;  // std dev = 0.999, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2761463271524512;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.0679852057633525;  // std dev = 3.893, 155.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=49 */
%   | | | else return 0.04382552237187291;  // std dev = 3.766, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2337482918597895;  // std dev = 0.097, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2410107510355578;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22978907521575442;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6283608704162611;  // std dev = 0.757, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.1958895459690893;  // std dev = 0.697, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22342633529775968;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.015635765300946812;  // std dev = 3.464, 140.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1781767322688931;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18758499984262766;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44156814226079316;  // std dev = 0.792, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14087589163135641;  // std dev = 0.206, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19970253035436153;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.017333525371666245;  // std dev = 3.065, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1568112405268644;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12552363884032514;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1671524223031195;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06430100425200164;  // std dev = 0.422, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20474348505825435;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.03513108180844421;  // std dev = 1.268, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16020643392783332;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02664544169807996;  // std dev = 2.750, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | | else return -0.004051252354936418;  // std dev = 3.158, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13521958677037973;  // std dev = 0.000259, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14729671042993572;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1324823542892568;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13616791973735054;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02832374116754984;  // std dev = 1.364, 80.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1398113067600848;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.038767956181608686;  // std dev = 2.613, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
%   | | | else return -0.007712682089858175;  // std dev = 3.204, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.599', 'seconds']
Parameter learned model CLL:-0.178747 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.494, 28, 8], 'false,false,true,false': [5.599, 109, 44], 'false,false,false,true': [3.689, 48, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.984, 1, 52], 'false,false,true,false': [0.039, 137, 0], 'false,false,false,true': [3.468, 35, 18], 'false,false,false,false': [0.0, 0, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.031, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.054, 23, 8], 'false,true,false,true': [0.271, 0, 48], 'false,true,false,false': [4.94e-08, 95, 0], 'false,false,true,true': [0.523, 1, 1], 'false,false,true,false': [3.577, 36, 20], 'false,false,false,true': [0.913, 5, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.945, 1, 11], 'true,false': [0.002, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.63, 1, 3], 'false,true,false': [4.195, 138, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.545, 41, 18], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.003, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.035, 0, 9], 'false,true': [4.119, 117, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.543, 35, 19], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.018, 0, 7], 'true,true,false': [0.062, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.999, 17, 3], 'false,false,true': [0.021, 0, 6], 'false,false,false,true': [3.893, 106, 49], 'false,false,false,false': [3.766, 44, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.097, 0, 12], 'true,true,true,false': [0.002, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.757, 0, 36], 'true,false': [0.697, 98, 0], 'false,true': [0.017, 0, 5], 'false,false,true': [3.464, 104, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.004, 0, 6], 'true,false': [0.018, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.792, 0, 56], 'false,true,false': [0.206, 139, 0], 'false,false,true,true': [0.002, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.065, 48, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.018, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.004, 0, 4], 'false,true,true': [0.422, 8, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.268, 52, 14], 'false,false,true': [0.014, 0, 5], 'false,false,false,true': [2.75, 78, 36], 'false,false,false,false': [3.158, 50, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.000259, 0, 5], 'true,true,true,false': [0.002, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.027, 0, 4], 'false,true': [1.364, 63, 17], 'false,false,true': [0.012, 0, 5], 'false,false,false,true': [2.613, 71, 36], 'false,false,false,false': [3.204, 49, 20]}]
{'': [-2.5376526277146434e-16, 0.20861946825890276], 'false': [-1.4802973661668753e-16, 0.2016684582658343], 'false,false': [0.19943450631281395, 0.2076124567474044], 'false,false,false': [0.20316328803742428, 0.0], 'false,false,true': [0.17283950617283966, 0.20487846554743985], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.0622222222222223, 0.2108743116099914], 'false': [7.401486830834377e-17, 0.20780803627864414], 'false,false': [0.19867371476700788, 0.2343769629215691], 'false,false,false': [0.22692335491510893, 0.0], 'false,false,true': [0.018252534228837915, 1.1068925071513437e-05], 'true': [7.401486830834377e-17, 0.09876543209876548], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0001817395054695454, 0.17009522911910566], 'false': [0.1498757101609157, 0.2250644287863609], 'false,false': [0.22533521736117176, 0.13888888888888887], 'false,false,true': [0.13676238762305518, 0.2284619880585679], 'false,true': [0.13606604369904032, 0.15239188266160344], 'false,true,false': [0.001528505220933137, 2.5710427938687835e-17], 'false,false,false': [0.13888888888888887, nan], 'true': [0.00016491177348173144, 0.00013914430887507212]}
{'': [0.06108422739816096, 0.1251850202324227], 'false': [0.09531560671682526, 0.21430150368610365], 'false,false': [1.6535237741255315e-05, 0.2159519650667355], 'false,false,false': [0.21294773473074743, 0.2222222222222222], 'false,true': [0.0795643305886525, 0.09260729034444455], 'false,true,true': [0.0, 0.09933897950344978], 'true': [0.07443941324363085, 1.740107078910628e-06], 'false,false,true': [0.0, 0.0]}
{'': [0.00011769605276585564, 0.131236499093513], 'false': [0.09806142036223198, 0.22507413412353727], 'false,false': [8.390416128351008e-06, 0.22978834999307707], 'false,false,false': [0.2324991229659912, 0.16], 'true': [1.3996090213685975e-06, 0.00013286673061584252], 'false,false,true': [0.0, 0.0], 'true,true': [1.3996090213685975e-06, nan]}
{'': [0.0012562849975659787, 0.12616466679111965], 'false': [0.049897535976326776, 0.13170516894637888], 'false,false': [7.477577813534235e-05, 0.134076273412922], 'false,false,false': [0.0977805990080959, 0.22156674572172494], 'true': [0.0015320843479510661, 0.0002400256769961769], 'true,true': [4.788795432519073e-05, 0.0009549792787723888], 'true,false': [0.000236142730926453, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13116788368150542, 0.08420025432443776], 'true': [0.04363035264672911, 0.004958016037431623], 'false': [6.109090713608545e-05, 0.08571636510236011], 'false,false': [0.08571636510236011, nan], 'true,true': [0.0006819225681874588, 0.019654981313723074], 'true,true,false': [0.0, 0.0159074536674401], 'true,true,true': [0.0007877396296624428, 1.8116450978961085e-06]}
{'': [4.563046408421042e-05, 0.08932988533567023], 'false': [0.07287627142534396, 0.13515406807970476], 'false,false': [1.3829229346326577e-06, 0.13817890551266454], 'false,false,false': [0.13817890551266454, nan], 'false,true': [0.011188277214739584, 0.00030591699673296395], 'false,true,true': [nan, 0.011188277214739679], 'true': [2.5333999749688196e-06, 4.001804842082568e-05], 'false,false,true': [1.3829229346326577e-06, nan]}
{'': [0.00012345141829369792, 0.07418673786805531], 'false': [0.02479057711834124, 0.09355464014385113], 'false,false': [3.663739995055093e-05, 0.09553783754528208], 'false,false,false': [0.06634374016967556, 0.14249870214815183], 'false,true': [0.019800297758052404, 0.025297674845104673], 'false,true,false': [0.0, 0.02437192376342957], 'true': [3.453562869770413e-05, 0.000280888593537032], 'true,false': [0.0, 4.519619402846425e-06]}
{'': [8.071309431643771e-05, 0.0738177555959272], 'false': [0.02326769197243113, 0.09532628277487566], 'false,false': [2.925007024701387e-05, 0.0976406470339783], 'false,false,false': [0.06383086349323581, 0.1487568561291885], 'true': [3.617239056818433e-05, 0.0001888322461829385], 'true,true': [3.465608984580884e-05, 0.0], 'true,true,true': [1.337619950636526e-08, 1.2333734928510198e-06], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
1;false,false,false;location(A, K).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 6.581
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.011995088945666163;  // std dev = 2.253, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | | else return 0.16481560176617896;  // std dev = 5.647, 150.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=46 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.1974346493852266;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7373269569258907;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8391636759605414;  // std dev = 0.046, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15922062234994863;  // std dev = 0.090, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( location(A, J) )
%   | | | then return 0.11734057572901335;  // std dev = 3.583, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.11809090865455693;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.07448057723792248;  // std dev = 0.795, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.14107702299123787;  // std dev = 1.806, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6828103579197261;  // std dev = 0.242, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13919291107993476;  // std dev = 0.078, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7889197632962075;  // std dev = 0.251, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.18463954463741403;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.14635158965861406;  // std dev = 1.720, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.0567163889441626;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5054282242373234;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5871315999172493;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.05650854232623259;  // std dev = 2.654, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | | | else return 0.053271373888775744;  // std dev = 3.210, 114.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=31 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5145390297530829;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3579217818488788;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.02855810965422902;  // std dev = 1.884, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.13094877042316708;  // std dev = 2.883, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12930139362381923;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.01390481726712024;  // std dev = 1.327, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.37400208412941494;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.059420525826993045;  // std dev = 3.876, 163.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=48 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.3878481414939109;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.28043246884629514;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.0238548245198925;  // std dev = 3.060, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return 0.07481889909687842;  // std dev = 1.801, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.26831130875342296;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.27791005756357906;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.22745288028101718;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(H, A), phenotype(H, I) )
%   | | then return -0.1276148308321809;  // std dev = 0.016, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.05977935326893957;  // std dev = 0.710, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07791986107089945;  // std dev = 0.476, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.037062358143454356;  // std dev = 3.531, 138.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=37 */
%   | | | else return 0.09913877924566192;  // std dev = 3.788, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.21795118273655603;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5867089892468086;  // std dev = 1.062, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.1788271037812754;  // std dev = 0.056, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(H, I), location(H, J) )
%   | | | then return 0.09427424578088181;  // std dev = 2.305, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return -0.02734900038186383;  // std dev = 1.750, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.12234046796976843;  // std dev = 1.244, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.09883152936826205;  // std dev = 0.687, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17400902137232166;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E), complex(A, F) )
%   | | then return -0.15623683558805598;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17583812012539624;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.33202436141236413;  // std dev = 0.413, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4891482378205013;  // std dev = 0.323, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.1403728554312282;  // std dev = 0.027, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.18308401806947633;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.025926613345213626;  // std dev = 1.862, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.014327562796597724;  // std dev = 2.250, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1535224557971174;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.1157036877213719;  // std dev = 0.387, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.1477380511787969;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06521926463289288;  // std dev = 0.108, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1913067283613955;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.011765955715463088;  // std dev = 1.346, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16253020034146942;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.002501407986771923;  // std dev = 2.347, 100.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=27 */
%   | | | else return 0.02527661741309573;  // std dev = 3.077, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13309375840193102;  // std dev = 0.009, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.14366638135950935;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.0455349533968355;  // std dev = 0.780, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return 0.03812874568629421;  // std dev = 0.900, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.18424629461761108;  // std dev = 0.333, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.01795541555769418;  // std dev = 0.494, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.14165260336228583;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.046717847963888046;  // std dev = 2.776, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return -0.0031095116467289878;  // std dev = 2.706, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '57.695', 'seconds']
Refined model CLL: -0.16604


******************************************
Best model found
******************************************
Results 

CLL : -0.190939 

AUC ROC : 0.982674 

AUC PR : 0.217433 

Precision : 0.142618 

Recall : 0.924188 

F1 : 0.247104 

Total Learning Time : 6.581 

Total Inference Time : 7.315490961074829 

Total revision time: 25.707321168899536
Best scored revision CLL: -0.16604


Results 

CLL : -0.190939 

AUC ROC : 0.982674 

AUC PR : 0.217433 

Precision : 0.142618 

Recall : 0.924188 

F1 : 0.247104 

Total Learning Time : 25.765641214370728 

Total Inference Time : 7.315490961074829 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.467
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.04932540568774767;  // std dev = 3.243, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | | else return 0.16523554927274012;  // std dev = 5.198, 127.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16849376268571928;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109543;  // std dev = 4.21e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7697403021086734;  // std dev = 1.913, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.15852920995472797;  // std dev = 0.084, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else if ( location(A, I) )
%   | | | then return 0.21350375504773306;  // std dev = 2.615, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.027334239218108007;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.033753759879238;  // std dev = 2.864, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6722398951198322;  // std dev = 0.999, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14266938559293457;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6589960408234726;  // std dev = 0.179, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09772362579872125;  // std dev = 2.458, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3090354042728249;  // std dev = 1.213, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5777695649038761;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6055474994929065;  // std dev = 0.199, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.044516997381681626;  // std dev = 4.343, 200.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.42271975791621674;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5620913432809067;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.023258695538004637;  // std dev = 2.867, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.2739028231682993;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07071184716014967;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.06441957362705263;  // std dev = 4.410, 193.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3242434739844613;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12661829833649235;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04682517893795496;  // std dev = 2.543, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.10221430097882608;  // std dev = 1.378, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16523898935045034;  // std dev = 0.907, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.1459122477499094;  // std dev = 0.888, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25758060224244606;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04257111796144164;  // std dev = 0.886, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.01942139616467801;  // std dev = 1.172, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3055059764742942;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06676720775598867;  // std dev = 4.021, 151.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=46 */
%   | | | else return 0.08271774490389248;  // std dev = 2.972, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.27173839689270934;  // std dev = 0.230, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.33251028402174104;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24947158342189965;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5637349738201275;  // std dev = 1.109, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17738204957094536;  // std dev = 0.475, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24476688565380356;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09220313562316793;  // std dev = 3.228, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18120695234719308;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2065170511935183;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42350260203297363;  // std dev = 1.577, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14125781723731062;  // std dev = 0.208, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.01663343737369194;  // std dev = 0.793, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.01177559542296806;  // std dev = 2.468, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16288015603839107;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2369058718650895;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2534820349066996;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09782548346151014;  // std dev = 0.302, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.0832575469635726;  // std dev = 0.993, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.0060027955706608484;  // std dev = 1.451, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17107833182143417;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.049734360193309575;  // std dev = 2.710, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | | else return 0.02080255939178597;  // std dev = 2.444, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1356055722825783;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.16717596861646772;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1521043613227263;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1874949703251823;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.23890940678881423;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.014307015293872584;  // std dev = 1.728, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14816296395183481;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05330184341305734;  // std dev = 2.587, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   | | | else return 0.010749501899509814;  // std dev = 2.452, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.064', 'seconds']
Parameter learned model CLL:-0.185621 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.243, 55, 13], 'false,false,true,false': [5.198, 88, 39], 'false,false,false,true': [2.491, 20, 9], 'false,false,false,false': [1.369, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [4.21e-08, 0, 7], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.913, 4, 52], 'false,false,true,false': [0.084, 144, 0], 'false,false,false,true': [2.615, 18, 11], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 4], 'false,true,true': [2.864, 57, 14], 'false,true,false,true': [0.999, 1, 42], 'false,true,false,false': [0.0, 84, 0], 'false,false,true,true': [0.179, 0, 3], 'false,false,true,false': [2.458, 21, 9], 'false,false,false,true': [1.213, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.71e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.199, 0, 6], 'false,true,false': [4.343, 151, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.867, 33, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [1.225, 2, 6], 'false,true': [4.41, 137, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.005, 2, 2], 'false,false,false,true': [2.543, 25, 9], 'false,false,false,false': [1.378, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.907, 1, 9], 'true,true,false': [0.888, 2, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.886, 1, 2], 'false,true': [1.172, 18, 5], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [4.021, 105, 46], 'false,false,false,false': [2.972, 29, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.23, 0, 13], 'true,true,true,false': [0.164, 0, 3], 'true,true,false,true': [0.012, 0, 3], 'true,true,false,false': [1.109, 1, 33], 'true,false': [0.475, 87, 0], 'false,true': [0.0, 0, 3], 'false,false,true': [3.228, 59, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.019, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.577, 2, 56], 'false,true,false': [0.208, 131, 0], 'false,false,true,true': [0.793, 2, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.468, 31, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.059, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.142, 0, 5], 'false,true,true': [0.302, 17, 1], 'false,true,false,true': [0.993, 1, 6], 'false,true,false,false': [1.451, 44, 17], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [2.71, 59, 31], 'false,false,false,false': [2.444, 29, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.035, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.013, 0, 2], 'true,false': [0.094, 0, 3], 'false,true': [1.728, 66, 24], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [2.587, 56, 31], 'false,false,false,false': [2.452, 30, 12]}]
{'': [-2.3684757858670006e-16, 0.20881987360165305], 'false': [-2.5376526277146434e-16, 0.1997621878715827], 'false,false': [0.1955555555555564, 0.2191380569758943], 'false,false,false': [0.2140309155766945, 0.2343749999999999], 'false,false,true': [0.15462802768166037, 0.2127844255688517], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [2.3684757858670006e-16, 0.20276849083672227], 'false': [0.10937500000000006, 0.19832030077127158], 'false,false': [0.19205299298905165, 0.22904937681921145], 'false,false,false': [0.2358575169903591, 0.16000000000000003], 'false,false,true': [0.06536452087158283, 4.9131778444421676e-05], 'false,true': [0.10937500000000006, nan], 'true': [1.1102230246251565e-16, 2.5376526277146434e-16]}
{'': [-2.3684757858670006e-16, 0.1572231332625148], 'false': [0.144144735229364, 0.21881602998005048], 'false,false': [0.21002637204723085, 0.2454198260286359], 'false,false,false': [0.2454198260286359, nan], 'false,false,true': [0.010662239796711845, 0.2013239921933995], 'false,true': [0.1155478973700559, 0.15658249488981427], 'false,true,false': [0.023232456619271237, -1.057355261547768e-17], 'true': [-2.0185873175002846e-16, 0.0]}
{'': [1.4802973661668753e-16, 0.11870216912963874], 'false': [0.10147107616823456, 0.1914894269888822], 'false,false': [0.004316541957126015, 0.1921100482805502], 'false,false,false': [0.18674727472068967, 0.24999999999999994], 'false,true': [0.005762370754340829, 0.09432702451262204], 'false,true,true': [0.0, 0.0066125353586309705], 'false,false,true': [0.0, 0.0], 'true': [1.4802973661668753e-16, nan]}
{'': [0.10380622837370242, 0.12105734132748854], 'false': [0.10075222346762801, 0.20420484103728342], 'false,false': [0.2344558663740129, 0.1996670964695956], 'false,false,true': [0.0, 0.2524145654194378], 'false,false,false': [0.1902513963384402, 0.23720023953711195], 'true': [-3.700743415417188e-17, 0.1875], 'true,true': [-3.700743415417188e-17, nan]}
{'': [0.12223898654266004, 0.1209056433739397], 'true': [0.10080101163838592, 0.20494853512171787], 'true,false': [0.0, 0.26170744391292794], 'false': [0.059746092650118675, 0.1270267975690972], 'false,false': [-1.1102230246251566e-17, 0.12891071899567588], 'false,false,false': [0.10708023522299528, 0.2053732273803381], 'true,true': [0.0823519601382392, 0.13131597896723832], 'true,false,true': [0.0, nan]}
{'': [0.11411076270129596, 0.11275533011293852], 'true': [0.043722046011905366, 0.0025970828104819594], 'false': [0.0, 0.11576301215465765], 'false,false': [0.11576301215465765, nan], 'true,true': [0.005549228310690019, 0.040580382860389584], 'true,true,false': [4.426836217825506e-05, 0.036149411395964705], 'true,true,true': [0.004060168964076742, 0.009001075722186483]}
{'': [0.00018428352136210525, 0.09323557272692495], 'false': [0.081235150968243, 0.14005657518449208], 'false,false': [0.12573884285502218, 0.14163735766172944], 'false,false,false': [0.14163735766172944, nan], 'false,false,true': [0.12573884285502218, nan], 'false,true': [0.042894476936763376, 0.00033024610416905307], 'false,true,true': [nan, 0.042894476936763314], 'true': [0.0, 5.323933813590674e-05]}
{'': [0.003302796392867388, 0.07712401496404091], 'false': [0.03928868322464442, 0.0999252367231097], 'false,false': [0.0, 0.10183291683008212], 'false,false,false': [0.08161367840282091, 0.14564153903957675], 'false,true': [0.005054098317764781, 0.04621521043173205], 'false,true,false': [0.1409232082833662, 0.03452690510064693], 'true': [0.00034789217040859797, 0.0034053102471380456], 'true,false': [0.0, 0.004040577433035297]}
{'': [0.00217347247104396, 0.07182969993893062], 'false': [0.033182136431378635, 0.09689870455362432], 'false,false': [0.0, 0.09888354843657801], 'false,false,false': [0.07690831235167676, 0.14318250936672403], 'true': [0.000496568112795688, 0.002976052101589568], 'true,true': [0.00028154073953503, 0.0003356463127685237], 'true,true,false': [0.0, 8.59710672978728e-05], 'true,true,true': [0.0, 0.0006103517579320247]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.64
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.11005733204607591;  // std dev = 4.969, 131.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=33 */
%   | | | else return 0.1914822684328457;  // std dev = 4.546, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G) )
%   | | then return 0.7512057788947993;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7670719622367217;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7526337678042317;  // std dev = 2.132, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.15501429091723132;  // std dev = 0.154, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.055427713453770545;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.16653882456488167;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5107525639619488;  // std dev = 0.249, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.02567042112269193;  // std dev = 1.690, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | | else return 0.1410460720831319;  // std dev = 2.088, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6604687727658285;  // std dev = 1.388, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.13930362659982717;  // std dev = 0.045, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( phenotype(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.07120991122208085;  // std dev = 1.497, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.2983066478947138;  // std dev = 1.529, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.07605535038703651;  // std dev = 1.748, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.015400377076817809;  // std dev = 1.268, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then if ( phenotype(D, E) )
%   | | then return 0.42840176216153303;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09506842882819962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4615602853929437;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6051779225176067;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.0035138135154992502;  // std dev = 2.489, 88.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=16 */
%   | | | else return 0.09695647076903088;  // std dev = 3.507, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5693450553738661;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.0429070059602728;  // std dev = 2.611, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.16437724426405034;  // std dev = 1.379, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3326425898701461;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2439754021381784;  // std dev = 0.341, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10659060116927387;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.046176371338178306;  // std dev = 1.359, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.08346073143597031;  // std dev = 3.549, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | | else return 0.14249299643929672;  // std dev = 1.974, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4283711069424705;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.13371388344622112;  // std dev = 1.419, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.006889926094154536;  // std dev = 2.639, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.3047043155336636;  // std dev = 0.072, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.32833807443780344;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.09685744143095296;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.13751734101836452;  // std dev = 0.572, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.09685744143095296;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.14276925205227017;  // std dev = 0.935, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3384075916371822;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.23563160276530312;  // std dev = 1.859, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.07701350382913044;  // std dev = 4.411, 150.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24835016200389115;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2830938963031287;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5419633525847993;  // std dev = 1.407, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.17468115131643033;  // std dev = 0.080, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2824546406859155;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5411945419203197;  // std dev = 0.187, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1628716681622527;  // std dev = 0.058, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( location(A, I) )
%   | | | then return 0.026976255873448655;  // std dev = 2.850, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | | else return -0.04196088789244205;  // std dev = 0.572, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1647762208037363;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.09766392494940797;  // std dev = 0.330, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.3345433503320566;  // std dev = 1.714, 40.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | | | else return 0.44385249089626233;  // std dev = 0.509, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.14363395279775618;  // std dev = 0.042, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.03547946837762629;  // std dev = 1.604, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.18301443034207526;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.07705034578041492;  // std dev = 0.773, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2001608681661277;  // std dev = 1.295, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15863685064441962;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.19900135525153217;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.06612394829794817;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1008992051570696;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.213516285283985;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.00683182303155071;  // std dev = 1.662, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2120793723326443;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.10231999089845178;  // std dev = 1.243, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.023691471481368936;  // std dev = 3.400, 113.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14577460726332025;  // std dev = 0.030, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.16920339977614554;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, I), phenotype(A, J) )
%   | | | then return -0.008074310888788898;  // std dev = 0.764, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.08349602462448107;  // std dev = 0.969, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.0025798594485292926;  // std dev = 1.264, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.1480629338017481;  // std dev = 0.336, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.1787974589639657;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, N), phenotype(A, P) )
%   | | | then return 0.07847161886552584;  // std dev = 1.757, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.003295010628412146;  // std dev = 3.167, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '55.525', 'seconds']
Refined model CLL: -0.185269


******************************************
Best model found
******************************************
Results 

CLL : -0.197191 

AUC ROC : 0.985472 

AUC PR : 0.234539 

Precision : 0.150754 

Recall : 0.848057 

F1 : 0.256 

Total Learning Time : 7.64 

Total Inference Time : 8.253340244293213 

Total revision time: 28.531412250518798
Best scored revision CLL: -0.185269


Results 

CLL : -0.197191 

AUC ROC : 0.985472 

AUC PR : 0.234539 

Precision : 0.150754 

Recall : 0.848057 

F1 : 0.256 

Total Learning Time : 28.58973229598999 

Total Inference Time : 8.253340244293213 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.245
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21914478572191903;  // std dev = 7.456, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1730756030763676;  // std dev = 5.374, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | | else return 0.13429014208345955;  // std dev = 5.467, 141.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13012406517636702;  // std dev = 4.864, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.10518856295158148;  // std dev = 6.041, 174.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07190550669447458;  // std dev = 3.769, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0.11794455474990477;  // std dev = 6.708, 204.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10395902950681468;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0692009461281723;  // std dev = 7.697, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7368147472060133;  // std dev = 0.004, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2631191367542624;  // std dev = 0.006, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10254173162130409;  // std dev = 3.891, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return 0.07416045650126186;  // std dev = 4.320, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05502052118666672;  // std dev = 3.778, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.05766241151485176;  // std dev = 5.870, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037287733270213924;  // std dev = 7.029, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0479398508445942;  // std dev = 6.901, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.998', 'seconds']
Parameter learned model CLL:-0.337125 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.456, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.374, 84, 44], 'false,false,false,false': [5.467, 98, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.864, 73, 35], 'false,false,false,false': [6.041, 122, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.769, 49, 20], 'false,false,false,false': [6.708, 137, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.608, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.697, 186, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.004, 0, 35], 'true,false': [0.006, 76, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.891, 41, 24], 'false,false,false,false': [4.32, 56, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.778, 67, 35], 'false,false,false,false': [5.87, 102, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.029, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.901, 161, 87]}]
{'': [nan, 0.23067784645581269], 'false': [nan, 0.2306778464558125], 'false,false': [nan, 0.23067784645581269], 'false,false,false': [nan, 0.2306778464558125]}
{'': [nan, 0.21881952985724323], 'false': [nan, 0.21881952985724396], 'false,false': [nan, 0.21881952985724323], 'false,false,false': [0.22558593750000042, 0.21196116895528447]}
{'': [nan, 0.21345192998114776], 'false': [nan, 0.21345192998114776], 'false,false': [nan, 0.21345192998114756], 'false,false,false': [0.21903312604374292, 0.20974961109008133]}
{'': [nan, 0.21723421086391512], 'false': [nan, 0.21723421086391512], 'false,false': [nan, 0.21723421086391487], 'false,false,false': [0.20583910943079214, 0.2205527148018933]}
{'': [nan, 0.22261931028184828], 'false': [nan, 0.22261931028184828], 'false,false': [nan, 0.2226193102818476], 'false,false,false': [nan, 0.2226193102818476]}
{'': [nan, 0.21700803270142696], 'false': [nan, 0.21700803270142696], 'false,false': [nan, 0.21700803270142707], 'false,false,false': [nan, 0.21700803270142738]}
{'': [0.21586349308120686, 0.22707815481144614], 'false': [nan, 0.22707815481144614], 'false,false': [nan, 0.22707815481144614], 'false,false,false': [0.2328994082840232, 0.2222222222222228], 'true': [4.847770789240258e-07, 4.6711690225795097e-07], 'true,true': [nan, 4.847770789240258e-07], 'true,true,false': [nan, 4.847770789240258e-07]}
{'': [nan, 0.1903682341779578], 'false': [nan, 0.1903682341779578], 'false,false': [nan, 0.1903682341779581], 'false,false,false': [0.1399685551267401, 0.2237470588551086]}
{'': [nan, 0.18927798688187505], 'false': [nan, 0.18927798688187475], 'false,false': [nan, 0.18927798688187475], 'false,false,false': [nan, 0.18927798688187475]}
{'': [nan, 0.19204012247949034], 'false': [nan, 0.19204012247949034], 'false,false': [nan, 0.19204012247949018], 'false,false,false': [nan, 0.19204012247949018]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 27.278
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), interaction(D, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1005731775237548;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.15903389085172337;  // std dev = 4.875, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.08891816586874296;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.034619523334806335;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.15226658215833566;  // std dev = 3.757, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.652970495770877;  // std dev = 0.309, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return 0.10792115657965748;  // std dev = 0.431, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(H, F), enzyme(H, I) )
%   | | then if ( interaction(H, A), interaction(F, F) )
%   | | | then return 0.5043330198538473;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19876520665795888;  // std dev = 3.647, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | else if ( complex(A, J), complex(F, J) )
%   | | | then return 0.029701651330648015;  // std dev = 1.216, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.1534558268713911;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then return 0.05388224706183422;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return 0.19134712420741803;  // std dev = 1.695, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.1306061358034916;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.591993826804315;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7429041152294319;  // std dev = 0.125, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, A) )
%   | then return -0.14287721108460866;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.16712913405750132;  // std dev = 3.182, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.06218254885910844;  // std dev = 4.107, 94.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.11028940980745516;  // std dev = 3.153, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.2188034516477813;  // std dev = 3.454, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5318914421075367;  // std dev = 0.082, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), complex(A, G) )
%   | | | then return 0.682421792765631;  // std dev = 0.211, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.28020209419771636;  // std dev = 1.647, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(H, A), interaction(H, D) )
%   | | | then return -0.12343179696169913;  // std dev = 1.670, 55.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=3 */
%   | | | else return 0.10736150654334949;  // std dev = 3.384, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.726928499415531;  // std dev = 0.957, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.20831886232518748;  // std dev = 0.102, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.21948343338818532;  // std dev = 3.789, 58.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=25 */
%   | | | else return -0.014447248711346672;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41983913448637183;  // std dev = 0.120, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D) )
%   | | then if ( enzyme(D, E) )
%   | | | then return -0.11326127153918367;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.036447698815940906;  // std dev = 1.688, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | else if ( complex(D, F) )
%   | | | then return -0.023165591314791133;  // std dev = 0.820, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1140509741729658;  // std dev = 1.266, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.036479987102285616;  // std dev = 1.445, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.2005933142155376;  // std dev = 2.025, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5180536010355123;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06325449562960832;  // std dev = 5.640, 169.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=49 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), interaction(D, C) )
%   | then return 0.3941263498105079;  // std dev = 0.321, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(C, A) )
%   | | then return -0.16466199918352817;  // std dev = 0.088, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( complex(D, E), complex(C, F) )
%   | | | then return 0.1133346233501569;  // std dev = 1.988, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.29750019486149853;  // std dev = 1.231, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.37211748036195735;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H) )
%   | | | then return -0.05056495491800863;  // std dev = 2.427, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.07701489599780667;  // std dev = 1.045, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.18125900364364123;  // std dev = 1.686, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.04482401581310673;  // std dev = 4.871, 127.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5812290674948234;  // std dev = 0.198, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.23344893169702596;  // std dev = 0.076, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.2702465703216986;  // std dev = 0.252, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.1709606564403181;  // std dev = 0.277, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.04338540968100568;  // std dev = 1.121, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.1260192756206395;  // std dev = 1.623, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.5128429754871167;  // std dev = 0.794, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.06852681759098161;  // std dev = 4.137, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return 0.2393678576886239;  // std dev = 1.008, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.19495495270316426;  // std dev = 0.145, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.020896514648042666;  // std dev = 0.318, 124.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=32 */
%   else if ( interaction(A, F), complex(A, G) )
%   | then if ( enzyme(A, H), phenotype(F, I) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.08986950013323014;  // std dev = 0.688, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.012670780142766585;  // std dev = 0.869, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.41066862394708964;  // std dev = 0.692, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5751912783045553;  // std dev = 0.724, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.22563350532499482;  // std dev = 0.504, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.0702444357254216;  // std dev = 3.412, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | | | else return 0.22413613364115123;  // std dev = 1.326, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, C) )
%   | | then return 0.1176798302019459;  // std dev = 0.084, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2603134320337754;  // std dev = 0.290, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), interaction(C, E) )
%   | | | then return 0.11288718108735137;  // std dev = 0.830, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.4119702814899638;  // std dev = 0.507, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.1395971868684294;  // std dev = 0.326, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.018617066154007572;  // std dev = 5.332, 184.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=57 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then return 0.3583096504413003;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.19417268015993963;  // std dev = 0.937, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( complex(A, F), interaction(E, E) )
%   | | then return -0.1695775928894956;  // std dev = 0.798, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.008147749659807255;  // std dev = 1.034, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.13678206274887492;  // std dev = 1.601, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else return -0.04521545814175006;  // std dev = 0.312, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then return -0.004397481983076582;  // std dev = 0.287, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.18889468185842298;  // std dev = 0.497, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0540952894056284;  // std dev = 1.463, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.01093041981409846;  // std dev = 1.270, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.11131177063962917;  // std dev = 3.243, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.465', 'seconds']
Refined model CLL: -0.275071


******************************************
Best model found
******************************************
Results 

CLL : -0.296387 

AUC ROC : 0.917709 

AUC PR : 0.21564 

Precision : 0.208138 

Recall : 0.471631 

F1 : 0.288817 

Total Learning Time : 27.278 

Total Inference Time : 14.552057027816772 

Total revision time: 49.68086004066467
Best scored revision CLL: -0.275071


Results 

CLL : -0.296387 

AUC ROC : 0.917709 

AUC PR : 0.21564 

Precision : 0.208138 

Recall : 0.471631 

F1 : 0.288817 

Total Learning Time : 49.77936482238769 

Total Inference Time : 14.552057027816772 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.512
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18113030155914017;  // std dev = 8.391, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13696476981159597;  // std dev = 6.023, 172.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=52 */
%   | | | else return 0.18838068501488658;  // std dev = 5.797, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15122757244681817;  // std dev = 5.208, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
%   | | | else return 0.1847458057619667;  // std dev = 6.276, 168.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15345265536897953;  // std dev = 4.300, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
%   | | | else return 0.12597702333956784;  // std dev = 7.004, 217.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08378085115415577;  // std dev = 8.384, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09429706594211794;  // std dev = 8.220, 297.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7295050135852958;  // std dev = 0.014, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2701153405795546;  // std dev = 0.017, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0630339536347284;  // std dev = 3.916, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | | else return 0.047309405810410037;  // std dev = 5.185, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.027135387904313857;  // std dev = 4.165, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | | | else return 0.05289717993555151;  // std dev = 6.447, 185.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.034317812978764656;  // std dev = 7.668, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.013612771643119283;  // std dev = 7.746, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.834', 'seconds']
Parameter learned model CLL:-0.333371 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.391, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.023, 120, 52], 'false,false,false,false': [5.797, 95, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.208, 80, 41], 'false,false,false,false': [6.276, 105, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.3, 51, 29], 'false,false,false,false': [7.004, 142, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.384, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.22, 193, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 41], 'true,false': [0.017, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.916, 46, 23], 'false,false,false,false': [5.185, 82, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.165, 89, 41], 'false,false,false,false': [6.447, 122, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.668, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.746, 225, 104]}]
{'': [nan, 0.2186644033795012], 'false': [nan, 0.21866440337949986], 'false,false': [nan, 0.2186644033795012], 'false,false,false': [nan, 0.21866440337949986]}
{'': [nan, 0.21973054510077628], 'false': [nan, 0.21973054510077547], 'false,false': [nan, 0.21973054510077628], 'false,false,false': [0.21092482422931438, 0.22860845018279524]}
{'': [nan, 0.23042583300537825], 'false': [nan, 0.23042583300537825], 'false,false': [nan, 0.23042583300537658], 'false,false,false': [0.22415593854268662, 0.23447126885498223]}
{'': [nan, 0.2275668780480715], 'false': [nan, 0.2275668780480715], 'false,false': [nan, 0.2275668780480703], 'false,false,false': [0.23109374999999974, 0.22606330590035786]}
{'': [nan, 0.21895958474171692], 'false': [nan, 0.21895958474171692], 'false,false': [nan, 0.21895958474171773], 'false,false,false': [nan, 0.21895958474171773]}
{'': [nan, 0.22751326442454012], 'false': [nan, 0.22751326442454012], 'false,false': [nan, 0.2275132644245394], 'false,false,false': [nan, 0.22751326442453967]}
{'': [0.22386239560671392, 0.2210967374902283], 'true': [4.64092981592635e-06, 3.751482864067235e-06], 'false': [nan, 0.2210967374902283], 'false,false': [nan, 0.2210967374902283], 'false,false,false': [0.22222222222222246, 0.22037086804622377], 'true,true': [nan, 4.64092981592635e-06], 'true,true,false': [nan, 4.64092981592635e-06]}
{'': [nan, 0.18716089774900663], 'false': [nan, 0.18716089774900663], 'false,false': [nan, 0.187160897749006], 'false,false,false': [0.13341692636536237, 0.22465303616815513]}
{'': [nan, 0.18727754794255863], 'false': [nan, 0.18727754794255796], 'false,false': [nan, 0.18727754794255796], 'false,false,false': [nan, 0.18727754794255796]}
{'': [nan, 0.1823860334777228], 'false': [nan, 0.1823860334777228], 'false,false': [nan, 0.1823860334777219], 'false,false,false': [nan, 0.1823860334777219]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 49.921
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(D, A), enzyme(D, E) )
%   | | then if ( enzyme(A, E) )
%   | | | then return -0.030739953789376686;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.12420398097107084;  // std dev = 4.614, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | | else if ( location(A, F), phenotype(A, G) )
%   | | | then return 0.1354598594692588;  // std dev = 4.884, 119.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
%   | | | else return 0.20663378358436077;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.667756083269119;  // std dev = 0.297, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.7906954849006225;  // std dev = 0.985, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.0335922649293261;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.1525957389045548;  // std dev = 0.165, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0.08735513514658148;  // std dev = 3.382, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13482349259245208;  // std dev = 5.439, 142.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=42 */
%   | | else if ( location(A, H) )
%   | | | then return 0.43694358478807815;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17568038525406457;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, D) )
%   | | then if ( interaction(F, E), enzyme(F, G) )
%   | | | then return 0.6201000949514591;  // std dev = 1.947, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | | else return 0.7419835708644856;  // std dev = 1.030, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return -0.16629627466308325;  // std dev = 0.155, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.16103587038704528;  // std dev = 0.180, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( phenotype(H, I), complex(A, J) )
%   | | then return 0.22039382837571683;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5798815772811686;  // std dev = 0.132, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.7202969680488488;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.016002211772558058;  // std dev = 2.507, 51.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | | | else return 0.11084999022946515;  // std dev = 3.655, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), location(E, C) )
%   | | then return 0.49594128486221106;  // std dev = 0.241, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | else return 0.22747682303021297;  // std dev = 0.339, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, D) )
%   | | then return -0.12450585963867195;  // std dev = 0.175, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.4554040921607806;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10442943324277472;  // std dev = 5.401, 168.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=52 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then return 0.4497764892191058;  // std dev = 1.043, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then return 0.455521060155617;  // std dev = 0.743, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.034058602400833395;  // std dev = 0.990, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.22770608437208514;  // std dev = 1.345, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.051759483412982366;  // std dev = 0.611, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return 0.3058398975907809;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4495827259577773;  // std dev = 0.092, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.4250358204525752;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(E, G) )
%   | | | then return 0.017121792577798035;  // std dev = 3.740, 124.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=32 */
%   | | | else return -0.13815522707355993;  // std dev = 0.624, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3740102887296496;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.022201596964281436;  // std dev = 2.311, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.13689345277826076;  // std dev = 4.531, 105.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2751439871038215;  // std dev = 0.195, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, A) )
%   | then return -0.10353133788320779;  // std dev = 0.107, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, E), interaction(E, A) )
%   | | | then return 0.002994175794080308;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4026410079605027;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, F), interaction(A, G) )
%   | | | then return 0.029452751257314586;  // std dev = 3.491, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | | else return 0.09556771236608688;  // std dev = 5.208, 141.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.43595092280218883;  // std dev = 0.181, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.18893420635032604;  // std dev = 0.114, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( phenotype(A, E), location(A, F) )
%   | then if ( phenotype(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.029212574747092768;  // std dev = 0.509, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5994383298248124;  // std dev = 0.459, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.20221895958877767;  // std dev = 0.097, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.10681729047887277;  // std dev = 1.243, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.04733056057923057;  // std dev = 3.452, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.13168984675175238;  // std dev = 1.296, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.07989012588262474;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17902620221335724;  // std dev = 0.179, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), complex(E, D) )
%   | | then if ( phenotype(A, F), location(E, G) )
%   | | | then return -0.013243899548629673;  // std dev = 0.868, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.05560748559894332;  // std dev = 0.793, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( complex(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.37995356204786396;  // std dev = 1.424, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.16635786348206158;  // std dev = 0.303, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.47055178357985383;  // std dev = 0.331, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1565395186269802;  // std dev = 0.536, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.03047627649119265;  // std dev = 2.587, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return 0.09981088832049835;  // std dev = 3.577, 73.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then return -0.04747438033293172;  // std dev = 0.234, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( enzyme(C, G), interaction(C, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2656680118525347;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13465032546604697;  // std dev = 1.368, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return 0.03822761878770241;  // std dev = 0.271, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   else if ( complex(A, I), enzyme(A, J) )
%   | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.40324359345753963;  // std dev = 0.120, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.14071307591880874;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1746154966456266;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, M) )
%   | | | then return 0.029719252318121076;  // std dev = 4.217, 130.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=42 */
%   | | | else return 0.06586620375128233;  // std dev = 1.542, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(E, D) )
%   | | | then return 0.252442566613146;  // std dev = 2.317, 66.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=59 */
%   | | | else return -0.28684719503113143;  // std dev = 0.411, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(E, G), enzyme(A, G) )
%   | | | then return 0.33010502155016647;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17298513206420024;  // std dev = 0.841, 31.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | else return -0.14637943373452905;  // std dev = 0.386, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.14579540804790678;  // std dev = 0.095, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.1958982090452861;  // std dev = 0.149, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.00988701965116814;  // std dev = 2.174, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.041827111977612366;  // std dev = 3.307, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '8.594', 'seconds']
Refined model CLL: -0.208842


******************************************
Best model found
******************************************
Results 

CLL : -0.217203 

AUC ROC : 0.948354 

AUC PR : 0.36751 

Precision : 0.402062 

Recall : 0.588679 

F1 : 0.477795 

Total Learning Time : 49.921 

Total Inference Time : 75.75489926338196 

Total revision time: 134.6581932621002
Best scored revision CLL: -0.208842


Results 

CLL : -0.217203 

AUC ROC : 0.948354 

AUC PR : 0.36751 

Precision : 0.402062 

Recall : 0.588679 

F1 : 0.477795 

Total Learning Time : 134.75669804382323 

Total Inference Time : 75.75489926338196 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.376
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1855510703308291;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14500375567888238;  // std dev = 5.928, 164.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=51 */
%   | | | else return 0.13999829517651494;  // std dev = 5.334, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12097886420820364;  // std dev = 5.519, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   | | | else return 0.16367079719733296;  // std dev = 5.584, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11887877550659276;  // std dev = 4.189, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | | else return 0.10487099698990508;  // std dev = 6.722, 209.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10070398389883413;  // std dev = 7.858, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11297404807767146;  // std dev = 7.679, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7356862788398775;  // std dev = 0.012, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26458019305844654;  // std dev = 0.017, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.044995224566511664;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.06776361763099663;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.056790032564985854;  // std dev = 4.223, 127.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=44 */
%   | | | else return 0.03365852572016326;  // std dev = 5.730, 152.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.017312230282151668;  // std dev = 7.205, 299.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05075223533464609;  // std dev = 6.979, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.912', 'seconds']
Parameter learned model CLL:-0.323839 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.928, 113, 51], 'false,false,false,false': [5.334, 93, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.519, 99, 44], 'false,false,false,false': [5.584, 89, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.189, 54, 26], 'false,false,false,false': [6.722, 143, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.858, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.679, 164, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.012, 0, 44], 'true,false': [0.017, 92, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.134, 54, 25], 'false,false,false,false': [3.901, 45, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.223, 83, 44], 'false,false,false,false': [5.73, 104, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.205, 207, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.979, 172, 92]}]
{'': [nan, 0.22020997707729253], 'false': [nan, 0.22020997707729223], 'false,false': [nan, 0.22020997707729253], 'false,false,false': [nan, 0.22020997707729223]}
{'': [nan, 0.2134138101887324], 'false': [nan, 0.2134138101887291], 'false,false': [nan, 0.2134138101887324], 'false,false,false': [0.21426977989291893, 0.2123524170193816]}
{'': [nan, 0.22062269862871023], 'false': [nan, 0.22062269862871023], 'false,false': [nan, 0.2206226986287093], 'false,false,false': [0.2130162563962807, 0.22763144127747614]}
{'': [nan, 0.21710602577849322], 'false': [nan, 0.21710602577849322], 'false,false': [nan, 0.217106025778492], 'false,false,false': [0.2193749999999989, 0.2161832025371005]}
{'': [nan, 0.22051974149351994], 'false': [nan, 0.22051974149351994], 'false,false': [nan, 0.22051974149352022], 'false,false,false': [nan, 0.22051974149352022]}
{'': [nan, 0.2303564417554964], 'false': [nan, 0.2303564417554964], 'false,false': [nan, 0.23035644175549724], 'false,false,false': [nan, 0.23035644175549672]}
{'': [0.21897791582489656, 0.2199193220581464], 'false': [nan, 0.2199193220581464], 'false,false': [nan, 0.2199193220581464], 'false,false,false': [0.21631148854350327, 0.22383217993079627], 'true': [3.298820133259348e-06, 3.0488356259145384e-06], 'true,true': [nan, 3.298820133259348e-06], 'true,true,false': [nan, 3.298820133259348e-06]}
{'': [nan, 0.18176523327781416], 'false': [nan, 0.18176523327781416], 'false,false': [nan, 0.1817652332778137], 'false,false,false': [0.14044921488927897, 0.21604229311894071]}
{'': [nan, 0.17360754756379476], 'false': [nan, 0.17360754756379454], 'false,false': [nan, 0.17360754756379454], 'false,false,false': [nan, 0.17360754756379454]}
{'': [nan, 0.1844947592690909], 'false': [nan, 0.1844947592690909], 'false,false': [nan, 0.18449475926909098], 'false,false,false': [nan, 0.18449475926909098]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.014
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( complex(A, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.16172036367094095;  // std dev = 0.460, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, D) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then return 0.15148226843284515;  // std dev = 0.455, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.043334120284697505;  // std dev = 2.018, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.21861405137858195;  // std dev = 4.453, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( location(A, E), location(C, E) )
%   | then return 0.09092189161517783;  // std dev = 0.432, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.3373007112956592;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0892447798830319;  // std dev = 2.267, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.8372388881868293;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1627611118131707;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5086513135577242;  // std dev = 3.820, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | | | else return -0.16500505437516594;  // std dev = 0.048, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return 0.329400712552002;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.72271978542705;  // std dev = 0.067, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5310627338485115;  // std dev = 0.771, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( phenotype(E, F) )
%   | | then return -0.18358029722371264;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.16286473374905625;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.07676254898203748;  // std dev = 1.335, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( complex(J, I), interaction(J, K) )
%   | | | then return -0.029027141966094922;  // std dev = 1.481, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.09524819827927171;  // std dev = 2.682, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.11901969620290272;  // std dev = 3.721, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | | else return 0.2137286813562707;  // std dev = 4.443, 93.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=38 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.5763895671904474;  // std dev = 0.236, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.5694646776089423;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, C), interaction(F, F) )
%   | | | then return 0.027889659867054346;  // std dev = 1.950, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.15243292842070688;  // std dev = 3.907, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5624989290992136;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( phenotype(A, J), complex(I, H) )
%   | | | then return -0.12216856993924428;  // std dev = 0.917, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.06166475700920626;  // std dev = 2.365, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( location(A, K) )
%   | | | then return 0.0971186025478236;  // std dev = 4.269, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
%   | | | else return -0.03926431069471511;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), phenotype(E, F) )
%   | then return 0.11718910789409707;  // std dev = 0.400, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | else if ( interaction(G, A), interaction(G, C) )
%   | | then return 0.7124202622545033;  // std dev = 0.184, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.0829199870937747;  // std dev = 1.316, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.2519189668838617;  // std dev = 1.591, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.4231527465895845;  // std dev = 0.104, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6952204801277811;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18271660273323465;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.11024358583415185;  // std dev = 1.558, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.020714791124749585;  // std dev = 5.397, 172.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=44 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.34137745685104603;  // std dev = 0.209, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(C, E), phenotype(C, F) )
%   | | then return 0.024454793372524677;  // std dev = 0.400, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | else return -0.06916693458806128;  // std dev = 0.347, 86.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=15 */
%   else if ( location(A, G), enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.7053160425287058;  // std dev = 0.088, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.23300368928884466;  // std dev = 0.235, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.34117698765141463;  // std dev = 0.177, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03511125065691811;  // std dev = 3.388, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.3495510923538373;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.24168292013599615;  // std dev = 1.175, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.570253682355873;  // std dev = 0.192, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.19467871929845626;  // std dev = 0.428, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( phenotype(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.4043334807127527;  // std dev = 0.346, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, F), complex(H, I) )
%   | | | then return 0.0688084491460963;  // std dev = 0.950, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1730304929990284;  // std dev = 1.202, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(K, L), interaction(K, M) )
%   | | | then return 0.2866839059535885;  // std dev = 1.206, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.12445552593644;  // std dev = 2.671, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.08718526726232387;  // std dev = 2.532, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return -0.017314216439207768;  // std dev = 2.023, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then return 0.20280019539071992;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15005905038809159;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2698310381169417;  // std dev = 0.170, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.29925781005741176;  // std dev = 0.216, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.17344841615474807;  // std dev = 0.116, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return -0.014849375461938865;  // std dev = 3.005, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | | else return 0.04412165297353311;  // std dev = 5.088, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, A) )
%   | then return -0.03828637336204079;  // std dev = 0.207, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( complex(C, E), location(A, F) )
%   | | then return 0.13765743099445168;  // std dev = 0.395, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else return 0.29225697406170353;  // std dev = 0.419, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( interaction(A, G) )
%   | then if ( complex(G, H), interaction(G, I) )
%   | | then return 0.02133680761943398;  // std dev = 0.342, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( interaction(G, J), phenotype(A, K) )
%   | | | then return 0.05020909276766643;  // std dev = 1.416, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.10054125903030166;  // std dev = 2.036, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1927969514960456;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return -0.013895535357375541;  // std dev = 2.857, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | | else return 0.03766277263974959;  // std dev = 2.920, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.1970830620843177;  // std dev = 0.085, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.05133955279168433;  // std dev = 1.951, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.08213737537747082;  // std dev = 2.164, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | else if ( phenotype(C, H) )
%   | | | then return 0.08092116516904127;  // std dev = 2.963, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.015955022571869766;  // std dev = 2.595, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   else if ( interaction(A, I), location(A, J) )
%   | then if ( enzyme(A, K) )
%   | | then return 0.04869441013073654;  // std dev = 0.340, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else return -0.020473794994312584;  // std dev = 0.350, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | else if ( location(A, L) )
%   | | then return -0.10196193304546271;  // std dev = 0.565, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.05126884611276771;  // std dev = 0.442, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.127', 'seconds']
Refined model CLL: -0.263089


******************************************
Best model found
******************************************
Results 

CLL : -0.265116 

AUC ROC : 0.895432 

AUC PR : 0.172099 

Precision : 0.208038 

Recall : 0.31769 

F1 : 0.251429 

Total Learning Time : 16.014 

Total Inference Time : 8.577345132827759 

Total revision time: 32.55372513771057
Best scored revision CLL: -0.263089


Results 

CLL : -0.265116 

AUC ROC : 0.895432 

AUC PR : 0.172099 

Precision : 0.208038 

Recall : 0.31769 

F1 : 0.251429 

Total Learning Time : 32.652229919433594 

Total Inference Time : 8.577345132827759 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.149
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19673161226486705;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1886390753847721;  // std dev = 5.786, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
%   | | | else return 0.14728950663794113;  // std dev = 4.827, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.09243733943149356;  // std dev = 4.471, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | | | else return 0.1387859420604672;  // std dev = 6.226, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.20258964078860978;  // std dev = 3.339, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return 0.09812686411144271;  // std dev = 6.790, 215.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09329918990330723;  // std dev = 7.605, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10038158060562978;  // std dev = 7.466, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7254655022103449;  // std dev = 0.071, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.27380288068727693;  // std dev = 0.096, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05790826014635254;  // std dev = 4.702, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | | else return 0.08813293929515746;  // std dev = 4.025, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.01739552891059251;  // std dev = 3.462, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | | | else return 0.043132636257594247;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03221364214419228;  // std dev = 7.133, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.011038817536925856;  // std dev = 7.209, 277.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.350', 'seconds']
Parameter learned model CLL:-0.334169 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.542, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.786, 94, 52], 'false,false,false,false': [4.827, 74, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.471, 70, 28], 'false,false,false,false': [6.226, 117, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.339, 27, 19], 'false,false,false,false': [6.79, 148, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.605, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.466, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.071, 0, 28], 'true,false': [0.096, 49, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.702, 67, 33], 'false,false,false,false': [4.025, 46, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.462, 63, 28], 'false,false,false,false': [6.253, 120, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.133, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.209, 191, 86]}]
{'': [nan, 0.2239444478888966], 'false': [nan, 0.2239444478888964], 'false,false': [nan, 0.2239444478888966], 'false,false,false': [nan, 0.2239444478888964]}
{'': [nan, 0.22394444788889423], 'false': [nan, 0.22394444788889434], 'false,false': [nan, 0.22394444788889423], 'false,false,false': [0.22931131544379643, 0.21570644718792784]}
{'': [nan, 0.21573143835703001], 'false': [nan, 0.21573143835703001], 'false,false': [nan, 0.21573143835702946], 'false,false,false': [0.20399736409785071, 0.22153137374936904]}
{'': [nan, 0.22094218355883566], 'false': [nan, 0.22094218355883566], 'false,false': [nan, 0.2209421835588357], 'false,false,false': [0.24243856332703198, 0.2144196872437722]}
{'': [nan, 0.21990378444224035], 'false': [nan, 0.21990378444224035], 'false,false': [nan, 0.21990378444224093], 'false,false,false': [nan, 0.21990378444224093]}
{'': [nan, 0.22749131223080227], 'false': [nan, 0.22749131223080227], 'false,false': [nan, 0.22749131223080263], 'false,false,false': [nan, 0.22749131223080107]}
{'': [0.2312503099222784, 0.22424042890426668], 'true': [0.00017939894297880343, 0.00018635736957664913], 'false': [nan, 0.22424042890426668], 'false,false': [nan, 0.22424042890426668], 'false,false,false': [0.22109999999999982, 0.2281293394167825], 'true,true': [nan, 0.00017939894297880343], 'true,true,false': [nan, 0.00017939894297880343]}
{'': [nan, 0.1900547974629978], 'false': [nan, 0.1900547974629978], 'false,false': [nan, 0.19005479746299814], 'false,false,false': [0.13172364486244406, 0.2196516971425014]}
{'': [nan, 0.19345229224842914], 'false': [nan, 0.19345229224842853], 'false,false': [nan, 0.19345229224842853], 'false,false,false': [nan, 0.19345229224842853]}
{'': [nan, 0.18762595689243816], 'false': [nan, 0.18762595689243816], 'false,false': [nan, 0.1876259568924377], 'false,false,false': [nan, 0.1876259568924377]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.732
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1607805140468806;  // std dev = 4.005, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0843394112899884;  // std dev = 5.423, 168.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.6443356231566907;  // std dev = 0.310, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( phenotype(D, C), interaction(E, D) )
%   | | then return 1.675402477651268E-4;  // std dev = 0.359, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.825181619650786;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12067697335444706;  // std dev = 4.285, 93.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8113821431385978;  // std dev = 0.056, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.15212863267869262;  // std dev = 0.054, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.005566942374969997;  // std dev = 1.295, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.25799962330331644;  // std dev = 3.208, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.6249019752807059;  // std dev = 0.075, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(D, A), interaction(A, E) )
%   | | then return -0.08125154641199561;  // std dev = 0.238, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( interaction(C, D), enzyme(D, F) )
%   | | | then return -0.0015519348876787055;  // std dev = 1.203, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.17246032356495297;  // std dev = 4.407, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then if ( complex(G, H) )
%   | | then return 0.24400298235585127;  // std dev = 0.438, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.10526618797491814;  // std dev = 0.381, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then return 0.04531096472389996;  // std dev = 0.396, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.04034807326963254;  // std dev = 1.749, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.1315427004746135;  // std dev = 2.349, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return -0.06641871935434725;  // std dev = 0.916, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.5016537243856689;  // std dev = 0.098, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(F, A), location(F, G) )
%   | | then return -0.04429695528041901;  // std dev = 0.231, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.45098893940282136;  // std dev = 0.749, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.056276206179471905;  // std dev = 4.196, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7509061156739895;  // std dev = 0.386, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.18128639244353215;  // std dev = 0.111, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.17735326045756863;  // std dev = 1.941, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.10906173428411778;  // std dev = 3.270, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, D), phenotype(C, F) )
%   | | | then return 0.35364940466492434;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.533347125692085;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3211941177703892;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.0737891032233657;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.5034096553064862;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14875626332609282;  // std dev = 0.844, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11769811884168295;  // std dev = 0.056, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.12862083391819648;  // std dev = 2.521, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.054937710898972404;  // std dev = 5.665, 193.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=53 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.286227228021862;  // std dev = 0.294, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.030906112979425474;  // std dev = 0.336, 94.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=18 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( complex(A, H), complex(F, H) )
%   | | then return 0.34648435661809585;  // std dev = 1.013, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(F, I), phenotype(F, J) )
%   | | | then return 0.03106731604333716;  // std dev = 2.940, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.11181793409881886;  // std dev = 2.976, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.7327645589002251;  // std dev = 0.250, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.21488793390422084;  // std dev = 0.104, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.18552141644467166;  // std dev = 1.006, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08696470919252353;  // std dev = 1.719, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2622042209099765;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, F), enzyme(A, G) )
%   | | | then return 0.706738287767106;  // std dev = 0.137, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5709383531723287;  // std dev = 0.480, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1855640009422585;  // std dev = 0.057, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.29052912327679054;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, K), interaction(L, I) )
%   | | | then return -0.05339396882021092;  // std dev = 1.947, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.05218513688164126;  // std dev = 2.457, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.09926327310817556;  // std dev = 3.075, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return 0.03068685771498669;  // std dev = 2.778, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.012292099004872391;  // std dev = 0.252, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), enzyme(E, F) )
%   | | then if ( interaction(E, E), phenotype(D, G) )
%   | | | then return -0.0547509616650252;  // std dev = 0.866, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.09840335670020574;  // std dev = 2.308, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.13026851657820535;  // std dev = 2.528, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.24677815220884175;  // std dev = 1.569, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5234405101911254;  // std dev = 0.390, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.20234550578106456;  // std dev = 0.398, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.08928657373163887;  // std dev = 2.435, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.021213043533997163;  // std dev = 2.711, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.17911967879871088;  // std dev = 0.113, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.5084574353246096;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6776370692074867;  // std dev = 0.196, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.17246470909969921;  // std dev = 0.094, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.2689705829878829;  // std dev = 0.113, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( phenotype(G, I), phenotype(A, I) )
%   | | | then return -0.07804782473474015;  // std dev = 1.412, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.0012016023815357298;  // std dev = 2.189, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.08270081418742925;  // std dev = 2.989, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.02036270270144238;  // std dev = 3.406, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then return -0.14556588276051993;  // std dev = 0.859, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.18459357326174744;  // std dev = 0.051, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, F) )
%   | then if ( interaction(A, G), phenotype(G, F) )
%   | | then if ( interaction(G, H) )
%   | | | then return -0.0503726718241633;  // std dev = 1.897, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return 0.20834287665844797;  // std dev = 0.801, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.44724762067909246;  // std dev = 2.218, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.22865793930243933;  // std dev = 0.357, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return -0.07030235174020617;  // std dev = 0.229, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.024547098264223945;  // std dev = 2.469, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.06603151768509649;  // std dev = 1.645, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.125', 'seconds']
Refined model CLL: -0.226522


******************************************
Best model found
******************************************
Results 

CLL : -0.231771 

AUC ROC : 0.957525 

AUC PR : 0.285353 

Precision : 0.298279 

Recall : 0.551237 

F1 : 0.387097 

Total Learning Time : 15.732 

Total Inference Time : 7.038825988769531 

Total revision time: 30.25095005607605
Best scored revision CLL: -0.226522


Results 

CLL : -0.231771 

AUC ROC : 0.957525 

AUC PR : 0.285353 

Precision : 0.298279 

Recall : 0.551237 

F1 : 0.387097 

Total Learning Time : 30.349454837799072 

Total Inference Time : 7.038825988769531 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.806
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.13780995204866345;  // std dev = 4.876, 118.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=33 */
%   | | | else return 0.17119241336038063;  // std dev = 4.973, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6695670371392247;  // std dev = 3.410, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | | else return -0.16194798002781993;  // std dev = 0.027, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else if ( location(A, I) )
%   | | | then return 0.41744468851740324;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5655379819307461;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07777840633115897;  // std dev = 4.408, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.66739015323267;  // std dev = 1.381, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.1429801137805526;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0672103994235226;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09388724241132687;  // std dev = 1.319, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4291538603088888;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.047788644375545475;  // std dev = 0.712, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43593350379163204;  // std dev = 1.963, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else return 0.053407481284885865;  // std dev = 5.019, 218.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5320784806392143;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.01987557161016779;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.20996488523942944;  // std dev = 0.966, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14888983990825796;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07526484368795557;  // std dev = 5.433, 234.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4004505735013737;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.01773919102057074;  // std dev = 1.222, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2664586032842682;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27826726925055;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2536699290002804;  // std dev = 0.609, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.30916227727562173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.01889351010702073;  // std dev = 2.420, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.06205853880886771;  // std dev = 1.036, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.08083002223433365;  // std dev = 4.725, 168.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=55 */
%   | | | else return -0.004795919113101297;  // std dev = 1.928, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26831002662328507;  // std dev = 0.229, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24727461964130437;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.6760425532508105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5468955038821152;  // std dev = 1.376, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18276733715763532;  // std dev = 0.571, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.10643647300491377;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.032279380260252205;  // std dev = 4.155, 141.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17816107402927728;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.15134446489817016;  // std dev = 0.736, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4181267136552124;  // std dev = 2.610, 79.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=71 */
%   | | else return -0.15389051633243647;  // std dev = 0.213, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2041630253178488;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.06766712482352452;  // std dev = 1.539, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18400031885214319;  // std dev = 0.150, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.019444872855413103;  // std dev = 0.689, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0197787826167904;  // std dev = 1.601, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.05526971031586775;  // std dev = 0.598, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.02474955461312921;  // std dev = 1.570, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2747696304594157;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05957948762905051;  // std dev = 3.294, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
%   | | | else return 0.06970531734726935;  // std dev = 1.396, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14556561756121816;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24821033603989806;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18232664549889466;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.011112589190174512;  // std dev = 2.382, 110.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.22351213849920473;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04300203734412251;  // std dev = 3.365, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
%   | | | else return 0.026242887875385642;  // std dev = 1.435, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.259', 'seconds']
Parameter learned model CLL:-0.198268 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.876, 85, 33], 'false,false,true,false': [4.973, 79, 36], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.41, 14, 69], 'false,false,true,false': [0.027, 146, 0], 'false,false,false,true': [1.31, 3, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.05, 0, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.408, 96, 34], 'false,true,false,true': [1.381, 2, 37], 'false,true,false,false': [0.0, 77, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [1.319, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.055, 0, 10], 'true,false': [0.712, 1, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.963, 5, 14], 'false,true,false': [5.019, 161, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.966, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.89, 1, 4], 'false,true': [5.433, 163, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.222, 6, 2], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.038, 0, 7], 'true,true,false': [0.609, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.42, 47, 12], 'false,false,true': [1.036, 2, 3], 'false,false,false,true': [4.725, 113, 55], 'false,false,false,false': [1.928, 20, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.229, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [1.376, 2, 33], 'true,false': [0.571, 82, 0], 'false,true': [0.771, 1, 3], 'false,false,true': [4.155, 101, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.736, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.61, 8, 71], 'false,true,false': [0.213, 158, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.539, 17, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.15, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.689, 1, 3], 'false,true,true': [1.601, 32, 11], 'false,true,false,true': [0.598, 1, 1], 'false,true,false,false': [1.57, 38, 17], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [3.294, 74, 40], 'false,false,false,false': [1.396, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.094, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.009, 0, 3], 'false,true': [2.382, 81, 29], 'false,false,true': [0.004, 0, 3], 'false,false,false,true': [3.365, 74, 40], 'false,false,false,false': [1.435, 9, 4]}]
{'': [-1.6148698540002277e-16, 0.20968441936883894], 'false': [0.18750000000000006, 0.2067360000000013], 'false,false': [0.20844001547274796, 0.1799307958477507], 'false,false,true': [0.20145073254811968, 0.2150472589792073], 'false,true': [0.0, 1.4802973661668753e-16], 'false,false,false': [0.18750000000000003, 0.17283950617283952], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.07638888888888906, 0.21517807645912973], 'false': [0.0, 0.2138094018117456], 'false,false': [0.21055743109269612, 0.24519614358464087], 'false,false,false': [0.24519614358464087, nan], 'false,false,true': [0.14011041791861686, 5.073065018926351e-06], 'true': [7.401486830834377e-17, 0.13888888888888884], 'false,true': [0.0, nan]}
{'': [0.00041042114951229567, 0.1590653178772847], 'false': [0.15649668401020658, 0.19818481210382322], 'false,false': [0.20408163265306115, 0.1932870475171719], 'false,false,true': [nan, 0.20408163265306115], 'false,false,false': [0.1932870475171719, nan], 'false,true': [0.14943196059061403, 0.1630018959062266], 'false,true,false': [0.048913241031823256, -5.767392335715098e-17], 'true': [0.00031038099431873745, 0.0]}
{'': [0.07414508307682256, 0.13725736837578711], 'false': [0.1333242441038623, 0.19100673751014097], 'false,false': [0.0, 0.18751219860347673], 'false,false,false': [0.18751219860347673, nan], 'false,true': [0.20285013993200982, 0.11553385864893004], 'false,true,true': [nan, 0.20285013993200995], 'true': [0.0003030020780980136, 0.25379369409156055], 'false,false,true': [nan, 0.0]}
{'': [0.13356680013597005, 0.13072548834881156], 'true': [0.11664486604237428, 0.15834641089359744], 'false': [0.12614594122081155, 0.21093414858728463], 'false,false': [0.0, 0.2215979185263396], 'false,false,false': [0.1867764291105764, 0.24999999999999997], 'true,true': [0.11664486604237428, nan], 'false,false,true': [nan, 0.0]}
{'': [0.031227607862745043, 0.13004728459857437], 'false': [0.09922800349647064, 0.13753452707544], 'false,false': [0.21483133648584013, 0.13510843786412752], 'false,false,false': [0.13290191343817678, 0.1430167910937078], 'true': [0.03393421585540989, 0.0], 'true,true': [0.00020375641897715395, 0.09257750132082959], 'true,false': [nan, 0.0]}
{'': [0.1271295864483451, 0.12330230769263141], 'true': [0.08325876100008255, 0.003974780460581591], 'false': [0.14858897535992746, 0.1224332512968828], 'false,false': [0.1224332512968828, nan], 'true,true': [0.004799820828659111, 0.09300822548012737], 'true,true,false': [0.0, 0.05412178414032002], 'true,true,true': [0.0052395766981707, 0.0]}
{'': [0.04529701263093685, 0.10309358916444661], 'false': [0.1016568480334298, 0.11081047566448157], 'false,false': [0.0, 0.11272845450338866], 'false,false,false': [0.11272845450338866, nan], 'false,true': [0.08626061057968026, 0.0002870629593903109], 'false,true,true': [nan, 0.08626061057968056], 'true': [-4.625929269271485e-18, 0.0902344599992284], 'false,false,true': [0.0, nan]}
{'': [0.05062860083807381, 0.08117802201479728], 'false': [0.054414943616160796, 0.10027167489462509], 'false,false': [8.253798841256765e-06, 0.1015916274854868], 'false,false,false': [0.09518408343062598, 0.16237052857227555], 'false,true': [0.05959574505420702, 0.04975815651583407], 'true': [0.0028006674671073525, 0.11869117022739051], 'true,false': [nan, 0.11869117022739051], 'false,true,false': [0.17882749485471433, 0.04484005646026541]}
{'': [0.0017543289651405956, 0.08062395213899931], 'false': [0.05160013379405561, 0.10371404470087378], 'false,false': [6.267370848393276e-06, 0.10539753846297736], 'false,false,false': [0.09931983850603461, 0.15844217322002185], 'true': [0.0022466324671560553, 2.5035358076042995e-05], 'true,true': [0.0022466324671560553, nan], 'true,true,true': [0.0012505876835181365, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 32.448
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( complex(A, I), complex(H, J) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.01604367194161748;  // std dev = 2.248, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.1402002171507939;  // std dev = 3.974, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | | else return 0.23429572409033705;  // std dev = 5.057, 109.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.763465875030611;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.504142292933094;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6659955166259309;  // std dev = 3.404, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | | else return -0.16434774241997724;  // std dev = 0.120, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08195445345464997;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.16050368961030412;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.564671598470062;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6086233070824347;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12906204110466113;  // std dev = 0.026, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.13062245326972652;  // std dev = 4.192, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.664621096350152;  // std dev = 1.391, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14520371379398442;  // std dev = 0.066, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.21715701575956134;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.10379202889936145;  // std dev = 1.051, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0030078463281957625;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.34446785605087693;  // std dev = 0.296, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.40461159096059485;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( complex(G, F), phenotype(A, H) )
%   | | | then return 0.03456039628411704;  // std dev = 0.899, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.16218378460446353;  // std dev = 2.186, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.0759597811447829;  // std dev = 4.907, 178.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=54 */
%   | | | else return 0.17809679666268702;  // std dev = 1.036, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5827120744642236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.05218889681119562;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.22329818698898682;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3294950942155629;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.10099844507665713;  // std dev = 1.256, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.0386807428123552;  // std dev = 1.351, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.03684013754867093;  // std dev = 2.676, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.1578858512277312;  // std dev = 2.444, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.06366012921131586;  // std dev = 3.881, 121.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=37 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4381200312910183;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.04754494588993359;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.04445697580043315;  // std dev = 1.468, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3062420479658994;  // std dev = 0.085, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), phenotype(A, G) )
%   | | then if ( interaction(F, H), interaction(H, D) )
%   | | | then return 0.02605828796551617;  // std dev = 2.835, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return -0.06503260222190117;  // std dev = 0.834, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.24177262255312498;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07106396941035584;  // std dev = 3.001, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.17890133715317474;  // std dev = 1.106, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.07090572654209173;  // std dev = 2.965, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.09343671871864902;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.25679516289497356;  // std dev = 0.978, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24714917197724154;  // std dev = 0.077, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5238481923487976;  // std dev = 1.683, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18866003383608895;  // std dev = 0.060, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( enzyme(G, H) )
%   | | then if ( phenotype(F, I), interaction(J, G) )
%   | | | then return 0.06709875895985078;  // std dev = 2.749, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0.18126922542002022;  // std dev = 1.640, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( complex(G, K), complex(A, K) )
%   | | | then return -0.07585861521310854;  // std dev = 0.561, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.044864304204450284;  // std dev = 1.965, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | else return -0.03734023482034757;  // std dev = 0.271, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17226656136767482;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3163136417202636;  // std dev = 0.294, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), location(G, H) )
%   | | | then return 0.32591185969376024;  // std dev = 1.738, 35.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=29 */
%   | | | else return 0.44705045409559896;  // std dev = 2.003, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10778464878393695;  // std dev = 0.032, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.17672813859213984;  // std dev = 0.346, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.22438262509511686;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.08808821451723184;  // std dev = 1.181, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.13259017256184782;  // std dev = 0.787, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.07671939212966776;  // std dev = 0.181, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.2138664140863332;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.22163562323504327;  // std dev = 1.491, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return -0.1001293615117956;  // std dev = 1.397, 61.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=6 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.0707304175385502;  // std dev = 0.903, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -7.55077257955138E-4;  // std dev = 0.829, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.3469203558394897;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return -0.018890310149696072;  // std dev = 3.480, 138.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.03433355233671637;  // std dev = 1.548, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.13570731527784183;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.27318367580503367;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15026360657981422;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return -0.07930493966555383;  // std dev = 1.096, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.02482949066466378;  // std dev = 1.978, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | else return -0.06451245316305645;  // std dev = 0.145, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2732987612339189;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.07621085225083807;  // std dev = 1.999, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 2.610309889071313E-4;  // std dev = 3.073, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '58.334', 'seconds']
Refined model CLL: -0.199702


******************************************
Best model found
******************************************
Results 

CLL : -0.190906 

AUC ROC : 0.986696 

AUC PR : 0.312048 

Precision : 0.172633 

Recall : 0.769504 

F1 : 0.282001 

Total Learning Time : 32.448 

Total Inference Time : 122.4186999797821 

Total revision time: 175.41534667396547
Best scored revision CLL: -0.198268


Results 

CLL : -0.190906 

AUC ROC : 0.986696 

AUC PR : 0.312048 

Precision : 0.172633 

Recall : 0.769504 

F1 : 0.282001 

Total Learning Time : 175.49032073402407 

Total Inference Time : 122.4186999797821 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.896
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11648226843284444;  // std dev = 4.795, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   | | | else return 0.18661608838418303;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6285643213018635;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6553703723465936;  // std dev = 3.719, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | | else return -0.1617701578487082;  // std dev = 0.061, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else if ( location(A, I) )
%   | | | then return 0.14089779892385604;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.563483119587289;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5776873145590465;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07064271761091877;  // std dev = 4.390, 138.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6189112194050513;  // std dev = 2.124, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14490254034403452;  // std dev = 7.15e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8126953579448224;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06220676319825318;  // std dev = 1.618, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3156178880865644;  // std dev = 1.334, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.43777516488067514;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23323841956295366;  // std dev = 0.750, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5346425421423955;  // std dev = 1.806, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.019070713103868098;  // std dev = 5.264, 259.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5399573343779334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.0784041770914061;  // std dev = 1.634, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2190669447211383;  // std dev = 0.916, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.35746642077964486;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.06379168688418554;  // std dev = 5.815, 278.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40617840499487057;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.17533754674403973;  // std dev = 1.497, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18845691527671063;  // std dev = 0.975, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.28725413586185305;  // std dev = 0.910, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31303575040231524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.031104181701967458;  // std dev = 2.736, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.16921070835099553;  // std dev = 0.939, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06708797637870823;  // std dev = 4.684, 168.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=51 */
%   | | | else return 0.0865915276700997;  // std dev = 2.167, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.29551561558611217;  // std dev = 0.268, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.24992719864036883;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.007259300792065604;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5159322263933618;  // std dev = 1.323, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18393651979297101;  // std dev = 0.953, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.08032744916609137;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06807860446545998;  // std dev = 4.366, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return -0.011987077918350483;  // std dev = 1.214, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.22962440723825286;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39511376575652973;  // std dev = 2.958, 93.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=82 */
%   | | else return -0.15207972705979567;  // std dev = 0.395, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.31011499948558785;  // std dev = 0.730, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.182520728721359;  // std dev = 1.158, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.21330286286151962;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.15823132616786884;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.0464699161260286;  // std dev = 0.975, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05857821393505796;  // std dev = 2.017, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20941517413559665;  // std dev = 0.454, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.02043940964541302;  // std dev = 1.359, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19325176727731458;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.021334639537859152;  // std dev = 4.015, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   | | | else return -0.06775200362911755;  // std dev = 1.409, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.048491927193872755;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05935578666096265;  // std dev = 0.888, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1957848308494341;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.04315299125888475;  // std dev = 2.724, 132.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1649006167245301;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.009997951093912565;  // std dev = 4.166, 174.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=47 */
%   | | | else return -0.03759983229833811;  // std dev = 1.460, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.305', 'seconds']
Parameter learned model CLL:-0.197049 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.795, 89, 31], 'false,false,true,false': [5.497, 92, 45], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [0.953, 1, 10], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.719, 17, 76], 'false,false,true,false': [0.061, 168, 0], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.036, 0, 11], 'true,false': [2.11e-08, 0, 6], 'false,true,true': [4.39, 104, 34], 'false,true,false,true': [2.124, 5, 48], 'false,true,false,false': [7.15e-08, 93, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.618, 11, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.334, 2, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.75, 1, 3], 'false,true,true,false': [1.806, 4, 21], 'false,true,false': [5.264, 201, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.634, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.916, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.025, 0, 10], 'false,true': [5.815, 196, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.497, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.975, 1, 9], 'true,true,false': [0.91, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.736, 50, 19], 'false,false,true': [0.939, 1, 8], 'false,false,false,true': [4.684, 117, 51], 'false,false,false,false': [2.167, 18, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.268, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.886, 1, 3], 'true,true,false,false': [1.323, 2, 33], 'true,false': [0.953, 103, 0], 'false,true': [0.909, 1, 5], 'false,false,true': [4.366, 106, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [1.214, 2, 7], 'true,false': [0.064, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.958, 11, 82], 'false,true,false': [0.395, 196, 0], 'false,false,true,true': [0.73, 1, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.158, 4, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.08, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.975, 1, 5], 'false,true,true': [2.017, 44, 13], 'false,true,false,true': [0.454, 1, 8], 'false,true,false,false': [1.359, 36, 11], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [4.015, 104, 47], 'false,false,false,false': [1.409, 13, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.935, 1, 7], 'true,true,true,false': [0.888, 1, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.1, 0, 3], 'false,true': [2.724, 100, 32], 'false,false,true': [0.014, 0, 5], 'false,false,false,true': [4.166, 127, 47], 'false,false,false,false': [1.46, 10, 4]}]
{'': [-2.0898315757650005e-16, 0.21585538752362995], 'false': [-2.5376526277146434e-16, 0.20895233620320447], 'false,false': [0.208269618010871, 0.22222222222222207], 'false,false,false': [0.22222222222222207, nan], 'false,false,true': [0.19159722222222345, 0.2205764824977368], 'true': [-1.4802973661668753e-16, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05246913580246929, 0.2097842442539521], 'false': [-6.344131569286608e-17, 0.20648589360279584], 'false,false': [0.2061542741787549, 0.2130177514792901], 'false,false,false': [0.2130177514792901, nan], 'false,false,true': [0.14872570289512177, 2.2354462712032274e-05], 'true': [6.344131569286608e-17, 0.08264462809917364], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.00012067650880019735, 0.15632233487857092], 'false': [0.15405021501553726, 0.19660951694886808], 'false,false': [0.19660951694886808, nan], 'false,false,true': [0.0, 0.1745147474010001], 'false,true': [0.13964460718411872, 0.1658148723393663], 'false,true,false': [0.08514793674154696, 5.491425713199699e-17], 'true': [0.00011529094559743895, 7.401486830834377e-17]}
{'': [0.09442264584540803, 0.133986936646314], 'false': [0.1309166608312986, 0.19122951506252958], 'false,false': [0.0, 0.19068667833834713], 'false,false,false': [0.19068667833834713, nan], 'false,true': [0.1426820311236498, 0.1069757878678692], 'false,true,true': [0.14064480589110342, 0.13047771887011464], 'true': [0.09888295890428289, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.05138013327345095, 0.12556910546707728], 'false': [0.12163667484693856, 0.20805632971608715], 'false,false': [0.0, 0.22401764433878854], 'false,false,false': [0.22401764433878854, nan], 'true': [0.10488792003229166, 6.0830544925494226e-05], 'true,true': [0.10488792003229166, nan], 'false,false,true': [nan, 0.0]}
{'': [0.10145964096253363, 0.1284479270819915], 'false': [0.10846855104738687, 0.1347042243526421], 'false,false': [0.09793658495629282, 0.135959316370713], 'false,false,false': [0.13060417223288767, 0.16776413390082842], 'true': [0.10703681003916718, 0.0], 'true,true': [0.09510691346832967, 0.11833781895822536], 'true,false': [nan, 0.0]}
{'': [0.11137987499091374, 0.12506739691625363], 'false': [0.13757035870931006, 0.12457142302128246], 'false,false': [0.12457142302128246, nan], 'true': [0.07121486046455645, 0.008815489563933115], 'true,true': [0.004618910840424734, 0.09016800521549793], 'true,true,false': [0.19621919576676106, 0.049973061550586756], 'true,true,true': [0.0047969442448102155, 0.0]}
{'': [0.09238474708575807, 0.10062704584503838], 'false': [0.09616401950166233, 0.2261304367137631], 'false,false': [0.26642188713903986, 0.16751958196624603], 'false,false,true': [0.26642188713903986, nan], 'false,false,false': [0.16751958196624603, nan], 'false,true': [0.09408737109510419, 0.0007959879526397258], 'false,true,true': [nan, 0.09408737109510425], 'true': [0.16385798081559821, 0.00040699526383791707]}
{'': [0.062205697950186746, 0.08801238780035713], 'false': [0.05912413046390215, 0.10628311305976651], 'false,false': [5.30746608455257e-05, 0.10849858453995556], 'false,false,false': [0.1067637952141165, 0.11677425674990055], 'true': [0.0007119078500156868, 0.12117324860258319], 'true,false': [0.0, 0.15844167827647582], 'false,true': [0.07139266182557302, 0.043793093722093376], 'false,true,false': [0.022951167301325397, 0.03929306220965126]}
{'': [0.09578304289079038, 0.08359665114037652], 'true': [0.11089603148503752, 0.003361924165472948], 'true,true': [0.11089603148503752, nan], 'true,true,true': [0.109375, 0.11257140734621221], 'false': [0.05622738100688244, 0.10179835848237488], 'false,false': [4.124623335515776e-05, 0.10369345409724902], 'false,false,false': [0.09973481124381155, 0.15218860025710215]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 20.63
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, E), phenotype(E, F) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( phenotype(H, J), phenotype(I, K) )
%   | | | then return 0.17140194714770407;  // std dev = 4.226, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
%   | | | else return -0.016851064900487805;  // std dev = 1.620, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.14116780302404067;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.22928295571806784;  // std dev = 4.758, 97.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7417519816275774;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7350684108025904;  // std dev = 0.099, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.11947341221095438;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6977831478668896;  // std dev = 3.224, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.16342705554198345;  // std dev = 0.120, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.327885804573448;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.17211419542655204;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.492784996642875;  // std dev = 0.256, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5855756589170293;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.1227398154703128;  // std dev = 3.712, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return -0.009769542412738245;  // std dev = 1.983, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6151278740115782;  // std dev = 2.128, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14361748958571754;  // std dev = 0.078, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return -0.1113002299203822;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.44272311466675696;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.20519608185550342;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44637971009978944;  // std dev = 0.046, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.02928756143080055;  // std dev = 0.648, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.46905503953181726;  // std dev = 2.665, 65.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=52 */
%   | | | else return -0.14712124817661165;  // std dev = 0.276, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.09890442689091328;  // std dev = 1.732, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.004348085679147964;  // std dev = 3.248, 103.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=23 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5826539923154717;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.06457645028069002;  // std dev = 1.188, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.13787642626246885;  // std dev = 1.013, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3517186759985496;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.0687958572254042;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3286068852069457;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1394547430489896;  // std dev = 0.024, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.0593470828083005;  // std dev = 5.208, 252.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=77 */
%   | | | else return 0.24774282487329083;  // std dev = 1.015, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.061924470564636236;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.2362808503512944;  // std dev = 1.074, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.003714894607251951;  // std dev = 0.791, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( phenotype(F, G), phenotype(A, H) )
%   | | | then return 0.29781519979054927;  // std dev = 0.133, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18176095021248498;  // std dev = 0.832, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.38584282880751136;  // std dev = 0.106, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.45337296113267855;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, A) )
%   | then return -0.12191548058333711;  // std dev = 0.034, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.530516419360741;  // std dev = 0.343, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.06453814498096032;  // std dev = 2.888, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | else if ( location(A, L), complex(A, M) )
%   | | | then return -4.953544136580475E-4;  // std dev = 2.517, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | | else return 0.04764698791679192;  // std dev = 3.560, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.40516841703637674;  // std dev = 0.249, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | else return -0.18324821407086042;  // std dev = 0.101, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(G, H) )
%   | | | then return 0.010083471600633618;  // std dev = 1.303, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.38774033882103653;  // std dev = 1.963, 49.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=41 */
%   | | else return -0.1439782199336201;  // std dev = 0.105, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.27651914986948717;  // std dev = 0.502, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.18344297889681419;  // std dev = 0.263, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.011693574244535468;  // std dev = 0.406, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.012647728558317813;  // std dev = 0.834, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.20411885315063003;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09566499300847717;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.22384813195369033;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.2512719269614191;  // std dev = 3.119, 83.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=67 */
%   | | | else return 0.4070261013216307;  // std dev = 0.256, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.12871958268797634;  // std dev = 0.027, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.47655686229582406;  // std dev = 0.268, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19885735889430065;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.011231677047719027;  // std dev = 0.835, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17993038123058386;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18106302908310518;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( location(A, G), complex(A, H) )
%   | | then if ( location(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.06533378414652843;  // std dev = 1.770, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | | else return -0.10726905129147704;  // std dev = 0.083, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.019522858332093048;  // std dev = 1.686, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.18980517499269023;  // std dev = 0.356, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.20798622613867232;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return -0.028256687019007583;  // std dev = 1.520, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.018422185540286826;  // std dev = 2.873, 133.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.12965893972563564;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1890154348762594;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( complex(A, H), complex(G, I) )
%   | | | then return -0.09771998584941326;  // std dev = 1.599, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.01592172649668952;  // std dev = 0.877, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.0030417903052705037;  // std dev = 1.133, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.07245552675574429;  // std dev = 1.270, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.17621929403011816;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.07060723621532758;  // std dev = 1.618, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.018857837629458585;  // std dev = 2.823, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '37.889', 'seconds']
Refined model CLL: -0.182279


******************************************
Best model found
******************************************
Results 

CLL : -0.160816 

AUC ROC : 0.991588 

AUC PR : 0.412825 

Precision : 0.295393 

Recall : 0.822642 

F1 : 0.434696 

Total Learning Time : 20.63 

Total Inference Time : 131.21511006355286 

Total revision time: 174.5401773223877
Best scored revision CLL: -0.182279


Results 

CLL : -0.160816 

AUC ROC : 0.991588 

AUC PR : 0.412825 

Precision : 0.295393 

Recall : 0.822642 

F1 : 0.434696 

Total Learning Time : 174.6151513824463 

Total Inference Time : 131.21511006355286 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.462
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0803711573217346;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.14386322081379704;  // std dev = 5.606, 154.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15973623668681391;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6149401678166956;  // std dev = 0.950, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8410052363540829;  // std dev = 0.022, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15867313699112087;  // std dev = 0.038, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1915591545788966;  // std dev = 3.411, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return 0.3375708245419049;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.581083056516139;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5855599126900076;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.048847523493246114;  // std dev = 2.101, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6842585212020666;  // std dev = 0.209, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14005780806466858;  // std dev = 1.21e-07, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.09605261748413116;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1871389081309256;  // std dev = 3.482, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.32495588875643555;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3559311569852772;  // std dev = 0.936, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.19243041444508868;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4267278260457873;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5872169512683666;  // std dev = 0.134, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.07307733986697106;  // std dev = 4.138, 173.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5727283928146149;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5503055732477466;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.11856187760824911;  // std dev = 3.448, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.08649643717435192;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.36005752881045305;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3635081816893256;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.042861035123499626;  // std dev = 4.242, 205.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.43051833096596903;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41377043131008473;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.11469321117408374;  // std dev = 3.490, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return -0.048472776855026566;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2729549937760975;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3685776232150771;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3295424921207116;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.33033725496823885;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.31817519252647364;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07472013884219739;  // std dev = 0.952, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.28802808633835203;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.032973546428765765;  // std dev = 4.041, 190.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=49 */
%   | | | else return 0.024113948446866703;  // std dev = 3.776, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24745448699909453;  // std dev = 0.123, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2573148255431407;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23755767310883813;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6320351011278513;  // std dev = 0.721, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.20237657453823782;  // std dev = 0.732, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.06317166779718375;  // std dev = 0.924, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06815718174712643;  // std dev = 3.295, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17983360953851257;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21449495665245055;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4124751102398437;  // std dev = 1.430, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14009278203804534;  // std dev = 0.427, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21127322000266058;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.009884159347884202;  // std dev = 3.093, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.09661106043567327;  // std dev = 0.649, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.14266735239158979;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17502778118139234;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07596179624607967;  // std dev = 0.407, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18709541140787045;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.02930299564376237;  // std dev = 1.456, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18612103404613384;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.015443874843709716;  // std dev = 2.753, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
%   | | | else return 0.005149938361289858;  // std dev = 3.096, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14805318657666466;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16524134972163917;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.14194733751167787;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14487020354159055;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.024577602990536643;  // std dev = 1.382, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1595799295290906;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.025266820294804558;  // std dev = 2.703, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | | else return 0.005266777184415029;  // std dev = 3.117, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.491', 'seconds']
Parameter learned model CLL:-0.173472 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.494, 28, 8], 'false,false,true,false': [5.606, 110, 44], 'false,false,false,true': [3.643, 44, 19], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.95, 1, 8], 'false,true,true': [0.913, 1, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.022, 0, 52], 'false,false,true,false': [0.038, 130, 0], 'false,false,false,true': [3.411, 33, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.027, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.101, 29, 8], 'false,true,false,true': [0.209, 0, 48], 'false,true,false,false': [1.21e-07, 116, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [3.482, 32, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.936, 1, 11], 'true,false': [0.874, 1, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.134, 0, 3], 'false,true,false': [4.138, 121, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.448, 35, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.061, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.052, 0, 9], 'false,true': [4.242, 149, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.49, 34, 19], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.022, 0, 7], 'true,true,false': [0.067, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.952, 22, 3], 'false,false,true': [0.038, 0, 6], 'false,false,false,true': [4.041, 141, 49], 'false,false,false,false': [3.776, 49, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.123, 0, 12], 'true,true,true,false': [0.005, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.721, 0, 36], 'true,false': [0.732, 109, 0], 'false,true': [0.924, 1, 5], 'false,false,true': [3.295, 77, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.001, 0, 6], 'true,false': [0.042, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.43, 2, 56], 'false,true,false': [0.427, 149, 0], 'false,false,true,true': [0.005, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.093, 48, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.649, 1, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.02, 0, 4], 'false,true,true': [0.407, 13, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.456, 49, 14], 'false,false,true': [0.028, 0, 5], 'false,false,false,true': [2.753, 93, 36], 'false,false,false,false': [3.096, 49, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.023, 0, 5], 'true,true,true,false': [0.018, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.028, 0, 4], 'false,true': [1.382, 65, 17], 'false,false,true': [0.025, 0, 5], 'false,false,false,true': [2.703, 83, 36], 'false,false,false,false': [3.117, 47, 20]}]
{'': [0.06222222222222188, 0.20816115702479404], 'false': [-1.4802973661668753e-16, 0.20118983234180773], 'false,false': [0.19878116343490385, 0.2076124567474044], 'false,false,false': [0.21063240110859105, 0.16000000000000003], 'false,false,true': [0.17283950617283966, 0.20408163265306217], 'true': [0.08999999999999977, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [0.06389436982824316, 0.21394648494558335], 'false': [0.12244897959183687, 0.21128979836091544], 'false,false': [0.2039607367265702, 0.23119629870125513], 'false,false,false': [0.22817099621645562, 0.24999999999999997], 'false,false,true': [9.103046046185717e-06, 1.0861589032892164e-05], 'false,true': [0.13888888888888892, 0.0], 'true': [0.0, 0.10031371691915518], 'false,true,false': [nan, 0.0]}
{'': [0.00013282838519807733, 0.16032523601883497], 'false': [0.13736838655599026, 0.23532861889069454], 'false,false': [0.23407327831420602, 0.24999999999999997], 'false,false,false': [0.24999999999999997, nan], 'false,false,true': [0.25, 0.23315342645315892], 'false,true': [0.11932561069587869, 0.14093438463136443], 'false,true,false': [0.0009056943967280517, 1.2633572349182816e-16], 'true': [0.00012037766342842815, 0.0001335768945815441]}
{'': [0.10752217107200739, 0.13339412668801023], 'false': [0.1019197049333133, 0.2231381923219357], 'false,false': [0.0001256957093320188, 0.2241697833279507], 'false,false,false': [0.2242856999975696, 0.2222222222222222], 'true': [0.0730167290352478, 0.19098912757389128], 'false,true': [0.009292179484123753, 0.0989835868114395], 'false,true,true': [0.0, 0.0059503828168210315], 'false,false,true': [0.0, 0.0]}
{'': [0.0004579214131600974, 0.11893378133893895], 'false': [0.08778674389754983, 0.22172473306197596], 'false,false': [7.012303572087597e-05, 0.22592221840695348], 'false,false,false': [0.22984619736950876, 0.16000000000000003], 'true': [0.0007330285767864098, 0.0003008315981448067], 'true,true': [0.0007330285767864098, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.0020817269087042923, 0.11094424017263865], 'false': [0.03628101901724953, 0.11692268889718622], 'false,false': [0.00023904948873912368, 0.11812550428529892], 'false,false,false': [0.08594832521219875, 0.20667174936512905], 'true': [0.002569358418323024, 3.086254565404234e-05], 'true,true': [7.13211789426119e-05, 0.0011222135121687071], 'true,false': [1.5791199595160954e-07, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.12948065012747723, 0.09841343944583864], 'true': [0.04109588658935435, 0.004909288142806153], 'false': [0.14239076944127768, 0.09607710676616289], 'false,false': [0.09607710676616289, nan], 'true,true': [0.0010880510111281486, 0.01814189998952066], 'true,true,false': [0.0, 0.014440100001396209], 'true,true,true': [0.0012530017556046473, 1.5009736095111803e-05]}
{'': [0.00042025878950931384, 0.08887626930157866], 'false': [0.0723457866095216, 0.13775865589478753], 'false,false': [1.1412144713951466e-05, 0.14065125816680815], 'false,false,false': [0.14065125816680815, nan], 'false,true': [0.03527236429363844, 0.0012252932980082103], 'false,true,true': [nan, 0.03527236429363844], 'true': [3.032978482022293e-07, 0.00022033584378965132], 'false,false,true': [1.1412144713951466e-05, nan]}
{'': [0.029355586961472467, 0.07042313450009643], 'false': [0.030492485746573157, 0.08531067591664093], 'false,false': [0.00015413015240910987, 0.08671311110146744], 'false,false,false': [0.058768780039946934, 0.13888782259073126], 'false,true': [0.011845711261405458, 0.03400494000837917], 'false,true,false': [0.0, 0.03364359204957681], 'true': [0.04218267335925395, 0.00025072716356160373], 'true,false': [0.0, 0.00010396948416002347]}
{'': [0.00018679342484559776, 0.07022452108178785], 'false': [0.02330820002643442, 0.08972146901501149], 'false,false': [0.00012100386897941351, 0.09160581189418747], 'false,false,false': [0.06137675777459327, 0.14504030636813364], 'true': [0.0001670814679091498, 0.00019988070557400844], 'true,true': [0.00017734425506204382, 0.0], 'true,true,true': [0.00010557762225531509, 0.00011230971455351384], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.18
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.1130508958838261;  // std dev = 3.112, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.1856343152164709;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8362729095659921;  // std dev = 0.032, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1584913892795074;  // std dev = 0.138, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.08953243749778896;  // std dev = 1.731, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.17673715067500154;  // std dev = 3.246, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5646970474284382;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1226899692211327;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.11157119772710634;  // std dev = 1.959, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6778702378165816;  // std dev = 0.260, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14127344929609764;  // std dev = 0.079, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7778515561697437;  // std dev = 0.245, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1763024336908048;  // std dev = 0.044, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.2635370411469689;  // std dev = 1.870, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.09982978880576739;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), complex(A, D) )
%   | then return 0.1627399380410083;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.427453131422965;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3880556511172142;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5934028597526947;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.01695785054491957;  // std dev = 2.036, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | | else return 0.07265076746322582;  // std dev = 3.570, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.427153480906391;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.01775212148512355;  // std dev = 2.498, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.13128604827062626;  // std dev = 2.615, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.338173155289273;  // std dev = 0.031, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E), interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.44285184421566653;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.017727170861178133;  // std dev = 1.420, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.16116850451562645;  // std dev = 0.865, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0478451195019189;  // std dev = 3.763, 153.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.3850156424591141;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.272370764359258;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.0044384297215338785;  // std dev = 1.791, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.15152842855586743;  // std dev = 2.984, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.279132629137595;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3312082371277957;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2537243602857952;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then return -0.11275076497330172;  // std dev = 0.016, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.007619190714450139;  // std dev = 0.620, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.06699628902425193;  // std dev = 0.483, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2579788815937843;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.07077342731576673;  // std dev = 3.916, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return 0.018047410527444838;  // std dev = 3.709, 146.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23323278298766817;  // std dev = 0.036, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.25463777788647923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6131437939218987;  // std dev = 0.734, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19544527892003388;  // std dev = 0.087, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.4897569191840212;  // std dev = 0.090, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.1481068911248053;  // std dev = 0.010, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2032790926468404;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.057789687607456654;  // std dev = 1.788, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.011277465163839234;  // std dev = 1.934, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18505933072510503;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.19392184079079444;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16490539821456657;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.3939197813601468;  // std dev = 0.535, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.42473079354352516;  // std dev = 0.501, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.12871502411136995;  // std dev = 0.021, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.1782639164899803;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.0012052796022245548;  // std dev = 1.977, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.04758531797852249;  // std dev = 2.160, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15599063943427252;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2599256225358886;  // std dev = 0.560, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.16770128645422425;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06005746287553477;  // std dev = 0.079, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.16694917150980676;  // std dev = 0.047, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.02334978407249811;  // std dev = 1.285, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1434618567575624;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08252433809600937;  // std dev = 2.725, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.015765960992964637;  // std dev = 2.562, 125.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13395448158844886;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.16044197347375258;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.27730669361873733;  // std dev = 0.208, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.09812842737367714;  // std dev = 0.187, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.044138349449793855;  // std dev = 0.557, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.002741188519393839;  // std dev = 0.336, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1267396464131168;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return -0.012727646850268119;  // std dev = 1.708, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.028885235268678852;  // std dev = 3.386, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '48.159', 'seconds']
Refined model CLL: -0.166896


******************************************
Best model found
******************************************
Results 

CLL : -0.186167 

AUC ROC : 0.984328 

AUC PR : 0.248152 

Precision : 0.140094 

Recall : 0.862816 

F1 : 0.241049 

Total Learning Time : 7.18 

Total Inference Time : 7.921570062637329 

Total revision time: 26.822452108383178
Best scored revision CLL: -0.166896


Results 

CLL : -0.186167 

AUC ROC : 0.984328 

AUC PR : 0.248152 

Precision : 0.140094 

Recall : 0.862816 

F1 : 0.241049 

Total Learning Time : 26.897426168441772 

Total Inference Time : 7.921570062637329 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.525
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.04655473220096165;  // std dev = 3.248, 69.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | | | else return 0.1367203636709404;  // std dev = 5.304, 140.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7398727907934262;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7398727907934263;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.824681873188666;  // std dev = 0.994, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15530003967407102;  // std dev = 0.064, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else if ( location(A, I) )
%   | | | then return 0.13528011113452607;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.08320549123154841;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5595171078416127;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.23725223076248736;  // std dev = 1.191, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.03533933895910484;  // std dev = 2.801, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6434191890070635;  // std dev = 1.445, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14297473577975053;  // std dev = 0.308, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6402108596670234;  // std dev = 0.220, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07240443546532384;  // std dev = 2.550, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.02894476307508444;  // std dev = 1.538, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4478403602934425;  // std dev = 0.193, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.541563598252164;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6022923105852588;  // std dev = 0.186, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.04571317258808861;  // std dev = 4.335, 199.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.3921621892208862;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5937703138858901;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.12040255245820645;  // std dev = 2.722, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.1503654065305445;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3127618842947346;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3867491904299136;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.06124163052907089;  // std dev = 4.431, 194.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return -0.1095267258817087;  // std dev = 0.584, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.37510814325094477;  // std dev = 0.101, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.09632788642838526;  // std dev = 2.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.0912870330646132;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.24824273995877869;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4026977394086028;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.32720186129459805;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.018637809706252617;  // std dev = 0.770, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.04623658298340401;  // std dev = 1.191, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.0461490963484935;  // std dev = 1.129, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.053248295846634555;  // std dev = 4.036, 164.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=46 */
%   | | | else return 0.03579609265077263;  // std dev = 3.094, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.237483673636687;  // std dev = 0.183, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.28483298570283905;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2755277234849316;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5980993384221286;  // std dev = 0.788, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1666795129362693;  // std dev = 0.516, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.05298090296412363;  // std dev = 1.017, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.050450303778100516;  // std dev = 3.475, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17030487323181953;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1591275546973446;  // std dev = 0.770, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4178027387560073;  // std dev = 1.606, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.13497386872990508;  // std dev = 0.164, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.023499849593652228;  // std dev = 0.724, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04131047671145599;  // std dev = 2.442, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15524929668430207;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18329958534086332;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.0847180097358334;  // std dev = 1.219, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09164629302035437;  // std dev = 0.281, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23060114667514311;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.015981780244723638;  // std dev = 1.433, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.29427016783292487;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04459780717788895;  // std dev = 2.710, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return 0.04995388386215783;  // std dev = 2.409, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1290907333817144;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.16364025261313597;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.2750136016984985;  // std dev = 0.598, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.06948556598474842;  // std dev = 0.633, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2421271102247532;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03783495822796889;  // std dev = 1.955, 102.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.23726056336011395;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02657440389364734;  // std dev = 2.776, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | | | else return -0.03129096134667985;  // std dev = 2.537, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.265', 'seconds']
Parameter learned model CLL:-0.173199 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.248, 56, 13], 'false,false,true,false': [5.304, 101, 39], 'false,false,false,true': [2.527, 22, 9], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.062, 0, 7], 'false,true,true': [0.062, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.994, 1, 52], 'false,false,true,false': [0.064, 131, 0], 'false,false,false,true': [2.78, 26, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.054, 0, 11], 'true,false': [1.191, 2, 4], 'false,true,true': [2.801, 57, 14], 'false,true,false,true': [1.445, 2, 42], 'false,true,false,false': [0.308, 92, 0], 'false,false,true,true': [0.22, 0, 3], 'false,false,true,false': [2.55, 25, 9], 'false,false,false,true': [1.538, 11, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.193, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.186, 0, 6], 'false,true,false': [4.335, 150, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.722, 24, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.004, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.113, 0, 6], 'false,true': [4.431, 138, 56], 'false,false,true,true': [0.584, 1, 1], 'false,false,true,false': [0.101, 0, 2], 'false,false,false,true': [2.463, 20, 9], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.016, 0, 9], 'true,true,false': [0.05, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.77, 1, 2], 'false,true': [1.191, 24, 5], 'false,false,true': [1.129, 2, 5], 'false,false,false,true': [4.036, 118, 46], 'false,false,false,false': [3.094, 39, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.183, 0, 13], 'true,true,true,false': [0.095, 0, 3], 'true,true,false,true': [0.025, 0, 3], 'true,true,false,false': [0.788, 0, 33], 'true,false': [0.516, 105, 0], 'false,true': [1.017, 2, 3], 'false,false,true': [3.475, 72, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.77, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.606, 3, 56], 'false,true,false': [0.164, 124, 0], 'false,false,true,true': [0.724, 1, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.442, 29, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.055, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [1.219, 2, 5], 'false,true,true': [0.281, 17, 1], 'false,true,false,true': [0.161, 0, 6], 'false,true,false,false': [1.433, 55, 17], 'false,false,true': [0.053, 0, 3], 'false,false,false,true': [2.71, 69, 31], 'false,false,false,false': [2.409, 26, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.024, 0, 2], 'true,true,false,true': [0.598, 1, 1], 'true,true,false,false': [0.633, 1, 2], 'true,false': [0.086, 0, 3], 'false,true': [1.955, 78, 24], 'false,false,true': [0.046, 0, 3], 'false,false,false,true': [2.776, 73, 31], 'false,false,false,false': [2.537, 41, 12]}]
{'': [0.05859374999999978, 0.19994246695635107], 'false': [0.10937499999999978, 0.19096466186029382], 'false,false': [0.18690048304755016, 0.20999999999999946], 'false,false,false': [0.2060353798126952, 0.2222222222222221], 'false,false,true': [0.15290905272001626, 0.20096938775510254], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, 0.18750000000000006], 'true': [-1.4802973661668753e-16, 0.18750000000000006]}
{'': [0.0003624995143289548, 0.20806268155369498], 'false': [0.0005548461954012167, 0.20320619721632147], 'false,false': [0.20233899560043267, 0.20708953768729804], 'false,false,false': [0.20894276300508777, 0.1875], 'false,false,true': [0.01864568481627087, 3.0918074877931896e-05], 'false,true': [0.0005548461954012167, nan], 'true': [1.1102230246251565e-16, 0.0005548461954012802]}
{'': [0.10738098731045591, 0.149590635071956], 'false': [0.1386641117521472, 0.1938810545016485], 'false,false': [0.2010932841067608, 0.16900905981345246], 'false,false,true': [0.016159437278755833, 0.191270100633555], 'false,false,false': [0.16900905981345246, nan], 'false,true': [0.1104844963228218, 0.15138878059507516], 'false,true,false': [0.0474277709173079, 0.0010336912974509946], 'true': [0.0002698762520948573, 0.23655128929076152]}
{'': [0.0024802488934532185, 0.1194925539487192], 'false': [0.10124072077353796, 0.2054422882220397], 'false,false': [0.009032407984653287, 0.21265827453460104], 'false,false,false': [0.2117676308038298, 0.22222222222222218], 'false,true': [0.005386220420685118, 0.09441157186014393], 'false,false,true': [0.0, 0.0], 'false,true,true': [0.0, 0.005757070038184671], 'true': [0.0024802488934532185, nan]}
{'': [0.00216229159934976, 0.11999963540668654], 'false': [0.10120095363583985, 0.2036730732868006], 'false,false': [0.1465981767383584, 0.2093943073083726], 'false,false,false': [0.20922813533904333, 0.20985731125336482], 'false,false,true': [0.17064196795047135, 0.0051189073366334215], 'true': [1.8874785286701921e-06, 0.002118424899096897], 'true,true': [1.8874785286701921e-06, nan]}
{'': [0.05356358673740573, 0.11383930538325744], 'false': [0.04891820626166834, 0.12120686880591656], 'false,false': [0.18203483395500167, 0.11924442492073889], 'false,false,false': [0.099341485144497, 0.1806006910405101], 'true': [0.005295451785068158, 0.17070164509956626], 'true,false': [0.0, 0.19770092395659422], 'true,true': [2.9507514279214497e-05, 0.0006278939562349983], 'true,false,true': [0.0, nan]}
{'': [0.1053722798101018, 0.12187328760332918], 'false': [0.2067197941716031, 0.11725924669818115], 'false,false': [0.11725924669818115, nan], 'true': [0.04084718652439691, 0.0025349645322653505], 'true,true': [0.00298959052253419, 0.025201438256774702], 'true,true,false': [0.00020985147386570757, 0.018802363461318698], 'true,true,true': [0.002562722237071384, 0.0030177627434485412]}
{'': [0.037067184531320505, 0.09347852803268276], 'false': [0.08099608274394479, 0.14423054752074663], 'false,false': [0.13118375638749055, 0.14547520799776562], 'false,false,false': [0.14547520799776562, nan], 'false,false,true': [0.13118375638749055, nan], 'false,true': [0.04371985494131795, 0.00021783499671676387], 'false,true,true': [nan, 0.04371985494131798], 'true': [-3.469446951953614e-18, 0.07407190283783047]}
{'': [0.09669832176825857, 0.0683904346659468], 'true': [0.0003069586393829982, 0.19350539211090834], 'true,false': [0.0, 0.21216984064648683], 'false': [0.02736821282952648, 0.09455006718013126], 'false,false': [0.0009454320253085199, 0.09527426973413272], 'false,false,false': [0.07342532132655644, 0.15275071430054216], 'false,true': [0.00438712618683916, 0.03099242235665812], 'false,true,false': [0.004310966640086354, 0.028538712395985107]}
{'': [0.06646314822526708, 0.07020736547095317], 'false': [0.037488592245804246, 0.09012350996783479], 'false,false': [0.0007085458025562393, 0.09083829992847815], 'false,false,false': [0.07409167546190737, 0.12148155203339994], 'true': [0.07245823823153277, 0.002475741552464522], 'true,true': [0.0002491537560599888, 0.16169653782570453], 'true,true,false': [0.17873906205317586, 0.1334381456216493], 'true,true,true': [0.0, 0.000290833357002071]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 9.9
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.0664822684328457;  // std dev = 2.814, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.1999210869982466;  // std dev = 5.962, 158.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=54 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, F), phenotype(A, G) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7966435260447298;  // std dev = 1.391, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1617160120106512;  // std dev = 0.165, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.04018137279545863;  // std dev = 2.366, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return 0.2979227657223906;  // std dev = 1.639, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4989008386629313;  // std dev = 0.268, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then return 0.5753897189581847;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.44463356325371567;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), interaction(H, A) )
%   | | then return 0.05662097984683179;  // std dev = 0.343, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else return 0.08580356169289823;  // std dev = 0.378, 148.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=42 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.1446650444947527;  // std dev = 1.535, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.017737242348632935;  // std dev = 1.409, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.2373329119393838;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.12814312165680788;  // std dev = 1.925, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.49900459455715607;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.43186097767616616;  // std dev = 0.021, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5413445487944981;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6742182700893141;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.09106612493498077;  // std dev = 3.138, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0.008159997452936902;  // std dev = 3.953, 144.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=29 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5313139676820275;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.04789688876515004;  // std dev = 2.448, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.19227418616546813;  // std dev = 1.569, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3523876046307778;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08942813686179343;  // std dev = 0.415, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.5063239682829718;  // std dev = 0.351, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, H), enzyme(H, I) )
%   | | | then return -0.07954585225107894;  // std dev = 2.012, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | | else return 0.05889742623512811;  // std dev = 2.466, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(L, A), interaction(J, M) )
%   | | | then return -0.08567351112753117;  // std dev = 0.629, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.042702127903938764;  // std dev = 1.415, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.09666327576570907;  // std dev = 4.049, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return 0.15495959298579526;  // std dev = 2.102, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32572555121234964;  // std dev = 0.087, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, A), location(E, D) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.09896804544653015;  // std dev = 0.424, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.02107662751391505;  // std dev = 0.955, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0.08766270887231876;  // std dev = 2.909, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -2.0134763028296503E-4;  // std dev = 2.751, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.23964959118256093;  // std dev = 1.548, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.08533727584504598;  // std dev = 1.902, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.31911463556233177;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03202703031124445;  // std dev = 3.074, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.46914708394376875;  // std dev = 0.305, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | else return -0.17810383241575417;  // std dev = 0.053, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(F, G) )
%   | | then if ( complex(A, H), enzyme(F, I) )
%   | | | then return -0.048369981828604254;  // std dev = 1.308, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.10424484391363938;  // std dev = 2.613, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.03600899907192771;  // std dev = 1.020, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.18461052993157215;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( enzyme(A, K), phenotype(A, L) )
%   | | then return 0.2902180169213609;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.23229352027035355;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08832497654544227;  // std dev = 1.626, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1449196932541087;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E) )
%   | | then return 0.20167799486885943;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.20784309330721773;  // std dev = 1.107, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.51446304272689;  // std dev = 0.160, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.1627693622142317;  // std dev = 0.044, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6680612367786255;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2227382095700498;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.0445278438435888;  // std dev = 1.505, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.1113555334521694;  // std dev = 1.530, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13323800208998438;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.08664424277889811;  // std dev = 0.239, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( enzyme(A, I), complex(G, J) )
%   | | | then return 0.2410655624015005;  // std dev = 0.473, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.029930186210488034;  // std dev = 0.841, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.06536254251766373;  // std dev = 1.131, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return 0.0034232489570846123;  // std dev = 1.399, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.03367170715566617;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.022791972814083246;  // std dev = 2.844, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | | | else return -0.014246503859127195;  // std dev = 2.660, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.12422589685917526;  // std dev = 0.027, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.19617676900391134;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return -0.05022581983632721;  // std dev = 1.278, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return 0.09974986466623686;  // std dev = 0.570, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.02927928469662704;  // std dev = 0.677, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.05501454734525977;  // std dev = 1.301, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.27213515990943316;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return -0.003563645134342723;  // std dev = 2.429, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.06245831866055929;  // std dev = 2.894, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '43.770', 'seconds']
Refined model CLL: -0.194807


******************************************
Best model found
******************************************
Results 

CLL : -0.18529 

AUC ROC : 0.983574 

AUC PR : 0.222239 

Precision : 0.146825 

Recall : 0.784452 

F1 : 0.247354 

Total Learning Time : 9.9 

Total Inference Time : 8.359978914260864 

Total revision time: 30.693455028533936
Best scored revision CLL: -0.173199


Results 

CLL : -0.18529 

AUC ROC : 0.983574 

AUC PR : 0.222239 

Precision : 0.146825 

Recall : 0.784452 

F1 : 0.247354 

Total Learning Time : 30.76842908859253 

Total Inference Time : 8.359978914260864 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.746
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12864073837819945;  // std dev = 4.907, 122.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=33 */
%   | | | else return 0.16066994350287248;  // std dev = 5.011, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6708996777278665;  // std dev = 3.410, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | | else return -0.1603704970449054;  // std dev = 0.026, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( location(A, I) )
%   | | | then return 0.12986764009292942;  // std dev = 1.691, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.35536643674628443;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.30536643674628444;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10716783008018867;  // std dev = 4.329, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5813311774899027;  // std dev = 2.268, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return -0.14188752022969867;  // std dev = 9.54e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31436859841125314;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.17789576001338175;  // std dev = 1.262, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.47054061380210843;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.46680171834956063;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4979089625404225;  // std dev = 1.626, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return 0.06820099253443673;  // std dev = 5.014, 210.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5111186399151535;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return -6.6617959516462E-4;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.13140941512589643;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16291750087789006;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.08772264891655703;  // std dev = 5.457, 216.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3854125887147615;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.26223057000473265;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14609980568637013;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19961987638966655;  // std dev = 0.936, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.2529550471290272;  // std dev = 0.511, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.29900313931832656;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.036912589468056874;  // std dev = 2.240, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3245333242890418;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07312937117952946;  // std dev = 4.777, 175.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=55 */
%   | | | else return 0.1008334308581354;  // std dev = 1.753, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2993886881319757;  // std dev = 0.139, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24029689665353426;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.6906926492074217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5473459086178958;  // std dev = 1.111, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.19201414788696797;  // std dev = 0.499, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.006197322228809199;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07135819536101883;  // std dev = 3.965, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.22549128918490266;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07932931471589283;  // std dev = 0.898, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43467182108582597;  // std dev = 2.276, 77.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=71 */
%   | | else return -0.16260071864624084;  // std dev = 0.347, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1991924246813439;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.03612425843048747;  // std dev = 1.494, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19982718544822942;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.4202316803154462;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.188831707618058;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.026020910681892506;  // std dev = 1.342, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.12458508721706148;  // std dev = 0.593, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.04091578322745077;  // std dev = 1.544, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2417645000915496;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0658762906778554;  // std dev = 3.219, 108.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=40 */
%   | | | else return 0.006799734079639168;  // std dev = 1.443, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.16177470958160825;  // std dev = 0.012, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22660937087489197;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1616476323210336;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.0010822405204033423;  // std dev = 2.201, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20024375947769624;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.0030149194801872056;  // std dev = 3.402, 144.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=40 */
%   | | | else return 0.03579619451822595;  // std dev = 1.411, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.363', 'seconds']
Parameter learned model CLL:-0.203431 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.907, 89, 33], 'false,false,true,false': [5.011, 83, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.291, 10, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.41, 14, 69], 'false,false,true,false': [0.026, 148, 0], 'false,false,false,true': [1.691, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.265, 2, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [4.329, 80, 34], 'false,true,false,true': [2.268, 6, 37], 'false,true,false,false': [9.54e-08, 86, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.262, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.018, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.626, 4, 14], 'false,true,false': [5.014, 153, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.777, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.247, 2, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.891, 1, 4], 'false,true': [5.457, 145, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.936, 1, 7], 'true,true,false': [0.511, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.24, 29, 12], 'false,false,true': [0.009, 0, 3], 'false,false,false,true': [4.777, 120, 55], 'false,false,false,false': [1.753, 13, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.139, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [1.111, 2, 33], 'true,false': [0.499, 83, 0], 'false,true': [0.872, 1, 3], 'false,false,true': [3.965, 84, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [0.898, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.276, 6, 71], 'false,true,false': [0.347, 165, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.494, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.07, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.033, 0, 3], 'false,true,true': [1.342, 37, 11], 'false,true,false,true': [0.593, 3, 1], 'false,true,false,false': [1.544, 31, 17], 'false,false,true': [0.007, 0, 3], 'false,false,false,true': [3.219, 68, 40], 'false,false,false,false': [1.443, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.012, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 3], 'false,true': [2.201, 72, 29], 'false,false,true': [0.007, 0, 3], 'false,false,false,true': [3.402, 104, 40], 'false,false,false,false': [1.411, 9, 4]}]
{'': [-1.6148698540002277e-16, 0.20593205524153627], 'false': [1.4802973661668753e-16, 0.2024120093618176], 'false,false': [0.20433532480501398, 0.17283950617283936], 'false,false,true': [0.1973259876377331, 0.21100204787797583], 'false,false,false': [0.22222222222222224, 0.13888888888888892], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [2.4223047810003414e-16, 0.21064061925498392], 'false': [0.0, 0.20912742298015852], 'false,false': [0.2094218907447919, 0.20420148836054883], 'false,false,true': [0.14011549700019482, 4.650083725197382e-06], 'false,false,false': [0.20420148836054883, nan], 'true': [7.401486830834377e-17, 0.0], 'false,true': [0.0, nan]}
{'': [0.16836734693877542, 0.1634913387405941], 'true': [0.16000000000000006, 0.1875], 'false': [0.16001354461227452, 0.2200897201499107], 'false,false': [0.24999999999999992, 0.19892630168474218], 'false,false,true': [nan, 0.24999999999999992], 'false,false,false': [0.19892630168474218, nan], 'false,true': [0.1644028327923626, 0.15610474566817398], 'false,true,false': [0.11961738051703202, 1.058584744410033e-16]}
{'': [3.0808461058094075e-05, 0.13855905071415978], 'false': [0.13528728666876608, 0.17037763447119308], 'false,false': [0.0, 0.16624869331666914], 'false,false,false': [0.16624869331666914, nan], 'false,true': [0.14694209546139658, 0.11971075520375923], 'false,true,true': [nan, 0.1469420954613965], 'true': [3.261845814526154e-05, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.16808905337526786, 0.14245744586196837], 'true': [0.17288179990584396, 0.15882390710524555], 'true,true': [0.17288179990584396, nan], 'false': [0.1378778199495309, 0.2181376699209369], 'false,false': [0.0, 0.23657005839441353], 'false,false,false': [0.25, 0.22222222222222218], 'false,false,true': [nan, 0.0]}
{'': [0.08850484856643347, 0.1309404028950701], 'false': [0.12235585762754607, 0.13241268438149204], 'false,false': [2.6536415084025638e-05, 0.13351805962466684], 'false,false,false': [0.13037247047575704, 0.16179824532395926], 'true': [0.09536799451783018, 0.0], 'true,true': [0.10950380655759051, 0.06519994347977824], 'true,false': [nan, 0.0]}
{'': [0.12481156822587253, 0.12885500034043307], 'false': [0.18990448234612023, 0.12675297660536297], 'false,false': [0.12675297660536297, nan], 'true': [0.06706374951717087, 0.0030044841100188287], 'true,true': [0.002049147038710246, 0.075710635122505], 'true,true,false': [0.0, 0.03529769971872224], 'true,true,true': [0.0019366217589329437, 0.0]}
{'': [0.07251586640316855, 0.10136205561834918], 'false': [0.09929160547151877, 0.12682519794473182], 'false,false': [0.0, 0.13120917363114473], 'false,false,false': [0.13120917363114473, nan], 'false,true': [0.06726527163888382, 0.0007308003346599426], 'true': [9.25185853854297e-18, 0.13435007141599734], 'false,true,true': [nan, 0.06726527163888373], 'false,false,true': [0.0, nan]}
{'': [0.029603769926394113, 0.07744772609762782], 'false': [0.047103943198317115, 0.09989091034557426], 'false,false': [1.8505379187831277e-05, 0.10152865778313144], 'false,false,false': [0.09591989604792499, 0.13884731731510366], 'false,true': [0.03753851402512596, 0.05452319812199154], 'false,true,false': [0.08785424965315076, 0.0496386460237879], 'true': [0.0006044433521757847, 0.06983291628824764], 'true,false': [0.0, 0.0003710024207372829]}
{'': [0.0004412175520346693, 0.0710695183486829], 'false': [0.04796331152473519, 0.08564551353343719], 'false,false': [1.4103555067308352e-05, 0.0865314448271359], 'false,false,false': [0.08038933264048392, 0.15318557216920675], 'true': [0.0004789970457615249, 0.00029119506502400344], 'true,true': [0.0004789970457615249, nan], 'true,true,true': [2.1983532029173913e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 13.802
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.12005369700427336;  // std dev = 4.935, 126.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=33 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.29564893509951234;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.17560925255982957;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7319045176838227;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6822868908452279;  // std dev = 3.165, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.16299981552936224;  // std dev = 0.112, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.15155585893087636;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.035399777736582365;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.5848104716959359;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5524654396220218;  // std dev = 0.000591, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.1406787887721453;  // std dev = 3.812, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   | | | else return 0.017212251665640114;  // std dev = 1.680, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6620179700144521;  // std dev = 1.371, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14342369299523938;  // std dev = 0.098, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.12791956780270972;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.21814502829538526;  // std dev = 0.462, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.4488721251568982;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41414358730076656;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.415197738036865;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1505790611839873;  // std dev = 0.006, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.043857165769817893;  // std dev = 3.836, 113.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=31 */
%   | | | else return 0.11843291975512991;  // std dev = 3.964, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5632180183577986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.02292043284041667;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2669012371492956;  // std dev = 1.021, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.31779060057181757;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3327815797545609;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( phenotype(H, G), interaction(H, H) )
%   | | | then return 0.0022684524211537735;  // std dev = 2.947, 84.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=18 */
%   | | | else return 0.055864183305633;  // std dev = 1.330, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.05888779169241194;  // std dev = 2.825, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.11211150476326696;  // std dev = 3.304, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4233624119916656;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.012914445506238362;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.04572291643877109;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.3382635454306229;  // std dev = 0.123, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.02110073439117799;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3246797291579109;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1356194714909421;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.26750556034288225;  // std dev = 0.988, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.08361435129760893;  // std dev = 1.901, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2526677047942785;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.03394830992289823;  // std dev = 3.246, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | | | else return 0.12338577798404017;  // std dev = 3.641, 95.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2644006609968848;  // std dev = 0.091, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5648963292583763;  // std dev = 0.888, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.19178040076839822;  // std dev = 0.071, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.06300876442212458;  // std dev = 2.400, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.13231714203553133;  // std dev = 1.468, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( phenotype(G, I), complex(G, J) )
%   | | | then return 0.009197467329048902;  // std dev = 2.134, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.03614193276898312;  // std dev = 1.842, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | else return 0.16725919870052777;  // std dev = 0.801, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17476977327247675;  // std dev = 0.063, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20345035545326984;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.293885590923307;  // std dev = 1.894, 37.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=31 */
%   | | | else return 0.5177663530907769;  // std dev = 1.144, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.14258377116685672;  // std dev = 0.195, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.1810960304213215;  // std dev = 0.230, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return -0.28172411740197034;  // std dev = 0.696, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.11075442802854771;  // std dev = 0.792, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.17711551846066884;  // std dev = 1.020, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18249150527721153;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21970816466842238;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( complex(A, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.03715951874421086;  // std dev = 0.840, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.003209026295921723;  // std dev = 1.205, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.06575489440081829;  // std dev = 1.337, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return -0.016917137719399105;  // std dev = 1.586, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.17512290407896577;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.008913253642360197;  // std dev = 3.332, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | | | else return -0.07742009014999753;  // std dev = 1.503, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15777096711780847;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18466349643974198;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2167645142894041;  // std dev = 1.572, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return -0.12708405346857882;  // std dev = 0.327, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.01900437118948372;  // std dev = 0.487, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.15588377686253077;  // std dev = 0.347, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15124518736636813;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.007483205143651507;  // std dev = 1.958, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.04320502650891793;  // std dev = 2.869, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '45.284', 'seconds']
Refined model CLL: -0.203763


******************************************
Best model found
******************************************
Results 

CLL : -0.205425 

AUC ROC : 0.986822 

AUC PR : 0.304525 

Precision : 0.171271 

Recall : 0.769504 

F1 : 0.280181 

Total Learning Time : 13.802 

Total Inference Time : 75.29141688346863 

Total revision time: 109.34783496665955
Best scored revision CLL: -0.203431


Results 

CLL : -0.205425 

AUC ROC : 0.986822 

AUC PR : 0.304525 

Precision : 0.171271 

Recall : 0.769504 

F1 : 0.280181 

Total Learning Time : 114.6366836051941 

Total Inference Time : 75.29141688346863 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.853
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10418068113125721;  // std dev = 4.835, 126.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=31 */
%   | | | else return 0.16849376268571836;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7356630398665784;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5369257337997014;  // std dev = 1.173, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7342422959662294;  // std dev = 2.831, 85.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=76 */
%   | | | else return -0.1595797928876478;  // std dev = 0.058, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | else if ( location(A, I) )
%   | | | then return 0.09987215789821499;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4842938218551709;  // std dev = 0.972, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5581623978491123;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0710882861606322;  // std dev = 4.369, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5972874897562841;  // std dev = 2.307, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.1429396246136038;  // std dev = 7.60e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.31886039418888046;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1097073212919187;  // std dev = 1.584, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3772925106759362;  // std dev = 0.975, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.47216901351071217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5784366187029634;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5021334572166614;  // std dev = 1.853, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else return 0.021558874764353822;  // std dev = 5.124, 263.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5732731055004676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return -0.0015159197763217475;  // std dev = 1.778, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3454254402955624;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05876168294987828;  // std dev = 1.718, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05494411891350547;  // std dev = 5.756, 294.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4309306596167256;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.29343538270450986;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1800970192532456;  // std dev = 0.959, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.4708950028441805;  // std dev = 0.162, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32982298991224757;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.009478429171475565;  // std dev = 2.836, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.34141221447321957;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.04381437873933757;  // std dev = 4.688, 189.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=51 */
%   | | | else return 0.11486045895635276;  // std dev = 2.107, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2913149285255484;  // std dev = 0.267, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.26137991272094085;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.007349592907168662;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.48264034739724826;  // std dev = 1.577, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.1682122393745229;  // std dev = 0.534, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.28449446330084605;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06579582375631989;  // std dev = 4.332, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18907281385574803;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.06958851254801494;  // std dev = 1.267, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42223900248943363;  // std dev = 2.555, 90.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=82 */
%   | | else return -0.14623851024822138;  // std dev = 0.214, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21413326784698417;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0016123200319667352;  // std dev = 1.446, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17837673625159006;  // std dev = 0.114, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18091036567701935;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.056239911846506806;  // std dev = 0.865, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.02414249408901077;  // std dev = 1.809, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2658999681472801;  // std dev = 0.152, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.045817497229918076;  // std dev = 1.401, 66.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2181903404191335;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.024543431629651145;  // std dev = 3.869, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | | else return -0.04985656492274594;  // std dev = 1.501, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13901495495742233;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.17870181480183023;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.5783545086791924;  // std dev = 0.257, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08148810540426296;  // std dev = 0.498, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.022082135848385292;  // std dev = 2.582, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.017436357935270947;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06249057914409339;  // std dev = 3.427, 137.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=47 */
%   | | | else return 0.032659073827835776;  // std dev = 1.421, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.787', 'seconds']
Parameter learned model CLL:-0.201567 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [1.0, 2, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.835, 95, 31], 'false,false,true,false': [5.571, 100, 45], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [0.051, 0, 10], 'false,true,true': [1.173, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.831, 9, 76], 'false,false,true,false': [0.058, 181, 0], 'false,false,false,true': [1.713, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.972, 1, 11], 'true,false': [0.037, 0, 6], 'false,true,true': [4.369, 98, 34], 'false,true,false,true': [2.307, 6, 48], 'false,true,false,false': [7.6e-08, 95, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.584, 9, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.975, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.005, 0, 3], 'false,true,true,false': [1.853, 5, 21], 'false,true,false': [5.124, 205, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.778, 16, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.49e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.718, 4, 10], 'false,true': [5.756, 212, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.415, 4, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.959, 1, 9], 'true,true,false': [0.162, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.836, 55, 19], 'false,false,true': [0.067, 0, 8], 'false,false,false,true': [4.688, 138, 51], 'false,false,false,false': [2.107, 16, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.267, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.872, 1, 3], 'true,true,false,false': [1.577, 4, 33], 'true,false': [0.534, 78, 0], 'false,true': [0.019, 0, 5], 'false,false,true': [4.332, 108, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.267, 2, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.555, 8, 82], 'false,true,false': [0.214, 161, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.446, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.114, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.865, 1, 5], 'false,true,true': [1.809, 34, 13], 'false,true,false,true': [0.152, 0, 8], 'false,true,false,false': [1.401, 55, 11], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [3.869, 105, 47], 'false,false,false,false': [1.501, 14, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.079, 0, 6], 'true,true,false,true': [0.257, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.498, 1, 3], 'false,true': [2.582, 86, 32], 'false,false,true': [0.908, 1, 5], 'false,false,false,true': [3.427, 90, 47], 'false,false,false,false': [1.421, 9, 4]}]
{'': [0.05246913580246885, 0.20917386001125962], 'false': [0.17283950617283939, 0.20277441346502126], 'false,false': [0.20179463787257834, 0.22222222222222207], 'false,false,false': [0.22222222222222207, nan], 'false,false,true': [0.18550012597631765, 0.21403091557669557], 'false,true': [0.25, 0.0], 'true': [-1.4802973661668753e-16, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.0002176642576841287, 0.20698082822553168], 'false': [0.152765679727784, 0.20344211129797216], 'false,false': [0.20385028894288318, 0.19555555555555573], 'false,false,true': [0.09426755090027382, 1.8473373268969882e-05], 'false,false,false': [0.19555555555555573, nan], 'false,true': [0.152765679727784, nan], 'true': [6.344131569286608e-17, 0.00026210404362787544]}
{'': [0.05377823602818024, 0.15739084166026554], 'false': [0.15473770987154306, 0.20574041514337266], 'false,false': [0.20574041514337266, nan], 'false,false,true': [0.24999999999999997, 0.19309858052205414], 'false,true': [0.14461134238193504, 0.16232660524673723], 'false,true,false': [0.09854590545993919, 6.077010240053489e-17], 'true': [0.07873299239603078, 0.00023101227956390247]}
{'': [0.05328016347740208, 0.12603393920380077], 'false': [0.12306781480519188, 0.16545329776580045], 'false,false': [0.0, 0.15799346629320274], 'false,false,false': [0.15799346629320274, nan], 'false,true': [0.11889924343623269, 0.0998307925360913], 'false,true,true': [9.057092903145639e-06, 0.13201504815844878], 'true': [0.05591420458576994, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.15880227897277277, 0.11786662176480263], 'true': [3.172065784643304e-17, 0.21081138186731074], 'false': [0.112695727977258, 0.22429685092970691], 'false,false': [0.0, 0.2502334071655684], 'false,false,false': [0.2502334071655684, nan], 'true,true': [3.172065784643304e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.07433434434863025, 0.11911991415138913], 'false': [0.10866014673149405, 0.12188315657810209], 'false,false': [0.0005559659287330959, 0.12340125872904208], 'false,false,false': [0.11627139755781855, 0.1707927202739214], 'true': [0.07888291168782133, 0.0], 'true,true': [0.09188873866583905, 0.004354366353279238], 'true,false': [nan, 0.0]}
{'': [0.11202740363583852, 0.11875991092749331], 'false': [7.195273132921675e-05, 0.12109389552344069], 'false,false': [0.12109389552344069, nan], 'true': [0.07768608072511425, 0.003654240115569639], 'true,true': [0.004509126365571589, 0.10030919566015828], 'true,true,false': [0.18992867983847178, 0.06719717432728196], 'true,true,true': [0.004753728216741626, 0.0]}
{'': [0.08777923041543811, 0.10295576532751621], 'false': [0.1005121196189914, 0.14219599828679344], 'false,false': [0.0, 0.14934184508993248], 'false,false,false': [0.14934184508993248, nan], 'false,true': [0.07251835778770083, 0.0002843066599466279], 'true': [0.0, 0.13372401897463773], 'false,true,true': [nan, 0.07251835778770087], 'false,false,true': [0.0, nan]}
{'': [0.04822517402145339, 0.07965274225728548], 'false': [0.0492117088805364, 0.10007198857076205], 'false,false': [5.03897891318994e-05, 0.1018534532578413], 'false,false,false': [0.09850540417771891, 0.1251766051120699], 'false,true': [0.06961929862739384, 0.036193972062394456], 'true': [0.0014563539889088342, 0.09645900384844108], 'true,false': [0.0, 0.1247263246166783], 'false,true,false': [0.002875909822342676, 0.02972790038862812]}
{'': [0.066577405320647, 0.0792302637168876], 'false': [0.056490753983746006, 0.09365001816167916], 'false,false': [0.13752998528435717, 0.09182545020681597], 'false,false,false': [0.0857246479875091, 0.15530572732745923], 'true': [0.06770646547374094, 0.06195267284180692], 'true,true': [0.000871589508956131, 0.03306318056737617], 'true,true,false': [0.03306318056737617, nan], 'true,true,true': [0.0, 0.0010403417891356227]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 12.374
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6081489350995123;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return -0.03768439823382102;  // std dev = 2.993, 96.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.21737223607038472;  // std dev = 4.869, 103.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=37 */
%   | | | else return 0.13087620782678475;  // std dev = 3.908, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7518526675222027;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( enzyme(A, G) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6055563126958532;  // std dev = 4.089, 98.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=76 */
%   | | | else return -0.1548657427107551;  // std dev = 0.206, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.4319528742298758;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07957635155229636;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.485727463544376;  // std dev = 0.271, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4218997122649758;  // std dev = 0.341, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.16255731245096716;  // std dev = 2.082, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.05655450470227009;  // std dev = 3.690, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6275427957020941;  // std dev = 2.135, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.13622616562286988;  // std dev = 0.117, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7790991586707964;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.21700784293868666;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.21242648947400986;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.39003078161840393;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.46777911326575927;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.46572854616326814;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41148204782924297;  // std dev = 2.027, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return -0.07340438255696864;  // std dev = 2.227, 103.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=10 */
%   | | | else return 0.12020499756243493;  // std dev = 4.506, 143.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=48 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5024877702744925;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06849275838183279;  // std dev = 1.433, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.26410427422466765;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.34222813340811836;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.36460564400755224;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5235906486506684;  // std dev = 0.644, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.12114059943195309;  // std dev = 0.372, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.06764127745497239;  // std dev = 4.631, 152.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
%   | | | else return 0.16013314591801947;  // std dev = 1.656, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.37929619017606186;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.2120892714176208;  // std dev = 0.961, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.14896852514593736;  // std dev = 0.912, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3011917055937028;  // std dev = 0.088, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.3472053452277705;  // std dev = 0.187, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1203487834235519;  // std dev = 0.406, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -3.5365940827676427E-4;  // std dev = 0.936, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.17192223758255176;  // std dev = 1.411, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return -0.05577096115234045;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2896107488041019;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return -0.006605350256880045;  // std dev = 2.233, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | | else return 0.059201099581977154;  // std dev = 4.498, 159.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24379827288927494;  // std dev = 0.080, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.24564774888297267;  // std dev = 1.260, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.40649428747321514;  // std dev = 1.532, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.16162552676732772;  // std dev = 0.104, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2358512844826995;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5217672391854553;  // std dev = 0.741, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.14831903652590273;  // std dev = 0.192, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.01495141474142964;  // std dev = 2.217, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.05023807562042628;  // std dev = 2.817, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1764482576378065;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2299280673546459;  // std dev = 0.061, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), location(A, H) )
%   | | | then return 0.19100901223614622;  // std dev = 1.450, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.4124005461972008;  // std dev = 2.377, 63.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.0911227128842538;  // std dev = 0.142, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | | else return -0.16415128934727946;  // std dev = 0.528, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.19516015538157805;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.03671716986816956;  // std dev = 1.141, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.16713800540480814;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17200308290369565;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.39710089859336256;  // std dev = 0.920, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.19760892531847404;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2705911550510496;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.01835022543052144;  // std dev = 1.997, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return -0.06841612497480148;  // std dev = 0.439, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.16230277367999513;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.0185768902807267;  // std dev = 2.249, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.03071417056649314;  // std dev = 3.005, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13135282065654696;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.039257943252208695;  // std dev = 0.880, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17500713063101267;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), complex(A, G) )
%   | then return -0.0417538181703496;  // std dev = 0.166, 96.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=18 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(A, J), enzyme(A, I) )
%   | | | then return -0.11830645500338176;  // std dev = 0.906, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.019410739398008366;  // std dev = 2.359, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.06978294344847241;  // std dev = 2.756, 94.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=39 */
%   | | | else return -0.03685101417298392;  // std dev = 1.120, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.188', 'seconds']
Refined model CLL: -0.186133


******************************************
Best model found
******************************************
Results 

CLL : -0.161063 

AUC ROC : 0.989587 

AUC PR : 0.393388 

Precision : 0.323171 

Recall : 0.8 

F1 : 0.460369 

Total Learning Time : 12.374 

Total Inference Time : 23.792008876800537 

Total revision time: 59.39854479026795
Best scored revision CLL: -0.186133


Results 

CLL : -0.161063 

AUC ROC : 0.989587 

AUC PR : 0.393388 

Precision : 0.323171 

Recall : 0.8 

F1 : 0.460369 

Total Learning Time : 64.6873934288025 

Total Inference Time : 23.792008876800537 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.457
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0803711573217346;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.14201990284144686;  // std dev = 5.613, 155.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.11490569185626909;  // std dev = 3.758, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.82232355237622;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15814760109091452;  // std dev = 0.041, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( location(A, K) )
%   | | | then return 0.17771395137006915;  // std dev = 3.464, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.093577923700121;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11714511802828535;  // std dev = 2.000, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6857010455290963;  // std dev = 0.272, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14237668294169747;  // std dev = 0.303, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13349721165536152;  // std dev = 3.654, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08497157777085061;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38619771943204073;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5868507328904952;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.058652663466695634;  // std dev = 4.204, 186.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5222054940603575;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09553998573878689;  // std dev = 3.557, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.09694381117133018;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207118471601496;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.03949719633447307;  // std dev = 4.280, 211.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3933326197540753;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0947714498294518;  // std dev = 3.619, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.1419069488200309;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.34523309844796113;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2551722425694892;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3043522511433713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.053861771510659226;  // std dev = 0.932, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06301975797181081;  // std dev = 3.966, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
%   | | | else return 0.07532419324001156;  // std dev = 3.724, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23054356651444532;  // std dev = 0.115, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22686624340719075;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6444403036075396;  // std dev = 0.783, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19056978587101753;  // std dev = 0.642, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.044921941684877516;  // std dev = 3.377, 126.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17408760997354866;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07264927324106608;  // std dev = 0.880, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4266030944147495;  // std dev = 1.236, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.1399072666565196;  // std dev = 0.212, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1896013354961244;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.07364600400795542;  // std dev = 3.004, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.154297555485846;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13108514478870947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17138195374053936;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07700952835982872;  // std dev = 0.392, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.07148287626049755;  // std dev = 0.274, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.030485556523477935;  // std dev = 1.259, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16675619500951955;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03511747110318251;  // std dev = 2.696, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | | else return 0.01455244151339191;  // std dev = 3.106, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13418865772493924;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14485295483949556;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13177955188238633;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13960873670051024;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.032968933419335184;  // std dev = 1.386, 88.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1448535335206862;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.020828634751336676;  // std dev = 2.703, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | | else return 0.004456333871698401;  // std dev = 3.123, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.551', 'seconds']
Parameter learned model CLL:-0.173513 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.494, 28, 8], 'false,false,true,false': [5.613, 111, 44], 'false,false,false,true': [3.758, 55, 19], 'false,false,false,false': [0.926, 6, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.992, 1, 52], 'false,false,true,false': [0.041, 142, 0], 'false,false,false,true': [3.464, 36, 18], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.0, 19, 8], 'false,true,false,true': [0.272, 0, 48], 'false,true,false,false': [0.303, 123, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.654, 43, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.121, 0, 3], 'false,true,false': [4.204, 134, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.557, 43, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.28, 155, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.619, 42, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.062, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.932, 16, 3], 'false,false,true': [7.45e-09, 0, 6], 'false,false,false,true': [3.966, 114, 49], 'false,false,false,false': [3.724, 45, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.115, 0, 12], 'true,true,true,false': [0.024, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.783, 0, 36], 'true,false': [0.642, 112, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.377, 90, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.88, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.236, 1, 56], 'false,true,false': [0.212, 165, 0], 'false,false,true,true': [0.021, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.004, 38, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.024, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.009, 0, 4], 'false,true,true': [0.392, 10, 1], 'false,true,false,true': [0.274, 1, 2], 'false,true,false,false': [1.259, 56, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.696, 77, 36], 'false,false,false,false': [3.106, 49, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.011, 0, 5], 'true,true,true,false': [0.018, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.027, 0, 4], 'false,true': [1.386, 71, 17], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.703, 84, 36], 'false,false,false,false': [3.123, 51, 20]}]
{'': [-2.5376526277146434e-16, 0.2018529061642779], 'false': [-1.4802973661668753e-16, 0.19463667820069333], 'false,false': [0.19813053370247607, 0.18594726413656407], 'false,false,true': [0.17283950617283966, 0.20328824141519322], 'false,false,false': [0.19083272461650785, 0.12244897959183677], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.0, 0.20489982583603852], 'false': [7.401486830834377e-17, 0.2015520196570566], 'false,false': [0.19532236449920623, 0.21854701986271052], 'false,false,false': [0.22223317563158934, 0.18750000000000003], 'false,false,true': [0.018566583499770188, 1.1745503828937507e-05], 'false,true': [0.0, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-2.5376526277146434e-16, 0.15879117148912203], 'false': [0.140704725572337, 0.21007268703161122], 'false,false': [0.21130477872245634, 0.18749999999999997], 'false,false,true': [0.0, 0.2118779846560555], 'false,false,false': [0.18749999999999997, nan], 'false,true': [0.1481877582824089, 0.13942320294086197], 'false,true,false': [0.001544282749687061, 0.0007488460794749559], 'true': [-1.1102230246251565e-16, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.12708234251221426], 'false': [0.09794370744248847, 0.2051365650926276], 'false,false': [0.002740098999734597, 0.20708920341629558], 'false,false,false': [0.20743413161864938, 0.20408163265306117], 'false,true': [0.011214332545869954, 0.09499796507152247], 'false,true,true': [0.0, 0.00488703544200364], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, 3.700743415417188e-17]}
{'': [0.0, 0.11709861406093704], 'false': [0.08682321095742906, 0.21063371586283694], 'false,false': [0.0013184441530346425, 0.21512568230362386], 'false,false,false': [0.21467252736564169, 0.22222222222222224], 'false,false,true': [0.0, 0.0], 'true': [0.0, -3.700743415417188e-17], 'true,true': [0.0, nan]}
{'': [0.0019118349327729473, 0.12235026360707106], 'false': [0.045757637397456995, 0.12739164930436522], 'false,false': [9.25185853854297e-18, 0.1298315790600315], 'false,false,false': [0.09650265660805665, 0.21330202442114987], 'true': [0.002229332297027022, 0.0005374829429615665], 'true,true': [2.3790493384824782e-17, 0.0009691452412842055], 'true,false': [0.0, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.12681482901215965, 0.08805844439196206], 'true': [0.04819018759569433, 0.0036800100571446176], 'false': [-5.551115123125783e-18, 0.09051577243520656], 'false,false': [0.09051577243520656, nan], 'true,true': [0.0009916301622481885, 0.021538362514984706], 'true,true,false': [0.0, 0.017029921922389155], 'true,true,true': [0.0011061864204865897, 0.00029270172261614685]}
{'': [0.054083179088416526, 0.08674112526982704], 'false': [0.06832663033074594, 0.1507979188966279], 'false,false': [0.00022453110670091203, 0.15554191671913642], 'false,false,false': [0.15554191671913642, nan], 'false,true': [0.026791575230967014, 0.00027313371038690534], 'true': [4.625929269271485e-18, 0.08602273735040654], 'false,true,true': [nan, 0.026791575230966952], 'false,false,true': [0.00022453110670091203, nan]}
{'': [0.000157272941534971, 0.07059922501537237], 'false': [0.022247164434292362, 0.09104984115812756], 'false,false': [0.0, 0.09303136500617229], 'false,false,false': [0.06432179222150428, 0.13978590897837986], 'false,true': [0.013961088066412069, 0.023158947524434075], 'false,true,false': [0.025044567628088547, 0.022650838195191664], 'true': [6.248514292591902e-05, 0.00027552943984254785], 'true,false': [0.0, 1.964523746313465e-05]}
{'': [0.00010445668000402411, 0.0677120676071542], 'false': [0.021834822496589936, 0.08750310058132074], 'false,false': [0.0, 0.08936189909293536], 'false,false,false': [0.0608725563246035, 0.1373444911730659], 'true': [7.07003575051185e-05, 0.00018363026748712333], 'true,true': [8.016239718981397e-05, 0.0], 'true,true,true': [2.321516384248823e-05, 0.00010399493217648492], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.03
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.0803711573217346;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( interaction(J, A), interaction(A, K) )
%   | | | then return 0.09344305274657119;  // std dev = 3.029, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return 0.16849376268571822;  // std dev = 6.103, 174.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=54 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8211002220510527;  // std dev = 0.995, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.156821700061632;  // std dev = 0.121, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.03637587372079555;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.15637587372079553;  // std dev = 3.298, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41250929388914165;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.44425532563517345;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.007516977878930438;  // std dev = 1.323, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.15623108345731573;  // std dev = 1.504, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6859418170852453;  // std dev = 0.278, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13638687893417042;  // std dev = 0.097, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15812972412879844;  // std dev = 3.580, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else return 0.06383592390520043;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4481224881110067;  // std dev = 0.004, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3861406463296694;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5913543914203109;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.1404752408076683;  // std dev = 1.914, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.06192160401189189;  // std dev = 3.595, 138.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=39 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return -0.08248641584169003;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5160564593706227;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.10570019630777357;  // std dev = 3.110, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.18868225826356014;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.34155873230725764;  // std dev = 0.004, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then if ( complex(G, E), phenotype(G, H) )
%   | | | then return 0.060058380203576255;  // std dev = 1.995, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return -0.07608075217167867;  // std dev = 0.594, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.03597171645279607;  // std dev = 1.749, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.10581298827820304;  // std dev = 2.986, 95.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=36 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.4376998530391385;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38893085778589354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.05937432252898734;  // std dev = 2.526, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.18000460108723987;  // std dev = 2.556, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27024861733087685;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.329856206033769;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.30291370599558304;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then return -0.14492878229190645;  // std dev = 0.005, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return -0.03445833253910135;  // std dev = 0.647, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.05218703672831045;  // std dev = 0.572, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.26771722264881065;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.14009203102682238;  // std dev = 1.592, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.03476097348859693;  // std dev = 5.204, 224.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=63 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23384586879173505;  // std dev = 0.086, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.0723220950312169;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6019882657272981;  // std dev = 0.194, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else return -0.18998237368879867;  // std dev = 0.060, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.21876437304824967;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.45614515867224137;  // std dev = 0.657, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.15569405238096373;  // std dev = 0.074, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.03044853832070576;  // std dev = 1.851, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.0850828476274307;  // std dev = 1.781, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18325946631218923;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, E) )
%   | | then return 0.00800109266467238;  // std dev = 0.905, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.18180090660064238;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.3310549427114823;  // std dev = 0.366, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4501944426856314;  // std dev = 0.373, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.13794345411781556;  // std dev = 0.026, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2701768851532022;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.0816546154081997;  // std dev = 2.897, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return -0.04996311367777742;  // std dev = 0.749, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16790179501334604;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17583397058448721;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( phenotype(G, H), enzyme(A, I) )
%   | | | then return -0.26293612634732233;  // std dev = 0.631, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06118361454044808;  // std dev = 0.547, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.03724887331437268;  // std dev = 1.123, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.014263320202908667;  // std dev = 0.877, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.17271517525522737;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return -0.018002226789941584;  // std dev = 1.666, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0.035313465463356064;  // std dev = 3.550, 124.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14921954554667555;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.14486453093932933;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.05383444321701225;  // std dev = 0.481, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.09656790489136723;  // std dev = 0.708, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.055542569115095794;  // std dev = 0.722, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.06606694141199355;  // std dev = 0.919, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.14943594183154715;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, L), enzyme(A, M) )
%   | | | then return -0.04102125778210342;  // std dev = 1.793, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.00917576417672227;  // std dev = 3.583, 149.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=46 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '15.793', 'seconds']
Refined model CLL: -0.176321


******************************************
Best model found
******************************************
Results 

CLL : -0.194397 

AUC ROC : 0.981534 

AUC PR : 0.204917 

Precision : 0.132256 

Recall : 0.797834 

F1 : 0.226899 

Total Learning Time : 7.03 

Total Inference Time : 7.604923248291016 

Total revision time: 26.43058825683594
Best scored revision CLL: -0.173513


Results 

CLL : -0.194397 

AUC ROC : 0.981534 

AUC PR : 0.204917 

Precision : 0.132256 

Recall : 0.797834 

F1 : 0.226899 

Total Learning Time : 31.719436895370485 

Total Inference Time : 7.604923248291016 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.506
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11814893509951237;  // std dev = 3.102, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 0.16283643509951176;  // std dev = 5.207, 128.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09499104036267027;  // std dev = 2.621, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7281936043102515;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6219687014732398;  // std dev = 0.970, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.801667358586088;  // std dev = 1.386, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.16059573891586132;  // std dev = 0.035, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07181942577270396;  // std dev = 2.913, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return 0.077334239218108;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5692527820673249;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5626751728358972;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.037885892890203166;  // std dev = 2.789, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6482410532889225;  // std dev = 1.381, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14212404231968054;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6650657568241494;  // std dev = 0.210, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14129489794350056;  // std dev = 2.451, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06648789595396841;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4266015255541593;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.5692206769890082;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5700356171765029;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5974346300223483;  // std dev = 0.176, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.06490362968344277;  // std dev = 4.252, 176.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41455092087908996;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6407423174371742;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.14574521119199485;  // std dev = 2.684, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.13914615125260274;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32935880526668476;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3232038276932718;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.03840624979808788;  // std dev = 4.508, 212.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.31870395223638937;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40158511988953427;  // std dev = 0.117, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03407349101660564;  // std dev = 2.583, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.013751684052465326;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1614156231121558;  // std dev = 0.947, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.4492501912765505;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2538016739815452;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31226329711386663;  // std dev = 0.104, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0694871084802001;  // std dev = 1.235, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.12537296162541303;  // std dev = 0.713, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.07842493067415865;  // std dev = 3.922, 143.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=46 */
%   | | | else return 0.06657668435776667;  // std dev = 3.040, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2656696043932547;  // std dev = 0.202, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2367898909950009;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2526080849693793;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5733172167879197;  // std dev = 1.150, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17381476812172764;  // std dev = 0.699, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.023089334384514965;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09077623425222586;  // std dev = 3.203, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1872075418626784;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21511668110739837;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40026618699830935;  // std dev = 1.799, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14236710080220524;  // std dev = 0.226, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19730123762155136;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.029830812939486605;  // std dev = 2.508, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16045133479865284;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19129284727868734;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1998777044086984;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.10732275034810837;  // std dev = 0.391, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2400349992206475;  // std dev = 0.162, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.04035233466660171;  // std dev = 1.629, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1949104992660059;  // std dev = 0.000842, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06613663222079846;  // std dev = 2.569, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   | | | else return 0.034978912015111364;  // std dev = 2.481, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13992454345050853;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14031031423914808;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13347726176314656;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1849176432989526;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17033619696287552;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03360370028245399;  // std dev = 1.775, 109.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.08379638106067808;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01426050252542493;  // std dev = 2.734, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | | | else return 0.01825488526022884;  // std dev = 2.495, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.014', 'seconds']
Parameter learned model CLL:-0.18006 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [1.095, 2, 3], 'false,false,true,true': [3.102, 37, 13], 'false,false,true,false': [5.207, 89, 39], 'false,false,false,true': [2.621, 29, 9], 'false,false,false,false': [1.369, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.02, 0, 7], 'false,true,true': [0.97, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.386, 2, 52], 'false,false,true,false': [0.035, 141, 0], 'false,false,false,true': [2.913, 37, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.017, 0, 11], 'true,false': [0.019, 0, 4], 'false,true,true': [2.789, 52, 14], 'false,true,false,true': [1.381, 2, 42], 'false,true,false,false': [0.0, 105, 0], 'false,false,true,true': [0.21, 0, 3], 'false,false,true,false': [2.451, 20, 9], 'false,false,false,true': [1.5, 9, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.027, 0, 15], 'true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.176, 0, 6], 'false,true,false': [4.252, 127, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.684, 22, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.001, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.021, 0, 6], 'false,true': [4.508, 156, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.117, 0, 2], 'false,false,false,true': [2.583, 28, 9], 'false,false,false,false': [1.519, 10, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.947, 1, 9], 'true,true,false': [0.088, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.104, 0, 2], 'false,true': [1.235, 29, 5], 'false,false,true': [0.713, 1, 5], 'false,false,false,true': [3.922, 97, 46], 'false,false,false,false': [3.04, 36, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.202, 0, 13], 'true,true,true,false': [0.097, 0, 3], 'true,true,false,true': [0.028, 0, 3], 'true,true,false,false': [1.15, 1, 33], 'true,false': [0.699, 117, 0], 'false,true': [0.866, 1, 3], 'false,false,true': [3.203, 57, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.047, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.799, 3, 56], 'false,true,false': [0.226, 131, 0], 'false,false,true,true': [0.086, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.508, 33, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.021, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.105, 0, 5], 'false,true,true': [0.391, 17, 1], 'false,true,false,true': [0.162, 0, 6], 'false,true,false,false': [1.629, 65, 17], 'false,false,true': [0.000842, 0, 3], 'false,false,false,true': [2.569, 53, 31], 'false,false,false,false': [2.481, 31, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.019, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.03, 0, 2], 'true,false': [0.076, 0, 3], 'false,true': [1.775, 85, 24], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [2.734, 70, 31], 'false,false,false,false': [2.495, 33, 12]}]
{'': [0.05859374999999978, 0.21186612389250148], 'false': [0.17283950617283939, 0.20408163265306253], 'false,false': [0.20679207170811836, 0.19281663516067998], 'false,false,true': [0.1923999999999995, 0.21185302734375042], 'false,false,false': [0.18074792243767326, 0.2343749999999999], 'false,true': [0.0, 0.1874999999999999], 'false,true,false': [1.4802973661668753e-16, 0.23999999999999994], 'true': [0.07100591715976314, 1.4802973661668753e-16]}
{'': [3.726045762206809e-05, 0.19771855541447222], 'false': [0.11750880720159934, 0.1917294844838017], 'false,false': [0.1952641464324496, 0.17758144105606363], 'false,false,true': [0.035565199057197266, 8.447909490984968e-06], 'false,false,false': [0.1767525550029917, 0.18750000000000003], 'false,true': [0.11750880720159934, nan], 'true': [-2.220446049250313e-16, 5.703131268632232e-05]}
{'': [5.148326766448719e-05, 0.14906964018089733], 'false': [0.13573990045777357, 0.20865985832632628], 'false,false': [0.21239442340070416, 0.18753460578685843], 'false,false,true': [0.014713045453823717, 0.20712522931191837], 'false,false,false': [0.18753460578685843, nan], 'false,true': [0.11782044374836638, 0.14280245888543164], 'false,true,false': [0.04337244081588043, -1.0150610510858574e-16], 'true': [2.610354836572106e-05, 8.954987072151699e-05]}
{'': [0.05814921659842373, 0.12822858214123242], 'false': [0.10923033794308182, 0.21119343519831651], 'false,false': [0.01136945508375479, 0.21870278215928576], 'false,false,false': [0.21837920409664782, 0.22222222222222224], 'false,true': [0.004508418337388369, 0.10270661396034635], 'true': [4.696484594826818e-05, 0.0], 'false,false,true': [0.0, 0.0], 'false,true,true': [0.0, 0.00515257769291592]}
{'': [3.770280246597757e-05, 0.11193856224608845], 'false': [0.09585619622363531, 0.17618927904953813], 'false,false': [0.0061060337347100075, 0.17965043702293143], 'false,false,false': [0.18029265624960822, 0.17751698018051937], 'false,false,true': [0.0, 0.006869287951548703], 'true': [2.0646697657728592e-07, 7.121705634251703e-05], 'true,true': [2.0646697657728592e-07, nan]}
{'': [0.06821073666384987, 0.11717380672403205], 'false': [0.044840481473597045, 0.12640681774144646], 'false,false': [0.08483217043325891, 0.1276238640912441], 'false,false,false': [0.1075802460883632, 0.1848445987580817], 'true': [0.08145993852101417, 0.0043939740283153355], 'true,true': [0.08960676651680147, 0.0019151980812719405], 'true,false': [0.0, 0.005451707249384485], 'true,false,true': [0.0, nan]}
{'': [0.10442114217537968, 0.12018180038199269], 'false': [0.18735614657739966, 0.11656470936943214], 'false,false': [0.11656470936943214, nan], 'true': [0.04866853546635557, 0.004175356181328061], 'true,true': [0.003277781941102592, 0.04342061144207494], 'true,true,false': [0.0002700740245492143, 0.0388884701350016], 'true,true,true': [0.0031494549873828637, 0.0031562096573746665]}
{'': [0.00034010593810004003, 0.09096359709849335], 'false': [0.08033936106370947, 0.13285773167836776], 'false,false': [0.002451332530403661, 0.13979859517511592], 'false,false,false': [0.13979859517511592, nan], 'false,true': [0.054836376202677034, 0.0003906897057958569], 'false,true,true': [nan, 0.054836376202677], 'false,false,true': [0.002451332530403661, nan], 'true': [0.0, 0.00031337441031579837]}
{'': [0.0010567558859654706, 0.07095010327974546], 'false': [0.03191313138279742, 0.09875595051473193], 'false,false': [2.3642847174950207e-07, 0.1006408167201215], 'false,false,false': [0.0785527701235152, 0.14314745263807752], 'false,true': [0.008511515163837562, 0.03544133728196833], 'false,true,false': [0.004348619525423915, 0.032356160304320154], 'true': [4.366142915078197e-05, 0.0018429575308048691], 'true,false': [0.0, 0.002199265741642059]}
{'': [0.0007514756055116076, 0.06864136624587593], 'false': [0.02891797269291539, 0.09659909766033586], 'false,false': [0.18738634005919963, 0.09384889294563953], 'false,false,false': [0.07401769410294884, 0.1383478795871415], 'true': [0.0003704542365299567, 0.00193744067499949], 'true,true': [3.4888534784438543e-05, 0.0008958328878236101], 'true,true,false': [0.0, 0.00046171171421899304], 'true,true,true': [0.0, 0.00017432361864109028]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 9.413
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return 0.21985106275908683;  // std dev = 3.294, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0.1464924933817208;  // std dev = 5.783, 163.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.4178724455614659;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7385128322212613;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7830624417391858;  // std dev = 1.667, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.1590151185168334;  // std dev = 0.151, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.04093858561218374;  // std dev = 1.991, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.24934002020565665;  // std dev = 2.025, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5662393334476139;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6004007564507263;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.049215191658361815;  // std dev = 1.529, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return 0.18154776894998423;  // std dev = 2.091, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6644365786539764;  // std dev = 1.149, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14208869774856211;  // std dev = 0.034, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.3091955075161635;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6159463602843245;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07251465535747885;  // std dev = 2.574, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4333840475830138;  // std dev = 0.039, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5674839040624831;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6058714569133152;  // std dev = 0.189, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.12313950897354693;  // std dev = 0.141, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.08104256853961156;  // std dev = 4.108, 158.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.46416934700898577;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.26318280890725815;  // std dev = 1.211, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.006092005243006449;  // std dev = 2.674, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3144590117920717;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), phenotype(A, F) )
%   | | then return -0.0020988624073782214;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.36807683946474085;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09336521304403449;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.10179430949423282;  // std dev = 2.650, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   | | | else return 0.05673668977051777;  // std dev = 3.302, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3525753507458716;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.02233203386428181;  // std dev = 2.267, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.42125611635572163;  // std dev = 1.378, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2498060886903798;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.20704167946622568;  // std dev = 0.728, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2768154502913427;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, F), phenotype(A, G) )
%   | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.4690795740998062;  // std dev = 0.359, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.7299020115676229;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1915356605657862;  // std dev = 0.087, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3103169274187095;  // std dev = 3.105, 79.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=54 */
%   | | | else return -0.15053765318879508;  // std dev = 0.361, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return 0.23891027740357032;  // std dev = 0.981, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.39612175996366583;  // std dev = 0.188, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | else return -0.15884987434513576;  // std dev = 0.067, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.21310784739927313;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5553740718067248;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.2010497206870509;  // std dev = 0.037, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.08669444296929521;  // std dev = 1.171, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.018656658748658274;  // std dev = 2.052, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.04772489773889629;  // std dev = 0.662, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.04393977929644235;  // std dev = 0.591, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.14961388946476084;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.09229823766268348;  // std dev = 0.548, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22213540572109997;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( location(A, I), interaction(A, J) )
%   | | | then return 0.28323856865415953;  // std dev = 0.722, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.40762269898822706;  // std dev = 0.901, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else return -0.1312590779408487;  // std dev = 0.036, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.16338554594356314;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return -0.013755981691082678;  // std dev = 2.205, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return -0.15956715605278707;  // std dev = 0.796, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1382245740269643;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.21685526481602302;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.162336325957139;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(I, I), location(A, J) )
%   | | | then return -0.033063564503014196;  // std dev = 0.703, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | | else return 0.01461954424349955;  // std dev = 1.244, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | else return 0.08196837648726206;  // std dev = 0.483, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.19749485163945998;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.10113297390106255;  // std dev = 1.247, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.041605217792545224;  // std dev = 2.708, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13112841283795926;  // std dev = 0.023, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.013007512496105308;  // std dev = 0.521, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( location(A, G), location(E, G) )
%   | | then if ( phenotype(A, H), enzyme(E, I) )
%   | | | then return -0.006784401881572813;  // std dev = 0.763, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.07913727344101473;  // std dev = 1.260, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | else return 0.20506926120079405;  // std dev = 0.441, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), interaction(L, M) )
%   | | | then return 0.017797949044304383;  // std dev = 1.705, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.06394063405511898;  // std dev = 1.486, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.002140606865828814;  // std dev = 2.126, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.17132417014179332;  // std dev = 1.133, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.480', 'seconds']
Refined model CLL: -0.172128


******************************************
Best model found
******************************************
Results 

CLL : -0.189741 

AUC ROC : 0.987311 

AUC PR : 0.260486 

Precision : 0.155213 

Recall : 0.925795 

F1 : 0.265855 

Total Learning Time : 9.413 

Total Inference Time : 9.519170999526978 

Total revision time: 31.573046058654786
Best scored revision CLL: -0.172128


Results 

CLL : -0.189741 

AUC ROC : 0.987311 

AUC PR : 0.260486 

Precision : 0.155213 

Recall : 0.925795 

F1 : 0.265855 

Total Learning Time : 36.86189469718933 

Total Inference Time : 9.519170999526978 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.859
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12427796735757547;  // std dev = 4.921, 124.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=33 */
%   | | | else return 0.15814893509951103;  // std dev = 5.020, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7567805023276173;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.3815061919152162;  // std dev = 0.926, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7027325870222958;  // std dev = 3.074, 80.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=69 */
%   | | | else return -0.15998098933383645;  // std dev = 0.029, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07965355245125738;  // std dev = 1.729, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4723731798825074;  // std dev = 0.918, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.3486900725150081;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.12952898628218015;  // std dev = 4.202, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5579581681647906;  // std dev = 2.422, 44.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | | else return -0.14162819644426253;  // std dev = 5.16e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.1881314514879191;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09758283422636661;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07772118420652042;  // std dev = 1.394, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.388252421951633;  // std dev = 0.945, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.456065720644784;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4027184110918428;  // std dev = 1.983, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else return 0.07028420048604432;  // std dev = 5.029, 202.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6183672289734381;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.02784130210221441;  // std dev = 1.759, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3633668855309507;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07620599990465049;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06417270185921485;  // std dev = 5.544, 242.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4661161285360991;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.014181045761670936;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.30585549592202455;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2989497088535033;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.43679506732425954;  // std dev = 0.218, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.35391834621366247;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.027916401625656263;  // std dev = 2.416, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.39676934250523793;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06491743930965607;  // std dev = 4.847, 179.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=55 */
%   | | | else return 0.06795099046379624;  // std dev = 1.880, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.27026023679773814;  // std dev = 0.252, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2777243024131213;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6077417831682281;  // std dev = 0.391, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.18591494971907688;  // std dev = 0.575, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3067385176567314;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06876031078990945;  // std dev = 4.023, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18518834962323383;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.06610198186793594;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35486405935720394;  // std dev = 3.306, 85.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=71 */
%   | | else return -0.1585043914991285;  // std dev = 0.295, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22556902619628538;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0516720470292648;  // std dev = 1.398, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17703305619661563;  // std dev = 0.151, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.22040955795533343;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03946091087622283;  // std dev = 1.499, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3639825450530002;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.01740509856357356;  // std dev = 1.675, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.014560576968719513;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.034221140261228813;  // std dev = 3.501, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | | | else return 0.06563659273294435;  // std dev = 1.362, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.017874017669432807;  // std dev = 0.876, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.2803767785279152;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18496373418718445;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.006822882064897232;  // std dev = 2.401, 105.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2362307895002549;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.050734554181035015;  // std dev = 3.358, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | | else return 0.18377753725767698;  // std dev = 1.193, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.332', 'seconds']
Parameter learned model CLL:-0.202324 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.921, 91, 33], 'false,false,true,false': [5.02, 84, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.028, 0, 5], 'false,true,true': [0.926, 2, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.074, 11, 69], 'false,false,true,false': [0.029, 159, 0], 'false,false,false,true': [1.729, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.918, 1, 8], 'true,false': [0.857, 1, 3], 'false,true,true': [4.202, 73, 34], 'false,true,false,true': [2.422, 7, 37], 'false,true,false,false': [5.16e-08, 63, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [1.394, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.945, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.983, 6, 14], 'false,true,false': [5.029, 145, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.759, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.018, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.154, 2, 4], 'false,true': [5.544, 171, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.081, 0, 7], 'true,true,false': [0.218, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.416, 49, 12], 'false,false,true': [0.024, 0, 3], 'false,false,false,true': [4.847, 124, 55], 'false,false,false,false': [1.88, 14, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.252, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.391, 0, 33], 'true,false': [0.575, 105, 0], 'false,true': [0.021, 0, 3], 'false,false,true': [4.023, 85, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.895, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.306, 14, 71], 'false,true,false': [0.295, 162, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.398, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.151, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.039, 0, 3], 'false,true,true': [1.499, 49, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.675, 38, 17], 'false,false,true': [0.86, 1, 3], 'false,false,false,true': [3.501, 89, 40], 'false,false,false,false': [1.362, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.876, 1, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.034, 0, 3], 'false,true': [2.401, 76, 29], 'false,false,true': [0.018, 0, 3], 'false,false,false,true': [3.358, 78, 40], 'false,false,false,false': [1.193, 4, 4]}]
{'': [0.13017751479289916, 0.20733143513066318], 'false': [0.18750000000000006, 0.2043214148404473], 'false,false': [0.2028184627788232, 0.2314049586776858], 'false,false,false': [0.24000000000000005, 0.22222222222222224], 'false,false,true': [0.19530437044745186, 0.21000000000000124], 'false,true': [0.0, 1.4802973661668753e-16], 'true': [0.09876543209876527, 0.18750000000000006], 'false,true,false': [0.0, 0.0]}
{'': [0.00013129852941369663, 0.20487595553744972], 'false': [0.17133276299164216, 0.2042753648379704], 'false,false': [0.20528511294274712, 0.18692903731844984], 'false,false,true': [0.11813388626908657, 5.175082511781993e-06], 'false,false,false': [0.18692903731844984, nan], 'false,true': [0.17133276299164216, nan], 'true': [0.0, 0.000158871220591017]}
{'': [0.12458111179154281, 0.1705395547871044], 'false': [0.16922110526851245, 0.18129793865564786], 'false,false': [0.18750000000000006, 0.1766815355097816], 'false,false,true': [0.0, 0.20408163265306128], 'false,false,false': [0.1766815355097816, nan], 'false,true': [0.16497868927167048, 0.17332701333659536], 'false,true,false': [0.13333596806343426, 4.229421046191072e-17], 'true': [0.09368157216448475, 0.18351449138067566]}
{'': [0.07470238823272594, 0.14395655520659079], 'false': [0.14071916869998818, 0.1802107603479661], 'false,false': [0.0, 0.17186873924002233], 'false,false,false': [0.17186873924002233, nan], 'false,true': [0.19664103892771811, 0.1252262683897849], 'false,true,true': [nan, 0.19664103892771811], 'true': [0.08111029414573055, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.12300785431497584, 0.1316786123960003], 'false': [0.12702385614146516, 0.2080682805416866], 'false,false': [0.0, 0.21470346554893846], 'false,false,false': [0.17283950617283952, 0.25], 'true': [4.465185342751786e-05, 0.22206264541992835], 'true,true': [4.465185342751786e-05, nan], 'false,false,true': [nan, 0.0]}
{'': [0.00855175263362788, 0.12792100889081268], 'false': [0.0956931005884027, 0.13542280466709633], 'false,false': [0.00019291262855449429, 0.13582892008364444], 'false,false,false': [0.13126510794749602, 0.1766667611371669], 'true': [0.009390076166356986, 0.0], 'true,true': [0.0009278265007928958, 0.015834385389654575], 'true,false': [nan, 0.0]}
{'': [0.11469247341206631, 0.12772082078582817], 'false': [0.00015113510124771987, 0.12945514261076865], 'false,false': [0.12945514261076865, nan], 'true': [0.02618257083816963, 0.0031486265316305853], 'true,true': [0.005781654941342246, 0.004623811785136193], 'true,true,true': [0.0063547556831573095, 0.0], 'true,true,false': [nan, 0.0046238117851359235]}
{'': [0.07023588044816412, 0.10619250679005253], 'false': [0.1040738835475771, 0.1415744576290145], 'false,false': [0.0, 0.15030478914045298], 'false,false,false': [0.15030478914045298, nan], 'false,true': [0.12854895986652162, 0.0005376535344788179], 'false,true,true': [nan, 0.12854895986652162], 'true': [4.625929269271485e-18, 0.13338097940375324], 'false,false,true': [0.0, nan]}
{'': [0.0025753914021581985, 0.07771870650305907], 'false': [0.04557959353540411, 0.10255004575235517], 'false,false': [0.18485371111194016, 0.10014215122820948], 'false,false,false': [0.0949975419712748, 0.15454376418446772], 'false,true': [0.03745263998622086, 0.05223053370260706], 'false,true,false': [0.0, 0.05103525251251414], 'true': [0.0028348708242449117, 0.000515067436721602], 'true,false': [nan, 0.000515067436721602]}
{'': [0.07273967942326785, 0.0810748335054262], 'false': [0.05488832571681176, 0.10018304226191498], 'false,false': [0.00010815263451808647, 0.10183679237386391], 'false,false,false': [0.09556535484570869, 0.17776389773304285], 'true': [0.09209931337181601, 0.00039376528172115993], 'true,true': [0.09209931337181601, nan], 'true,true,true': [0.09595531649236792, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 11.028
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, A) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03461952333480641;  // std dev = 2.722, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.084564029439135;  // std dev = 3.047, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.19607996958226992;  // std dev = 5.696, 145.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7289763986995501;  // std dev = 2.671, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.16129547732460528;  // std dev = 0.103, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.27792351774362606;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.09322389883138697;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4828725568529877;  // std dev = 0.281, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return 0.04418584206045091;  // std dev = 3.050, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.10535186678754913;  // std dev = 2.993, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6556955359748052;  // std dev = 1.373, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14336464893058612;  // std dev = 0.058, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14394485300256518;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.17548428246986564;  // std dev = 0.953, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.02526418842337134;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(A, A), complex(A, E) )
%   | | then return 0.1814185410226493;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.43269918522610684;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4352420536856356;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13782266265273854;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.17069136878485136;  // std dev = 2.831, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return 0.08902828917793197;  // std dev = 4.485, 168.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=53 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.511721194736252;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.09457569394119254;  // std dev = 1.454, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.028943800713454412;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.36901974104492086;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.33332290923047325;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return -0.008127860723671096;  // std dev = 2.946, 88.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=17 */
%   | | | else return 0.180111483976473;  // std dev = 0.928, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.0695183577648431;  // std dev = 3.500, 99.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   | | | else return 0.15120594435129328;  // std dev = 2.463, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3858411564594443;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.11640276970607243;  // std dev = 1.410, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.09110086966120345;  // std dev = 0.936, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.21634076102196298;  // std dev = 0.238, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.29929254233135827;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1350383101514518;  // std dev = 0.119, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.031963521710222494;  // std dev = 1.770, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.20093126263462346;  // std dev = 1.264, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.062292177952366;  // std dev = 1.011, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2637599136137281;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.06864199808622366;  // std dev = 3.182, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | | else return 0.029668379934757252;  // std dev = 3.807, 131.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.27042128987149333;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( phenotype(A, E), complex(A, F) )
%   | | | then return 0.6553681019463732;  // std dev = 0.295, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.45945786534058425;  // std dev = 1.535, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | else return -0.17345453086427798;  // std dev = 0.084, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21580594424195998;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6111108361761703;  // std dev = 0.127, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1889395537764162;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.11832839521310297;  // std dev = 1.381, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.0384509554180838;  // std dev = 3.220, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20546826964414996;  // std dev = 0.115, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.013566754252171279;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.3130344812177347;  // std dev = 2.102, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.4260093805071687;  // std dev = 1.437, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.15207829997696998;  // std dev = 0.260, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.15855829699018054;  // std dev = 0.236, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.19460157757701446;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.06510853700473321;  // std dev = 0.724, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.01322721723529238;  // std dev = 1.297, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1887446546891599;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.04679677778371393;  // std dev = 1.042, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.026884045032334894;  // std dev = 1.320, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return -0.06848375963470354;  // std dev = 0.621, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -6.397908368698266E-4;  // std dev = 1.719, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.42362976149403475;  // std dev = 0.476, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.20482720964409232;  // std dev = 0.751, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.006372340851249372;  // std dev = 0.970, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.06445997907767258;  // std dev = 2.410, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1488555743861339;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.2725385340090086;  // std dev = 0.797, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.005768539025962138;  // std dev = 0.499, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(H, A), enzyme(H, I) )
%   | | then return -0.03488986041918508;  // std dev = 0.230, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.007252982585446327;  // std dev = 1.596, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.07355902263041038;  // std dev = 1.021, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.2288052008821689;  // std dev = 1.053, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.03263360957574969;  // std dev = 2.004, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return -0.018965222192990863;  // std dev = 2.566, 103.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.117', 'seconds']
Refined model CLL: -0.184878


******************************************
Best model found
******************************************
Results 

CLL : -0.176523 

AUC ROC : 0.987351 

AUC PR : 0.266827 

Precision : 0.19373 

Recall : 0.85461 

F1 : 0.315858 

Total Learning Time : 11.028 

Total Inference Time : 15.35889482498169 

Total revision time: 46.97850791168213
Best scored revision CLL: -0.184878


Results 

CLL : -0.176523 

AUC ROC : 0.987351 

AUC PR : 0.266827 

Precision : 0.19373 

Recall : 0.85461 

F1 : 0.315858 

Total Learning Time : 47.01834002685547 

Total Inference Time : 15.35889482498169 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.027
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11648226843284444;  // std dev = 4.795, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   | | | else return 0.19148226843284485;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7356630398665784;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6915920875232531;  // std dev = 3.325, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.1616299537336071;  // std dev = 0.069, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( location(A, I) )
%   | | | then return 0.17007188396566242;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41535947512254273;  // std dev = 1.299, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.3064630881379208;  // std dev = 1.234, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04012578792676209;  // std dev = 4.503, 151.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6311537907542196;  // std dev = 1.918, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.14751628613384343;  // std dev = 0.222, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.812156955692296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0792155298609705;  // std dev = 1.596, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.47017532137949564;  // std dev = 0.076, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.4893754036794463;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.49815458342398805;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4548693483101123;  // std dev = 2.153, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else return 0.024505091444482534;  // std dev = 5.159, 251.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5313098293663959;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.10938438885064;  // std dev = 1.614, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3400307599899102;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.276022735686203;  // std dev = 0.986, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.0563548331183162;  // std dev = 5.865, 282.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39989408774774027;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06640731497889205;  // std dev = 1.641, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.275394685689099;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.2848791789521083;  // std dev = 0.883, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3087861014231006;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.005230083957915495;  // std dev = 2.873, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1980751928139361;  // std dev = 0.953, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05139562089035458;  // std dev = 4.635, 185.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=51 */
%   | | | else return -4.838478730745632E-4;  // std dev = 2.345, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.27529784024367365;  // std dev = 0.302, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.24701679041580826;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.26027334772594246;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5620797245635953;  // std dev = 0.877, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17343813226375396;  // std dev = 0.844, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2752062922321878;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09539136929488493;  // std dev = 4.252, 135.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.04945142656362188;  // std dev = 0.936, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.1248288040951108;  // std dev = 0.952, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36977332211676106;  // std dev = 3.255, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.14973182339621244;  // std dev = 0.391, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20397983001360143;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.021446857416808292;  // std dev = 1.412, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1849753335453284;  // std dev = 0.124, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.17112695619667107;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.20844256388287502;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0554730315336971;  // std dev = 2.099, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.14095606319871673;  // std dev = 0.826, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.0516549545595553;  // std dev = 1.469, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20290394354392455;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05783636753576933;  // std dev = 3.557, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
%   | | | else return 0.009618899062652602;  // std dev = 1.479, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1432803923730246;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.17456464491364168;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.42944145258262545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18645851233317648;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03361873710650275;  // std dev = 2.687, 140.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.172062723502107;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.019098573845404872;  // std dev = 3.876, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   | | | else return 0.010534513706632675;  // std dev = 1.396, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.570', 'seconds']
Parameter learned model CLL:-0.19809 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.795, 89, 31], 'false,false,true,false': [5.477, 90, 45], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [0.051, 0, 10], 'false,true,true': [0.074, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.325, 13, 76], 'false,false,true,false': [0.069, 185, 0], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.299, 2, 11], 'true,false': [1.234, 2, 6], 'false,true,true': [4.503, 117, 34], 'false,true,false,true': [1.918, 4, 48], 'false,true,false,false': [0.222, 112, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.596, 10, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.076, 0, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.053, 0, 3], 'false,true,true,false': [2.153, 7, 21], 'false,true,false': [5.159, 193, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.614, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.05e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.986, 1, 10], 'false,true': [5.865, 200, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.641, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.04, 0, 9], 'true,true,false': [0.883, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.873, 64, 19], 'false,false,true': [0.953, 1, 8], 'false,false,false,true': [4.635, 134, 51], 'false,false,false,false': [2.345, 31, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.302, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [5.27e-09, 0, 3], 'true,true,false,false': [0.877, 1, 33], 'true,false': [0.844, 111, 0], 'false,true': [0.021, 0, 5], 'false,false,true': [4.252, 88, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.936, 1, 7], 'true,false': [0.952, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.255, 13, 82], 'false,true,false': [0.391, 170, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.412, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.124, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.107, 0, 5], 'false,true,true': [2.099, 41, 13], 'false,true,false,true': [0.826, 2, 8], 'false,true,false,false': [1.469, 49, 11], 'false,false,true': [0.017, 0, 5], 'false,false,false,true': [3.557, 95, 47], 'false,false,false,false': [1.479, 9, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 7], 'true,true,true,false': [0.101, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.088, 0, 3], 'false,true': [2.687, 108, 32], 'false,false,true': [0.015, 0, 5], 'false,false,false,true': [3.876, 102, 47], 'false,false,false,false': [1.396, 11, 4]}]
{'': [0.05246913580246885, 0.21585538752362998], 'false': [0.10937499999999978, 0.20940075740699596], 'false,false': [0.20921184159938513, 0.21301775147928975], 'false,false,false': [0.21301775147928975, nan], 'false,false,true': [0.19159722222222345, 0.22222222222222338], 'false,true': [0.22222222222222224, 0.0], 'true': [-1.4802973661668753e-16, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.0002176642576841287, 0.2052393900042466], 'false': [0.0007884305269265646, 0.201076654246373], 'false,false': [0.20002566884456846, 0.22222222222222218], 'false,false,false': [0.22222222222222218, nan], 'false,false,true': [0.12423104447952818, 2.5821374600151844e-05], 'false,true': [0.0007884305269265646, nan], 'true': [6.344131569286608e-17, 0.00026210404362796423]}
{'': [0.15556990816375776, 0.14821307729163352], 'true': [0.12972258068200335, 0.19023088673694394], 'false': [0.14544402065708367, 0.20325071280128965], 'false,false': [0.20325071280128965, nan], 'false,false,true': [0.0, 0.18195507861188084], 'false,true': [0.13428787473865422, 0.1540328084845658], 'false,true,false': [0.07076976487671331, 0.00044059766375838846]}
{'': [0.00035637834723356576, 0.13320165906206158], 'false': [0.1293066670191282, 0.213066982751871], 'false,false': [0.0, 0.21712863562059756], 'false,false,false': [0.21712863562059756, nan], 'false,true': [0.14975767956900643, 0.1060222289320844], 'false,true,true': [0.0009191853916896697, 0.16552334383843728], 'true': [0.0003569671021518006, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.05500397130912709, 0.12568869185842352], 'false': [0.12196158289203374, 0.19967020539266417], 'false,false': [0.0, 0.20708563570334626], 'false,false,false': [0.20708563570334626, nan], 'true': [1.586032892321652e-17, 0.08841321015990831], 'true,true': [1.586032892321652e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.04599315098599773, 0.11498419773277471], 'false': [0.09947826240381433, 0.11998416420311363], 'false,false': [0.10088977885978762, 0.11981145139525548], 'false,false,false': [0.11614222901580203, 0.1341644966523674], 'true': [0.04881742341463477, 0.0], 'true,true': [0.00017542170321761653, 0.11130653986873613], 'true,false': [nan, 0.0]}
{'': [0.10305205914353678, 0.13027676617293868], 'false': [8.688274265989948e-05, 0.1339438491891453], 'false,false': [0.1339438491891453, nan], 'true': [0.03567206491253676, 0.0064178391792857154], 'true,true': [0.005742406216284454, 0.027561777744353203], 'true,true,false': [9.25185853854297e-18, 0.022608259653285136], 'true,true,true': [0.006075244686159728, 0.0]}
{'': [0.09523821532852246, 0.1043522292335756], 'false': [0.10261304544922481, 0.13506990394794932], 'false,false': [0.0, 0.1424965351576109], 'false,false,false': [0.1424965351576109, nan], 'false,true': [0.11149650100930318, 0.0008973213074181791], 'false,true,true': [nan, 0.11149650100930332], 'true': [0.10950645297477071, 0.08246899983541289], 'false,false,true': [0.0, nan]}
{'': [0.0018439178410106088, 0.0817563486707682], 'false': [0.06125487535754139, 0.09360124608647907], 'false,false': [5.7656750175011376e-05, 0.09592396010944636], 'false,false,false': [0.0891121523482774, 0.16819992965206373], 'false,true': [0.08159966045103774, 0.04513276200477589], 'false,true,false': [0.06825385062869563, 0.03597938949671156], 'true': [0.0017178369952167765, 0.0019137807225475295], 'true,false': [0.0, 0.002281448846712053]}
{'': [0.020796517095346637, 0.07946884726215393], 'false': [0.05158889364513813, 0.10111922279025919], 'false,false': [4.4910626288835465e-05, 0.10350139936878154], 'false,false,false': [0.10082680652138211, 0.13000238673963838], 'true': [0.023818171104038232, 0.0025814732135417497], 'true,true': [0.0010247864172275856, 0.0], 'true,true,true': [3.96508223080413e-18, 0.0016933758630308844], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 26.4
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.0039200304177291;  // std dev = 2.626, 58.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=8 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.2140811384893424;  // std dev = 5.201, 118.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=42 */
%   | | | else return 0.13195845890903554;  // std dev = 4.087, 84.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G) )
%   | | then return 0.735339595552877;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.08453911222813264;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6780406367842969;  // std dev = 3.454, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.16355328955808293;  // std dev = 0.172, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.0943332943447023;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.5157640122975171;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05536643674628448;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15033402327267684;  // std dev = 0.170, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.0850814713815798;  // std dev = 4.310, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6182560666854737;  // std dev = 2.129, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.1403874653893615;  // std dev = 0.101, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then return 0.5812719360101789;  // std dev = 0.946, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.2184075287986947;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3805975441114093;  // std dev = 0.213, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.04165602389253986;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4424359995421101;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4316369968463358;  // std dev = 2.109, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return -0.06286055636985237;  // std dev = 2.284, 83.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=10 */
%   | | | else return 0.07560238283483114;  // std dev = 4.577, 158.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=48 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.40739122776717684;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.1361682931218491;  // std dev = 1.041, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07338420752925905;  // std dev = 1.170, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3288068775937872;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2777603474298462;  // std dev = 0.308, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11730195866193555;  // std dev = 0.097, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.048202253797287035;  // std dev = 3.683, 124.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=35 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.03038368989686116;  // std dev = 1.983, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.1296515505472315;  // std dev = 3.673, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3138563320296093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.006932435238176281;  // std dev = 1.562, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.218622609723404;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.28302669454246937;  // std dev = 0.295, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.2504886170096875;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( location(F, G) )
%   | | | then return 0.4599280665258879;  // std dev = 1.264, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.0679011175289613;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0851323332638364;  // std dev = 0.240, 122.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=14 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(I, K), recursion_proteinclass(J, B) )
%   | | | then return -0.11243303792101293;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06422828991547366;  // std dev = 4.199, 146.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=47 */
%   | | else if ( location(A, L) )
%   | | | then return 0.1926245601357054;  // std dev = 0.838, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12904094182762613;  // std dev = 0.753, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.28877640410339844;  // std dev = 0.133, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.28777512412240325;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4670940359483741;  // std dev = 1.499, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.14630958303452613;  // std dev = 0.087, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.33243126600763434;  // std dev = 0.176, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.46933417813103206;  // std dev = 1.604, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return -0.21251454760600838;  // std dev = 0.634, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.059015376504943505;  // std dev = 1.516, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.0223541458408389;  // std dev = 2.179, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.19670696802384222;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.22043846241118895;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.24515872481700995;  // std dev = 1.268, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.2028136658862242;  // std dev = 1.253, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return 0.40441388495874286;  // std dev = 2.083, 69.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=64 */
%   | | else return -0.13539402300502598;  // std dev = 0.032, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.16310928644939082;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12303610861797523;  // std dev = 1.210, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.11608766194786453;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.20444886625742445;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.1814545574708315;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.24814740361683824;  // std dev = 0.222, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2095006787770442;  // std dev = 0.881, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.044092531542514996;  // std dev = 1.638, 93.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
%   | | else return -0.09116978200656896;  // std dev = 0.170, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2487930990621936;  // std dev = 0.217, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, L), phenotype(A, M) )
%   | | | then return 0.033954561394852874;  // std dev = 2.615, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
%   | | | else return 0.002637340674559446;  // std dev = 2.352, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1320431455939541;  // std dev = 0.176, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.24016719442716675;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( location(A, I), complex(A, J) )
%   | | | then return -0.10936645373170148;  // std dev = 1.232, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return -0.022937956086063062;  // std dev = 1.438, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.02272978039979669;  // std dev = 1.165, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return -0.03962276209994957;  // std dev = 0.909, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.20720303442620266;  // std dev = 0.194, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return -0.0632639594726092;  // std dev = 1.165, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.029590928517553683;  // std dev = 3.327, 130.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '1.544', 'seconds']
Refined model CLL: -0.190325


******************************************
Best model found
******************************************
Results 

CLL : -0.162883 

AUC ROC : 0.989692 

AUC PR : 0.350673 

Precision : 0.278779 

Recall : 0.758491 

F1 : 0.407708 

Total Learning Time : 26.4 

Total Inference Time : 257.0561611652374 

Total revision time: 306.559892370224
Best scored revision CLL: -0.190325


Results 

CLL : -0.162883 

AUC ROC : 0.989692 

AUC PR : 0.350673 

Precision : 0.278779 

Recall : 0.758491 

F1 : 0.407708 

Total Learning Time : 306.59972448539736 

Total Inference Time : 257.0561611652374 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.388
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1340110040650296;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.14020021715079337;  // std dev = 5.620, 156.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15973623668681391;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8214683611017415;  // std dev = 0.991, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15963200123445018;  // std dev = 0.004, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( location(A, K) )
%   | | | then return 0.16468481242152794;  // std dev = 3.479, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.0375708245419049;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4125092938891416;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.042466743746883154;  // std dev = 2.099, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6466938985203815;  // std dev = 1.396, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return -0.1395020683345343;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18463515760253418;  // std dev = 0.524, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.12046338636531352;  // std dev = 3.677, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1423808326175607;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.2744662558012587;  // std dev = 1.319, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.44091103938469917;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3954843731409393;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5953134155131415;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.04627809008996414;  // std dev = 4.298, 205.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5094345038473065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5254565366636628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.20344978594971155;  // std dev = 3.262, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.10062339097590524;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3781713447892866;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.34793221598257607;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.0649432413993837;  // std dev = 4.270, 188.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3842158460924493;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3956694274402005;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.17628754982135003;  // std dev = 3.344, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return -1.143902074482589E-4;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.29103079436128143;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.19244260809216862;  // std dev = 0.708, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2981950204855086;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.26713369542939935;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30593102019040763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.08768127727550452;  // std dev = 0.966, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2716629371636687;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.0832824621155686;  // std dev = 3.921, 150.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=49 */
%   | | | else return 0.029052806197643086;  // std dev = 3.743, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2577441799499029;  // std dev = 0.141, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.24239954144432652;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.22348787042304663;  // std dev = 0.637, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6298654780362464;  // std dev = 0.694, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.20097715564253543;  // std dev = 0.739, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22030690397967567;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.057916230214092486;  // std dev = 3.346, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19337608475444681;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19394117275581976;  // std dev = 0.083, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4457582799639378;  // std dev = 0.742, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14306224710099244;  // std dev = 0.249, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20069446668159518;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.030127485972654272;  // std dev = 3.020, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16689489717675826;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1442180862382253;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.010154404546737194;  // std dev = 0.843, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07952905141930626;  // std dev = 0.394, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18899378072874196;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.030369731623781336;  // std dev = 1.538, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.005076346203972089;  // std dev = 0.890, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03217693931378179;  // std dev = 2.675, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return 0.003088271935961265;  // std dev = 3.088, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.144391436943273;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16280303498227802;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13418716129681518;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16806700244977932;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.021428043853729033;  // std dev = 1.458, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15805074525643073;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02434177820696925;  // std dev = 2.666, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | | else return 0.020154231663871952;  // std dev = 3.036, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.201', 'seconds']
Parameter learned model CLL:-0.181215 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.407, 21, 8], 'false,false,true,false': [5.62, 112, 44], 'false,false,false,true': [3.643, 44, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.991, 1, 52], 'false,false,true,false': [0.004, 148, 0], 'false,false,false,true': [3.479, 37, 18], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.926, 1, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.099, 29, 8], 'false,true,false,true': [1.396, 2, 48], 'false,true,false,false': [0.0, 97, 0], 'false,false,true,true': [0.524, 1, 1], 'false,false,true,false': [3.677, 45, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.319, 2, 11], 'true,false': [0.029, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.116, 0, 3], 'false,true,false': [4.298, 153, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.262, 26, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.035, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.035, 0, 9], 'false,true': [4.27, 132, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.344, 27, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.03, 0, 7], 'true,true,false': [0.708, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.966, 26, 3], 'false,false,true': [0.029, 0, 6], 'false,false,false,true': [3.921, 101, 49], 'false,false,false,false': [3.743, 48, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.141, 0, 12], 'true,true,true,false': [0.004, 0, 2], 'true,true,false,true': [0.637, 1, 1], 'true,true,false,false': [0.694, 0, 36], 'true,false': [0.739, 109, 0], 'false,true': [0.024, 0, 5], 'false,false,true': [3.346, 81, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.02, 0, 6], 'true,false': [0.083, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.742, 0, 56], 'false,true,false': [0.249, 142, 0], 'false,false,true,true': [0.003, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.02, 42, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.036, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.843, 1, 4], 'false,true,true': [0.394, 13, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.538, 40, 14], 'false,false,true': [0.89, 1, 5], 'false,false,false,true': [2.675, 76, 36], 'false,false,false,false': [3.088, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.015, 0, 5], 'true,true,true,false': [0.021, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.057, 0, 4], 'false,true': [1.458, 52, 17], 'false,false,true': [0.019, 0, 5], 'false,false,false,true': [2.666, 78, 36], 'false,false,false,false': [3.036, 42, 20]}]
{'': [-2.5376526277146434e-16, 0.21138851458765523], 'false': [-1.4802973661668753e-16, 0.20456818145743855], 'false,false': [0.20207450693937257, 0.2112029384756653], 'false,false,false': [0.21063240110859105, 0.22222222222222224], 'false,false,true': [0.19976218787158156, 0.2024983563445111], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [2.5376526277146434e-16, 0.20099056495117384], 'false': [7.401486830834377e-17, 0.1973389203885819], 'false,false': [0.1917666956342889, 0.21296665903135706], 'false,false,false': [0.22011111976347403, 0.15999999999999995], 'false,false,true': [0.01851673713292015, 1.0546949651773301e-07], 'true': [7.401486830834377e-17, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.06222222222222206, 0.16315205252697726], 'false': [0.14654060081428275, 0.20670313334345888], 'false,false': [0.20599110270209106, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,false,true': [0.1374416813355613, 0.20797738980979052], 'false,true': [0.11905735950849976, 0.15199005352595654], 'false,true,false': [0.038986148284704425, -3.204767493763338e-17], 'true': [0.12244897959183675, -1.1102230246251565e-16]}
{'': [0.11295395668415857, 0.12494282158997194], 'false': [0.09327668209616291, 0.23283704698105806], 'false,false': [6.417638389205615e-05, 0.2379029185617263], 'false,false,false': [0.24183234488898753, 0.20408163265306115], 'true': [0.13376261324988223, 0.00027372045553542], 'false,true': [0.010878704619945834, 0.09011738694010278], 'false,true,true': [0.0, 0.004522027949413217], 'false,false,true': [0.0, 0.0]}
{'': [0.0003807904450759958, 0.12849301794055537], 'false': [0.09697383430225327, 0.23364671300951415], 'false,false': [3.2796131422374586e-05, 0.24099596520020022], 'false,false,false': [0.24315837670541326, 0.18749999999999997], 'true': [0.00023865914976928249, 0.0001331790933059265], 'true,true': [0.00023865914976928249, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.03565202384640317, 0.12392885764141465], 'false': [0.03216210584546081, 0.13289157711803407], 'false,false': [0.0001380644321219334, 0.13541641919562888], 'false,false,false': [0.10251042413988089, 0.20597964851274977], 'true': [0.044167231077540996, 0.00028109822380961713], 'true,true': [0.00013123699995820637, 0.10014783834425409], 'true,false': [0.0002412014785603267, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1308004115680299, 0.09278341068786909], 'true': [0.06534038490719557, 0.005011615209264177], 'false': [0.00011762731946503013, 0.09566271923929079], 'false,false': [0.09566271923929079, nan], 'true,true': [0.001442656168416894, 0.05966893129639705], 'true,true,false': [0.2026674331022214, 0.013397626015136598], 'true,true,true': [0.0016482835761524965, 7.070638403113005e-06]}
{'': [0.0005150020160596165, 0.09052747957847003], 'false': [0.07341751384153612, 0.1433528862097219], 'false,false': [5.395190561918728e-06, 0.14706783960736303], 'false,false,false': [0.14706783960736303, nan], 'false,true': [0.009821696745964717, 0.00043826987511071054], 'false,true,true': [nan, 0.009821696745964717], 'true': [6.693849472803881e-05, 0.0008509128037228753], 'false,false,true': [5.395190561918728e-06, nan]}
{'': [0.054289493600353476, 0.08001378249200937], 'false': [0.03787580758492402, 0.09522709468205898], 'false,false': [0.1320128010180774, 0.09396428355789438], 'false,false,false': [0.0639054739734101, 0.14444076320244553], 'true': [0.00014098257824797356, 0.12177351423028497], 'true,false': [0.0, 0.1421564060911497], 'false,true': [0.011094317770169077, 0.043921522965070396], 'false,true,false': [0.0, 0.04382966208957805]}
{'': [0.00043767317299549843, 0.07462411629579047], 'false': [0.030829258241351888, 0.09068272021840044], 'false,false': [6.978909495841123e-05, 0.09275212392935515], 'false,false,false': [0.062351396725042085, 0.14863887698909226], 'true': [0.00017647161633545794, 0.0007994235823029112], 'true,true': [0.0001620485111496761, 0.0], 'true,true,true': [4.6976159162276375e-05, 0.0001419689254933317], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.035
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.10989718684776263;  // std dev = 5.190, 143.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=36 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.15125238337537297;  // std dev = 4.902, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8407789087286225;  // std dev = 0.021, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1555078858244441;  // std dev = 0.115, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.256002386209755;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.12083342500825353;  // std dev = 3.067, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.488699770079618;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.21833320512946638;  // std dev = 1.091, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.05527087870372888;  // std dev = 1.629, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6833079206998612;  // std dev = 0.269, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13930308495325894;  // std dev = 0.026, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.14892874839957415;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.03323103786523796;  // std dev = 1.886, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.09884391103572043;  // std dev = 1.025, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.29907466146052786;  // std dev = 2.284, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43381023169310673;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.18381023169310673;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38676516164579133;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3981252164638616;  // std dev = 0.631, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.02477924007107907;  // std dev = 3.833, 166.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=39 */
%   | | | else return 0.13854787666058574;  // std dev = 1.802, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5389951987781829;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.04798029138063285;  // std dev = 2.036, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.13630681418751964;  // std dev = 3.147, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.34329216785786254;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.344570977065456;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1241391235817961;  // std dev = 0.035, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.016306563108284954;  // std dev = 0.985, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.04525563022637245;  // std dev = 2.060, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.08231506724758154;  // std dev = 3.445, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4055112157939609;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.04998026687654399;  // std dev = 2.553, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.19691732089721706;  // std dev = 2.517, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2889491112120722;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.31221520354875065;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.11537847491253196;  // std dev = 0.010, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.08187078848995698;  // std dev = 0.670, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.03575533614069493;  // std dev = 0.673, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K) )
%   | | | then return -0.0730898293584757;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.28570158565464654;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.01103228914732367;  // std dev = 2.471, 79.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=18 */
%   | | | else return 0.07353937937070654;  // std dev = 4.808, 156.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23710608044407475;  // std dev = 0.033, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.466859746456178;  // std dev = 0.683, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.7355891331997054;  // std dev = 0.139, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.18565765410154203;  // std dev = 0.063, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.23992052076428155;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5062590686331053;  // std dev = 0.202, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.14825618076299904;  // std dev = 0.067, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.04397924183853787;  // std dev = 2.392, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.15430291259105755;  // std dev = 0.869, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17222981266030954;  // std dev = 0.000210, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.2050922680813313;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.008671562970042323;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.38539212186572397;  // std dev = 0.229, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.44400504138234376;  // std dev = 0.591, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.1343516209302692;  // std dev = 0.026, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.207975304896103;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.19873919608659907;  // std dev = 0.961, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.010300233558943713;  // std dev = 2.827, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16048749344010643;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.07527097338218136;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04135202407489269;  // std dev = 0.396, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.10038965200189115;  // std dev = 0.336, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0034060958159358684;  // std dev = 1.349, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(I, G) )
%   | | | then return 0.04844611903161524;  // std dev = 2.138, 80.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=30 */
%   | | | else return -0.020279697863858883;  // std dev = 1.130, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.11816890602678774;  // std dev = 1.872, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.04720253617494588;  // std dev = 2.107, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1394380474339585;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.14158086840053943;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( location(G, H) )
%   | | | then return -0.06652296056941065;  // std dev = 0.423, 35.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | | else return 0.005336829504798335;  // std dev = 0.395, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.03149726160035106;  // std dev = 1.347, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.04416025645875946;  // std dev = 0.751, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1817899789182693;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.05666787062192097;  // std dev = 1.922, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.0029494817590310723;  // std dev = 3.279, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.614', 'seconds']
Refined model CLL: -0.176456


******************************************
Best model found
******************************************
Results 

CLL : -0.189689 

AUC ROC : 0.984384 

AUC PR : 0.221133 

Precision : 0.141226 

Recall : 0.848375 

F1 : 0.242143 

Total Learning Time : 8.035 

Total Inference Time : 7.742146015167236 

Total revision time: 27.523780963897707
Best scored revision CLL: -0.176456


Results 

CLL : -0.189689 

AUC ROC : 0.984384 

AUC PR : 0.221133 

Precision : 0.141226 

Recall : 0.848375 

F1 : 0.242143 

Total Learning Time : 27.563613079071047 

Total Inference Time : 7.742146015167236 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.493
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08228686613399513;  // std dev = 3.176, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | | else return 0.19148226843284502;  // std dev = 5.099, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13939893509951237;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6021035802978392;  // std dev = 0.944, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7999610406480216;  // std dev = 1.383, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.16187931672470168;  // std dev = 0.077, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1256374175541837;  // std dev = 2.790, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5776176117052397;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.25471609828790864;  // std dev = 1.173, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0475497887788181;  // std dev = 2.774, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5959473746005822;  // std dev = 1.906, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.14549295905571874;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6444880893812807;  // std dev = 0.218, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07223525299684457;  // std dev = 2.521, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.36926784779455646;  // std dev = 1.119, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4600552315939054;  // std dev = 0.172, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5435959806988441;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.475167916882118;  // std dev = 0.850, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.022369609386190783;  // std dev = 4.511, 216.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.39601185162554153;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.03746524557716005;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09410619581989133;  // std dev = 2.745, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.15114602394660637;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32331068037380484;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3914208076081879;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.0685181123738932;  // std dev = 4.487, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3061623912728778;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4171509570768415;  // std dev = 0.157, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10005675845869358;  // std dev = 2.479, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.0777696401040574;  // std dev = 1.375, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25546504547876625;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.38754364540503217;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.24521738466570264;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32486200405794124;  // std dev = 0.141, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.04768946480487621;  // std dev = 1.259, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.310903567939779;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.07455208691057212;  // std dev = 4.081, 142.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=46 */
%   | | | else return 7.01239365723577E-4;  // std dev = 3.149, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2378068109979893;  // std dev = 0.151, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.24132956820427812;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2758201820199834;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.551628963327052;  // std dev = 1.394, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18740453367852106;  // std dev = 0.999, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23526427458548183;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05389379749534139;  // std dev = 3.407, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17218574583823365;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.09359936346292341;  // std dev = 0.843, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4074752674484946;  // std dev = 1.865, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return -0.13589570961814654;  // std dev = 0.197, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.201087300541236;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.0019502923944519906;  // std dev = 2.566, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15153034729760512;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18692559825795485;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.07114199569673343;  // std dev = 0.613, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.10895253545114449;  // std dev = 0.482, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.26176032488574846;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.020238560652767325;  // std dev = 1.531, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.06470056897079898;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08257242612081983;  // std dev = 2.607, 81.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=31 */
%   | | | else return 0.030219170217605458;  // std dev = 2.487, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13079689961240082;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14218180590302043;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.15836601672916772;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16630054222571594;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17530344457487348;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.019645832496249745;  // std dev = 1.864, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19123126476767913;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.014861661471622933;  // std dev = 2.876, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return -0.004678454248909282;  // std dev = 2.576, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.549', 'seconds']
Parameter learned model CLL:-0.179142 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.176, 45, 13], 'false,false,true,false': [5.099, 78, 39], 'false,false,false,true': [2.543, 23, 9], 'false,false,false,false': [1.225, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.944, 1, 7], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.383, 2, 52], 'false,false,true,false': [0.077, 125, 0], 'false,false,false,true': [2.79, 27, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.041, 0, 11], 'true,false': [1.173, 2, 4], 'false,true,true': [2.774, 51, 14], 'false,true,false,true': [1.906, 4, 42], 'false,true,false,false': [0.0, 98, 0], 'false,false,true,true': [0.218, 0, 3], 'false,false,true,false': [2.521, 26, 9], 'false,false,false,true': [1.119, 2, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.172, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.85, 1, 6], 'false,true,false': [4.511, 167, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [2.745, 26, 11], 'false,false,false,false': [0.913, 5, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.028, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.09, 0, 6], 'false,true': [4.487, 130, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.157, 0, 2], 'false,false,false,true': [2.479, 20, 9], 'false,false,false,false': [1.375, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.012, 0, 9], 'true,true,false': [0.006, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.141, 0, 2], 'false,true': [1.259, 25, 5], 'false,false,true': [0.068, 0, 5], 'false,false,false,true': [4.081, 96, 46], 'false,false,false,false': [3.149, 44, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.151, 0, 13], 'true,true,true,false': [0.132, 0, 3], 'true,true,false,true': [0.017, 0, 3], 'true,true,false,false': [1.394, 2, 33], 'true,false': [0.999, 102, 0], 'false,true': [0.046, 0, 3], 'false,false,true': [3.407, 73, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.843, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.865, 4, 56], 'false,true,false': [0.197, 134, 0], 'false,false,true,true': [0.116, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.566, 35, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.034, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.613, 1, 5], 'false,true,true': [0.482, 24, 1], 'false,true,false,true': [0.168, 0, 6], 'false,true,false,false': [1.531, 56, 17], 'false,false,true': [0.854, 1, 3], 'false,false,false,true': [2.607, 50, 31], 'false,false,false,false': [2.487, 30, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.027, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.009, 0, 2], 'true,false': [0.092, 0, 3], 'false,true': [1.864, 70, 24], 'false,false,true': [0.039, 0, 3], 'false,false,false,true': [2.876, 69, 31], 'false,false,false,false': [2.576, 34, 12]}]
{'': [0.05859374999999978, 0.21857438016528952], 'false': [-2.5376526277146434e-16, 0.2101875730124107], 'false,false': [0.20884897959183743, 0.21606648199445933], 'false,false,false': [0.2021484375000001, 0.24999999999999992], 'false,false,true': [0.1739001189060637, 0.22222222222222282], 'true': [0.07100591715976314, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.060068071115066624, 0.21025664967085925], 'false': [-6.344131569286608e-17, 0.2061953248583953], 'false,false': [0.20562275186867746, 0.2087229730592061], 'false,false,false': [0.20487414937554985, 0.25000000000000006], 'false,false,true': [0.035445525509677916, 4.7743008681809585e-05], 'true': [-2.220446049250313e-16, 0.11134076148675542], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.10491037773712764, 0.14934928568259898], 'false': [0.1369522172734882, 0.20566003494346682], 'false,false': [0.19238011685730824, 0.25053227824064245], 'false,false,false': [0.25053227824064245, nan], 'false,false,true': [0.015885337936785815, 0.18165508481083167], 'false,true': [0.11837167748875353, 0.1447424522398001], 'false,true,false': [0.07898243686924412, -1.2688263138573217e-16], 'true': [0.00015458299549826876, 0.2294968292121207]}
{'': [0.0019628614977438433, 0.11867767105362503], 'false': [0.10142057409471654, 0.19994683019076367], 'false,false': [0.1571389171772033, 0.20183508507573808], 'false,false,false': [0.2036497412841095, 0.13888888888888892], 'false,false,true': [0.0, 0.24999999999999997], 'false,true': [0.09090441180737072, 0.09420843667111714], 'false,true,true': [0.0, 0.10330545636156753], 'true': [0.0019628614977438433, nan]}
{'': [0.001708470598559216, 0.12613153592361262], 'false': [0.10822823442817205, 0.2074786709674782], 'false,false': [0.01094974376819624, 0.21732512814555002], 'false,false,false': [0.21195513445140388, 0.236402037619477], 'false,false,true': [0.0, 0.01231846173922077], 'true': [8.608591043735014e-05, 0.0013586539716117414], 'true,true': [8.608591043735014e-05, nan]}
{'': [0.004534932111218623, 0.12343597215659192], 'false': [0.05282768221256167, 0.13230426131121237], 'false,false': [0.0009320998362406741, 0.13396796879305062], 'false,false,false': [0.11727168098942069, 0.1709727843538382], 'true': [0.0037289986753190787, 0.008023344936042861], 'true,false': [0.0, 0.009920595604686111], 'true,true': [1.5237603000632186e-05, 7.821932163004641e-06], 'true,false,true': [0.0, nan]}
{'': [0.11669408587473261, 0.10940135911547186], 'true': [0.0583467301744543, 0.009792905408478136], 'false': [0.0007026671697930309, 0.1116146015783648], 'false,false': [0.1116146015783648, nan], 'true,true': [0.0025131914368007324, 0.0566980970182881], 'true,true,false': [9.694837892175918e-05, 0.05554405953035467], 'true,true,true': [0.0017537371036770914, 0.0057940772362731945]}
{'': [0.045945182840266455, 0.09214588959106454], 'false': [0.08119999321638907, 0.13423375994415088], 'false,false': [0.004523195403073087, 0.14003970183210834], 'false,false,false': [0.14003970183210834, nan], 'false,true': [0.057961113200766155, 0.0002904045445264359], 'false,true,true': [nan, 0.057961113200766155], 'true': [0.0, 0.08880245593311367], 'false,false,true': [0.004523195403073087, nan]}
{'': [0.02380211612130174, 0.07595743416758], 'false': [0.031504249458879974, 0.10903681240459193], 'false,false': [0.18213261545905643, 0.10613236207536493], 'false,false,false': [0.08388427097821381, 0.14723443607877953], 'false,true': [0.009300450476449108, 0.0356151498814006], 'false,true,false': [0.004682658116405512, 0.032117796734827606], 'true': [0.00011543664622075956, 0.05524226125530795], 'true,false': [0.0, 0.06253418442328]}
{'': [0.0009189748328847051, 0.07634606651233028], 'false': [0.03694972888976812, 0.10080337167065818], 'false,false': [0.0005139456900234013, 0.10219332600124983], 'false,false,false': [0.082704233305027, 0.14429940092709004], 'true': [0.00024705398509869625, 0.002825500186776362], 'true,true': [9.36056022704107e-05, 3.912729811254382e-05], 'true,true,true': [0.0, 0.0003643351383550847], 'true,true,false': [0.0, 3.770538221702785e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.314
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.058148935099512286;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14628452831984987;  // std dev = 4.920, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | | else return 0.2243461181981039;  // std dev = 4.059, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8183369337652833;  // std dev = 1.000, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15955125810098983;  // std dev = 0.133, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.3285881207118092;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0866526368408415;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5791694276064409;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.24873081302881814;  // std dev = 1.135, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.016575370568696627;  // std dev = 1.269, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.11573073665353685;  // std dev = 2.315, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6158447358023337;  // std dev = 1.693, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14689907889535378;  // std dev = 0.303, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.012028510563369687;  // std dev = 2.159, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.2744562560157649;  // std dev = 1.786, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.11607016957264486;  // std dev = 1.176, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.45829997866255356;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5594556221995894;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4884734202580587;  // std dev = 0.850, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return -0.016373129430829147;  // std dev = 2.514, 101.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=17 */
%   | | | else return 0.09926504698762896;  // std dev = 3.401, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.20279021486063697;  // std dev = 1.503, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.04126437104587081;  // std dev = 2.439, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3424683059789755;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.40947016862694996;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( phenotype(A, G), interaction(H, F) )
%   | | | then return -0.01116316498360416;  // std dev = 1.586, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.07085075011546642;  // std dev = 3.687, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.13676410251880217;  // std dev = 1.252, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.05650452898637819;  // std dev = 1.356, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.2593397921247862;  // std dev = 1.214, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0416653008326566;  // std dev = 2.553, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26871026441524415;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.2286990893703055;  // std dev = 0.742, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.09871255890026955;  // std dev = 0.108, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.008491806812442177;  // std dev = 0.755, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.08960326258082123;  // std dev = 0.746, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1617627408958012;  // std dev = 0.886, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.08589323525928921;  // std dev = 2.865, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | | else return 0.0101760974299124;  // std dev = 4.188, 139.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24808231948642906;  // std dev = 0.057, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.054409487902164405;  // std dev = 0.941, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5986291255198181;  // std dev = 0.696, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.16965513341741095;  // std dev = 0.073, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return -0.11429877003102336;  // std dev = 1.020, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5416207058545804;  // std dev = 0.206, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1626142130113309;  // std dev = 0.076, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.09818467050524002;  // std dev = 1.555, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.012032962986967299;  // std dev = 2.089, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17776596543032946;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2825957927432623;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5491845491872169;  // std dev = 0.252, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.35646849440357614;  // std dev = 1.502, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | else return -0.1349238960489018;  // std dev = 0.027, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.1448592637436816;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04698748269468185;  // std dev = 1.902, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.02206364820491243;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21303170796202733;  // std dev = 1.040, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.17735018553733672;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15030252242666828;  // std dev = 0.051, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.08669439912549995;  // std dev = 0.465, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.18965733441041077;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.08309406514296605;  // std dev = 0.010, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3174414806332535;  // std dev = 0.882, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.15440177851532713;  // std dev = 0.084, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return -0.004706073345092281;  // std dev = 1.908, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | | else return 0.038721023115430325;  // std dev = 3.355, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1404833470711982;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( location(C, E), interaction(D, C) )
%   | | | then return -0.24359992298548955;  // std dev = 0.533, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.22245393809114666;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1637644482230675;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.008264353302963108;  // std dev = 0.186, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else return -0.024851330321151867;  // std dev = 0.165, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22064034186912243;  // std dev = 0.000407, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.06977175543494059;  // std dev = 1.848, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.038093924047727885;  // std dev = 2.811, 105.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.610', 'seconds']
Refined model CLL: -0.17398


******************************************
Best model found
******************************************
Results 

CLL : -0.186729 

AUC ROC : 0.987143 

AUC PR : 0.285864 

Precision : 0.15122 

Recall : 0.876325 

F1 : 0.25793 

Total Learning Time : 8.314 

Total Inference Time : 8.011075973510742 

Total revision time: 28.985511142730715
Best scored revision CLL: -0.17398


Results 

CLL : -0.186729 

AUC ROC : 0.987143 

AUC PR : 0.285864 

Precision : 0.15122 

Recall : 0.876325 

F1 : 0.25793 

Total Learning Time : 29.025343257904055 

Total Inference Time : 8.011075973510742 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.252
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18645082189196507;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1598294861260695;  // std dev = 5.446, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return 0.1922368935334769;  // std dev = 5.253, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.2020779734564122;  // std dev = 4.605, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
%   | | | else return 0.1792703122340103;  // std dev = 5.717, 140.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08061422415904422;  // std dev = 3.734, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0.12024493975428062;  // std dev = 6.636, 195.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07471287485937833;  // std dev = 7.707, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06510267524046871;  // std dev = 7.684, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7034586657797516;  // std dev = 0.981, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.2692367040806879;  // std dev = 0.063, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10887818316898312;  // std dev = 3.873, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | | | else return 0.038612319909437184;  // std dev = 4.392, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.006344851253382726;  // std dev = 3.969, 123.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=35 */
%   | | | else return 0.02036141923683005;  // std dev = 6.015, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.051838521328124984;  // std dev = 6.979, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03571785240450462;  // std dev = 6.997, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.030', 'seconds']
Parameter learned model CLL:-0.332153 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.644, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.446, 91, 44], 'false,false,false,false': [5.253, 77, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.605, 54, 35], 'false,false,false,false': [5.717, 88, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.734, 46, 20], 'false,false,false,false': [6.636, 128, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.707, 187, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.684, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.981, 1, 35], 'true,false': [0.063, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.873, 40, 24], 'false,false,false,false': [4.392, 62, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.969, 88, 35], 'false,false,false,false': [6.015, 119, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.979, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.997, 174, 87]}]
{'': [nan, 0.22051975792096917], 'false': [nan, 0.2205197579209692], 'false,false': [nan, 0.22051975792096917], 'false,false,false': [nan, 0.2205197579209692]}
{'': [nan, 0.22477508650518974], 'false': [nan, 0.22477508650519076], 'false,false': [nan, 0.22477508650518974], 'false,false,false': [0.21969821673525422, 0.22993055555555603]}
{'': [nan, 0.23548219155593195], 'false': [nan, 0.23548219155593195], 'false,false': [nan, 0.23548219155593136], 'false,false,false': [0.238294701709979, 0.23349206898875502]}
{'': [nan, 0.22240830723743915], 'false': [nan, 0.22240830723743915], 'false,false': [nan, 0.22240830723743887], 'false,false,false': [0.21120293847566532, 0.22580373198287632]}
{'': [nan, 0.2167930118473809], 'false': [nan, 0.2167930118473809], 'false,false': [nan, 0.21679301184738142], 'false,false,false': [nan, 0.21679301184738142]}
{'': [nan, 0.21869531361895675], 'false': [nan, 0.21869531361895675], 'false,false': [nan, 0.21869531361895653], 'false,false,false': [nan, 0.21869531361895672]}
{'': [0.21083125823814589, 0.22385426244548134], 'false': [nan, 0.22385426244548134], 'false,false': [nan, 0.22385426244548134], 'false,false,false': [0.2343750000000006, 0.21432098765432087], 'true': [0.02672656936614537, 4.9866750152027796e-05], 'true,true': [nan, 0.02672656936614537], 'true,true,false': [nan, 0.02672656936614537]}
{'': [nan, 0.17670079305496328], 'false': [nan, 0.17670079305496328], 'false,false': [nan, 0.17670079305496336], 'false,false,false': [0.1280540747600844, 0.21161009798241714]}
{'': [nan, 0.1902712010553753], 'false': [nan, 0.1902712010553755], 'false,false': [nan, 0.1902712010553755], 'false,false,false': [nan, 0.1902712010553755]}
{'': [nan, 0.18756738141620363], 'false': [nan, 0.18756738141620363], 'false,false': [nan, 0.18756738141620366], 'false,false,false': [nan, 0.18756738141620366]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 22.329
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(D, D), enzyme(A, E) )
%   | then if ( phenotype(D, C) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(D, C), interaction(A, D) )
%   | | | then return 0.034619523334806335;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.18209259707134337;  // std dev = 3.943, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   else if ( interaction(F, A), complex(A, G) )
%   | then if ( interaction(H, F), interaction(H, A) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.13087620782678505;  // std dev = 0.445, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else return 0.12203782398840003;  // std dev = 0.441, 144.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7704770608202239;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.31947341221095443;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, E), enzyme(E, F) )
%   | | then return -0.18154126079944172;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( phenotype(A, G), enzyme(E, H) )
%   | | | then return -0.038071677850537916;  // std dev = 0.933, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.09167540827858713;  // std dev = 2.862, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8336555587311199;  // std dev = 0.064, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.16520819569669437;  // std dev = 0.093, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.3192089332253837;  // std dev = 1.584, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.20898476264280066;  // std dev = 4.625, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5751565549279252;  // std dev = 0.239, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.8328974741748244;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10430366403245106;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.17413979673936508;  // std dev = 0.087, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.017659522564518193;  // std dev = 2.652, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6721608160287886;  // std dev = 0.968, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.1615388634510904;  // std dev = 0.069, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16883518369824557;  // std dev = 5.118, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   | | | else return 0.04904291847833477;  // std dev = 1.885, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5023293682818032;  // std dev = 0.098, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.5496466492040064;  // std dev = 0.357, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0.030428964791183413;  // std dev = 0.374, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6518347749687092;  // std dev = 0.193, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return -0.18683049953938513;  // std dev = 0.257, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), interaction(H, J) )
%   | | | then return 0.15613111943276917;  // std dev = 2.235, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.01042469498520389;  // std dev = 1.707, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.11753903960627404;  // std dev = 1.335, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.04762662161864298;  // std dev = 2.810, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3388178788000617;  // std dev = 0.223, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.580181504316185;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.32126182169674333;  // std dev = 0.168, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.13636661664262156;  // std dev = 2.095, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.033776182826141456;  // std dev = 4.182, 133.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=36 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return -0.13544568906431995;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.10452527340652826;  // std dev = 1.123, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.16207931547099497;  // std dev = 3.240, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return 0.43419198341688553;  // std dev = 1.051, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.23090322047082323;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.40885617831109095;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(F, G), phenotype(A, H) )
%   | | then return -0.0932537031656327;  // std dev = 0.265, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1325264151144746;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10156860199904853;  // std dev = 1.922, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( phenotype(A, K), phenotype(I, K) )
%   | | | then return 0.46164453452500276;  // std dev = 0.707, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.18701880051482347;  // std dev = 2.597, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.04766214397861766;  // std dev = 2.391, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return 0.1190794928039;  // std dev = 3.946, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4736121110572945;  // std dev = 0.118, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.1839516446996482;  // std dev = 0.282, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G) )
%   | | | then return -0.143267168260768;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5138859696841142;  // std dev = 0.677, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.23103328109734095;  // std dev = 0.048, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.45200334892797134;  // std dev = 0.366, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.052149009744505474;  // std dev = 2.266, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.045685047793271316;  // std dev = 1.843, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.19915045932024977;  // std dev = 2.718, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( location(D, C), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.2705763042129454;  // std dev = 0.123, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.0643352167867424;  // std dev = 0.293, 112.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=26 */
%   | else if ( phenotype(A, G), interaction(H, D) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.33557204830633436;  // std dev = 0.233, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07322361986299512;  // std dev = 2.003, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( interaction(I, D), interaction(I, A) )
%   | | | then return 0.06949000231955679;  // std dev = 1.658, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.01884556407461117;  // std dev = 3.429, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   else if ( complex(A, J) )
%   | then return 0.07080236197935297;  // std dev = 0.257, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then return 0.32024715855164443;  // std dev = 0.813, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1674794105165844;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.1368269715685403;  // std dev = 0.122, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11055098692562881;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.023006734876982352;  // std dev = 0.251, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.37635470309914026;  // std dev = 0.100, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.18794573738744605;  // std dev = 0.235, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( location(A, G), interaction(H, A) )
%   | | then if ( interaction(H, H), location(H, G) )
%   | | | then return 0.26225777964170865;  // std dev = 1.111, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0449363066602095;  // std dev = 4.414, 130.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=46 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.03734564268049251;  // std dev = 0.430, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3699931606743453;  // std dev = 0.897, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return -0.0017608116446380126;  // std dev = 0.280, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   | else if ( enzyme(A, F) )
%   | | then return -0.015727125171258766;  // std dev = 0.192, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.17972550156460204;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.2882200825400324;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.4641133896350122;  // std dev = 0.195, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.25512744315516434;  // std dev = 0.087, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(K, L), complex(J, L) )
%   | | | then return -0.04490905904270784;  // std dev = 1.111, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.09115823638988813;  // std dev = 3.246, 65.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=29 */
%   | | else return 0.25264907594020247;  // std dev = 0.910, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.833', 'seconds']
Refined model CLL: -0.260305


******************************************
Best model found
******************************************
Results 

CLL : -0.242503 

AUC ROC : 0.96073 

AUC PR : 0.343836 

Precision : 0.32 

Recall : 0.680851 

F1 : 0.435374 

Total Learning Time : 22.329 

Total Inference Time : 14.603432178497314 

Total revision time: 44.58432522392273
Best scored revision CLL: -0.260305


Results 

CLL : -0.242503 

AUC ROC : 0.96073 

AUC PR : 0.343836 

Precision : 0.32 

Recall : 0.680851 

F1 : 0.435374 

Total Learning Time : 44.674893051147464 

Total Inference Time : 14.603432178497314 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.49
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20950028645086413;  // std dev = 8.213, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14206364315446654;  // std dev = 5.984, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
%   | | | else return 0.16401973097881795;  // std dev = 5.888, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.131734228376804;  // std dev = 5.268, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | | | else return 0.1654677284674283;  // std dev = 6.361, 176.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10731377430385186;  // std dev = 4.445, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | | | else return 0.10064083175025595;  // std dev = 7.144, 235.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11341230017986383;  // std dev = 8.234, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06250603283340787;  // std dev = 8.422, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7367191047010025;  // std dev = 0.009, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2630678755773497;  // std dev = 0.011, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07055212581200543;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.08513376958634801;  // std dev = 5.071, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06358391563534077;  // std dev = 4.068, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
%   | | | else return 0.0523640283468816;  // std dev = 6.454, 186.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0350713783755941;  // std dev = 7.666, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.020932458712487886;  // std dev = 7.699, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.045', 'seconds']
Parameter learned model CLL:-0.335128 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.213, 192, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.984, 115, 52], 'false,false,false,false': [5.888, 104, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.268, 86, 41], 'false,false,false,false': [6.361, 113, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.445, 62, 29], 'false,false,false,false': [7.144, 160, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.234, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.422, 223, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.009, 0, 41], 'true,false': [0.011, 86, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.901, 45, 23], 'false,false,false,false': [5.071, 72, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.068, 74, 41], 'false,false,false,false': [6.454, 123, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.666, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.699, 217, 104]}]
{'': [nan, 0.22790357925493288], 'false': [nan, 0.22790357925493115], 'false,false': [nan, 0.22790357925493288], 'false,false,false': [nan, 0.22790357925493115]}
{'': [nan, 0.21830938665184443], 'false': [nan, 0.21830938665184035], 'false,false': [nan, 0.21830938665184443], 'false,false,false': [0.21442145648821892, 0.22222222222221993]}
{'': [nan, 0.22540041737969915], 'false': [nan, 0.22540041737969915], 'false,false': [nan, 0.22540041737970012], 'false,false,false': [0.21852510256809696, 0.22988461991089026]}
{'': [nan, 0.21715719748099818], 'false': [nan, 0.21715719748099818], 'false,false': [nan, 0.21715719748099935], 'false,false,false': [0.21712353580485547, 0.21715780278752828]}
{'': [nan, 0.2267469283868867], 'false': [nan, 0.2267469283868867], 'false,false': [nan, 0.2267469283868861], 'false,false,false': [nan, 0.2267469283868861]}
{'': [nan, 0.2169044329450165], 'false': [nan, 0.2169044329450165], 'false,false': [nan, 0.21690443294501743], 'false,false,false': [nan, 0.21690443294501693]}
{'': [0.21852092595897055, 0.227465946230276], 'false': [nan, 0.227465946230276], 'false,false': [nan, 0.227465946230276], 'false,false,false': [0.22383217993079635, 0.22959183673469324], 'true': [1.8246296592013361e-06, 1.5170318552470974e-06], 'true,true': [nan, 1.8246296592013361e-06], 'true,true,false': [nan, 1.8246296592013361e-06]}
{'': [nan, 0.19337788731109634], 'false': [nan, 0.19337788731109634], 'false,false': [nan, 0.1933778873110967], 'false,false,false': [0.14391039966435257, 0.22391452836629566]}
{'': [nan, 0.1877675383826392], 'false': [nan, 0.18776753838263943], 'false,false': [nan, 0.18776753838263943], 'false,false,false': [nan, 0.18776753838263943]}
{'': [nan, 0.18465677636751812], 'false': [nan, 0.18465677636751812], 'false,false': [nan, 0.1846567763675184], 'false,false,false': [nan, 0.1846567763675184]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 31.455
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( complex(E, C) )
%   | | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6081489350995123;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.1097212621435361;  // std dev = 5.471, 159.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=40 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.20814893509951232;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6349816071370199;  // std dev = 0.253, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( enzyme(C, E), interaction(F, A) )
%   | | then return 0.08645249724926686;  // std dev = 0.403, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( complex(C, G), phenotype(C, D) )
%   | | | then return 0.22378449233217398;  // std dev = 2.058, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.40551718475171816;  // std dev = 1.406, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06649042830785024;  // std dev = 0.408, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then return 0.042609228562618374;  // std dev = 0.360, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.20289654871921264;  // std dev = 4.508, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   | | | else return 0.15151391993541374;  // std dev = 3.053, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6537368272837235;  // std dev = 0.147, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(C, E), interaction(A, C) )
%   | | then return 0.3803102219458543;  // std dev = 0.972, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, F), complex(C, G) )
%   | | | then return 0.1310889179786331;  // std dev = 2.898, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.05819864028056206;  // std dev = 3.452, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.46244447440141895;  // std dev = 0.342, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( complex(J, I) )
%   | | | then return -0.02303193913414794;  // std dev = 1.576, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.12361553943543023;  // std dev = 1.643, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.13784764796436522;  // std dev = 3.823, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | | else return 0.3113646814803781;  // std dev = 3.057, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.0808089480399941;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, C) )
%   | | then return 0.4905378388409926;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.5827041297570018;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6909869457120575;  // std dev = 0.165, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.14271971693279153;  // std dev = 0.025, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(F, A), phenotype(A, G) )
%   | | then if ( complex(F, H), complex(A, H) )
%   | | | then return 0.0121826829544529;  // std dev = 1.612, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.12647345351860545;  // std dev = 5.167, 136.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=47 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return -0.07875885167019876;  // std dev = 1.485, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.07807473825137864;  // std dev = 4.427, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then return -0.10392235109427495;  // std dev = 0.986, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.3326220678521082;  // std dev = 0.302, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then if ( phenotype(F, H), interaction(F, G) )
%   | | | then return -0.009967596546606653;  // std dev = 1.662, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.16991019271160704;  // std dev = 1.315, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( location(A, I), location(F, I) )
%   | | | then return -0.12705051438626094;  // std dev = 1.252, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.029072313000125822;  // std dev = 1.218, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( location(A, J), complex(A, K) )
%   | | then return 0.03481572440937788;  // std dev = 0.338, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.059179212436905125;  // std dev = 3.768, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | | else return 0.13256194270406044;  // std dev = 4.504, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), enzyme(A, E) )
%   | then return 0.1484186091955107;  // std dev = 0.577, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3974700363059094;  // std dev = 0.112, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B), interaction(A, F) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.643196316107846;  // std dev = 0.128, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.37222017447683836;  // std dev = 0.889, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.19615419116136348;  // std dev = 0.464, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0.010904659582082971;  // std dev = 6.130, 219.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=56 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.42459938275276116;  // std dev = 1.312, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.23051382502938086;  // std dev = 0.138, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.4597007749350155;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.43121096584776925;  // std dev = 0.231, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.16698830944369664;  // std dev = 0.359, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.46505066781036025;  // std dev = 0.239, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.044766386515872704;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.14296025122581146;  // std dev = 0.429, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.06710195675847642;  // std dev = 5.251, 132.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=42 */
%   | else if ( interaction(I, A) )
%   | | then if ( complex(I, J) )
%   | | | then return -0.11510218926158257;  // std dev = 1.571, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.019963228232747363;  // std dev = 1.620, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0.21341112404222973;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.2034615897974778;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.32872773445350884;  // std dev = 0.111, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.2977133089529171;  // std dev = 0.203, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(F, H), enzyme(A, I) )
%   | | | then return -0.08581839343382461;  // std dev = 1.759, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return -0.010855428512962562;  // std dev = 2.716, 96.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=21 */
%   | else if ( phenotype(A, J), location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.40211098235359544;  // std dev = 2.835, 43.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=30 */
%   | | | else return -0.22793526063707098;  // std dev = 0.298, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.039871592552009165;  // std dev = 2.177, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return 0.03102818004907782;  // std dev = 3.162, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then return -0.0060283390236214665;  // std dev = 0.311, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.2363831699307175;  // std dev = 0.089, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11465427916826941;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.04959888589973981;  // std dev = 1.165, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.22022129850241684;  // std dev = 1.812, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.32027454488174417;  // std dev = 1.126, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.15848991391124817;  // std dev = 0.350, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.00195794573392775;  // std dev = 2.168, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.06384555686698284;  // std dev = 4.716, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(C, E) )
%   | | then return -0.03652387293946437;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.3270740145566711;  // std dev = 0.100, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(A, F), interaction(D, D) )
%   | | then return -0.10753892034946408;  // std dev = 0.217, 77.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=8 */
%   | | else if ( enzyme(A, G), phenotype(D, H) )
%   | | | then return 0.1314794730575177;  // std dev = 2.163, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.023457022523387546;  // std dev = 4.584, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(J, K), enzyme(A, K) )
%   | | | then return 0.5200976713302169;  // std dev = 0.317, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.038567375035053926;  // std dev = 1.076, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return -0.16608844640270137;  // std dev = 0.074, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.16876735835209172;  // std dev = 0.350, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '22.665', 'seconds']
Refined model CLL: -0.24841


******************************************
Best model found
******************************************
Results 

CLL : -0.256542 

AUC ROC : 0.943953 

AUC PR : 0.322372 

Precision : 0.289827 

Recall : 0.569811 

F1 : 0.384224 

Total Learning Time : 31.455 

Total Inference Time : 22.616130113601685 

Total revision time: 63.148213930130005
Best scored revision CLL: -0.24841


Results 

CLL : -0.256542 

AUC ROC : 0.943953 

AUC PR : 0.322372 

Precision : 0.289827 

Recall : 0.569811 

F1 : 0.384224 

Total Learning Time : 63.23878175735474 

Total Inference Time : 22.616130113601685 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.309
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21752393509951257;  // std dev = 7.677, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1741494979525589;  // std dev = 5.781, 148.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=51 */
%   | | | else return 0.14738436072230404;  // std dev = 5.289, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10046362284920948;  // std dev = 5.569, 149.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=44 */
%   | | | else return 0.19596081834773615;  // std dev = 5.408, 123.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16396692357452491;  // std dev = 4.025, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | | else return 0.10627565007955318;  // std dev = 6.660, 201.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12258750458528983;  // std dev = 7.652, 253.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05352264240911214;  // std dev = 7.928, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7314391201263452;  // std dev = 0.054, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26987555077018793;  // std dev = 0.073, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0011621271654958256;  // std dev = 4.231, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | | | else return 0.06575322670555182;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.062025975848690795;  // std dev = 4.183, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   | | | else return 0.04429319150865694;  // std dev = 5.666, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012550273555494188;  // std dev = 7.200, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04205278189644237;  // std dev = 6.994, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.069', 'seconds']
Parameter learned model CLL:-0.327951 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.677, 164, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.781, 97, 51], 'false,false,false,false': [5.289, 88, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.569, 105, 44], 'false,false,false,false': [5.408, 75, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.025, 43, 26], 'false,false,false,false': [6.66, 135, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.652, 161, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.928, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.054, 0, 44], 'true,false': [0.073, 88, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.231, 63, 25], 'false,false,false,false': [3.886, 44, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.183, 79, 44], 'false,false,false,false': [5.666, 97, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.2, 205, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.994, 176, 92]}]
{'': [nan, 0.23022460937500144], 'false': [nan, 0.2302246093750008], 'false,false': [nan, 0.23022460937500144], 'false,false,false': [nan, 0.2302246093750008]}
{'': [nan, 0.2218196509794198], 'false': [nan, 0.22181965097942014], 'false,false': [nan, 0.2218196509794198], 'false,false,false': [0.22584915997078037, 0.2168138933958288]}
{'': [nan, 0.22380753070442583], 'false': [nan, 0.22380753070442583], 'false,false': [nan, 0.22380753070442572], 'false,false,false': [0.20813541012230038, 0.23779673138875862]}
{'': [nan, 0.224942183039185], 'false': [nan, 0.224942183039185], 'false,false': [nan, 0.22494218303918526], 'false,false,false': [0.2348246166771676, 0.22069914459948956]}
{'': [nan, 0.23145905314603193], 'false': [nan, 0.23145905314603193], 'false,false': [nan, 0.23145905314603246], 'false,false,false': [nan, 0.23145905314603246]}
{'': [nan, 0.2174673926480273], 'false': [nan, 0.2174673926480273], 'false,false': [nan, 0.2174673926480263], 'false,false,false': [nan, 0.21746739264802667]}
{'': [0.2228691489378421, 0.21394130817513748], 'true': [6.603038995852987e-05, 6.035149423984491e-05], 'false': [nan, 0.21394130817513748], 'false,false': [nan, 0.21394130817513748], 'false,false,false': [0.20338326446280952, 0.22543996435731786], 'true,true': [nan, 6.603038995852987e-05], 'true,true,false': [nan, 6.603038995852987e-05]}
{'': [nan, 0.1851411409325882], 'false': [nan, 0.1851411409325882], 'false,false': [nan, 0.1851411409325872], 'false,false,false': [0.1422528487514241, 0.22137792473218662]}
{'': [nan, 0.17453001130367105], 'false': [nan, 0.17453001130367138], 'false,false': [nan, 0.17453001130367138], 'false,false,false': [nan, 0.17453001130367138]}
{'': [nan, 0.18250994929252926], 'false': [nan, 0.18250994929252926], 'false,false': [nan, 0.18250994929252956], 'false,false,false': [nan, 0.18250994929252956]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.767
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(D, A), interaction(A, D) )
%   | | then if ( complex(D, E) )
%   | | | then return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( enzyme(A, F), interaction(A, G) )
%   | | | then return 0.24276431971489698;  // std dev = 3.038, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return 0.15168127340796983;  // std dev = 6.456, 201.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=59 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.7831815028570277;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(D, A) )
%   | | then return -0.14371805039691415;  // std dev = 0.146, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.10007340662691186;  // std dev = 2.892, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.018479165110246436;  // std dev = 1.852, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( location(I, J) )
%   | | | then return 0.13378759343622298;  // std dev = 4.746, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   | | | else return -0.13980130630399054;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.5025065011773169;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.22496404485970267;  // std dev = 3.584, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then if ( interaction(D, E) )
%   | | then return 0.5440935370810331;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.12045826637457017;  // std dev = 0.714, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.7593192077621648;  // std dev = 0.131, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.5792786104954568;  // std dev = 0.131, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7080345745882477;  // std dev = 1.632, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | | else return -0.19569990351071145;  // std dev = 0.270, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.012853386260553105;  // std dev = 2.208, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.11379183812376352;  // std dev = 5.015, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.4954798810864924;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.6598071948515389;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05004225796761339;  // std dev = 0.373, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   else if ( phenotype(A, F), complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6968815286679078;  // std dev = 0.109, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.18773847088966467;  // std dev = 0.170, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(J, K), interaction(L, J) )
%   | | | then return 0.13048468513563402;  // std dev = 1.710, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.031940549728268604;  // std dev = 3.289, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.054972683194617414;  // std dev = 2.133, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.16988675633977904;  // std dev = 3.308, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.019933666330203183;  // std dev = 0.328, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), enzyme(F, G) )
%   | | then if ( interaction(H, F), interaction(H, D) )
%   | | | then return 0.49115383388866296;  // std dev = 0.770, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20472746147333515;  // std dev = 1.264, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(I, D), complex(A, J) )
%   | | | then return 0.2405967583947124;  // std dev = 1.317, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.09091816627266029;  // std dev = 3.022, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.49373837824163697;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11483584026053996;  // std dev = 2.826, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.0014346509659599576;  // std dev = 0.760, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.08252478565087688;  // std dev = 3.807, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.29048399219248794;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.43440840393220964;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.5071359915657161;  // std dev = 0.305, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6052712153269967;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.17303702559292372;  // std dev = 0.181, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), enzyme(J, K) )
%   | | | then return 0.250814396952472;  // std dev = 1.788, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.096828151769387;  // std dev = 2.951, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | else if ( interaction(L, A), interaction(A, M) )
%   | | | then return -0.034867833301878426;  // std dev = 1.509, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.07719537932321707;  // std dev = 4.441, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4552287388904992;  // std dev = 0.230, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.18093244999754451;  // std dev = 0.056, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(E, A), phenotype(A, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.3003150177507014;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, E), interaction(E, H) )
%   | | | then return -0.058942353774178564;  // std dev = 1.020, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.026795705319851378;  // std dev = 1.116, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( phenotype(J, K), phenotype(A, L) )
%   | | | then return 0.305449440246191;  // std dev = 1.205, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.03678319583926196;  // std dev = 3.070, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.22190464891496112;  // std dev = 2.459, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.12589465401958982;  // std dev = 1.764, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16884115101181135;  // std dev = 0.176, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), interaction(G, A) )
%   | | then if ( enzyme(A, H), interaction(I, G) )
%   | | | then return -0.09443105542778255;  // std dev = 0.554, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.15488728217841435;  // std dev = 1.202, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( complex(A, J), interaction(D, D) )
%   | | | then return -0.0010269400216439788;  // std dev = 0.662, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.10947517001558373;  // std dev = 1.087, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( complex(K, M), phenotype(A, N) )
%   | | | then return 0.047720726362852114;  // std dev = 1.415, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.02347313476062606;  // std dev = 3.189, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | else if ( interaction(A, P), phenotype(A, Q) )
%   | | | then return -0.016085397030957568;  // std dev = 2.286, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.05741731291268198;  // std dev = 3.793, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), complex(A, E) )
%   | then return 0.04247324130708759;  // std dev = 0.648, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.20082008624107403;  // std dev = 0.072, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.28681439534052183;  // std dev = 0.250, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.49977330590750346;  // std dev = 0.684, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.16722989114290626;  // std dev = 0.051, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.16695114378385015;  // std dev = 0.204, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.022576487407442846;  // std dev = 2.193, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.19054402182407365;  // std dev = 1.805, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.05773668910616452;  // std dev = 3.917, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.14133164123892766;  // std dev = 0.143, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.04002584295331637;  // std dev = 0.312, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( location(A, G) )
%   | | then if ( phenotype(F, H), complex(F, I) )
%   | | | then return 0.0709159957819339;  // std dev = 1.955, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.04376856696513723;  // std dev = 2.967, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.01824092308177513;  // std dev = 1.161, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.10755187634270548;  // std dev = 2.503, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | else if ( location(A, K), interaction(A, L) )
%   | | then if ( interaction(L, M), phenotype(M, N) )
%   | | | then return 0.15511855681655143;  // std dev = 1.484, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.05597536950213725;  // std dev = 1.340, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.3083270228630114;  // std dev = 0.555, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.256', 'seconds']
Refined model CLL: -0.25395


******************************************
Best model found
******************************************
Results 

CLL : -0.27761 

AUC ROC : 0.925437 

AUC PR : 0.22242 

Precision : 0.245223 

Recall : 0.555957 

F1 : 0.340331 

Total Learning Time : 14.767 

Total Inference Time : 6.634273052215576 

Total revision time: 29.527884984970093
Best scored revision CLL: -0.25395


Results 

CLL : -0.27761 

AUC ROC : 0.925437 

AUC PR : 0.22242 

Precision : 0.245223 

Recall : 0.555957 

F1 : 0.340331 

Total Learning Time : 29.618452812194825 

Total Inference Time : 6.634273052215576 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.266
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16861824917893511;  // std dev = 7.701, 277.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15537724178049583;  // std dev = 5.951, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
%   | | | else return 0.19425357371462568;  // std dev = 4.672, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1413470933526543;  // std dev = 4.334, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.1350279240096697;  // std dev = 6.265, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12494331576133454;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.1329722990767649;  // std dev = 6.630, 195.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1267561293812196;  // std dev = 7.423, 239.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07588276677565581;  // std dev = 7.578, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.729460801147191;  // std dev = 0.023, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2707023072392518;  // std dev = 0.034, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05564158137072224;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return 0.0920661985417123;  // std dev = 3.976, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.035742568929287497;  // std dev = 3.428, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.07176720109663585;  // std dev = 6.109, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03610189060515216;  // std dev = 7.075, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0086046025824798;  // std dev = 7.180, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.315', 'seconds']
Parameter learned model CLL:-0.343194 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.701, 191, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.951, 111, 52], 'false,false,false,false': [4.672, 61, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.334, 57, 28], 'false,false,false,false': [6.265, 121, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.559, 38, 19], 'false,false,false,false': [6.63, 128, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.423, 153, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.578, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.023, 0, 28], 'true,false': [0.034, 59, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.725, 69, 33], 'false,false,false,false': [3.976, 43, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.428, 57, 28], 'false,false,false,false': [6.109, 104, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.075, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.18, 186, 86]}]
{'': [nan, 0.2140781190944761], 'false': [nan, 0.21407811909447602], 'false,false': [nan, 0.2140781190944761], 'false,false,false': [nan, 0.21407811909447602]}
{'': [nan, 0.22222222222222301], 'false': [nan, 0.22222222222222307], 'false,false': [nan, 0.22222222222222301], 'false,false,false': [0.21724566223794728, 0.2298060941828263]}
{'': [nan, 0.21984875911220808], 'false': [nan, 0.21984875911220808], 'false,false': [nan, 0.21984875911220825], 'false,false,false': [0.22098516119522185, 0.21929626997602744]}
{'': [nan, 0.22472449545992282], 'false': [nan, 0.22472449545992282], 'false,false': [nan, 0.22472449545992293], 'false,false,false': [0.2222222222222226, 0.22544134790307452]}
{'': [nan, 0.23052371444678207], 'false': [nan, 0.23052371444678207], 'false,false': [nan, 0.23052371444678196], 'false,false,false': [nan, 0.23052371444678196]}
{'': [nan, 0.22174157842999517], 'false': [nan, 0.22174157842999517], 'false,false': [nan, 0.2217415784299948], 'false,false,false': [nan, 0.2217415784299942]}
{'': [0.2183490714970929, 0.22462637913416017], 'false': [nan, 0.22462637913416017], 'false,false': [nan, 0.22462637913416017], 'false,false,false': [0.21885813148788982, 0.23248269896193768], 'true': [1.8830277525440563e-05, 1.9344934006757295e-05], 'true,true': [nan, 1.8830277525440563e-05], 'true,true,false': [nan, 1.8830277525440563e-05]}
{'': [nan, 0.19897891918079186], 'false': [nan, 0.19897891918079186], 'false,false': [nan, 0.1989789191807917], 'false,false,false': [0.13826162310350185, 0.23039015728425158]}
{'': [nan, 0.19708919946939082], 'false': [nan, 0.1970891994693912], 'false,false': [nan, 0.1970891994693912], 'false,false,false': [nan, 0.1970891994693912]}
{'': [nan, 0.18954087908762104], 'false': [nan, 0.18954087908762104], 'false,false': [nan, 0.18954087908762035], 'false,false,false': [nan, 0.18954087908762035]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.539
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return 0.15156210875220608;  // std dev = 5.884, 167.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.7282220336740769;  // std dev = 0.109, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G) )
%   | | then if ( interaction(H, A), interaction(H, E) )
%   | | | then return -0.07496228404299883;  // std dev = 0.955, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.10216295682503464;  // std dev = 2.773, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.8246323084530343;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14907796748644583;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.10429191939599612;  // std dev = 2.933, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.19898186725033454;  // std dev = 5.066, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( enzyme(A, E), location(C, D) )
%   | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.6290213853742034;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.1305417556515785;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.22560277569585666;  // std dev = 3.227, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | else return 0.09089818977457777;  // std dev = 0.415, 164.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=48 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6420234094967173;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.04393016529481755;  // std dev = 1.462, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.4128890088896851;  // std dev = 1.055, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.5155754686473704;  // std dev = 1.441, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.059914701431836304;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.20271994165553417;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(E, A), phenotype(C, F) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.5306442541751397;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6717614766004605;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5132597512683652;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5576393117179147;  // std dev = 0.146, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7785873832830702;  // std dev = 0.185, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.2112933025583502;  // std dev = 0.187, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.049388600418288756;  // std dev = 2.008, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | | | else return 0.06316408246636085;  // std dev = 4.899, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.23544843963401316;  // std dev = 0.479, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(E, A), phenotype(C, F) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.3994125510112132;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5111825777143637;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3884832648926161;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, A) )
%   | then return -0.11577221746450664;  // std dev = 0.031, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( interaction(A, I), phenotype(H, J) )
%   | | | then return 0.024798368107830048;  // std dev = 2.277, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0.12031812739627194;  // std dev = 3.797, 76.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=27 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return 0.10001847654390696;  // std dev = 2.357, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.017707103047540244;  // std dev = 3.667, 85.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(C, D) )
%   | | then return 0.31007335319199764;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.39998204981981533;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11244440719957578;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.10238014303161858;  // std dev = 0.050, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4764423570759246;  // std dev = 0.842, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.03641665549968347;  // std dev = 4.626, 137.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=38 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.23128102825111083;  // std dev = 1.540, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.08751954279426584;  // std dev = 3.381, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5242027815559023;  // std dev = 0.196, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.1965180592834617;  // std dev = 0.060, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, G) )
%   | | then if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.6145366643023027;  // std dev = 0.430, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.026842267199650462;  // std dev = 1.805, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6830525520611958;  // std dev = 0.225, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2305519540912512;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.27530796511526523;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, K) )
%   | | | then return 0.06017046457545148;  // std dev = 3.966, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | | else return -0.09485486150511052;  // std dev = 1.294, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( complex(D, E) )
%   | | then return 0.16216657944515925;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2118922764942145;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.24273638227256117;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.22140854353413156;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.09190120322301719;  // std dev = 0.047, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.48502044641724257;  // std dev = 2.087, 51.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=46 */
%   | | | else return -0.21038209125185214;  // std dev = 0.634, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( interaction(I, A), complex(A, J) )
%   | | | then return -0.020240873532694194;  // std dev = 1.441, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.13903056862661275;  // std dev = 2.837, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return -0.00591676930962169;  // std dev = 0.262, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
%   else if ( phenotype(A, E), interaction(F, A) )
%   | then if ( phenotype(F, G), enzyme(F, H) )
%   | | then if ( complex(F, I) )
%   | | | then return 0.04096663206966246;  // std dev = 1.211, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.3091107605588276;  // std dev = 0.659, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(F, J) )
%   | | | then return 0.010831792226778202;  // std dev = 2.301, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return -0.04124522458124556;  // std dev = 1.642, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4571534551020613;  // std dev = 0.559, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.20497218116866514;  // std dev = 0.218, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.24682857939051028;  // std dev = 1.280, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.12622435120053208;  // std dev = 2.209, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1393901936473942;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.21302572114932802;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.00816684056775141;  // std dev = 0.656, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F), phenotype(E, F) )
%   | | then return 0.18559961761736923;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20230725104311117;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return -0.13027536113349078;  // std dev = 1.340, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.007514789948867649;  // std dev = 1.410, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.0018135819670345185;  // std dev = 3.368, 118.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=33 */
%   | | | else return 0.06281999769543328;  // std dev = 2.889, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.034', 'seconds']
Refined model CLL: -0.233619


******************************************
Best model found
******************************************
Results 

CLL : -0.241815 

AUC ROC : 0.971463 

AUC PR : 0.278706 

Precision : 0.285948 

Recall : 0.618375 

F1 : 0.391061 

Total Learning Time : 14.539 

Total Inference Time : 7.081084251403809 

Total revision time: 29.289318256378174
Best scored revision CLL: -0.233619


Results 

CLL : -0.241815 

AUC ROC : 0.971463 

AUC PR : 0.278706 

Precision : 0.285948 

Recall : 0.618375 

F1 : 0.391061 

Total Learning Time : 29.379886083602905 

Total Inference Time : 7.081084251403809 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.737
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.17545662740720325;  // std dev = 4.746, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | | | else return 0.20100607795665393;  // std dev = 4.864, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.6151621917647117;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7348917811753146;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.35048980206308533;  // std dev = 1.016, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.753625624030054;  // std dev = 2.348, 75.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=69 */
%   | | | else return -0.16623679832307217;  // std dev = 0.023, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else if ( location(A, I) )
%   | | | then return 0.2382473028302606;  // std dev = 1.539, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.615522195213584;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5678234703272703;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09011650394287628;  // std dev = 4.215, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6468788095924835;  // std dev = 1.376, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.1461364386257244;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07215515124806425;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0938649354216063;  // std dev = 1.375, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4547465559487458;  // std dev = 0.101, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.070601077997127;  // std dev = 0.733, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46492921573205503;  // std dev = 1.687, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return 0.07092956536134708;  // std dev = 4.821, 189.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6218707787088098;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1495148685364753;  // std dev = 1.593, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3813850534505153;  // std dev = 0.091, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3152052713876323;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.053347166602065774;  // std dev = 5.315, 244.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46894640753914774;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.0031402483468714326;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.00743920432249943;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2837776014479031;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4737729034582972;  // std dev = 0.157, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3558732583776594;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.009075389731704273;  // std dev = 2.217, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.24111347831962396;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06459229220220548;  // std dev = 4.583, 174.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=55 */
%   | | | else return 0.08294900940635382;  // std dev = 1.817, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2696731094029345;  // std dev = 0.243, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.27904692039221834;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.504233733979929;  // std dev = 1.491, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.19294920074442848;  // std dev = 0.673, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.1997788158744216;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07426691488250743;  // std dev = 3.821, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18566684643744602;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18290199192482526;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31779715751628723;  // std dev = 3.416, 87.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=71 */
%   | | else return -0.15777452922429255;  // std dev = 0.234, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2264894335579012;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.015497023917359428;  // std dev = 1.516, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18515765105935378;  // std dev = 0.163, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.5228355202971976;  // std dev = 0.394, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.19077736373253187;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.007968310789315428;  // std dev = 1.446, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3615642194186661;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 7.962811641293202E-4;  // std dev = 1.767, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1455011720588385;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.016523762139818852;  // std dev = 3.493, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | | else return 0.03639598842417184;  // std dev = 1.458, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1399266332543436;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.29537233937176055;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16315856956466857;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -4.406748237662965E-4;  // std dev = 2.279, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.12832801572234478;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03808544539856611;  // std dev = 3.424, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
%   | | | else return 0.11823757126797259;  // std dev = 1.328, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.319', 'seconds']
Parameter learned model CLL:-0.203038 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.265, 2, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.746, 71, 33], 'false,false,true,false': [4.864, 69, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.926, 1, 6], 'true,false': [0.042, 0, 5], 'false,true,true': [1.016, 2, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.348, 6, 69], 'false,false,true,false': [0.023, 171, 0], 'false,false,false,true': [1.539, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.073, 0, 8], 'true,false': [0.04, 0, 3], 'false,true,true': [4.215, 88, 34], 'false,true,false,true': [1.376, 2, 37], 'false,true,false,false': [0.0, 68, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [1.375, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.101, 0, 10], 'true,false': [0.733, 1, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.687, 4, 14], 'false,true,false': [4.821, 132, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.593, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.091, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.042, 0, 4], 'false,true': [5.315, 173, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.001, 0, 7], 'true,true,false': [0.157, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.217, 37, 12], 'false,false,true': [0.007, 0, 3], 'false,false,false,true': [4.583, 119, 55], 'false,false,false,false': [1.817, 12, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.243, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.491, 3, 33], 'true,false': [0.673, 112, 0], 'false,true': [0.006, 0, 3], 'false,false,true': [3.821, 76, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.044, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.416, 16, 71], 'false,true,false': [0.234, 130, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.516, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.163, 0, 8], 'true,false,true': [0.394, 2, 0], 'true,false,false': [0.046, 0, 3], 'false,true,true': [1.446, 25, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.767, 42, 17], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [3.493, 92, 40], 'false,false,false,false': [1.458, 9, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.026, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.041, 0, 3], 'false,true': [2.279, 75, 29], 'false,false,true': [0.004, 0, 3], 'false,false,false,true': [3.424, 75, 40], 'false,false,false,false': [1.328, 6, 4]}]
{'': [0.13017751479289916, 0.2231968047615319], 'false': [0.18750000000000006, 0.22070043015989096], 'false,false': [0.22114878322382742, 0.21301775147928975], 'false,false,true': [0.21662352071006058, 0.22530612244898088], 'false,false,false': [0.24000000000000005, 0.18750000000000003], 'false,true': [0.0, 1.4802973661668753e-16], 'true': [0.15999999999999986, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.0750613940636548, 0.2047430741196078], 'false': [0.20662839793528046, 0.20368015198516093], 'false,true': [0.20662839793528046, nan], 'false,false': [0.2017339239702022, 0.2367728715158715], 'false,false,false': [0.2367728715158715, nan], 'false,false,true': [0.07350487744707862, 3.1252946938234584e-06], 'true': [0.1224489795918368, 0.00035658915228165]}
{'': [0.0010833645657254724, 0.15747605858411734], 'false': [0.15459848718009084, 0.19540880343904807], 'false,false': [0.2040816326530612, 0.18914375221853122], 'false,false,true': [nan, 0.2040816326530612], 'false,false,false': [0.18914375221853122, nan], 'false,true': [0.14559668934888687, 0.16337755710672844], 'false,true,false': [0.048583265658918115, -6.857259857978908e-17], 'true': [0.0006706511961634409, 0.0005292656561108519]}
{'': [0.08401194708671288, 0.14365107643896233], 'false': [0.13834183415166565, 0.2286156738918843], 'false,false': [0.0, 0.23080557481673677], 'false,false,false': [0.23080557481673677, nan], 'false,true': [0.1581145442394593, 0.12295996025371023], 'false,true,true': [nan, 0.15811454423945923], 'true': [0.0010167198172533975, 0.26899630302357136], 'false,false,true': [nan, 0.0]}
{'': [0.001924580414042784, 0.12034875759183426], 'false': [0.1157607118872862, 0.1815640320359349], 'false,false': [0.0, 0.1797431663600797], 'false,false,false': [0.18750000000000003, 0.1728395061728395], 'true': [0.0011810198749954942, 0.0004386890958087003], 'true,true': [0.0011810198749954942, nan], 'false,false,true': [nan, 0.0]}
{'': [0.009160338100657306, 0.12073979614085567], 'false': [0.10032578102818544, 0.12514827711677584], 'false,false': [1.6785931185129648e-05, 0.12663337781639097], 'false,false,false': [0.1207377488644783, 0.18331907946835302], 'true': [0.010055651782389253, 0.0], 'true,true': [1.7285953246570784e-07, 0.00824968558550728], 'true,false': [nan, 0.0]}
{'': [0.10604970026326344, 0.12305301520654785], 'false': [1.2796446289764507e-05, 0.1258379493937604], 'false,false': [0.1258379493937604, nan], 'true': [0.05834471576935292, 0.004049885050684908], 'true,true': [0.0053615851154381, 0.06175068469710476], 'true,true,false': [nan, 0.06175068469710457], 'true,true,true': [0.005889755596757973, 0.0]}
{'': [0.00018060870480631562, 0.11061112180096527], 'false': [0.1083483258431509, 0.1384132338627156], 'false,false': [0.0, 0.14361950535552204], 'false,false,false': [0.14361950535552204, nan], 'false,true': [0.13412800513642667, 0.00041994938228927096], 'false,true,true': [nan, 0.1341280051364265], 'true': [-4.625929269271485e-18, 0.0003931694666779173], 'false,false,true': [0.0, nan]}
{'': [0.07968160065623847, 0.08087289237040121], 'false': [0.05563376440368922, 0.09717101973323432], 'false,false': [7.72618735543166e-06, 0.09885334689612256], 'false,false,false': [0.09243997739626109, 0.16361421405769538], 'true': [0.0033267011960250517, 0.15366342293316726], 'true,false': [0.07753981690917006, 0.0007151543145408196], 'false,true': [0.05806025675468218, 0.05417736506220235], 'false,true,false': [0.0, 0.05292640039911162]}
{'': [0.0021374891282361463, 0.08139694481727296], 'false': [0.049919070540088185, 0.1059865567038187], 'false,false': [6.250535750059368e-06, 0.10836537617669334], 'false,false,false': [0.10193144950069116, 0.17644511873184401], 'true': [0.0027253837452629708, 0.0005592615701213629], 'true,true': [0.0027253837452629708, nan], 'true,true,true': [9.430333650774423e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 10.493
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(H, A) )
%   | | | then return -0.006715929765352576;  // std dev = 2.080, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( location(A, I), interaction(A, J) )
%   | | | then return 0.16584124279181983;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0.2256703026208791;  // std dev = 5.215, 117.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7292917964438682;  // std dev = 2.680, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.16384096918540222;  // std dev = 0.123, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1706871937610606;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.058960772854551494;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.47999440874833965;  // std dev = 0.300, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.07146338576527889;  // std dev = 3.164, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | | else return 0.20398615783125107;  // std dev = 2.609, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5802014599636561;  // std dev = 2.103, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return -0.146994931198677;  // std dev = 0.032, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7525197199038105;  // std dev = 0.228, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18690545854893043;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.07852335996681836;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.455040201713025;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.46580235753103194;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4772781382758915;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13021110518095244;  // std dev = 1.86e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1507113408439977;  // std dev = 2.968, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.06334918478220734;  // std dev = 4.615, 174.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=51 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.370483753719946;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.07189542211933263;  // std dev = 1.323, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.02633685704416608;  // std dev = 0.779, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.355044143880025;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3450785889749325;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11616029581823176;  // std dev = 9.13e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.045444686701773436;  // std dev = 4.385, 143.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=41 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.111289785336009;  // std dev = 1.966, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.07790113197385677;  // std dev = 2.625, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.28892190796080797;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.20543128016713436;  // std dev = 1.154, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.06764208493138965;  // std dev = 0.731, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1568451262997945;  // std dev = 0.317, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.3861333965427199;  // std dev = 0.145, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.23333983385697632;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(G, I) )
%   | | | then return 0.12788644753772999;  // std dev = 2.024, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.03047640900705798;  // std dev = 1.244, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return -0.1313665709409354;  // std dev = 0.040, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.028136219001165697;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.10500685431239677;  // std dev = 3.097, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | | else return 0.05692252299263623;  // std dev = 3.756, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2565109280265662;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.38830047161188896;  // std dev = 1.610, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.6008082954030444;  // std dev = 0.350, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.18346328852313712;  // std dev = 0.082, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.021398583101562035;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), location(H, K) )
%   | | | then return 0.0037301112867737037;  // std dev = 3.020, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | | else return 0.264043783047216;  // std dev = 0.773, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.26033692988694135;  // std dev = 0.970, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.1207128943582836;  // std dev = 1.883, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20321663044349678;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07279426810712779;  // std dev = 0.875, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.5217727487994537;  // std dev = 0.311, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.36479481897578014;  // std dev = 2.548, 64.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=55 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.1397773109972017;  // std dev = 0.270, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | | else return -0.19069329048206576;  // std dev = 0.196, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.1571751350503301;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.07126903959988479;  // std dev = 0.342, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1783485239391186;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.025309641814720257;  // std dev = 0.249, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( phenotype(A, G), interaction(A, A) )
%   | | | then return -0.2703275893865546;  // std dev = 0.632, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.02198016535663441;  // std dev = 1.696, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return -0.019695281479348764;  // std dev = 0.556, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.009398225241418744;  // std dev = 1.646, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25025320465974316;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.02173946393643753;  // std dev = 1.782, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.025640975860118827;  // std dev = 3.012, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1538103006532055;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.16503088314898665;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3170312626514084;  // std dev = 0.793, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.16248126407949626;  // std dev = 0.704, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.008265001458915077;  // std dev = 1.212, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.07593196707575398;  // std dev = 0.931, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2062969585217926;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.09609549731528672;  // std dev = 1.438, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.0011776166757338582;  // std dev = 3.167, 126.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '32.928', 'seconds']
Refined model CLL: -0.200208


******************************************
Best model found
******************************************
Results 

CLL : -0.194118 

AUC ROC : 0.987998 

AUC PR : 0.274107 

Precision : 0.178197 

Recall : 0.904255 

F1 : 0.297723 

Total Learning Time : 10.493 

Total Inference Time : 27.2030029296875 

Total revision time: 58.12735794067383
Best scored revision CLL: -0.200208


Results 

CLL : -0.194118 

AUC ROC : 0.987998 

AUC PR : 0.274107 

Precision : 0.178197 

Recall : 0.904255 

F1 : 0.297723 

Total Learning Time : 58.205479841232304 

Total Inference Time : 27.2030029296875 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.085
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0749321518827281;  // std dev = 4.927, 143.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=31 */
%   | | | else return 0.1447731389211675;  // std dev = 5.666, 157.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.609733748384724;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.6516059843563051;  // std dev = 0.962, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.737387564470956;  // std dev = 2.839, 85.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=76 */
%   | | | else return -0.15615499521162288;  // std dev = 0.067, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | | else if ( location(A, I) )
%   | | | then return 0.15727409945367496;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.6050117756706785;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.45098978189871824;  // std dev = 0.929, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08319132846493489;  // std dev = 4.313, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6129816361795581;  // std dev = 2.122, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14047119882506467;  // std dev = 9.06e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8283602939246852;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07886837582406944;  // std dev = 1.623, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.40785588044107624;  // std dev = 0.949, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.4630425191442571;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.47787945260500564;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5588956457689153;  // std dev = 1.597, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return 0.018761646082680623;  // std dev = 5.191, 259.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5667268980701344;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07428043612171571;  // std dev = 1.658, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2284685653122281;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28255214050352234;  // std dev = 0.964, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.043514590982883884;  // std dev = 5.863, 300.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42599325820477885;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08093254537190873;  // std dev = 1.634, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.20564085070832;  // std dev = 0.951, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.3122661955150197;  // std dev = 0.800, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3264663934176776;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.05646014687586178;  // std dev = 2.561, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3097313297166038;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.09041999780677015;  // std dev = 4.548, 154.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=51 */
%   | | | else return 0.034477014793756436;  // std dev = 2.261, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.30185854903683623;  // std dev = 0.286, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2590950670549196;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.01026719864646905;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5108877287934561;  // std dev = 1.310, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.17742088182001503;  // std dev = 0.801, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24467572435678644;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0867847165463648;  // std dev = 4.253, 138.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.2075437353013847;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1317777028331774;  // std dev = 0.927, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return -0.8334324818072035;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3845032870392712;  // std dev = 3.021, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else return -0.14561668969211827;  // std dev = 0.252, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21252494239176734;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.013651465059836108;  // std dev = 1.471, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19430690067850537;  // std dev = 0.128, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.0532698388707181;  // std dev = 0.482, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2205812315362626;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.003670663185563843;  // std dev = 1.695, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.15443921429774804;  // std dev = 0.642, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.05315754658505129;  // std dev = 1.542, 64.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1819277202893804;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.022675378365857344;  // std dev = 3.684, 167.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=47 */
%   | | | else return 9.863941334266012E-4;  // std dev = 1.515, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1491039998967325;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.030817269137169107;  // std dev = 0.978, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.37998454381971764;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19736535291737475;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03357398525867712;  // std dev = 2.506, 130.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1564166229024912;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02678347653319629;  // std dev = 3.751, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | | else return 0.007704305254850351;  // std dev = 1.457, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.529', 'seconds']
Parameter learned model CLL:-0.197913 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.927, 112, 31], 'false,false,true,false': [5.666, 112, 45], 'false,false,false,true': [1.777, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.962, 1, 10], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.839, 9, 76], 'false,false,true,false': [0.067, 214, 0], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.018, 0, 11], 'true,false': [0.929, 1, 6], 'false,true,true': [4.313, 96, 34], 'false,true,false,true': [2.122, 5, 48], 'false,true,false,false': [9.06e-08, 97, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.623, 11, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.949, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.108, 0, 3], 'false,true,true,false': [1.597, 3, 21], 'false,true,false': [5.191, 201, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.658, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.935, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.964, 1, 10], 'false,true': [5.863, 218, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.634, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.951, 1, 9], 'true,true,false': [0.8, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.561, 44, 19], 'false,false,true': [0.036, 0, 8], 'false,false,false,true': [4.548, 103, 51], 'false,false,false,false': [2.261, 30, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.286, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.84, 1, 3], 'true,true,false,false': [1.31, 2, 33], 'true,false': [0.801, 91, 0], 'false,true': [0.03, 0, 5], 'false,false,true': [4.253, 91, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.927, 1, 10], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.021, 10, 82], 'false,true,false': [0.252, 179, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.471, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.128, 0, 9], 'true,false,true': [0.482, 1, 2], 'true,false,false': [0.105, 0, 5], 'false,true,true': [1.695, 25, 13], 'false,true,false,true': [0.642, 2, 8], 'false,true,false,false': [1.542, 53, 11], 'false,false,true': [0.024, 0, 5], 'false,false,false,true': [3.684, 120, 47], 'false,false,false,false': [1.515, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 7], 'true,true,true,false': [0.978, 1, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.084, 0, 3], 'false,true': [2.506, 98, 32], 'false,false,true': [0.021, 0, 5], 'false,false,false,true': [3.751, 105, 47], 'false,false,false,false': [1.457, 13, 4]}]
{'': [0.09418282548476423, 0.19565094659189336], 'false': [-2.5376526277146434e-16, 0.1878912353455657], 'false,false': [0.189155555555556, 0.16620498614958432], 'false,false,true': [0.16978825370433875, 0.20447076960525892], 'false,false,false': [0.16620498614958432, nan], 'true': [0.07100591715976314, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09518806759063764, 0.19446779294293876], 'false': [0.10937500000000006, 0.19054540488878446], 'false,false': [0.18942127203916045, 0.21301775147928995], 'false,false,false': [0.21301775147928995, nan], 'false,false,true': [0.09482118403666281, 2.0969646398138512e-05], 'false,true': [0.10937500000000006, nan], 'true': [0.10937499999999989, 0.08413207366237897]}
{'': [0.05363872478429806, 0.15491412552549838], 'false': [0.1524621053751214, 0.19745655882801424], 'false,false': [0.19745655882801424, nan], 'false,false,true': [0.0, 0.1755116959604148], 'false,true': [0.14310976569299866, 0.15972658064125145], 'false,true,false': [0.08494940074595507, 8.469742662088823e-17], 'true': [3.0197717872452884e-05, 0.1233834447653264]}
{'': [0.05014481897693426, 0.1305463046077142], 'false': [0.12737715674952402, 0.18595690409416724], 'false,false': [0.0, 0.18319756116593366], 'false,false,false': [0.18319756116593366, nan], 'false,true': [0.09557523249309374, 0.10406046355833329], 'false,true,true': [0.0038531602196272274, 0.10631120002119132], 'true': [0.05292531615024069, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.09564828485105523, 0.11812646804378174], 'false': [0.11458492193639619, 0.1854804203677226], 'false,false': [0.0, 0.1907912287865114], 'false,false,false': [0.1907912287865114, nan], 'true': [0.10937500000000003, 0.08443362640167175], 'true,true': [0.10937500000000003, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0887825239702039, 0.12421279462263647], 'false': [0.10413520625600424, 0.13023770933740464], 'false,false': [0.0001644934490862282, 0.1334910637569422], 'false,false,false': [0.13431461568503297, 0.12783605341290188], 'true': [0.09367631212780377, 0.0], 'true,true': [0.09052082195786146, 0.09149652925410524], 'true,false': [nan, 0.0]}
{'': [0.11154395590270871, 0.12734688980145623], 'false': [0.0001761766407786136, 0.13108286103740358], 'false,false': [0.13108286103740358, nan], 'true': [0.06722316027428182, 0.0070581436544464105], 'true,true': [0.005236449770324628, 0.0851731368052513], 'true,true,false': [0.17640416010288446, 0.049042024890905825], 'true,true,true': [0.005471251709728486, 0.0]}
{'': [0.04907473103115672, 0.10109821145237359], 'false': [0.09932386842947677, 0.1294559298405903], 'false,false': [0.0, 0.1352204160446805], 'false,false,false': [0.1352204160446805, nan], 'false,true': [0.11389667233954626, 0.00035482238656333643], 'false,true,true': [0.0, 0.09918449107730891], 'true': [0.0, 0.07807169189416577], 'false,false,true': [0.0, nan]}
{'': [0.025016478370008317, 0.07390908088634494], 'false': [0.054062950080539844, 0.0851227850871082], 'false,false': [0.00011542463857209806, 0.0867547286945147], 'false,false,false': [0.08127507335256488, 0.143519348210352], 'false,true': [0.07560285957444621, 0.04272099463056539], 'false,true,false': [0.04116619655299296, 0.03714009194788472], 'true': [0.0018083928816610387, 0.048033815676812135], 'true,false': [0.07752319944699268, 0.002217282128560388]}
{'': [0.07041762035271798, 0.07515463591968126], 'false': [0.0483018020776438, 0.09356167578325568], 'false,false': [9.110447348044115e-05, 0.09582977783100766], 'false,false,false': [0.09254581388837217, 0.12486488105951749], 'true': [0.08082830554090231, 0.0023248336627955343], 'true,true': [0.07187852456055552, 0.0], 'true,true,true': [3.96508223080413e-18, 0.1367611737842183], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(F, E), interaction(A, F).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 14.172
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8055173561521439;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return 0.08350104777556872;  // std dev = 3.521, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.1627846966889161;  // std dev = 5.656, 151.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.052806745544287714;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109543;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), interaction(H, H) )
%   | | then return 0.1286281315580171;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7573841052178191;  // std dev = 0.131, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6610768693030885;  // std dev = 3.496, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.15344052754168275;  // std dev = 0.208, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.2167221843445169;  // std dev = 0.937, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09304347760566714;  // std dev = 1.140, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5832439781134192;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.1680225397289957;  // std dev = 3.436, 70.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.02292054539478159;  // std dev = 1.965, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6136967675250006;  // std dev = 2.111, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14027061405315727;  // std dev = 0.182, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.4826069834335232;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.26294995099463003;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.15543716482119882;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4339250089559737;  // std dev = 0.054, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.006695144175074691;  // std dev = 0.590, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4500435853501441;  // std dev = 0.972, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.1352970495632644;  // std dev = 0.323, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08799043851865128;  // std dev = 5.095, 202.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=61 */
%   | | | else return 0.22957403364747683;  // std dev = 1.139, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.04679922502724154;  // std dev = 0.746, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.027945112014796582;  // std dev = 1.049, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.05815716014815601;  // std dev = 1.060, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.3449176745978868;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.20104697265303395;  // std dev = 0.336, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), complex(I, J) )
%   | | | then return 0.07823583598159396;  // std dev = 5.033, 203.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=68 */
%   | | | else return 0.2314720991249212;  // std dev = 0.891, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( location(A, K) )
%   | | | then return -5.450215842663734E-4;  // std dev = 2.022, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return -0.100729617165354;  // std dev = 0.742, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.4920797209893658;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return -0.01788838264491896;  // std dev = 0.739, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.12340581400482963;  // std dev = 1.191, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.2705253377835812;  // std dev = 0.127, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1389117464044256;  // std dev = 1.388, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.40084296267327457;  // std dev = 0.278, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.37197262643732776;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( phenotype(A, J), interaction(H, A) )
%   | | | then return 0.01632247447452553;  // std dev = 2.459, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.2546829930258798;  // std dev = 1.455, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return -0.09716928211761224;  // std dev = 0.270, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.27397648866739477;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.064011821382036;  // std dev = 0.335, 188.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=61 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.31382646698010763;  // std dev = 0.125, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( phenotype(A, E), enzyme(A, F) )
%   | | | then return 0.32386239742874895;  // std dev = 0.957, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.560759053596489;  // std dev = 0.754, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.18764120756226138;  // std dev = 0.076, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.08159943382665052;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4512376931305786;  // std dev = 0.420, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.15358926709501955;  // std dev = 0.505, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( location(A, J) )
%   | | | then return 0.10055894432362959;  // std dev = 3.420, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
%   | | | else return -0.02250561063855312;  // std dev = 1.156, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19677453486459529;  // std dev = 0.070, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.04133519384211096;  // std dev = 0.592, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1993801865976381;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3621813228646855;  // std dev = 2.742, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else return -0.1527643239480251;  // std dev = 0.041, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.22977845641087236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.13077532868658082;  // std dev = 1.019, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.07729995341338503;  // std dev = 0.854, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17662266594688858;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.04262506958742662;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.03904734137592375;  // std dev = 0.888, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), location(H, I) )
%   | | then if ( complex(A, J), complex(H, K) )
%   | | | then return -0.05773253282751471;  // std dev = 1.980, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | | else return 9.176941630556427E-4;  // std dev = 1.685, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else return -0.191029090690705;  // std dev = 0.202, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.19035709530101613;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.01623273654432113;  // std dev = 1.503, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.04802083358893028;  // std dev = 3.186, 105.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1968638105392569;  // std dev = 0.093, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.17860511679233737;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( location(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3332593465570433;  // std dev = 0.506, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.16330624058608428;  // std dev = 0.691, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.06383116841127101;  // std dev = 1.410, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return -0.051998929141887515;  // std dev = 0.541, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.16286306867466277;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), enzyme(A, N) )
%   | | | then return -0.039561974930341526;  // std dev = 1.843, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return 0.020871714439228167;  // std dev = 3.151, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '51.693', 'seconds']
Refined model CLL: -0.193025


******************************************
Best model found
******************************************
Results 

CLL : -0.167812 

AUC ROC : 0.992596 

AUC PR : 0.424781 

Precision : 0.315638 

Recall : 0.830189 

F1 : 0.45738 

Total Learning Time : 14.172 

Total Inference Time : 41.06874179840088 

Total revision time: 78.31620696258545
Best scored revision CLL: -0.193025


Results 

CLL : -0.167812 

AUC ROC : 0.992596 

AUC PR : 0.424781 

Precision : 0.315638 

Recall : 0.830189 

F1 : 0.45738 

Total Learning Time : 78.39432886314393 

Total Inference Time : 41.06874179840088 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.274
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11621345122854462;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.16584124279181897;  // std dev = 5.519, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12203782398840121;  // std dev = 3.740, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8377642015809627;  // std dev = 0.017, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16212563590973886;  // std dev = 0.029, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( location(A, K) )
%   | | | then return 0.18788171162814604;  // std dev = 3.433, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0.24263450103203957;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.03535092602601578;  // std dev = 2.121, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6603601308533343;  // std dev = 1.002, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.1446611133486451;  // std dev = 0.260, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5960526174841312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07167007602912777;  // std dev = 3.814, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.055438104906362924;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4325840937919907;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4048986928110248;  // std dev = 0.643, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.05811738357635544;  // std dev = 4.180, 189.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.44843194547397947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5786842021805032;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.10321675763036256;  // std dev = 3.558, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.19635351034795243;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207118471601496;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.055737258881268424;  // std dev = 4.245, 193.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.34176464016165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4350417186046819;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07870989669828131;  // std dev = 3.664, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.27936696445866804;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.21137686198040048;  // std dev = 0.728, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2694913293690093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2551722425694892;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3326216036431665;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06570129840683897;  // std dev = 1.016, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.11231509971234656;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05909979997635465;  // std dev = 3.956, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
%   | | | else return 0.03757828459435553;  // std dev = 3.826, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2484130883057517;  // std dev = 0.201, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.24155326695130774;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23441820948012582;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6512320141604838;  // std dev = 0.795, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18516781357430917;  // std dev = 0.524, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23441820948012584;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.045090858054585146;  // std dev = 3.359, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.171533254501402;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.08691461028428087;  // std dev = 0.868, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4440671819024974;  // std dev = 0.738, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1400538555825573;  // std dev = 0.202, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2001827470445221;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04896526894059203;  // std dev = 3.098, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15777540719920263;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.1051809375608142;  // std dev = 0.374, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.06845038645900947;  // std dev = 0.536, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06067565831671584;  // std dev = 0.421, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20518466525176948;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.05166894038807017;  // std dev = 1.616, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18170147306954976;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01985661584222456;  // std dev = 2.757, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | | else return 0.046547792112988685;  // std dev = 3.071, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13161439647825465;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09576825213498857;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12964421246330193;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17698946269662272;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01668577442086119;  // std dev = 1.344, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15622829386784953;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.022698017212443567;  // std dev = 2.665, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | | else return 0.003924033967910675;  // std dev = 3.156, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.943', 'seconds']
Parameter learned model CLL:-0.171834 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.436, 23, 8], 'false,false,true,false': [5.519, 99, 44], 'false,false,false,true': [3.74, 53, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.913, 1, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.017, 0, 52], 'false,false,true,false': [0.029, 135, 0], 'false,false,false,true': [3.433, 34, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.121, 30, 8], 'false,true,false,true': [1.002, 1, 48], 'false,true,false,false': [0.26, 111, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.814, 57, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.643, 1, 3], 'false,true,false': [4.18, 137, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.558, 42, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.245, 137, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.664, 46, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.728, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.016, 20, 3], 'false,false,true': [0.926, 1, 6], 'false,false,false,true': [3.956, 114, 49], 'false,false,false,false': [3.826, 55, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.201, 0, 12], 'true,true,true,false': [0.031, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.795, 0, 36], 'true,false': [0.524, 95, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.359, 87, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.868, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.738, 0, 56], 'false,true,false': [0.202, 131, 0], 'false,false,true,true': [0.027, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.098, 46, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.063, 0, 9], 'true,false,true': [0.374, 1, 1], 'true,false,false': [0.536, 1, 4], 'false,true,true': [0.421, 8, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.616, 52, 14], 'false,false,true': [5.27e-09, 0, 5], 'false,false,false,true': [2.757, 83, 36], 'false,false,false,false': [3.071, 44, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.009, 0, 5], 'true,true,true,false': [0.911, 1, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.038, 0, 4], 'false,true': [1.344, 56, 17], 'false,false,true': [3.73e-09, 0, 5], 'false,false,false,true': [2.665, 82, 36], 'false,false,false,false': [3.156, 53, 20]}]
{'': [-2.5376526277146434e-16, 0.21231833910034661], 'false': [-1.4802973661668753e-16, 0.20554507185368115], 'false,false': [0.20953890870656694, 0.19555555555555507], 'false,false,true': [0.19146722164412083, 0.21301775147929083], 'false,false,false': [0.19425154320987603, 0.22222222222222224], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [2.5376526277146434e-16, 0.21107036635005816], 'false': [0.12244897959183687, 0.2081455176659403], 'false,false': [0.20071115147307084, 0.228019086014637], 'false,false,false': [0.22660410418191765, 0.24000000000000007], 'false,false,true': [5.78577927790036e-06, 6.282090767709239e-06], 'false,true': [0.13888888888888892, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-1.9032394707859825e-16, 0.1546904765104672], 'false': [0.1400794529439904, 0.18987169033623852], 'false,false': [0.1899676118741308, 0.18749999999999997], 'false,false,true': [0.0, 0.1889093769245647], 'false,false,false': [0.18749999999999997, nan], 'false,true': [0.11839076467167976, 0.14438114521097795], 'false,true,false': [0.02047306398681706, 0.0006111760852604939], 'true': [-1.1102230246251565e-16, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.12591563920800353], 'false': [0.09530286865327982, 0.21228923355981558], 'false,false': [0.004241412594285454, 0.21383841681002883], 'false,false,false': [0.21099101913085605, 0.23999999999999994], 'false,true': [0.08280671404116768, 0.09243427311672928], 'false,true,true': [0.0, 0.10335509626596417], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, 3.700743415417188e-17]}
{'': [0.0, 0.12318876124253958], 'false': [0.0933671484742838, 0.20555222099945894], 'false,false': [0.0021751533407168844, 0.2089496759897471], 'false,false,false': [0.20648470077347628, 0.25], 'false,false,true': [0.0, 0.0], 'true': [0.0, -3.700743415417188e-17], 'true,true': [0.0, nan]}
{'': [0.03635366627799857, 0.1213643916881605], 'false': [0.04490954914383542, 0.12731145095429675], 'false,false': [0.12244897959183675, 0.12735161696668054], 'false,false,false': [0.09601109760495798, 0.19514779546030167], 'true': [0.04468203723277595, 0.001132096811935925], 'true,true': [2.3790493384824782e-17, 0.10611803539811213], 'true,false': [5.125906169303751e-05, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1353462139742023, 0.08950561300953801], 'true': [0.047212897195325336, 0.0028903300052995134], 'false': [-1.1102230246251566e-17, 0.0917438632659818], 'false,false': [0.0917438632659818, nan], 'true,true': [0.002948768404630518, 0.02166428126539914], 'true,true,false': [0.0, 0.017570560159561585], 'true,true,true': [0.0033548089988126952, 0.0004721901403819048]}
{'': [0.05191494407176576, 0.09267361614301128], 'false': [0.07471222450360003, 0.14181529851821328], 'false,false': [0.0003604067608432987, 0.14542925963423362], 'false,false,false': [0.14542925963423362, nan], 'false,true': [0.009735482864206477, 0.0003117841059206279], 'true': [4.625929269271485e-18, 0.08366078080661873], 'false,true,true': [nan, 0.00973548286420651], 'false,false,true': [0.0003604067608432987, nan]}
{'': [0.03435947560011197, 0.07712316562938966], 'false': [0.037920156602518476, 0.09135261033916944], 'false,false': [5.551115123125783e-18, 0.09322998295997573], 'false,false,false': [0.06388085933771567, 0.1473377427661793], 'false,true': [0.019704562118261222, 0.04029898604592299], 'false,true,false': [0.0, 0.03957976230213087], 'true': [0.00043663363535619774, 0.06711681854307786], 'true,false': [0.06994672109872051, 0.057371189897713094]}
{'': [0.06743135843083493, 0.07079419108097224], 'false': [0.02472965107521606, 0.0876031186043458], 'false,false': [2.7755575615628915e-18, 0.08939134073280362], 'false,false,false': [0.060169775990539576, 0.1364084471405956], 'true': [0.08741999478313461, 0.0003690968795923358], 'true,true': [0.10506146310444663, 0.0], 'true,true,true': [1.5526500211099358e-05, 0.20764506780953346], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.726
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), enzyme(J, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.08672036367094087;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.09952824544433996;  // std dev = 3.259, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return 0.19148226843284463;  // std dev = 5.774, 150.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8175024799154856;  // std dev = 0.995, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15932117469585597;  // std dev = 0.146, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( location(A, J), enzyme(A, K) )
%   | | | then return 0.29541768751789815;  // std dev = 1.654, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.13237815837119596;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5787526129430666;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5540859847587529;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.08751438786167347;  // std dev = 0.882, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.1237963555753451;  // std dev = 1.828, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6836845621873291;  // std dev = 0.215, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14151922951294296;  // std dev = 0.085, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5960526174841312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16788160105000033;  // std dev = 3.559, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else return 0.7880314430563844;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.43359896299462247;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2178250177996411;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.41383325140874555;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5628495056712057;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return -0.030973669554979454;  // std dev = 1.531, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
%   | | | else return 0.07122900267273248;  // std dev = 3.847, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.501749176395326;  // std dev = 0.053, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.12186614735218629;  // std dev = 3.563, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return -0.03833445778248997;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.33953437006063736;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.3350971510738212;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.13839330340202088;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return -0.03813906915009112;  // std dev = 0.192, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.06275751839330629;  // std dev = 2.256, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.11551229720131982;  // std dev = 3.161, 94.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=36 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.38009172746152625;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.023143870049968627;  // std dev = 1.896, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.15593053974416213;  // std dev = 3.027, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.19438685935769745;  // std dev = 0.256, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return -0.26320909035587586;  // std dev = 0.728, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.20574691728520694;  // std dev = 0.642, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.3405872830305472;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then if ( interaction(H, J), interaction(J, A) )
%   | | then return -0.10345222942785014;  // std dev = 0.011, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.04039841043259255;  // std dev = 0.356, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then return 0.07228727113019164;  // std dev = 0.313, 119.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=43 */
%   | | else if ( location(A, M) )
%   | | | then return 0.2448172306510936;  // std dev = 2.118, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.012994684212003449;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2675500664139125;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6148978433336451;  // std dev = 0.124, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.1919841391064178;  // std dev = 0.094, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then return -0.2121585017130967;  // std dev = 1.021, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.28965016878443245;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(H, J), phenotype(I, K) )
%   | | | then return 0.10346823340671311;  // std dev = 1.685, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return -0.005425225042789363;  // std dev = 2.290, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.06588864859382304;  // std dev = 1.120, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.19505701726738772;  // std dev = 0.816, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18480012391520687;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.1954775182082029;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2780223331111231;  // std dev = 0.129, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.43891326381159157;  // std dev = 0.314, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.41921825785747796;  // std dev = 0.535, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return -0.1535036298090454;  // std dev = 0.034, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2352390517969068;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.015002172636782829;  // std dev = 2.622, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.10743652317290515;  // std dev = 1.531, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17678490503557884;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1761358531943091;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.07073321193056133;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.054875895015802145;  // std dev = 0.353, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.19782559530578359;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.006794536263111216;  // std dev = 1.188, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.06621238823525738;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.02154073699137533;  // std dev = 2.278, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return -0.015745260979333608;  // std dev = 3.345, 132.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15309421233767678;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.15084015058009864;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( complex(A, H), location(G, I) )
%   | | | then return -0.06685082466273315;  // std dev = 0.249, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return -0.011145754198239734;  // std dev = 0.434, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.012117058320020501;  // std dev = 1.113, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.035763060606513894;  // std dev = 0.517, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.2152990329795755;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.009759176000335388;  // std dev = 2.358, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return 0.02156259156415712;  // std dev = 3.213, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '51.170', 'seconds']
Refined model CLL: -0.184748


******************************************
Best model found
******************************************
Results 

CLL : -0.192091 

AUC ROC : 0.982598 

AUC PR : 0.24329 

Precision : 0.135003 

Recall : 0.797834 

F1 : 0.23093 

Total Learning Time : 7.726 

Total Inference Time : 7.334758996963501 

Total revision time: 26.67525887489319
Best scored revision CLL: -0.171834


Results 

CLL : -0.192091 

AUC ROC : 0.982598 

AUC PR : 0.24329 

Precision : 0.135003 

Recall : 0.797834 

F1 : 0.23093 

Total Learning Time : 26.75338077545166 

Total Inference Time : 7.334758996963501 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.458
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1034319539674369;  // std dev = 3.132, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.13872447466785714;  // std dev = 5.297, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.612322868470617;  // std dev = 0.957, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5131173733306547;  // std dev = 1.274, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8226883722225233;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15821898070154877;  // std dev = 0.026, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1274728242037396;  // std dev = 2.794, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.15288007360931785;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5679254074331075;  // std dev = 0.083, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2735886831285631;  // std dev = 1.173, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05294812970291164;  // std dev = 2.746, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6456107403566657;  // std dev = 1.446, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1435574145172001;  // std dev = 0.276, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7168722076797511;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10916237561998104;  // std dev = 2.493, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09787330510185062;  // std dev = 1.451, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.45864756595043465;  // std dev = 0.228, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5928562309094738;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5968746427764926;  // std dev = 0.169, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.03747513092706915;  // std dev = 4.366, 204.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.49046652651781075;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5792197750095641;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08466021567880573;  // std dev = 2.774, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.7794606824012305;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31172203165229245;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16245122242921958;  // std dev = 1.209, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.06431479931573754;  // std dev = 4.422, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.37084229841691585;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.048112975027237534;  // std dev = 0.908, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06772733074200009;  // std dev = 2.528, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.0876184214439022;  // std dev = 1.398, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25239994655299414;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.43873885984147154;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.28916408219936063;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09225361328793306;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07143636874874387;  // std dev = 1.216, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.384119021547288;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.04249610971439907;  // std dev = 4.074, 170.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=46 */
%   | | | else return 0.09577489447725528;  // std dev = 2.947, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2470953340337771;  // std dev = 0.221, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3395807859219782;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.27983328919539424;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.512182928559718;  // std dev = 1.746, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18328461677057376;  // std dev = 0.701, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.31138105043559544;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.1188716942524495;  // std dev = 3.107, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16583849620111357;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.23322017609631152;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4397551615678068;  // std dev = 1.195, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.14175305599331656;  // std dev = 0.275, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.26975583926372065;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.041788443737218926;  // std dev = 2.473, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1527789299248202;  // std dev = 0.084, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19671164458099788;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.214377164492225;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0964188035652647;  // std dev = 0.293, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.24045635918447408;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.008049204496174644;  // std dev = 1.449, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20810585689065933;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03006214781546035;  // std dev = 2.733, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | | else return -0.04215860899053907;  // std dev = 2.630, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1263051841319741;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.16541480134978193;  // std dev = 0.058, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1410509274513153;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16370626462859283;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.010942570738889407;  // std dev = 0.737, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.00768726147072169;  // std dev = 1.609, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17596803105768313;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.032584986522541014;  // std dev = 2.601, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | | else return 0.08263090611588968;  // std dev = 2.357, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.463', 'seconds']
Parameter learned model CLL:-0.183397 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.132, 40, 13], 'false,false,true,false': [5.297, 100, 39], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.957, 1, 7], 'false,true,true': [1.274, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.992, 1, 52], 'false,false,true,false': [0.026, 150, 0], 'false,false,false,true': [2.794, 27, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.083, 0, 11], 'true,false': [1.173, 2, 4], 'false,true,true': [2.746, 48, 14], 'false,true,false,true': [1.446, 2, 42], 'false,true,false,false': [0.276, 97, 0], 'false,false,true,true': [0.131, 0, 3], 'false,false,true,false': [2.493, 21, 9], 'false,false,false,true': [1.451, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.228, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.169, 0, 6], 'false,true,false': [4.366, 155, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.774, 28, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.022, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [1.209, 2, 6], 'false,true': [4.422, 133, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.908, 2, 2], 'false,false,false,true': [2.528, 23, 9], 'false,false,false,false': [1.398, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.048, 0, 9], 'true,true,false': [0.051, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.791, 1, 2], 'false,true': [1.216, 31, 5], 'false,false,true': [0.069, 0, 5], 'false,false,false,true': [4.074, 124, 46], 'false,false,false,false': [2.947, 28, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.221, 0, 13], 'true,true,true,false': [0.138, 0, 3], 'true,true,false,true': [0.002, 0, 3], 'true,true,false,false': [1.746, 3, 33], 'true,false': [0.701, 104, 0], 'false,true': [0.05, 0, 3], 'false,false,true': [3.107, 51, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.06, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.195, 1, 56], 'false,true,false': [0.275, 131, 0], 'false,false,true,true': [0.119, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.473, 26, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.084, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.094, 0, 5], 'false,true,true': [0.293, 22, 1], 'false,true,false,true': [0.151, 0, 6], 'false,true,false,false': [1.449, 52, 17], 'false,false,true': [0.038, 0, 3], 'false,false,false,true': [2.733, 64, 31], 'false,false,false,false': [2.63, 41, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.058, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.005, 0, 2], 'true,false': [0.737, 1, 3], 'false,true': [1.609, 67, 24], 'false,false,true': [0.034, 0, 3], 'false,false,false,true': [2.601, 65, 31], 'false,false,false,false': [2.357, 22, 12]}]
{'': [0.05859374999999978, 0.2083159722222226], 'false': [0.10937499999999978, 0.19976218787158273], 'false,false': [0.1974826388888897, 0.20999999999999946], 'false,false,false': [0.19834710743801665, 0.24489795918367335], 'false,false,true': [0.1851192595229614, 0.20185290616427767], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [0.18750000000000006, 1.4802973661668753e-16], 'true': [-1.4802973661668753e-16, 0.18750000000000006]}
{'': [0.0600544943623918, 0.19864389862284007], 'false': [0.18039461476137303, 0.1933385733426755], 'false,false': [0.1904715497253436, 0.2067108359249958], 'false,false,false': [0.20543901901658246, 0.22222222222222224], 'false,false,true': [0.01855926344459552, 4.533951337390244e-06], 'false,true': [0.18039461476137303, nan], 'true': [1.1102230246251565e-16, 0.11436836921285864]}
{'': [0.10112344464262829, 0.15519731448767513], 'false': [0.14122117487989852, 0.21806416843806017], 'false,false': [0.21935289580428668, 0.21041393220173554], 'false,false,true': [0.005706579941512728, 0.20714377830128092], 'false,false,false': [0.21041393220173554, nan], 'false,true': [0.12166449107525788, 0.14906434266997892], 'false,true,false': [0.0475132291723084, 0.0007840803701105427], 'true': [0.0006338304495411184, 0.22929704046617286]}
{'': [0.0034559649448378414, 0.11838093712899715], 'false': [0.10050986415526506, 0.20137867192796652], 'false,false': [0.0017504753595197025, 0.2041595318950836], 'false,false,false': [0.19732569947332276, 0.0], 'false,true': [0.004081050268447977, 0.09345850070321957], 'false,true,true': [0.0, 0.004758918508341721], 'true': [0.0034559649448378414, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.09151471042499587, 0.12339996939610438], 'false': [0.1034602061583235, 0.2071377055189547], 'false,false': [0.19310831762635214, 0.20874715916792388], 'false,false,false': [0.19975468508209318, 0.2444005311197977], 'false,false,true': [0.0, 0.2062806928036071], 'true': [5.379817721386083e-05, 0.18261200315228], 'true,true': [5.379817721386083e-05, nan]}
{'': [0.049576834330420434, 0.11042858751667754], 'false': [0.04105290739545042, 0.11945425322334474], 'false,false': [0.0009632010172423433, 0.11972337403358833], 'false,false,false': [0.09764299230592272, 0.20682008866494542], 'true': [0.007775769001687476, 0.1637819855737763], 'true,false': [0.0, 0.2086825475733055], 'true,true': [0.0002536282377083094, 0.0006621460706579263], 'true,false,true': [0.0, nan]}
{'': [0.11193409497403754, 0.11487787947714592], 'false': [0.0008479956726176741, 0.11774170971021831], 'false,false': [0.11774170971021831, nan], 'true': [0.07068640707394032, 0.0047289823219569494], 'true,true': [0.005551116817104559, 0.08203640677991754], 'true,true,false': [1.290593607446618e-06, 0.08471986993036179], 'true,true,true': [0.003772417447096025, 0.006309047553232676]}
{'': [0.001370417675921883, 0.09268660111576972], 'false': [0.07943371060365735, 0.1529864740696047], 'false,false': [0.004745812174678464, 0.16088706470043804], 'false,false,false': [0.16088706470043804, nan], 'false,true': [0.025041654903462197, 0.000575732908916897], 'false,true,true': [nan, 0.025041654903462135], 'false,false,true': [0.004745812174678464, nan], 'true': [-3.469446951953614e-18, 0.0005151208866141352]}
{'': [0.0018110004013875136, 0.0701725945002625], 'false': [0.0281208812559228, 0.09727696657631549], 'false,false': [0.0004901933480875217, 0.09841281002865464], 'false,false,false': [0.07864015997119497, 0.13050634864667468], 'false,true': [0.0037273995574664182, 0.032851389207268496], 'false,true,false': [0.0038185688482988422, 0.030435581067542558], 'true': [0.0007065081700643683, 0.0015016398392120693], 'true,false': [0.0, 0.0017499560414321492]}
{'': [0.036399628695515676, 0.06782897187759605], 'false': [0.02844506481136657, 0.09348816243073493], 'false,false': [0.0003769253624883913, 0.09525395346175394], 'false,false,false': [0.07046800499208351, 0.1633882615757173], 'true': [0.0005607497830435118, 0.13563500341885945], 'true,true': [0.0005799579832572094, 0.00012348754031399345], 'true,true,true': [0.0, 0.0016761401891472426], 'true,true,false': [0.0, 1.4143209598940082e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
3;false,false,false;location(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.833
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.018148935099512268;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.09727936988212106;  // std dev = 2.893, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.1826522463577896;  // std dev = 5.753, 151.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.41058033599965266;  // std dev = 0.848, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7488017207573923;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), interaction(H, A) )
%   | | then return 0.21947341221095448;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.782488819437566;  // std dev = 1.689, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15847817759832453;  // std dev = 0.141, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.15181885349669672;  // std dev = 1.662, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.050384097667520826;  // std dev = 2.510, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4844167871883885;  // std dev = 0.284, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4349913094395245;  // std dev = 0.815, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.11809038771386282;  // std dev = 0.039, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.1096910931610425;  // std dev = 2.661, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6277162516880614;  // std dev = 1.671, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14238572299590713;  // std dev = 0.051, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then return 0.025043938236183155;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18373573147388644;  // std dev = 2.664, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.46506224818863257;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then return -0.19288637461799577;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4731243964106639;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.08610054659296854;  // std dev = 0.795, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5109284815689905;  // std dev = 0.709, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.04715296259484166;  // std dev = 0.317, 189.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=49 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return 0.03788838330471338;  // std dev = 2.901, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.13284225209823905;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.36497828821166056;  // std dev = 0.061, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( complex(A, E), location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.22847573602150703;  // std dev = 1.878, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.13715995196636455;  // std dev = 0.116, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11802506005077805;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.07615719648738112;  // std dev = 3.801, 131.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=42 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.012621486173183668;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.22833998360353958;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.016347381723064276;  // std dev = 2.640, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2719925361997924;  // std dev = 0.219, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.00986562312160096;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(H, A), complex(H, I) )
%   | | then return -0.06249720511831282;  // std dev = 0.167, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.04044274211111064;  // std dev = 0.619, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.25638780072743744;  // std dev = 0.465, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3144945684994178;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.026251725017844302;  // std dev = 4.126, 173.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=46 */
%   | | | else return 0.10531527114536053;  // std dev = 2.977, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.27502682901432424;  // std dev = 0.086, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.290305604764244;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5759843435578823;  // std dev = 1.132, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17059158921518502;  // std dev = 0.070, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.21534449619824572;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5398692294829114;  // std dev = 0.305, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.15223420579559288;  // std dev = 0.153, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.07432352548051972;  // std dev = 0.762, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.02635271082468591;  // std dev = 0.955, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1762103417525282;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2096128122366482;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.15916166992224534;  // std dev = 0.889, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.37935519114533134;  // std dev = 1.147, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | | else return -0.12487101280283372;  // std dev = 0.026, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, H), complex(H, J) )
%   | | | then return 0.2353894842139631;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.022986377370226876;  // std dev = 1.953, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.024953943726408967;  // std dev = 1.044, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.3549990131033171;  // std dev = 0.679, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.163754813259574;  // std dev = 0.041, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.25155320738556575;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.24897413510961164;  // std dev = 0.398, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1054887037432304;  // std dev = 0.066, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.06667697307869737;  // std dev = 0.511, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.024429601078099765;  // std dev = 1.325, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1522932644315297;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return -0.004897354100739933;  // std dev = 1.724, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.042496710884275896;  // std dev = 2.799, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15945256378859202;  // std dev = 0.062, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.20180272903091154;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.07462813337045295;  // std dev = 0.060, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.028084860988254266;  // std dev = 0.854, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return -0.03505187718914956;  // std dev = 0.433, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.05748385564084838;  // std dev = 1.301, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.12047840623459985;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return -0.026697859154424606;  // std dev = 2.082, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.006761376540506218;  // std dev = 2.845, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '52.332', 'seconds']
Refined model CLL: -0.167467


******************************************
Best model found
******************************************
Results 

CLL : -0.181439 

AUC ROC : 0.983191 

AUC PR : 0.203542 

Precision : 0.148795 

Recall : 0.872792 

F1 : 0.254246 

Total Learning Time : 8.833 

Total Inference Time : 10.050110101699829 

Total revision time: 31.420845142364502
Best scored revision CLL: -0.167467


Results 

CLL : -0.181439 

AUC ROC : 0.983191 

AUC PR : 0.203542 

Precision : 0.148795 

Recall : 0.872792 

F1 : 0.254246 

Total Learning Time : 31.498967042922974 

Total Inference Time : 10.050110101699829 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.672
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12214893509951097;  // std dev = 4.928, 125.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=33 */
%   | | | else return 0.21109011157009938;  // std dev = 4.826, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7282213723121569;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.504142292933094;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6210465771920559;  // std dev = 3.848, 88.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=69 */
%   | | | else return -0.1648552006837034;  // std dev = 0.072, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( location(A, I) )
%   | | | then return 0.024903519251922815;  // std dev = 1.766, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.574670820567857;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5622965486865922;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07812840436580826;  // std dev = 4.476, 133.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7215317714459927;  // std dev = 0.115, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.1475729392755282;  // std dev = 3.33e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.055984854449351355;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.12982459468470703;  // std dev = 1.325, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4286689541442513;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.43784072442304733;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5211562526814689;  // std dev = 1.739, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.04236356094504227;  // std dev = 5.061, 232.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5763687289728571;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.059735243095689276;  // std dev = 1.714, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.20850570615538216;  // std dev = 0.937, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1188562822067925;  // std dev = 0.901, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.05451993441849527;  // std dev = 5.576, 253.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43327917314538333;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2742336801428094;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0404082027398337;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.29246420439900983;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4203573087991148;  // std dev = 0.196, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.331421303394816;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.054687360951623284;  // std dev = 2.237, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.03856347234981933;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.09104315166552611;  // std dev = 4.661, 167.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=55 */
%   | | | else return 0.1284630841707215;  // std dev = 1.744, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2632482261752147;  // std dev = 0.222, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2624670861232802;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5924725411341989;  // std dev = 0.449, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17401536916927765;  // std dev = 0.464, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.03071165571844303;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09540750557052052;  // std dev = 3.907, 110.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1890892231700818;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.24061638065434102;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3791943697975776;  // std dev = 2.774, 83.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=71 */
%   | | else return -0.1574279462375074;  // std dev = 0.243, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21489766836066204;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06479215159929447;  // std dev = 1.346, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1775087146695783;  // std dev = 0.143, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18081873101292342;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.007906148539401085;  // std dev = 1.483, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.10397183086801205;  // std dev = 0.590, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.031770468412149915;  // std dev = 1.622, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.020151952923531335;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02774564465228511;  // std dev = 3.435, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | | else return 0.03867618607209036;  // std dev = 1.341, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13631296056497327;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14035644350116439;  // std dev = 0.585, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1555722166201463;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.0036531599650714112;  // std dev = 2.190, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.23325047146550248;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.0026490003691528857;  // std dev = 3.705, 137.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
%   | | | else return -0.04715467042505594;  // std dev = 1.463, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.298', 'seconds']
Parameter learned model CLL:-0.199174 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.928, 92, 33], 'false,false,true,false': [4.826, 66, 36], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.024, 0, 5], 'false,true,true': [0.746, 1, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.848, 19, 69], 'false,false,true,false': [0.072, 148, 0], 'false,false,false,true': [1.766, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.023, 0, 8], 'true,false': [0.022, 0, 3], 'false,true,true': [4.476, 99, 34], 'false,true,false,true': [0.115, 0, 37], 'false,true,false,false': [3.33e-08, 69, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.291, 10, 2], 'false,false,false,true': [1.325, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.034, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.739, 3, 14], 'false,true,false': [5.061, 175, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.714, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.937, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.901, 1, 4], 'false,true': [5.576, 182, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.005, 2, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.022, 0, 7], 'true,true,false': [0.196, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.237, 30, 12], 'false,false,true': [0.867, 1, 3], 'false,false,false,true': [4.661, 112, 55], 'false,false,false,false': [1.744, 10, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.222, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.449, 0, 33], 'true,false': [0.464, 59, 0], 'false,true': [0.867, 1, 3], 'false,false,true': [3.907, 70, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.098, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.774, 12, 71], 'false,true,false': [0.243, 150, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.346, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.143, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.014, 0, 3], 'false,true,true': [1.483, 29, 11], 'false,true,false,true': [0.59, 2, 1], 'false,true,false,false': [1.622, 31, 17], 'false,false,true': [0.865, 1, 3], 'false,false,false,true': [3.435, 90, 40], 'false,false,false,false': [1.341, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.018, 0, 7], 'true,true,true,false': [0.585, 1, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.013, 0, 3], 'false,true': [2.19, 71, 29], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [3.705, 97, 40], 'false,false,false,false': [1.463, 11, 4]}]
{'': [0.07638888888888877, 0.2173575312477934], 'false': [1.4802973661668753e-16, 0.21414214576731685], 'false,false': [0.2115701837800076, 0.24999999999999986], 'false,false,false': [0.22222222222222224, 0.24000000000000005], 'false,false,true': [0.19430400000000128, 0.22837370242214652], 'true': [0.09876543209876527, 1.4802973661668753e-16], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [9.486794123805062e-05, 0.2067066578498605], 'false': [0.13910247278836857, 0.20549384574455073], 'false,false': [0.20719457781619083, 0.1732827079272275], 'false,false,true': [0.16826475897259166, 3.499871486571997e-05], 'false,false,false': [0.1732827079272275, nan], 'false,true': [0.13910247278836857, nan], 'true': [0.0, 0.0001147902088982633]}
{'': [0.00012412408382230083, 0.16290015485511744], 'false': [0.1615072734101575, 0.17148328663748014], 'false,false': [0.13888888888888895, 0.19521382569988643], 'false,false,false': [0.19521382569988643, nan], 'false,true': [0.15066730620892801, 0.17175169275778843], 'false,true,false': [0.00035985349978254726, 1.609018876268343e-17], 'false,false,true': [nan, 0.13888888888888895], 'true': [6.692084974097012e-05, 0.00016530414712408645]}
{'': [0.00010983995415432672, 0.1338216171438767], 'false': [0.12960100076957787, 0.19923428261916226], 'false,false': [0.0, 0.19583468320650682], 'false,false,false': [0.19583468320650682, nan], 'false,true': [0.17795846647030314, 0.11040647538841539], 'false,true,true': [nan, 0.1779584664703032], 'true': [0.00011317655229277079, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.13199395930110708, 0.12756285433286854], 'true': [0.10984843567757896, 0.16248093912071285], 'false': [0.12287970090240027, 0.21132941214359485], 'false,false': [0.0, 0.22131093755648223], 'false,false,false': [0.2524832434142936, 0.18750000000000003], 'true,true': [0.10984843567757896, nan], 'false,false,true': [nan, 0.0]}
{'': [0.006646239175305975, 0.1336235377897646], 'false': [0.11910205200894042, 0.13661411232576495], 'false,false': [0.18813670302559538, 0.1354214495982121], 'false,false,false': [0.13006602324295127, 0.1900408871799798], 'true': [0.007310831536604723, 0.0], 'true,true': [7.184100709849745e-05, 0.012752157131618702], 'true,false': [nan, 0.0]}
{'': [0.12774894790758098, 0.14063280941930495], 'false': [0.18812618791493713, 0.13875891596565532], 'false,false': [0.13875891596565532, nan], 'true': [0.026038457072486147, 0.003644126849195727], 'true,true': [0.004498949109360036, 0.006109439850417732], 'true,true,false': [nan, 0.006109439850417571], 'true,true,true': [0.004948788549406879, 0.0]}
{'': [0.0015237765629435927, 0.10201845385329619], 'false': [0.09931017366073927, 0.15279873148050205], 'false,false': [0.0, 0.16481188640460698], 'false,false,false': [0.16481188640460698, nan], 'false,true': [0.09268863439153935, 0.00039481593812576026], 'false,true,true': [nan, 0.09268863439153906], 'true': [0.0, 0.0019041004611626278], 'false,false,true': [0.0, nan]}
{'': [0.0018841105034544947, 0.08282239641101556], 'false': [0.05772625141970784, 0.09834723869470284], 'false,false': [0.1872275471476849, 0.09577826612032024], 'false,false,false': [0.09076796899792143, 0.1499471048361319], 'false,true': [0.05499628652029942, 0.05942591963318443], 'false,true,false': [0.116207005540317, 0.0547932210690554], 'true': [0.0025616356611749824, 6.940859811990312e-05], 'true,false': [nan, 6.940859811990312e-05]}
{'': [0.03971408395160305, 0.08182229235054003], 'false': [0.04794312180665267, 0.10366549928127282], 'false,false': [1.0859702542220795e-06, 0.10459395915307039], 'false,false,false': [0.10021825020034449, 0.14277348213141355], 'true': [0.051304124492694794, 5.458863136068489e-05], 'true,true': [0.051304124492694794, nan], 'true,true,true': [4.760524752598202e-05, 0.1711661958480987]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 14.324
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.2062970832476608;  // std dev = 5.535, 135.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=47 */
%   | | | else return 0.134744679780363;  // std dev = 4.337, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7492293200691814;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6963330257043407;  // std dev = 3.090, 80.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=69 */
%   | | | else return -0.16396947421884556;  // std dev = 0.131, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.21594220648572493;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.047946682403164034;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4532966991324727;  // std dev = 0.318, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.3460526174841312;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.014711678788993682;  // std dev = 1.934, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | | else return 0.1227201884106216;  // std dev = 3.821, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6382342368420192;  // std dev = 1.671, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14308452110486491;  // std dev = 0.039, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.744421297617739;  // std dev = 0.227, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18388089455745749;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.009891719542808245;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.4732853588692251;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.13193236194063254;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.01605757102686034;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1152469564002835;  // std dev = 0.029, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.06840620789392114;  // std dev = 4.774, 163.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=48 */
%   | | | else return 0.13822224593365423;  // std dev = 2.846, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3654469998569241;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.05931019118432963;  // std dev = 0.779, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.11001114844499711;  // std dev = 1.290, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.3754021076653306;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08514540933146227;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.496068390683899;  // std dev = 1.917, 36.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=31 */
%   | | | else return -0.16388466925765288;  // std dev = 0.532, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.17195794345490742;  // std dev = 2.869, 53.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=23 */
%   | | | else return 0.06671678835824285;  // std dev = 2.495, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.28551926021090845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.18605050834606476;  // std dev = 1.080, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.013562949572270385;  // std dev = 0.916, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.31035134024401984;  // std dev = 0.077, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(D, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.0986703927004489;  // std dev = 1.143, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.010176039711376728;  // std dev = 0.644, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.31805663692531216;  // std dev = 0.574, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.030765976622272595;  // std dev = 1.762, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( complex(I, K), location(A, J) )
%   | | | then return 0.023324043528188503;  // std dev = 3.183, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | | | else return 0.07643624649252186;  // std dev = 3.379, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.16904292408074847;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1725450837660172;  // std dev = 0.616, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2496226283032257;  // std dev = 0.069, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), phenotype(A, F) )
%   | | | then return 0.44270761675858267;  // std dev = 0.933, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.5893217078624213;  // std dev = 0.343, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.15485119097894048;  // std dev = 0.052, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.31390422984017746;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), interaction(J, J) )
%   | | | then return 0.15087470312974607;  // std dev = 1.518, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.013453449117589304;  // std dev = 2.290, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1940489506365754;  // std dev = 1.081, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08193845211878788;  // std dev = 1.997, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1886548761453608;  // std dev = 0.098, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.0858442901232012;  // std dev = 0.878, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return 0.3082802307304948;  // std dev = 1.432, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | | else return 0.43506423956899665;  // std dev = 1.593, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.13179418565223214;  // std dev = 0.314, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.17020119451355312;  // std dev = 0.298, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.14644753348883843;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -4.38040005793075E-4;  // std dev = 0.566, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2489241628102742;  // std dev = 0.806, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.13844862651415013;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2385923103198579;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.008843900921193179;  // std dev = 0.493, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), complex(H, I) )
%   | | | then return 0.3633562016690116;  // std dev = 0.397, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.11119126356812173;  // std dev = 2.762, 80.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=43 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return -0.11585446474968324;  // std dev = 0.171, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.15747022950331846;  // std dev = 0.207, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( interaction(A, L), enzyme(L, M) )
%   | | then return -0.16194059889844892;  // std dev = 0.217, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return 0.03886262139980399;  // std dev = 0.515, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.14960811115891434;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.27705715119229796;  // std dev = 0.726, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.14935320180098632;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( complex(A, H) )
%   | | then return -0.04922179077998633;  // std dev = 0.188, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.01611645574316019;  // std dev = 0.993, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.05582172538700365;  // std dev = 1.120, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.19094858275600443;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.023511326588762687;  // std dev = 2.261, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   | | | else return 0.0350640297873617;  // std dev = 1.947, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '29.645', 'seconds']
Refined model CLL: -0.178412


******************************************
Best model found
******************************************
Results 

CLL : -0.175889 

AUC ROC : 0.991777 

AUC PR : 0.370443 

Precision : 0.195049 

Recall : 0.921986 

F1 : 0.321981 

Total Learning Time : 14.324 

Total Inference Time : 20.93300199508667 

Total revision time: 55.515114017486574
Best scored revision CLL: -0.178412


Results 

CLL : -0.175889 

AUC ROC : 0.991777 

AUC PR : 0.370443 

Precision : 0.195049 

Recall : 0.921986 

F1 : 0.321981 

Total Learning Time : 60.79512781715393 

Total Inference Time : 20.93300199508667 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.111
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6581489350995123;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1101814554247144;  // std dev = 4.815, 123.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=31 */
%   | | | else return 0.13087620782678416;  // std dev = 5.721, 165.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7580193346218546;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6740978959898974;  // std dev = 0.961, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6205384727792422;  // std dev = 0.971, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6870608599523733;  // std dev = 3.438, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.15717777891459414;  // std dev = 0.019, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1540814786856692;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.6093943020485274;  // std dev = 0.064, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6181998019697802;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06851209703559247;  // std dev = 4.398, 136.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5815836232347971;  // std dev = 2.613, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.13867945105842655;  // std dev = 6.14e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.825270978881055;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13813540627077758;  // std dev = 1.547, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.35053309350005196;  // std dev = 1.316, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.4860219313520474;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3580673318126619;  // std dev = 0.759, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.41183770317945245;  // std dev = 2.343, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | else return 0.036024450468380924;  // std dev = 5.216, 245.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11821770580117905;  // std dev = 0.605, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.01675698324449238;  // std dev = 1.739, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.13421117969963425;  // std dev = 1.266, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3851220681981674;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.0627157379136576;  // std dev = 5.952, 283.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.516234161760005;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0293706651792849;  // std dev = 1.695, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.32117190721827726;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.369391118608384;  // std dev = 0.753, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.38905774182949804;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.029732458627428907;  // std dev = 2.888, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3005867547664824;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05525216477076615;  // std dev = 4.738, 183.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=51 */
%   | | | else return 0.03596471289913188;  // std dev = 2.324, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24552190055705161;  // std dev = 1.054, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.3014647763770917;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23385170911026565;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5173780029232764;  // std dev = 1.640, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.17327678245544484;  // std dev = 0.684, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24595587450201953;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06460178568213129;  // std dev = 4.469, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.21806121134451684;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19790966971063179;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38944194247741304;  // std dev = 3.265, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.1476020566713428;  // std dev = 0.245, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2419905457551046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.003827040216569985;  // std dev = 1.478, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.016049297807665397;  // std dev = 1.287, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.10337226393587391;  // std dev = 0.872, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21164648795794702;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.002510812447312808;  // std dev = 1.726, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23205001715407192;  // std dev = 0.468, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.059711001523416754;  // std dev = 1.547, 67.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17307830958374215;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.024969867654447878;  // std dev = 4.011, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
%   | | | else return 0.09587934920207491;  // std dev = 1.369, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.18077417739661902;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.23518079722646523;  // std dev = 0.115, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17526567190120787;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.020552574973105718;  // std dev = 2.476, 123.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.14969681175467314;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04292036963656357;  // std dev = 3.817, 146.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=47 */
%   | | | else return 0.07887281000190412;  // std dev = 1.358, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.274', 'seconds']
Parameter learned model CLL:-0.19787 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.549, 3, 12], 'true,false': [1.195, 2, 5], 'false,true,true': [1.095, 3, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.815, 92, 31], 'false,false,true,false': [5.721, 120, 45], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 7], 'true,false': [0.961, 1, 10], 'false,true,true': [0.971, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.438, 14, 76], 'false,false,true,false': [0.019, 185, 0], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.064, 0, 11], 'true,false': [0.018, 0, 6], 'false,true,true': [4.398, 102, 34], 'false,true,false,true': [2.613, 8, 48], 'false,true,false,false': [6.14e-08, 80, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.547, 8, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.316, 2, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.759, 1, 3], 'false,true,true,false': [2.343, 9, 21], 'false,true,false': [5.216, 187, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.605, 1, 1], 'false,false,false,true': [1.739, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.266, 2, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.038, 0, 10], 'false,true': [5.952, 201, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.695, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.047, 0, 9], 'true,true,false': [0.753, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.888, 51, 19], 'false,false,true': [0.031, 0, 8], 'false,false,false,true': [4.738, 132, 51], 'false,false,false,false': [2.324, 27, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [1.054, 1, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.64, 3, 33], 'true,false': [0.684, 118, 0], 'false,true': [0.022, 0, 5], 'false,false,true': [4.469, 108, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.026, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.265, 13, 82], 'false,true,false': [0.245, 175, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.478, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [1.287, 2, 9], 'true,false,true': [0.872, 1, 2], 'true,false,false': [0.116, 0, 5], 'false,true,true': [1.726, 35, 13], 'false,true,false,true': [0.468, 1, 8], 'false,true,false,false': [1.547, 56, 11], 'false,false,true': [0.017, 0, 5], 'false,false,false,true': [4.011, 109, 47], 'false,false,false,false': [1.369, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [5.27e-09, 0, 7], 'true,true,true,false': [0.115, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.1, 0, 3], 'false,true': [2.476, 91, 32], 'false,false,true': [0.015, 0, 5], 'false,false,false,true': [3.817, 99, 47], 'false,false,false,false': [1.358, 8, 4]}]
{'': [0.17561983471074338, 0.19990929705215474], 'false': [0.20999999999999988, 0.19349637194302716], 'false,true': [0.24000000000000005, 0.0], 'false,false': [0.19425154320987695, 0.1799307958477507], 'false,false,true': [0.18851212902373046, 0.19834710743801764], 'false,false,false': [0.1799307958477507, nan], 'true': [0.15999999999999973, 0.20408163265306106], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.052991016709111584, 0.20487303706476773], 'false': [0.11792942728935768, 0.20053565611908922], 'false,false': [0.19989041521479164, 0.21301775147928984], 'false,false,false': [0.21301775147928984, nan], 'false,false,true': [0.13129352452949408, 1.8786680491867425e-06], 'false,true': [0.11792942728935768, nan], 'true': [1.2688263138573217e-16, 0.08397370307259494]}
{'': [0.0002787731465072215, 0.16390403712531493], 'false': [0.1610561574794815, 0.21771574424745416], 'false,false': [0.21771574424745416, nan], 'false,false,true': [0.0, 0.19953908484655328], 'false,true': [0.14224418286643659, 0.1758730815950881], 'false,true,false': [0.12195628443409985, 4.718447854656915e-17], 'true': [0.00037289540415437597, 5.604478488948258e-05]}
{'': [0.09209861178796096, 0.13698659434262253], 'false': [0.13391722191103503, 0.17936666305685753], 'false,false': [0.18271262265992405, 0.1778894125167486], 'false,false,true': [nan, 0.18271262265992405], 'false,false,false': [0.1778894125167486, nan], 'false,true': [0.17874423262079817, 0.11105937695388496], 'false,true,true': [0.1439202434184815, 0.1830472837885279], 'true': [0.09624903158529007, 0.0]}
{'': [0.10018848401860599, 0.12799979377082413], 'false': [0.12519138570289598, 0.17211692733250697], 'false,false': [0.0, 0.16907278223066852], 'false,false,false': [0.16907278223066852, nan], 'true': [0.17821777279139456, 0.0001407311913009579], 'true,true': [0.17821777279139456, nan], 'false,false,true': [nan, 0.0]}
{'': [0.03410113970647079, 0.1232360640926772], 'false': [0.11914666686403978, 0.12426587229585422], 'false,false': [0.0001229499763064773, 0.12661204756130953], 'false,false,false': [0.12264689543014137, 0.14591403448158663], 'true': [0.03610367873138415, 0.0], 'true,true': [0.0002445629826340396, 0.08090039167739961], 'true,false': [nan, 0.0]}
{'': [0.10696284003926035, 0.1258069046289449], 'false': [9.415289029885976e-05, 0.1288343638871649], 'false,false': [0.1288343638871649, nan], 'true': [0.08476433117466639, 0.003965355687802465], 'true,true': [0.06557971045337577, 0.0746428975058021], 'true,true,false': [0.0, 0.07467951132743916], 'true,true,true': [0.06949434792406371, 0.0]}
{'': [0.00013783970631119161, 0.106334685969944], 'false': [0.10548216033851819, 0.11786580501703495], 'false,false': [0.0, 0.12142854448679051], 'false,false,false': [0.12142854448679051, nan], 'false,true': [0.11222333149767072, 0.0003428732862885983], 'false,true,true': [nan, 0.11222333149767112], 'true': [-7.93016446160826e-18, 6.711618240218264e-05], 'false,false,true': [0.0, nan]}
{'': [0.13918754409766074, 0.08280158517470439], 'true': [0.15066691188175477, 0.11992923665413212], 'true,false': [0.2532670298814781, 0.0027127554509467577], 'false': [0.05068239702595729, 0.10475607151548826], 'false,false': [5.54289995580548e-05, 0.10728079105865472], 'false,false,false': [0.1031544930954534, 0.15625366390501547], 'false,true': [0.062091975506393844, 0.04327776613346272], 'false,true,false': [0.0243585535004425, 0.035738620955358055]}
{'': [0.002196384777510288, 0.08024180809528057], 'false': [0.04984072331978746, 0.10111142478833894], 'false,false': [4.368093405502371e-05, 0.10397769919485594], 'false,false,false': [0.09978559836963329, 0.15378718507877415], 'true': [0.001757783608439444, 0.0033352396814504462], 'true,true': [0.001757783608439444, nan], 'true,true,true': [3.96508223080413e-18, 0.0022146417693752938]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 20.788
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( enzyme(J, K) )
%   | | | then return 0.03314893509951235;  // std dev = 2.403, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | | | else return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.17099809711068661;  // std dev = 6.203, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7319045176838225;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6560444481142935;  // std dev = 3.731, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | | else return -0.159535186897842;  // std dev = 0.113, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.264604292170049;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.052856025290268484;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4001025548301367;  // std dev = 0.362, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.4438434262586201;  // std dev = 0.333, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.0539909003616594;  // std dev = 3.008, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | | else return 0.16403028181955098;  // std dev = 2.959, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6108913770858343;  // std dev = 2.307, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.14052309745039182;  // std dev = 0.047, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.19647349513951692;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4967685947633043;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1879675383335078;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.4556853571512665;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.29972794688714316;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.46385023802265646;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.011278809584311933;  // std dev = 0.656, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, A) )
%   | then return -0.13932469656671775;  // std dev = 0.070, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6757752708758353;  // std dev = 0.289, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.14835337070195964;  // std dev = 0.199, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.35103501822314925;  // std dev = 0.799, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.08676346041021941;  // std dev = 5.241, 203.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=62 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.37298414736805297;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.20846179614290836;  // std dev = 0.350, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F), phenotype(A, G) )
%   | | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.32608640256665394;  // std dev = 3.305, 76.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=51 */
%   | | | else return -0.14439345826854558;  // std dev = 0.295, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.16703046934281393;  // std dev = 1.440, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.03512403205146516;  // std dev = 3.095, 100.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=26 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3445269928152165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.045191804138125236;  // std dev = 1.052, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.30612522137997916;  // std dev = 0.683, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2086746885885113;  // std dev = 0.252, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.35138035459069883;  // std dev = 0.135, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.27136430151257984;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(A, G), complex(A, H) )
%   | | then return 0.16910912643223802;  // std dev = 0.590, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12365995492360364;  // std dev = 0.147, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.022537208804356133;  // std dev = 2.832, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3239411910232445;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.03555144694134376;  // std dev = 1.972, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | | else return 0.07203779297925264;  // std dev = 4.183, 145.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2585224986865939;  // std dev = 0.050, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.26852177898051716;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.510913475082923;  // std dev = 1.085, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.16387772292690156;  // std dev = 0.078, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.08184636823225395;  // std dev = 0.933, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.47524855934351745;  // std dev = 0.297, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14285116611427584;  // std dev = 0.181, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.032242131932621265;  // std dev = 3.389, 106.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   | | | else return 0.16394012599421806;  // std dev = 1.283, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20659688578325608;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.08869869503883228;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22659635401615033;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.1697636963480546;  // std dev = 1.475, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.37352285204490626;  // std dev = 2.458, 74.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=66 */
%   | | else return -0.14135718304927125;  // std dev = 0.053, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.17981542837037712;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.012162366481550077;  // std dev = 0.422, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2262773245199307;  // std dev = 0.752, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(A, E), complex(D, F) )
%   | | then return 0.15839782637053226;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.16051294610519884;  // std dev = 0.646, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.18414413187579004;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3296731651401276;  // std dev = 0.828, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.08252018443985049;  // std dev = 1.393, 75.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=10 */
%   | | else return -0.08091939847877362;  // std dev = 0.203, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.08370593892331958;  // std dev = 0.743, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(M, A), location(A, N) )
%   | | | then return 0.05658604172705518;  // std dev = 2.999, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | | | else return -0.04740607896844519;  // std dev = 1.617, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.16513790274110102;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.15150347604352926;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3940173963562376;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.05709993603784044;  // std dev = 0.695, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1957536932570788;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.027540962820224356;  // std dev = 0.215, 119.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=29 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.20489980036732308;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.022420148843462898;  // std dev = 2.705, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | | | else return -0.0320230625871761;  // std dev = 2.361, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '25.608', 'seconds']
Refined model CLL: -0.18756


******************************************
Best model found
******************************************
Results 

CLL : -0.169031 

AUC ROC : 0.992531 

AUC PR : 0.410349 

Precision : 0.317614 

Recall : 0.864151 

F1 : 0.464503 

Total Learning Time : 20.788 

Total Inference Time : 125.22826814651489 

Total revision time: 169.61705691719055
Best scored revision CLL: -0.18756


Results 

CLL : -0.169031 

AUC ROC : 0.992531 

AUC PR : 0.410349 

Precision : 0.317614 

Recall : 0.864151 

F1 : 0.464503 

Total Learning Time : 174.8970707168579 

Total Inference Time : 125.22826814651489 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.348
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10814893509951237;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.14953966357633247;  // std dev = 5.584, 151.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.21000078695136415;  // std dev = 3.509, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6083623010998434;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8398015920903531;  // std dev = 0.014, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1597281349194983;  // std dev = 0.028, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( location(A, K) )
%   | | | then return 0.13640504889766444;  // std dev = 3.537, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.23061599234741012;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5644469591288815;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.575797612107128;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06714501298223895;  // std dev = 2.060, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6606675406149086;  // std dev = 1.013, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14293609853921313;  // std dev = 0.303, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1489248124623802;  // std dev = 3.586, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.32569891442764054;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.42590195862077357;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.44158298325953527;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3921485300827724;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30263307607994094;  // std dev = 0.789, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.06738120745644076;  // std dev = 4.146, 180.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return -0.08248641584169003;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5183549582264142;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.12335360037213755;  // std dev = 3.460, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.02038004905245193;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3211201129667201;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33297125884010326;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05595257933871672;  // std dev = 4.284, 188.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.4376998530391385;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3905735145679784;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03960600469289014;  // std dev = 3.717, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return -0.048543862625385195;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2529648536956812;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.34534268200714147;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3344331173358617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.27018951088086174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3024885228349907;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07758547987828768;  // std dev = 1.071, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2680556968350955;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06746987053065465;  // std dev = 3.931, 156.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=49 */
%   | | | else return 0.08609970778414618;  // std dev = 3.667, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23054154941335225;  // std dev = 0.117, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.25360436353430804;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21938776248259406;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6410346243333519;  // std dev = 0.719, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.20103479716293715;  // std dev = 0.550, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21870488923443138;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.051896586988574474;  // std dev = 3.323, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17075408202013612;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07271095277907176;  // std dev = 0.942, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4076833048828967;  // std dev = 1.497, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14432842045486247;  // std dev = 0.200, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2086742295300721;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.0044938221171028124;  // std dev = 3.163, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15784350993411786;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13354652060823835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.05074763728849524;  // std dev = 0.548, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08411655991217333;  // std dev = 0.464, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23510130370932036;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.013426205513435477;  // std dev = 1.223, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17298129864336378;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.010905535887376451;  // std dev = 2.764, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
%   | | | else return 0.03830056101785966;  // std dev = 3.065, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13422560911502462;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15904489192629637;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12737202639581868;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1556953496443021;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.025103884886004034;  // std dev = 1.408, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1496149490685939;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.011702171781409447;  // std dev = 2.748, 127.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
%   | | | else return 0.10158656266151186;  // std dev = 2.845, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.080', 'seconds']
Parameter learned model CLL:-0.179195 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.449, 24, 8], 'false,false,true,false': [5.584, 107, 44], 'false,false,false,true': [3.509, 35, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.014, 0, 52], 'false,false,true,false': [0.028, 138, 0], 'false,false,false,true': [3.537, 41, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.031, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.06, 25, 8], 'false,true,false,true': [1.013, 1, 48], 'false,true,false,false': [0.303, 131, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.586, 38, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.042, 0, 11], 'true,false': [0.002, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.789, 2, 3], 'false,true,false': [4.146, 128, 52], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.46, 35, 18], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.019, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 9], 'false,true': [4.284, 132, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.717, 50, 19], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.018, 0, 7], 'true,true,false': [0.062, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.071, 24, 3], 'false,false,true': [0.003, 0, 6], 'false,false,false,true': [3.931, 107, 49], 'false,false,false,false': [3.667, 41, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.117, 0, 12], 'true,true,true,false': [0.015, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.719, 0, 36], 'true,false': [0.55, 92, 0], 'false,true': [0.002, 0, 5], 'false,false,true': [3.323, 82, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.004, 0, 6], 'true,false': [0.942, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.497, 2, 56], 'false,true,false': [0.2, 147, 0], 'false,false,true,true': [0.013, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.163, 56, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.043, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.548, 1, 4], 'false,true,true': [0.464, 17, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.223, 42, 14], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.764, 93, 36], 'false,false,false,false': [3.065, 43, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.019, 0, 5], 'true,true,true,false': [0.006, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.043, 0, 4], 'false,true': [1.408, 58, 17], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.748, 91, 36], 'false,false,false,false': [2.845, 30, 20]}]
{'': [-2.5376526277146434e-16, 0.2160664819944604], 'false': [-1.4802973661668753e-16, 0.20950052512870096], 'false,false': [0.2034100749499843, 0.22592152199762144], 'false,false,false': [0.22805212620027385, 0.18750000000000003], 'false,false,true': [0.18750000000000014, 0.2064821718345696], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.06222222222222248, 0.2062534361457331], 'false': [7.401486830834377e-17, 0.20287033165527688], 'false,false': [0.1985993460802075, 0.21487937558816284], 'false,false,false': [0.21205709490432625, 0.24000000000000005], 'false,false,true': [3.958203002696337e-06, 5.5323182340209796e-06], 'true': [7.401486830834377e-17, 0.09876543209876548], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0001817395054694185, 0.15446810708164832], 'false': [0.13329463441897396, 0.22253056416877176], 'false,false': [0.22065313449630133, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.22165758712229502], 'false,true': [0.12856582438279504, 0.1341499164604675], 'false,true,false': [0.020940277190607107, 0.0007001643093474197], 'true': [0.00016491177348173144, 0.00013914430887507212]}
{'': [0.00016746856581509713, 0.1301130254676793], 'false': [0.09776723227920223, 0.22321852291812097], 'false,false': [0.24689119039823282, 0.2220513343516082], 'false,false,true': [0.25, 0.0], 'false,false,false': [0.2258760002967107, 0.18750000000000008], 'false,true': [0.10481082243863826, 0.09551355610966432], 'false,true,true': [0.0, 0.12443748417547704], 'true': [0.00015997555058213452, 1.740107078910628e-06]}
{'': [0.00012110769555230747, 0.12611076005237817], 'false': [0.0976021496769611, 0.19652450053855505], 'false,false': [0.0005552229444245882, 0.19801122624110856], 'false,false,false': [0.2002406359584746, 0.16000000000000003], 'false,false,true': [0.0, 0.0], 'true': [7.062678881952777e-05, 9.899205141133343e-05], 'true,true': [7.062678881952777e-05, nan]}
{'': [0.0020360051258041046, 0.12346078978092712], 'false': [0.042461181039962576, 0.13065482664873457], 'false,false': [1.264550659565063e-06, 0.1332406093296352], 'false,false,false': [0.09906146122296111, 0.22040007111333867], 'true': [0.002350089120118531, 0.0006878804734870014], 'true,true': [4.491075452213643e-05, 0.0009536383376584495], 'true,false': [0.001031810242586223, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1377858346324643, 0.0908363237152846], 'true': [0.04501391638463812, 0.0032899987218542566], 'false': [1.07310637647573e-06, 0.09355417705706306], 'false,false': [0.09355417705706306, nan], 'true,true': [0.0010559263321712356, 0.018642062419284556], 'true,true,false': [0.0, 0.014354868402470503], 'true,true,true': [0.0011360911832935898, 0.00011902860099911872]}
{'': [0.06152677007951773, 0.08851838642020084], 'false': [0.07294130092336001, 0.12937243810127724], 'false,false': [9.056871588259546e-05, 0.13160944850127346], 'false,false,false': [0.13160944850127346, nan], 'false,true': [0.038615284348764184, 0.00027230025191956616], 'true': [2.3861981970861126e-06, 0.09869804392384612], 'false,true,true': [nan, 0.03861528434876428], 'false,false,true': [9.056871588259546e-05, nan]}
{'': [0.022649419597310896, 0.07040304919218682], 'false': [0.02523548996527583, 0.08720240301749915], 'false,false': [7.516632760773412e-07, 0.08887846820788474], 'false,false,false': [0.0592066871573677, 0.14913073854055392], 'false,true': [0.011974586735792025, 0.027863055547501417], 'false,true,false': [0.0, 0.026728305265905934], 'true': [0.0002070750034585462, 0.05109044374011191], 'true,false': [0.0, 0.06016592330830155]}
{'': [0.00031877751919508, 0.07084777757726507], 'false': [0.026418012675386005, 0.08791280509853848], 'false,false': [5.943217967097069e-07, 0.09004836752014234], 'false,false,false': [0.059466320000698146, 0.1619298254345947], 'true': [0.00019722776730881074, 0.00045336908958144156], 'true,true': [0.00019430032877209777, 0.0], 'true,true,true': [7.233052006868912e-05, 1.2585343736613389e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 6.902
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( interaction(J, H), interaction(H, J) )
%   | | | then return -0.01027211753206666;  // std dev = 2.084, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | | else return 0.20189893509951234;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.2441138473802134;  // std dev = 3.675, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | | else return 0.12799020494078073;  // std dev = 4.983, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7518526675222027;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8373762826905669;  // std dev = 0.071, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15992944230108647;  // std dev = 0.141, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.09848952263210742;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.22115393991884852;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5608441807988545;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5717996689039944;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12236723895988601;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.1402511946377118;  // std dev = 1.946, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6773171316003551;  // std dev = 0.270, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1424782478393875;  // std dev = 0.095, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14533971174873273;  // std dev = 3.598, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else return 0.14346344931001484;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4264159725281073;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3881870045297965;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6145455048308393;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), complex(A, H) )
%   | | | then return 8.634730298566443E-4;  // std dev = 1.692, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | | else return 0.07579844601421713;  // std dev = 3.741, 139.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5192499657142624;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.03785714917298755;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.16608307048759482;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3175871623758756;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2303048005163943;  // std dev = 0.305, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.08443495189989669;  // std dev = 2.587, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | | else return -0.009195987572040912;  // std dev = 1.042, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.014670913829162567;  // std dev = 1.182, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.049467324689398975;  // std dev = 2.854, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3559629307977321;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.05861717467965683;  // std dev = 3.582, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.257575535301249;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.290870146300626;  // std dev = 0.048, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.27066181416924734;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then return -0.11760816424354686;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.1651070020457431;  // std dev = 0.632, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.05175124439753797;  // std dev = 0.483, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.28582405253242155;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04543912917082035;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.039467948907004564;  // std dev = 3.279, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   | | | else return 0.09764228233108238;  // std dev = 4.159, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2321413731451223;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.21552008850020887;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6301013303099972;  // std dev = 0.776, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19224468552757235;  // std dev = 0.070, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2673893854489666;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4975165373266329;  // std dev = 0.168, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.15960471936532955;  // std dev = 0.089, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.017567789854906906;  // std dev = 1.685, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.06970440129937562;  // std dev = 1.948, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17085044309487737;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.2746024366692408;  // std dev = 0.959, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20259791316818446;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.32312748466507;  // std dev = 0.845, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.43130671785823693;  // std dev = 0.590, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.13530167590370556;  // std dev = 0.031, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return -0.1342945650651529;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.13484940653258334;  // std dev = 1.888, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.02936358916944197;  // std dev = 2.388, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16330637678229096;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17684170979910901;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), location(G, H) )
%   | | | then return -0.07891217653710905;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.00985499652167663;  // std dev = 0.303, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.19500071828076276;  // std dev = 0.001, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.03131349296469918;  // std dev = 1.369, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20344294983025463;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return -0.02635751100493227;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.03255900658296703;  // std dev = 3.642, 145.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=51 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.15234608726969298;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.17327289268187365;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.13919595217900962;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(A, I), enzyme(G, I) )
%   | | | then return -0.12295761274014402;  // std dev = 0.577, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.00800595810739837;  // std dev = 1.209, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else return 0.11424370114549298;  // std dev = 0.410, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.17280700732747784;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return -0.057042283478561634;  // std dev = 1.648, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.02545949300194086;  // std dev = 3.530, 155.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=51 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '15.804', 'seconds']
Refined model CLL: -0.175171


******************************************
Best model found
******************************************
Results 

CLL : -0.191668 

AUC ROC : 0.984871 

AUC PR : 0.248373 

Precision : 0.140254 

Recall : 0.916968 

F1 : 0.243295 

Total Learning Time : 6.902 

Total Inference Time : 7.636449813842773 

Total revision time: 26.238343000411987
Best scored revision CLL: -0.175171


Results 

CLL : -0.191668 

AUC ROC : 0.984871 

AUC PR : 0.248373 

Precision : 0.140254 

Recall : 0.916968 

F1 : 0.243295 

Total Learning Time : 31.518356800079346 

Total Inference Time : 7.636449813842773 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.491
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06782635445435108;  // std dev = 3.205, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | | else return 0.16767274462332127;  // std dev = 5.189, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.623622637273613;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.748592982892723;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6182726872238382;  // std dev = 0.912, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7062353432320594;  // std dev = 2.638, 60.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=52 */
%   | | | else return -0.15926498917297352;  // std dev = 0.074, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( location(A, I) )
%   | | | then return 0.12313359979586387;  // std dev = 2.809, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.08778665478297898;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5110435461930015;  // std dev = 0.943, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.38997342861387746;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07918234310498083;  // std dev = 2.786, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6642482868617025;  // std dev = 1.382, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14521669501193726;  // std dev = 0.216, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6615753333085151;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.025043353524061906;  // std dev = 2.639, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05230733718575971;  // std dev = 1.520, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.41053636879618743;  // std dev = 0.974, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5607966968344258;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5107547906381177;  // std dev = 0.711, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.05297075203139247;  // std dev = 4.436, 190.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41629612239357694;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.055905292321714206;  // std dev = 0.817, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.13920407806300694;  // std dev = 2.703, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.06783639117110407;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3681640792325788;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2371276605942177;  // std dev = 0.938, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.06436916093818272;  // std dev = 4.566, 192.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.31988658106338763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.23096987567521907;  // std dev = 0.624, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.18530829328292578;  // std dev = 2.312, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.29608922756496314;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.29030200965693803;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4224419437787228;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25460904151751185;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4184465125298629;  // std dev = 0.207, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.036486832101753096;  // std dev = 1.262, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3347432725785093;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06419068057915105;  // std dev = 4.078, 157.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=46 */
%   | | | else return 0.08455205362524829;  // std dev = 2.963, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26199142778033074;  // std dev = 0.157, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2891571224735114;  // std dev = 0.210, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.25697927987464936;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5529284304982571;  // std dev = 1.336, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.17573649743704756;  // std dev = 0.530, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.27513119137115416;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05998494645063154;  // std dev = 3.399, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19048128757199745;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21370927897490333;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42331284651241474;  // std dev = 1.828, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.1446687283508972;  // std dev = 0.215, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.23707106316893012;  // std dev = 0.188, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03567951421013076;  // std dev = 2.420, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16106961724490604;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18414456598162632;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20917889740741077;  // std dev = 0.159, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.11581468247039801;  // std dev = 0.460, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.11596076390963889;  // std dev = 0.774, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.0072049063162739;  // std dev = 1.545, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.06417152070673116;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.006023163476550886;  // std dev = 2.954, 119.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=31 */
%   | | | else return 0.0013704444076866606;  // std dev = 2.466, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14204145486937636;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.13425916248151715;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13427143595039015;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16840287352608702;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19158197562338294;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.012905128946744886;  // std dev = 1.753, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1989023826303089;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.007240092057346994;  // std dev = 3.062, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | | else return -0.011645987567899523;  // std dev = 2.498, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.416', 'seconds']
Parameter learned model CLL:-0.179138 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.205, 49, 13], 'false,false,true,false': [5.189, 87, 39], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.042, 0, 7], 'false,true,true': [0.912, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.638, 8, 52], 'false,false,true,false': [0.074, 143, 0], 'false,false,false,true': [2.809, 28, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.943, 1, 11], 'true,false': [0.887, 1, 4], 'false,true,true': [2.786, 43, 14], 'false,true,false,true': [1.382, 2, 42], 'false,true,false,false': [0.216, 93, 0], 'false,false,true,true': [0.199, 0, 3], 'false,false,true,false': [2.639, 34, 9], 'false,false,false,true': [1.52, 10, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.974, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.711, 1, 6], 'false,true,false': [4.436, 141, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.817, 1, 1], 'false,false,false,true': [2.703, 23, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.027, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.938, 1, 6], 'false,true': [4.566, 136, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.624, 1, 2], 'false,false,false,true': [2.312, 14, 9], 'false,false,false,false': [1.225, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.001, 0, 9], 'true,true,false': [0.053, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.207, 0, 2], 'false,true': [1.262, 21, 5], 'false,false,true': [0.039, 0, 5], 'false,false,false,true': [4.078, 111, 46], 'false,false,false,false': [2.963, 29, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.157, 0, 13], 'true,true,true,false': [0.21, 0, 3], 'true,true,false,true': [0.019, 0, 3], 'true,true,false,false': [1.336, 2, 33], 'true,false': [0.53, 135, 0], 'false,true': [0.02, 0, 3], 'false,false,true': [3.399, 73, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.037, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.828, 3, 56], 'false,true,false': [0.215, 129, 0], 'false,false,true,true': [0.188, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.42, 27, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.029, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.159, 0, 5], 'false,true,true': [0.46, 21, 1], 'false,true,false,true': [0.774, 2, 6], 'false,true,false,false': [1.545, 45, 17], 'false,false,true': [0.877, 1, 3], 'false,false,false,true': [2.954, 88, 31], 'false,false,false,false': [2.466, 32, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.024, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.015, 0, 2], 'true,false': [0.132, 0, 3], 'false,true': [1.753, 68, 24], 'false,false,true': [0.016, 0, 3], 'false,false,false,true': [3.062, 79, 31], 'false,false,false,false': [2.498, 34, 12]}]
{'': [0.10380622837370206, 0.20881987360165297], 'false': [0.10937499999999978, 0.20029609639999382], 'false,false': [0.2000905387052973, 0.20118983234180587], 'false,false,false': [0.19834710743801665, 0.20999999999999988], 'false,false,true': [0.1657127991675333, 0.21371882086167862], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, 0.18750000000000006], 'true': [0.07100591715976314, 0.18750000000000006]}
{'': [0.059510991898603094, 0.19762837241335904], 'false': [0.10399158673791792, 0.19223365902121906], 'false,false': [0.19026899651154755, 0.20106079154729797], 'false,false,false': [0.20233541809991745, 0.18749999999999997], 'false,false,true': [0.11596812713014402, 3.8031173147449126e-05], 'false,true': [0.10399158673791792, nan], 'true': [0.09876543209876527, 0.0002561045081969558]}
{'': [0.10163565995596499, 0.15760292415774516], 'false': [0.15124946147840765, 0.17721199838122187], 'false,false': [0.17701145688529557, 0.17776330968803847], 'false,false,false': [0.17776330968803847, nan], 'false,false,true': [0.013245165149332383, 0.16201268856040713], 'false,true': [0.13618541470563753, 0.157145136296045], 'false,true,false': [0.04343531515969599, 0.0005033567699645523], 'true': [0.07411192443523133, 0.15734582047352086]}
{'': [0.05931084089192476, 0.12883453126571281], 'false': [0.11030488111208624, 0.2121558395001711], 'false,false': [0.199449013804358, 0.2124551864890603], 'false,false,false': [0.21485494902059651, 0.18749999999999997], 'false,false,true': [0.0, 0.33395725240877294], 'false,true': [0.0634262332104284, 0.10357841788863366], 'false,true,true': [0.0, 0.07217409962209086], 'true': [0.05931084089192476, nan]}
{'': [0.05926541224611043, 0.12791656099391846], 'false': [0.10858250034898807, 0.22138179755691315], 'false,false': [0.09871821705389498, 0.2380557785628765], 'false,false,false': [0.2323837567707461, 0.2500652337933101], 'false,false,true': [0.0, 0.1296477442809217], 'true': [8.121546774024029e-05, 0.12570094908970436], 'true,true': [8.121546774024029e-05, nan]}
{'': [0.007167962089958624, 0.11968755090081161], 'false': [0.06129687263303893, 0.12569271011236754], 'false,false': [0.0003080805554068311, 0.1270992996151069], 'false,false,false': [0.10592004538725336, 0.2041027549594008], 'true': [0.0039366386382036446, 0.02029231796784231], 'true,false': [0.0, 0.021490904649189124], 'true,true': [1.5457001007530064e-07, 0.0007053693526096194], 'true,false,true': [0.0, nan]}
{'': [0.09706131889912344, 0.10926180919915292], 'false': [0.0001270913021531502, 0.11111213428483549], 'false,false': [0.11111213428483549, nan], 'true': [0.053234134411496825, 0.0020800234597711147], 'true,true': [0.00442581593796075, 0.05337160080977634], 'true,true,false': [0.00011708453973257223, 0.05102159733648876], 'true,true,true': [0.0019004433466082759, 0.014769492505522397]}
{'': [0.00022621735328788676, 0.09764770997319532], 'false': [0.08748019765414468, 0.1429373333203722], 'false,false': [0.011760441730966084, 0.15013082372891814], 'false,false,false': [0.15013082372891814, nan], 'false,true': [0.05660685537577788, 0.000358110876494731], 'false,true,true': [nan, 0.056606855375777816], 'false,false,true': [0.011760441730966084, nan], 'true': [0.0, 0.00019699702620399963]}
{'': [0.0021089153472155023, 0.07408248290006905], 'false': [0.038656266372361865, 0.09336624380115295], 'false,false': [0.192160081282342, 0.0908280216363558], 'false,false,false': [0.0733068737313567, 0.13819895834299847], 'false,true': [0.009621590117163804, 0.04418210244439771], 'false,true,false': [0.07495955421869528, 0.03847712893623717], 'true': [8.27586531577773e-05, 0.004279311643940779], 'true,false': [0.0, 0.0050307210144062585]}
{'': [0.001571486013248316, 0.07504083762320266], 'false': [0.03340748898400077, 0.09900785769976418], 'false,false': [8.061453656967033e-05, 0.10017633919284333], 'false,false,false': [0.08524660138235238, 0.1356263781797096], 'true': [0.00017527491222521722, 0.005805481568827699], 'true,true': [6.570163412095986e-05, 0.00033006087169926146], 'true,true,false': [0.0, 0.0001067729638876587], 'true,true,true': [0.0, 0.00028005691075665487]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.036
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.012221435270858057;  // std dev = 2.468, 54.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=7 */
%   | | | else return 0.138970852907731;  // std dev = 5.430, 146.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7577310080286745;  // std dev = 0.117, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7398727907934263;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.792942654369596;  // std dev = 1.035, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.14864687597637202;  // std dev = 0.165, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.09941074066159175;  // std dev = 2.147, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.34037610543850894;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5178227304183789;  // std dev = 0.225, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return -0.055986808833469424;  // std dev = 1.469, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return 0.1128849682271996;  // std dev = 2.157, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5927878740843772;  // std dev = 1.688, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.1325065051802424;  // std dev = 0.114, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.641146472091415;  // std dev = 0.866, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.19429567732926178;  // std dev = 0.298, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.1619323625992737;  // std dev = 1.613, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.4559570017841192;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.4256345288672295;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.084006645993192;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.31665102387756816;  // std dev = 0.873, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.377896431685396;  // std dev = 0.329, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return 0.03446934210397536;  // std dev = 0.299, 199.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.510010140161717;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.0471515250515846;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.12742780895119077;  // std dev = 1.336, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.024780257792450786;  // std dev = 2.258, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32622583424017876;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4207477594964269;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( complex(F, G) )
%   | | | then return -0.062479437264114035;  // std dev = 0.943, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.12685234710391197;  // std dev = 0.783, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.2310767137142303;  // std dev = 1.617, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.08075981800388231;  // std dev = 3.549, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.41126826833016256;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return 0.10184026382309662;  // std dev = 2.357, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return -0.1348858548951932;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.31648013555975163;  // std dev = 0.082, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.2929224403703783;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.07603335565134522;  // std dev = 0.622, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.09032507755906542;  // std dev = 0.138, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.22604486955679307;  // std dev = 0.693, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.02677993483710443;  // std dev = 0.525, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.16683072459027457;  // std dev = 0.888, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.010988378403111718;  // std dev = 2.254, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return 0.08214028555634958;  // std dev = 4.027, 143.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26024514173052044;  // std dev = 0.070, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.23497235978123132;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5181038270555508;  // std dev = 1.029, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.15849525862452876;  // std dev = 0.074, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.07345648412482075;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4648526876698984;  // std dev = 0.326, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.16666909830665796;  // std dev = 0.410, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.11980942358104026;  // std dev = 2.297, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return -0.04491702367686126;  // std dev = 0.943, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.16464973478861078;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.15216797085950431;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then return -0.13487020467235256;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.26673524369256774;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(I, A) )
%   | then return 0.012576232113498027;  // std dev = 0.258, 198.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=56 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(K, L), enzyme(K, M) )
%   | | | then return -0.017429970069925485;  // std dev = 1.056, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.150244049537494;  // std dev = 1.492, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( complex(A, N) )
%   | | | then return -0.07914057959128538;  // std dev = 0.640, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.028297257423561706;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16901442314425463;  // std dev = 0.178, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.06666365046188508;  // std dev = 0.762, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.16009835180537146;  // std dev = 0.903, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.0751722050581911;  // std dev = 0.429, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.03733715565083863;  // std dev = 1.242, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( location(A, H) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.07437121214806422;  // std dev = 1.488, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.017072885341746887;  // std dev = 3.416, 157.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=49 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.0459440182522364;  // std dev = 0.967, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.08467173089348859;  // std dev = 0.610, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1457166633522915;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.2542988303280541;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2432743645431332;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.17672646529453576;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.005110288009495612;  // std dev = 1.834, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | | else return -0.07570822298377525;  // std dev = 0.682, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2506409517933115;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.08633333812574531;  // std dev = 1.822, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return -0.017580738720152596;  // std dev = 3.195, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.364', 'seconds']
Refined model CLL: -0.179695


******************************************
Best model found
******************************************
Results 

CLL : -0.187801 

AUC ROC : 0.98359 

AUC PR : 0.226066 

Precision : 0.146341 

Recall : 0.784452 

F1 : 0.246667 

Total Learning Time : 8.036 

Total Inference Time : 7.70856499671936 

Total revision time: 28.603202869415284
Best scored revision CLL: -0.179138


Results 

CLL : -0.187801 

AUC ROC : 0.98359 

AUC PR : 0.226066 

Precision : 0.146341 

Recall : 0.784452 

F1 : 0.246667 

Total Learning Time : 33.88321666908264 

Total Inference Time : 7.70856499671936 

