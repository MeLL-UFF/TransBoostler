Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.136
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1914822684328456;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1665388245648816;  // std dev = 5.416, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | | else return 0.19761227089256528;  // std dev = 5.228, 118.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1638242565351469;  // std dev = 4.743, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | | else return 0.13498808745864235;  // std dev = 5.909, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12696307959240527;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.094060300090991;  // std dev = 6.792, 215.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10982501124699275;  // std dev = 7.548, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07498953446885628;  // std dev = 7.632, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.724553231639566;  // std dev = 0.001, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2754415530854268;  // std dev = 0.002, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03284677134141849;  // std dev = 4.110, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | else return 0.10381004036223572;  // std dev = 4.189, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.023326428362105616;  // std dev = 3.840, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | | | else return 0.016919356381903953;  // std dev = 6.048, 174.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.051595744068417375;  // std dev = 6.943, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.034558815294882646;  // std dev = 6.980, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.433', 'seconds']
Parameter learned model CLL:-0.332798 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.416, 88, 44], 'false,false,false,false': [5.228, 75, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.743, 63, 35], 'false,false,false,false': [5.909, 106, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.62, 38, 20], 'false,false,false,false': [6.792, 148, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.548, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.632, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.001, 0, 35], 'true,false': [0.002, 70, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.11, 57, 24], 'false,false,false,false': [4.189, 47, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.84, 76, 35], 'false,false,false,false': [6.048, 122, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.943, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.98, 171, 87]}]
{'': [nan, 0.2222222222222231], 'false': [nan, 0.2222222222222231], 'false,false': [nan, 0.2222222222222231], 'false,false,false': [nan, 0.2222222222222231]}
{'': [nan, 0.22689599999999877], 'false': [nan, 0.22689599999999968], 'false,false': [nan, 0.22689599999999877], 'false,false,false': [0.22222222222222224, 0.23161447859810488]}
{'': [nan, 0.2244778540567477], 'false': [nan, 0.2244778540567477], 'false,false': [nan, 0.22447785405674836], 'false,false,false': [0.22959760255097866, 0.22098399582253317]}
{'': [nan, 0.21717776446764891], 'false': [nan, 0.21717776446764891], 'false,false': [nan, 0.2171777644676497], 'false,false,false': [0.22592152199762247, 0.21458898194479092]}
{'': [nan, 0.22610058338758054], 'false': [nan, 0.22610058338758054], 'false,false': [nan, 0.22610058338758066], 'false,false,false': [nan, 0.22610058338758066]}
{'': [nan, 0.22146433202170612], 'false': [nan, 0.22146433202170612], 'false,false': [nan, 0.22146433202170604], 'false,false,false': [nan, 0.2214643320217065]}
{'': [0.22221993713036942, 0.2219978247815442], 'true': [3.263891191604021e-08, 3.288370407718487e-08], 'false': [nan, 0.2219978247815442], 'false,false': [nan, 0.2219978247815442], 'false,false,false': [0.20850480109739386, 0.2339555555555558], 'true,true': [nan, 3.263891191604021e-08], 'true,true,false': [nan, 3.263891191604021e-08]}
{'': [nan, 0.18008828473687666], 'false': [nan, 0.18008828473687666], 'false,false': [nan, 0.18008828473687694], 'false,false,false': [0.13281626442544373, 0.21022858543897321]}
{'': [nan, 0.18979778343986647], 'false': [nan, 0.18979778343986664], 'false,false': [nan, 0.18979778343986664], 'false,false,false': [nan, 0.18979778343986664]}
{'': [nan, 0.1888638563022696], 'false': [nan, 0.1888638563022696], 'false,false': [nan, 0.1888638563022695], 'false,false,false': [nan, 0.1888638563022695]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 11.236
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), phenotype(C, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.7956489350995123;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.12575456890232786;  // std dev = 0.443, 142.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=38 */
%   | else if ( interaction(A, G) )
%   | | then return 0.08314893509951238;  // std dev = 0.418, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7581489350995123;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), interaction(C, A) )
%   | then return 0.7319131893798131;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8346064530393067;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.15571214161721575;  // std dev = 0.010, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.25897330732480706;  // std dev = 1.896, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.10454655812126798;  // std dev = 2.779, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6991229045590827;  // std dev = 1.612, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | | else return -0.1632252720254674;  // std dev = 0.188, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.2728102495347289;  // std dev = 2.121, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.16987601937160202;  // std dev = 3.792, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6204004962321276;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(C, E), complex(A, E) )
%   | | then if ( interaction(C, C), enzyme(A, F) )
%   | | | then return 0.14074163434606346;  // std dev = 0.701, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12082026639432102;  // std dev = 0.963, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( interaction(C, A), phenotype(A, G) )
%   | | | then return -0.011589788687200222;  // std dev = 1.644, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.08359322862264786;  // std dev = 3.376, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.688514613375307;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, I), interaction(H, H) )
%   | | | then return 0.05372051617594859;  // std dev = 2.059, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.14398619837721852;  // std dev = 4.659, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | else return 0.3414213378890034;  // std dev = 0.970, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), complex(F, D) )
%   | | then return 0.4873223018555581;  // std dev = 0.187, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6832722808231808;  // std dev = 0.076, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.17230231283411884;  // std dev = 0.044, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(G, H) )
%   | | then return 0.45423308705243226;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5954163670454337;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, K), interaction(I, K) )
%   | | | then return -0.07570861780731267;  // std dev = 1.412, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.05711082365431305;  // std dev = 4.011, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.013676446224911534;  // std dev = 1.879, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.13661268616646824;  // std dev = 3.437, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3488513275335075;  // std dev = 0.162, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, D), phenotype(A, E) )
%   | | then return -0.07513313693016223;  // std dev = 0.139, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.42565451910611696;  // std dev = 0.173, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1149302604610831;  // std dev = 4.460, 113.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.3289369446660562;  // std dev = 1.088, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(G, G) )
%   | | | then return -0.11326701552573722;  // std dev = 0.863, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.06386620793581066;  // std dev = 3.567, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.02961522038047356;  // std dev = 0.345, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return -0.04558590082205303;  // std dev = 0.384, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.30018360416919965;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.03740267812429378;  // std dev = 0.343, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   else if ( interaction(E, A), enzyme(A, F) )
%   | then if ( complex(E, G), complex(A, H) )
%   | | then return 0.3914892591391738;  // std dev = 1.122, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(E, I), interaction(A, E) )
%   | | | then return 0.3448314712853569;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15380873392196162;  // std dev = 2.202, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( complex(K, J) )
%   | | | then return -0.04797413744462671;  // std dev = 1.046, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.07069326011147446;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.12694171797110043;  // std dev = 3.455, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | | else return 0.41926695286440196;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4975810855571844;  // std dev = 0.158, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.19556571044906762;  // std dev = 0.079, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( phenotype(A, G), location(E, H) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.23058110444940833;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.02994594733975185;  // std dev = 2.049, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.041213620470286316;  // std dev = 1.860, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.23006809512832485;  // std dev = 2.167, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then return -0.0853814416635085;  // std dev = 0.304, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(N, A), location(N, P) )
%   | | | then return 0.07569414403093774;  // std dev = 2.840, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return -0.03114780415079485;  // std dev = 1.187, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), interaction(C, A) )
%   | then return 0.14325628120905715;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3002976323087682;  // std dev = 0.068, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.29686539143567997;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.13661589391455792;  // std dev = 0.866, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.0023693577527823025;  // std dev = 1.541, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4243559547237421;  // std dev = 0.686, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1836902392818365;  // std dev = 0.553, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.24348526481164412;  // std dev = 1.675, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.06220074515880354;  // std dev = 4.231, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( location(A, E), interaction(A, C) )
%   | then if ( location(A, D) )
%   | | then return -0.018964005066593473;  // std dev = 0.273, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else return -0.17690561583627515;  // std dev = 0.314, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(F, C), enzyme(C, G) )
%   | | then if ( complex(F, H), interaction(A, I) )
%   | | | then return 0.6454576220073833;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12472992175169224;  // std dev = 1.692, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2610201178701297;  // std dev = 0.145, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.02432178136278826;  // std dev = 4.372, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   else if ( interaction(A, K), complex(K, L) )
%   | then return -0.035972301658978266;  // std dev = 0.270, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( phenotype(A, M) )
%   | | then return -0.12086731349014743;  // std dev = 0.241, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.237241540365822;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then return 0.03992945577728019;  // std dev = 0.227, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( phenotype(C, F) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.025613802288229646;  // std dev = 1.454, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.10249177704398675;  // std dev = 2.008, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else return 0.012979878314870082;  // std dev = 0.320, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   else if ( interaction(A, G), location(A, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.338860228970419;  // std dev = 0.216, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.008798824752200382;  // std dev = 0.312, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then return -0.03131233590953051;  // std dev = 0.162, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.09178240795687906;  // std dev = 2.046, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return -0.0026859188893260085;  // std dev = 3.003, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.886', 'seconds']
Refined model CLL: -0.261226


******************************************
Best model found
******************************************
Results 

CLL : -0.256649 

AUC ROC : 0.959874 

AUC PR : 0.276227 

Precision : 0.292969 

Recall : 0.531915 

F1 : 0.377834 

Total Learning Time : 11.236 

Total Inference Time : 5.469560146331787 

Total revision time: 19.561098119735718
Best scored revision CLL: -0.261226


Results 

CLL : -0.256649 

AUC ROC : 0.959874 

AUC PR : 0.276227 

Precision : 0.292969 

Recall : 0.531915 

F1 : 0.377834 

Total Learning Time : 19.57507731628418 

Total Inference Time : 5.469560146331787 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.194
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20025419825740773;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17185213546876954;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
%   | | | else return 0.15496422088264522;  // std dev = 5.933, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1735804489489301;  // std dev = 5.097, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
%   | | | else return 0.15439735124795512;  // std dev = 6.418, 182.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12744319699401177;  // std dev = 4.344, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return 0.12996951949773264;  // std dev = 6.998, 216.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08558054258644725;  // std dev = 8.367, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04330300581336685;  // std dev = 8.527, 346.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7314869713763476;  // std dev = 0.008, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2684550846107436;  // std dev = 0.012, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06726118976814913;  // std dev = 3.916, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | | else return 0.06508148822588615;  // std dev = 5.185, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0033543914956273607;  // std dev = 4.286, 143.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=41 */
%   | | | else return 0.09144625152467899;  // std dev = 6.308, 171.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02035813688425644;  // std dev = 7.805, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02426584780502269;  // std dev = 7.749, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.194', 'seconds']
Parameter learned model CLL:-0.327128 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.859, 101, 52], 'false,false,false,false': [5.933, 109, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.097, 71, 41], 'false,false,false,false': [6.418, 119, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.344, 54, 29], 'false,false,false,false': [6.998, 141, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.367, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.527, 242, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.008, 0, 41], 'true,false': [0.012, 83, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.916, 46, 23], 'false,false,false,false': [5.185, 82, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.286, 102, 41], 'false,false,false,false': [6.308, 108, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.805, 227, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.749, 218, 104]}]
{'': [nan, 0.22506925207756448], 'false': [nan, 0.22506925207756284], 'false,false': [nan, 0.22506925207756448], 'false,false,false': [nan, 0.22506925207756284]}
{'': [nan, 0.22151000040569854], 'false': [nan, 0.2215100004056976], 'false,false': [nan, 0.22151000040569854], 'false,false,false': [0.22435815284719807, 0.2186644033795018]}
{'': [nan, 0.22855339439159553], 'false': [nan, 0.22855339439159553], 'false,false': [nan, 0.2285533943915936], 'false,false,false': [0.23194101510971168, 0.22632851758084643]}
{'': [nan, 0.22687622856172307], 'false': [nan, 0.22687622856172307], 'false,false': [nan, 0.2268762285617242], 'false,false,false': [0.22731891421105996, 0.22670435082527712]}
{'': [nan, 0.2201396192389721], 'false': [nan, 0.2201396192389721], 'false,false': [nan, 0.22013961923897174], 'false,false,false': [nan, 0.22013961923897174]}
{'': [nan, 0.21015822336040177], 'false': [nan, 0.21015822336040177], 'false,false': [nan, 0.21015822336040074], 'false,false,false': [nan, 0.21015822336040135]}
{'': [0.22129497688021724, 0.22104077817575038], 'true': [1.6426933032260133e-06, 1.7070135754286547e-06], 'false': [nan, 0.22104077817575038], 'false,false': [nan, 0.22104077817575038], 'false,false,false': [0.22222222222222257, 0.2203708680462243], 'true,true': [nan, 1.6426933032260133e-06], 'true,true,false': [nan, 1.6426933032260133e-06]}
{'': [nan, 0.18714085968079364], 'false': [nan, 0.18714085968079364], 'false,false': [nan, 0.1871408596807929], 'false,false,false': [0.12845493736677682, 0.23268329840437366]}
{'': [nan, 0.18405037268563068], 'false': [nan, 0.18405037268562982], 'false,false': [nan, 0.18405037268562982], 'false,false,false': [nan, 0.18405037268562982]}
{'': [nan, 0.18647959363758654], 'false': [nan, 0.18647959363758654], 'false,false': [nan, 0.18647959363758684], 'false,false,false': [nan, 0.18647959363758684]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.018
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7993254056877476;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( location(D, G), location(F, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.021161409728073902;  // std dev = 2.481, 58.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=7 */
%   | | | else return 0.2867203636709407;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.11188027838309446;  // std dev = 3.562, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | | else return 0.17787682625597506;  // std dev = 5.654, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6200800801353151;  // std dev = 0.314, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, A), interaction(F, D) )
%   | | | then return 0.8120085298679977;  // std dev = 0.243, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.04218987928346415;  // std dev = 0.931, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.15085664666803486;  // std dev = 0.065, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0.07026823928828617;  // std dev = 3.189, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.07352525466573472;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, I), enzyme(A, J) )
%   | | | then return 0.11169383873487689;  // std dev = 3.302, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.18673959961580258;  // std dev = 4.699, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then if ( enzyme(A, D), phenotype(A, E) )
%   | | then return 0.3189509244824003;  // std dev = 0.674, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6219705204843734;  // std dev = 0.054, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G), complex(C, H) )
%   | | | then return 0.6768398667820232;  // std dev = 0.387, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.29516075336600145;  // std dev = 1.353, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.13538401458364277;  // std dev = 0.283, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0.08263861925400555;  // std dev = 6.438, 217.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=58 */
%   else if ( complex(A, I), phenotype(A, J) )
%   | then return 0.3281040949423609;  // std dev = 0.987, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return 0.0589205504035497;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.2775368384911175;  // std dev = 0.897, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then return 0.4579681753930131;  // std dev = 0.200, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | else return 0.04813610781091073;  // std dev = 0.365, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else return -0.03586261079817999;  // std dev = 0.300, 113.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=15 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.6520393420120298;  // std dev = 0.309, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.1986358943339385;  // std dev = 0.025, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), interaction(J, A) )
%   | | | then return 0.06803755900205924;  // std dev = 2.556, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.1871689252870546;  // std dev = 3.988, 67.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=26 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.4785294994577836;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19075602565661054;  // std dev = 2.248, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.35202566718743017;  // std dev = 0.084, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, D), interaction(D, C) )
%   | | then return 0.528629936342129;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.43560366433577036;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then return 0.5708879582894348;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2894119388558036;  // std dev = 0.583, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11278767798022814;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.02643857085504285;  // std dev = 2.053, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return -0.022331258559654704;  // std dev = 1.704, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.11670431589991972;  // std dev = 6.040, 168.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=57 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( complex(E, C) )
%   | | then return 0.4881147240902307;  // std dev = 0.186, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.1861913581180774;  // std dev = 0.069, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.17702109408240727;  // std dev = 0.065, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B), enzyme(A, G) )
%   | | then return -0.19437380624546832;  // std dev = 1.032, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.07188344771992737;  // std dev = 0.246, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.31342271031830454;  // std dev = 1.452, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09935494005980688;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.348596597910509;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0748556607971745;  // std dev = 5.318, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then return 0.3160765024975691;  // std dev = 0.128, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.2193277816318678;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6677937782508838;  // std dev = 0.154, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1569386349928715;  // std dev = 0.058, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.33175107907795987;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), interaction(I, K) )
%   | | | then return 0.024196611485412252;  // std dev = 5.024, 148.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=43 */
%   | | | else return 0.1938237863222684;  // std dev = 1.536, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.07343270546584071;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.18121214841907524;  // std dev = 2.024, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then if ( phenotype(C, D) )
%   | | then return 0.1818098923094343;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.318398729406349;  // std dev = 0.635, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(C, F), enzyme(A, G) )
%   | | then return 0.28449182735148654;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19719417703928083;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(A, I), interaction(I, A) )
%   | | then return -0.018201648727800224;  // std dev = 0.452, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.24658072784429744;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.0831185861168032;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return -0.027185056220079964;  // std dev = 2.101, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | | else return 0.024700242567658154;  // std dev = 5.936, 230.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=70 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( complex(A, E), phenotype(C, D) )
%   | then return -0.009518510940624973;  // std dev = 0.196, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | else if ( interaction(C, C), interaction(A, F) )
%   | | then return -0.05207507824625924;  // std dev = 0.226, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( enzyme(C, G), phenotype(C, H) )
%   | | | then return 0.13754272476756224;  // std dev = 2.474, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.03572411094500676;  // std dev = 3.426, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.17349280686900023;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return -0.11764734864381243;  // std dev = 1.145, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.031205471692397173;  // std dev = 3.071, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.09963693329724066;  // std dev = 1.591, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return -0.03576881001190487;  // std dev = 2.322, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( phenotype(D, E), interaction(F, D) )
%   | then return 0.008704985026454292;  // std dev = 0.344, 250.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=79 */
%   | else if ( interaction(D, D), phenotype(A, G) )
%   | | then if ( location(H, C), recursion_proteinclass(H, B) )
%   | | | then return 0.07690271246107483;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.2800292690995569;  // std dev = 0.221, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.04534664933404609;  // std dev = 0.350, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then if ( interaction(K, A) )
%   | | then return 0.23688579054589842;  // std dev = 0.924, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.35225145181121525;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then return 0.04718195235630936;  // std dev = 1.047, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.0689677835345042;  // std dev = 1.147, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.18583795154940547;  // std dev = 1.000, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.473', 'seconds']
Refined model CLL: -0.251562


******************************************
Best model found
******************************************
Results 

CLL : -0.268737 

AUC ROC : 0.882547 

AUC PR : 0.270683 

Precision : 0.343537 

Recall : 0.381132 

F1 : 0.36136 

Total Learning Time : 14.018 

Total Inference Time : 11.803521871566772 

Total revision time: 28.980982410430908
Best scored revision CLL: -0.251562


Results 

CLL : -0.268737 

AUC ROC : 0.882547 

AUC PR : 0.270683 

Precision : 0.343537 

Recall : 0.381132 

F1 : 0.36136 

Total Learning Time : 28.99496160697937 

Total Inference Time : 11.803521871566772 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.113
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18789803904216476;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16273526963836182;  // std dev = 5.850, 155.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=51 */
%   | | | else return 0.19022475070428047;  // std dev = 5.136, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14665512131140276;  // std dev = 5.395, 130.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=44 */
%   | | | else return 0.10784677429801186;  // std dev = 5.797, 160.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.18629098212787323;  // std dev = 3.950, 65.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=26 */
%   | | | else return 0.13023522184479425;  // std dev = 6.589, 193.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09642913462918322;  // std dev = 7.828, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0730068961488959;  // std dev = 7.857, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7228467769624745;  // std dev = 0.019, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2763079666582134;  // std dev = 0.025, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.033324196651299785;  // std dev = 4.201, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | | | else return 0.03257368010900905;  // std dev = 4.016, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05076211968174519;  // std dev = 4.185, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   | | | else return 0.0586835011870222;  // std dev = 5.679, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04226296867669234;  // std dev = 7.057, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040584936123240004;  // std dev = 6.993, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.515', 'seconds']
Parameter learned model CLL:-0.327537 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.853, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.85, 104, 51], 'false,false,false,false': [5.136, 74, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.395, 86, 44], 'false,false,false,false': [5.797, 112, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.95, 39, 26], 'false,false,false,false': [6.589, 127, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.828, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.857, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.019, 0, 44], 'true,false': [0.025, 79, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.201, 60, 25], 'false,false,false,false': [4.016, 54, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.185, 81, 44], 'false,false,false,false': [5.679, 98, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.057, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.993, 176, 92]}]
{'': [nan, 0.22101463239167143], 'false': [nan, 0.2210146323916711], 'false,false': [nan, 0.22101463239167143], 'false,false,false': [nan, 0.2210146323916711]}
{'': [nan, 0.22463648834018946], 'false': [nan, 0.2246364883401929], 'false,false': [nan, 0.22463648834018946], 'false,false,false': [0.22077003121748343, 0.22941398865784418]}
{'': [nan, 0.2166015527644645], 'false': [nan, 0.2166015527644645], 'false,false': [nan, 0.21660155276446352], 'false,false,false': [0.2238834309309758, 0.21000988394821185]}
{'': [nan, 0.229331904425622], 'false': [nan, 0.229331904425622], 'false,false': [nan, 0.22933190442562218], 'false,false,false': [0.24000000000000007, 0.22494737080278612]}
{'': [nan, 0.22282141751105095], 'false': [nan, 0.22282141751105095], 'false,false': [nan, 0.22282141751105008], 'false,false,false': [nan, 0.22282141751105008]}
{'': [nan, 0.2205010515218371], 'false': [nan, 0.2205010515218371], 'false,false': [nan, 0.22050105152183624], 'false,false,false': [nan, 0.22050105152183683]}
{'': [0.22937717978511057, 0.2084997019161002], 'true': [7.898610750426114e-06, 8.062630370464649e-06], 'false': [nan, 0.2084997019161002], 'false,false': [nan, 0.2084997019161002], 'false,false,false': [0.20761245674740497, 0.2094788328554562], 'true,true': [nan, 7.898610750426114e-06], 'true,true,false': [nan, 7.898610750426114e-06]}
{'': [nan, 0.18365532179445515], 'false': [nan, 0.18365532179445515], 'false,false': [nan, 0.1836553217944553], 'false,false,false': [0.14014655630340261, 0.220877034244767]}
{'': [nan, 0.18309068793706032], 'false': [nan, 0.1830906879370591], 'false,false': [nan, 0.1830906879370591], 'false,false,false': [nan, 0.1830906879370591]}
{'': [nan, 0.18246201563540335], 'false': [nan, 0.18246201563540335], 'false,false': [nan, 0.1824620156354048], 'false,false,false': [nan, 0.1824620156354048]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.851
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, A) )
%   | | | then return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.1544452313958072;  // std dev = 4.745, 108.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=32 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.17243464938522662;  // std dev = 2.746, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.28672036367094084;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7279602655729309;  // std dev = 0.114, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.042540418011821526;  // std dev = 0.935, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.15104416948814314;  // std dev = 0.068, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(H, D) )
%   | | | then return 0.1902135513189542;  // std dev = 1.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.08828935927862702;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( phenotype(I, J) )
%   | | | then return -0.13835114462263054;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.10814994064073596;  // std dev = 1.720, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14391875699594286;  // std dev = 6.284, 195.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=61 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5647899059613363;  // std dev = 0.155, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.6448101509749926;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0.017987361351548027;  // std dev = 2.834, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | | else return 0.12540615267775315;  // std dev = 4.888, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then return 0.4059281913485855;  // std dev = 1.002, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.11391510988199367;  // std dev = 1.772, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.1916674756513168;  // std dev = 3.055, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.41316440705940977;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(D, A), complex(A, E) )
%   | | then return 0.44444104135843254;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5141185432437767;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13511207147562923;  // std dev = 0.090, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( enzyme(A, G), complex(A, H) )
%   | | | then return -0.059199376370424016;  // std dev = 0.714, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.1286964083271512;  // std dev = 0.748, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.4421865926792868;  // std dev = 0.159, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.06724757777368015;  // std dev = 3.157, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.1356895654029305;  // std dev = 5.746, 154.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( location(C, D) )
%   | then return 0.004337015740849549;  // std dev = 0.217, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( location(A, E) )
%   | | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.01656578007868381;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.18437660218342256;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07474472224621591;  // std dev = 0.430, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.6481467631759589;  // std dev = 0.163, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.1858578709033679;  // std dev = 0.035, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4085827703225332;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.034340151235047085;  // std dev = 2.953, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.0848251021604844;  // std dev = 5.169, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2990360898721724;  // std dev = 0.042, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(D, F), interaction(F, F) )
%   | | | then return -0.1238006103402553;  // std dev = 0.786, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.03883163844610119;  // std dev = 1.599, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( phenotype(A, G), complex(D, H) )
%   | | | then return 0.15786734561086502;  // std dev = 1.480, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.030411910344485767;  // std dev = 2.855, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.623363034086379;  // std dev = 0.389, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17241458862433667;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.05208689982061908;  // std dev = 3.732, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | | | else return 0.11532686125556764;  // std dev = 3.511, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4793890958359279;  // std dev = 0.187, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.17625364282274458;  // std dev = 0.037, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.3309125825652092;  // std dev = 0.165, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(E, E), complex(E, H) )
%   | | | then return 0.09943481023727659;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.08845604545090768;  // std dev = 1.685, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(A, K), enzyme(I, K) )
%   | | | then return -0.02248095141916684;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3885808177917011;  // std dev = 1.644, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.024058666855543004;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.0754203682484698;  // std dev = 4.018, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.16634316418157855;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), complex(C, G) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return -0.0882734568725625;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.013745792462405235;  // std dev = 1.932, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return -0.10604438031136071;  // std dev = 0.199, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.21166591491932948;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B), interaction(A, L) )
%   | | | then return 0.4077571467747087;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.026441743904378326;  // std dev = 4.010, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.21368022999933528;  // std dev = 1.530, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.05407292388776746;  // std dev = 3.576, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, D) )
%   | then return 0.029668164254494922;  // std dev = 0.239, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | else if ( phenotype(C, E), interaction(F, C) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.10303334389211832;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3090079596620386;  // std dev = 1.317, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( phenotype(A, H), interaction(I, C) )
%   | | | then return 0.13526580945338854;  // std dev = 1.122, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.05221007426997095;  // std dev = 2.203, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.198947581507279;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then return -0.06257634159082626;  // std dev = 0.309, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return -0.06392094835898654;  // std dev = 1.586, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.04582146202983702;  // std dev = 3.768, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.15408819751507344;  // std dev = 0.134, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.5737297856964542;  // std dev = 1.030, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.22076862254457535;  // std dev = 0.336, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.3120896296198075;  // std dev = 2.854, 57.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | else if ( complex(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.08614693165531895;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1559177063333003;  // std dev = 0.259, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return -0.20299125426459877;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.2911333929445339;  // std dev = 0.384, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.16408992615326512;  // std dev = 0.378, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '59.465', 'seconds']
Refined model CLL: -0.23269


******************************************
Best model found
******************************************
Results 

CLL : -0.231381 

AUC ROC : 0.969338 

AUC PR : 0.225012 

Precision : 0.247154 

Recall : 0.548736 

F1 : 0.340807 

Total Learning Time : 10.851 

Total Inference Time : 8.496262788772583 

Total revision time: 22.223646654129027
Best scored revision CLL: -0.23269


Results 

CLL : -0.231381 

AUC ROC : 0.969338 

AUC PR : 0.225012 

Precision : 0.247154 

Recall : 0.548736 

F1 : 0.340807 

Total Learning Time : 22.23762585067749 

Total Inference Time : 8.496262788772583 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.119
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19019526714584478;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14476151989356717;  // std dev = 5.984, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
%   | | | else return 0.12903644829762878;  // std dev = 4.894, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10471503488244716;  // std dev = 4.454, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   | | | else return 0.1446856960993499;  // std dev = 6.228, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13509874436096583;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.10298266406216171;  // std dev = 6.792, 215.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1411343875281855;  // std dev = 7.377, 234.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06526959964779606;  // std dev = 7.664, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7031219743481585;  // std dev = 0.986, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.26181875961299056;  // std dev = 0.034, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0445308609322945;  // std dev = 4.767, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | | | else return 0.08349705533733671;  // std dev = 4.040, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.10383194244553368;  // std dev = 3.267, 70.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=28 */
%   | | | else return 0.07624779237499453;  // std dev = 6.121, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04710903812655397;  // std dev = 7.034, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.022486811907138773;  // std dev = 7.119, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.539', 'seconds']
Parameter learned model CLL:-0.345711 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.984, 115, 52], 'false,false,false,false': [4.894, 81, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.454, 68, 28], 'false,false,false,false': [6.228, 117, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.543, 37, 19], 'false,false,false,false': [6.792, 148, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.377, 148, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.664, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.986, 1, 28], 'true,false': [0.034, 59, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.767, 73, 33], 'false,false,false,false': [4.04, 47, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.267, 42, 28], 'false,false,false,false': [6.121, 106, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.034, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.119, 175, 86]}]
{'': [nan, 0.22179156542090983], 'false': [nan, 0.22179156542090966], 'false,false': [nan, 0.22179156542090983], 'false,false,false': [nan, 0.22179156542090966]}
{'': [nan, 0.21196116895528375], 'false': [nan, 0.21196116895528333], 'false,false': [nan, 0.21196116895528375], 'false,false,false': [0.21442145648822059, 0.20824196597353417]}
{'': [nan, 0.21667770156549826], 'false': [nan, 0.21667770156549826], 'false,false': [nan, 0.21667770156549773], 'false,false,false': [0.20661087108901344, 0.22163411861430868]}
{'': [nan, 0.2167281013770261], 'false': [nan, 0.2167281013770261], 'false,false': [nan, 0.21672810137702686], 'false,false,false': [0.22417091836734673, 0.21457636775109828]}
{'': [nan, 0.23253521757370998], 'false': [nan, 0.23253521757370998], 'false,false': [nan, 0.23253521757370998], 'false,false,false': [nan, 0.23253521757370998]}
{'': [nan, 0.21673185297252479], 'false': [nan, 0.21673185297252479], 'false,false': [nan, 0.21673185297252562], 'false,false,false': [nan, 0.2167318529725247]}
{'': [0.21678059419067475, 0.2197245030390773], 'false': [nan, 0.2197245030390773], 'false,false': [nan, 0.2197245030390773], 'false,false,false': [0.21440014239942978, 0.22665895061728344], 'true': [0.03350919673405259, 1.9872963969652564e-05], 'true,true': [nan, 0.03350919673405259], 'true,true,false': [nan, 0.03350919673405259]}
{'': [nan, 0.20588012944405532], 'false': [nan, 0.20588012944405532], 'false,false': [nan, 0.20588012944405498], 'false,false,false': [0.15245766034023545, 0.2284547875708388]}
{'': [nan, 0.1979054083883679], 'false': [nan, 0.19790540838836782], 'false,false': [nan, 0.19790540838836782], 'false,false,false': [nan, 0.19790540838836782]}
{'': [nan, 0.19417115437537985], 'false': [nan, 0.19417115437537985], 'false,false': [nan, 0.19417115437538018], 'false,false,false': [nan, 0.19417115437538018]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 11.388
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(G, A), location(A, H) )
%   | | then if ( interaction(I, G), location(I, H) )
%   | | | then return 0.216844587273424;  // std dev = 4.600, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | | | else return 0.12481560176617901;  // std dev = 3.425, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8317534164863751;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10188736638788792;  // std dev = 6.041, 191.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=52 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.17955764174907704;  // std dev = 2.315, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.34448451095441485;  // std dev = 1.644, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.6818514535472836;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.6860518495762878;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( recursion_proteinclass(F, B), interaction(F, H) )
%   | | | then return 0.7898977820185806;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.013581613539081118;  // std dev = 4.234, 120.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=23 */
%   | else if ( interaction(I, A) )
%   | | then if ( complex(I, J), phenotype(I, K) )
%   | | | then return 0.1425042302315202;  // std dev = 3.104, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.21565206685505905;  // std dev = 3.392, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | else return 0.43941087984442684;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.11837560776580092;  // std dev = 0.861, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.43216873713294884;  // std dev = 0.036, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( enzyme(A, H) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.015539395560954216;  // std dev = 1.524, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.27262598891316264;  // std dev = 1.885, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(F, A), phenotype(A, I) )
%   | | | then return 0.15386134238159205;  // std dev = 1.236, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.02631674943020282;  // std dev = 3.307, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | else if ( interaction(J, A) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.6079333365822774;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09227737021135342;  // std dev = 4.646, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | | else return 0.5882719699441903;  // std dev = 0.907, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.29449000615395077;  // std dev = 0.207, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(D, E), complex(D, F) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.343134430782294;  // std dev = 0.947, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14205036292276116;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, A), phenotype(A, H) )
%   | | | then return 0.026716494253972947;  // std dev = 1.499, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.11935268642959282;  // std dev = 1.807, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( phenotype(A, K), location(J, I) )
%   | | | then return 0.058562604034436375;  // std dev = 4.166, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | | else return 0.12965075274968269;  // std dev = 3.661, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.10219360819603121;  // std dev = 1.250, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.07304176903938449;  // std dev = 2.096, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33749852406626923;  // std dev = 0.101, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then if ( interaction(A, E), phenotype(E, F) )
%   | | | then return -0.1869495654900156;  // std dev = 0.401, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11097805846073393;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, A), phenotype(A, H) )
%   | | | then return 0.04823523427160582;  // std dev = 1.629, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.044071010009468385;  // std dev = 2.349, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7127543466123686;  // std dev = 0.514, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.22460772274324717;  // std dev = 0.117, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.14422765747172464;  // std dev = 2.322, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.024387802352858826;  // std dev = 4.189, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5305649842540968;  // std dev = 0.221, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2108180670626357;  // std dev = 0.061, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(E, F), phenotype(A, G) )
%   | | then if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.45254296603388927;  // std dev = 0.393, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.014959284682904216;  // std dev = 3.380, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | | else if ( enzyme(A, I), interaction(J, E) )
%   | | | then return 0.0027698932969166625;  // std dev = 1.237, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.15144556321284125;  // std dev = 2.918, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then return -0.01507740953383613;  // std dev = 0.366, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return -0.15969625428543802;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.14342775354274295;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.14904187716843997;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.06287729978856388;  // std dev = 0.223, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   else if ( interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), phenotype(A, E) )
%   | | then return 0.33410913079888355;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(D, F), location(A, G) )
%   | | | then return 0.08296313658325861;  // std dev = 4.351, 113.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
%   | | | else return 0.18084266167670468;  // std dev = 2.114, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.014273506570450276;  // std dev = 1.458, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.13773159567604534;  // std dev = 1.291, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.0076144827138476465;  // std dev = 1.138, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.057951728747269865;  // std dev = 1.345, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.08209786458865023;  // std dev = 0.877, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.5257609500221325;  // std dev = 2.108, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else if ( interaction(D, G), interaction(A, G) )
%   | | | then return 0.5014249753426634;  // std dev = 0.944, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.18590964368311613;  // std dev = 0.403, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( location(H, C), interaction(H, H) )
%   | | then return -0.22593574838800604;  // std dev = 0.052, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else return -0.3570526893728785;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(I, A) )
%   | then if ( interaction(I, I) )
%   | | then return -0.11161360907448421;  // std dev = 0.204, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.08525766915270509;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.17986816977548145;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.12217009510630164;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.046897372986414276;  // std dev = 0.181, 51.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.34711210163009504;  // std dev = 0.556, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, D), interaction(A, H) )
%   | | | then return -0.04964457833545492;  // std dev = 1.547, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.17105038323309654;  // std dev = 1.815, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.29722347212128003;  // std dev = 0.189, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.015609974271927144;  // std dev = 2.592, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.005874517097843785;  // std dev = 2.024, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return -0.06250549378354435;  // std dev = 1.815, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '11.301', 'seconds']
Refined model CLL: -0.226577


******************************************
Best model found
******************************************
Results 

CLL : -0.244103 

AUC ROC : 0.98314 

AUC PR : 0.324936 

Precision : 0.296474 

Recall : 0.65371 

F1 : 0.407938 

Total Learning Time : 11.388 

Total Inference Time : 7.609577178955078 

Total revision time: 21.722394496917723
Best scored revision CLL: -0.226577


Results 

CLL : -0.244103 

AUC ROC : 0.98314 

AUC PR : 0.324936 

Precision : 0.296474 

Recall : 0.65371 

F1 : 0.407938 

Total Learning Time : 21.736373693466184 

Total Inference Time : 7.609577178955078 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.196
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16886322081379787;  // std dev = 7.744, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1482519121270181;  // std dev = 4.837, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | | | else return 0.16757530662242898;  // std dev = 5.953, 160.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12019993737235117;  // std dev = 4.925, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
%   | | | else return 0.16211269695463498;  // std dev = 5.819, 149.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.08191000834599993;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.125548297123173;  // std dev = 6.958, 217.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11349673156952271;  // std dev = 7.558, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04497486180447598;  // std dev = 7.827, 294.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.74730511164778;  // std dev = 0.034, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.25253687505222144;  // std dev = 0.051, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.045915178006617555;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0.1154238559329903;  // std dev = 4.451, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0745253565975741;  // std dev = 3.756, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | | else return 0.024505710234722606;  // std dev = 6.006, 170.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032892299488077474;  // std dev = 7.075, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03573912358467375;  // std dev = 7.005, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.551', 'seconds']
Parameter learned model CLL:-0.32608 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.744, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.837, 75, 34], 'false,false,false,false': [5.953, 107, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.925, 79, 35], 'false,false,false,false': [5.819, 97, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.162, 35, 14], 'false,false,false,false': [6.958, 144, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.558, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.827, 207, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.034, 0, 35], 'true,false': [0.051, 75, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.721, 45, 20], 'false,false,false,false': [4.451, 52, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.756, 63, 35], 'false,false,false,false': [6.006, 118, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.075, 184, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.005, 177, 87]}]
{'': [nan, 0.21417091836734775], 'false': [nan, 0.21417091836734786], 'false,false': [nan, 0.21417091836734775], 'false,false,false': [nan, 0.21417091836734786]}
{'': [nan, 0.21881952985724348], 'false': [nan, 0.21881952985724246], 'false,false': [nan, 0.21881952985724348], 'false,false,false': [0.21462839828297298, 0.2215234374999983]}
{'': [nan, 0.22142284092823206], 'false': [nan, 0.22142284092823206], 'false,false': [nan, 0.22142284092823278], 'false,false,false': [0.21280083851794523, 0.2272580903657611]}
{'': [nan, 0.21990465571682066], 'false': [nan, 0.21990465571682066], 'false,false': [nan, 0.21990465571682044], 'false,false,false': [0.20408163265306092, 0.2231268042578001]}
{'': [nan, 0.22576033682726546], 'false': [nan, 0.22576033682726546], 'false,false': [nan, 0.22576033682726654], 'false,false,false': [nan, 0.22576033682726654]}
{'': [nan, 0.208385768153168], 'false': [nan, 0.208385768153168], 'false,false': [nan, 0.20838576815316726], 'false,false,false': [nan, 0.20838576815316792]}
{'': [0.21690754009418275, 0.22706525481431347], 'false': [nan, 0.22706525481431347], 'false,false': [nan, 0.22706525481431347], 'false,false,false': [0.21301775147928986, 0.23582766439909197], 'true': [3.3707074018707316e-05, 3.405662885968515e-05], 'true,true': [nan, 3.3707074018707316e-05], 'true,true,false': [nan, 3.3707074018707316e-05]}
{'': [nan, 0.1878008742121822], 'false': [nan, 0.1878008742121822], 'false,false': [nan, 0.18780087421218172], 'false,false,false': [0.1439534046050533, 0.2121627531518369]}
{'': [nan, 0.18470480119167085], 'false': [nan, 0.18470480119167096], 'false,false': [nan, 0.18470480119167096], 'false,false,false': [nan, 0.18470480119167096]}
{'': [nan, 0.1858761425034034], 'false': [nan, 0.1858761425034034], 'false,false': [nan, 0.18587614250340365], 'false,false,false': [nan, 0.18587614250340365]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.045
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, D), interaction(D, A) )
%   | | then return 0.045648935099512344;  // std dev = 0.390, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | else if ( complex(C, E) )
%   | | | then return 0.2929315437951645;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.10008441897047989;  // std dev = 4.769, 124.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=30 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7423916479893539;  // std dev = 0.161, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1474992415753312;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6195813532182735;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.04246940998842501;  // std dev = 2.762, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, I), complex(I, H) )
%   | | | then return 0.5756998614193247;  // std dev = 0.791, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2417289442593602;  // std dev = 1.668, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08964699411826645;  // std dev = 2.021, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.18566142548497663;  // std dev = 5.031, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6158076939635092;  // std dev = 0.284, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(F, D), complex(F, C) )
%   | | then return -0.08370227856150507;  // std dev = 0.284, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else if ( interaction(G, D) )
%   | | | then return 0.2559800088248292;  // std dev = 2.813, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.05968032072358881;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( enzyme(A, H), phenotype(A, I) )
%   | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.7183478349987739;  // std dev = 0.069, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.15551890144627428;  // std dev = 0.137, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5785211222789491;  // std dev = 0.158, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.013809565528599264;  // std dev = 2.439, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | | else return 0.0942625966839131;  // std dev = 4.497, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.47958892416345533;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.27532124490354104;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( phenotype(A, E), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.6636488084690645;  // std dev = 0.109, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15949991655510415;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(F, I), complex(F, J) )
%   | | | then return -0.0559111572580459;  // std dev = 1.502, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return 0.02535124744063914;  // std dev = 2.186, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5028784400701204;  // std dev = 3.307, 69.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=53 */
%   | | | else return -0.19267535283655085;  // std dev = 0.315, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else return 0.31218238536897386;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C) )
%   | then return 0.3103774389646868;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4970903086535209;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(D, A) )
%   | | then if ( enzyme(D, E) )
%   | | | then return -0.16251648743165586;  // std dev = 0.148, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.02558699263877233;  // std dev = 1.481, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( phenotype(D, F), interaction(G, A) )
%   | | | then return 0.176925382962951;  // std dev = 0.990, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04602209238592845;  // std dev = 1.124, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3069026432211699;  // std dev = 4.237, 97.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=63 */
%   | | | else return -0.16139322113649152;  // std dev = 0.329, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else return 0.2615568207242078;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.25650286475052436;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5382683663464796;  // std dev = 0.770, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0.45483653353748643;  // std dev = 2.010, 48.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=43 */
%   | | | else return -0.2652914261098616;  // std dev = 0.523, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.15212922153329217;  // std dev = 0.060, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( interaction(A, A) )
%   | then return -0.12039955128769235;  // std dev = 0.443, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.016320887207211882;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.06959028866171657;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.08044269024120188;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.23821953922548253;  // std dev = 0.189, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.31446907562034887;  // std dev = 0.634, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.4035793601188195;  // std dev = 0.525, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.1463775643729467;  // std dev = 0.074, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2503760729685685;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.1607620848637464;  // std dev = 0.675, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08526081567198189;  // std dev = 1.034, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.01894289439716131;  // std dev = 2.021, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.08539196151714062;  // std dev = 2.845, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return -0.07873238766440496;  // std dev = 0.222, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( phenotype(D, F), interaction(G, D) )
%   | | then if ( complex(G, H) )
%   | | | then return -0.02960087293934678;  // std dev = 2.024, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.16212827319760925;  // std dev = 0.398, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.029503094539890994;  // std dev = 0.218, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( enzyme(A, I) )
%   | then return -0.007198661830131186;  // std dev = 0.213, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( phenotype(J, L), interaction(A, M) )
%   | | | then return 0.04858090944010146;  // std dev = 1.286, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.21198231805707093;  // std dev = 1.178, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( location(A, N) )
%   | | | then return 0.05819380870213348;  // std dev = 2.278, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.03925566812204105;  // std dev = 1.221, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.17377939528626826;  // std dev = 0.234, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( interaction(A, C) )
%   | | then return -0.14826755880913528;  // std dev = 0.133, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.0029062384295429518;  // std dev = 0.278, 133.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=41 */
%   else if ( interaction(F, A), phenotype(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.47613040783280974;  // std dev = 0.407, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.11364304697791758;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1800392618679287;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.050944668605336245;  // std dev = 1.611, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.010964369010537874;  // std dev = 0.788, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.09020176191198492;  // std dev = 1.697, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.18149775415548175;  // std dev = 0.062, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D) )
%   | | then if ( recursion_proteinclass(F, B), interaction(A, D) )
%   | | | then return 0.10311844132610093;  // std dev = 0.826, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.039780302554583806;  // std dev = 2.948, 129.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=31 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2095824259200693;  // std dev = 0.839, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.12082734761392792;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.28662218515865834;  // std dev = 0.578, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04818053380417379;  // std dev = 0.983, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.038020721604466554;  // std dev = 1.067, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return 0.02602333251757143;  // std dev = 2.416, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '35.994', 'seconds']
Refined model CLL: -0.191125


******************************************
Best model found
******************************************
Results 

CLL : -0.195208 

AUC ROC : 0.989221 

AUC PR : 0.452982 

Precision : 0.302778 

Recall : 0.77305 

F1 : 0.43513 

Total Learning Time : 14.045 

Total Inference Time : 13.345124959945679 

Total revision time: 30.24083525276184
Best scored revision CLL: -0.191125


Results 

CLL : -0.195208 

AUC ROC : 0.989221 

AUC PR : 0.452982 

Precision : 0.302778 

Recall : 0.77305 

F1 : 0.43513 

Total Learning Time : 30.26995712852478 

Total Inference Time : 13.345124959945679 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.104
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2048156017661794;  // std dev = 8.243, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.14865195414669924;  // std dev = 4.746, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | | | else return 0.1555451750810161;  // std dev = 6.927, 219.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16528183341340066;  // std dev = 5.136, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
%   | | | else return 0.1474349549283047;  // std dev = 6.455, 186.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.1356037593002822;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.09046988685914255;  // std dev = 7.987, 300.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10709715311231546;  // std dev = 8.283, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08299575658959958;  // std dev = 8.311, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7276106197353346;  // std dev = 0.022, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27285903299555253;  // std dev = 0.032, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.10310812972304022;  // std dev = 3.642, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.07480467962280604;  // std dev = 5.259, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0320316868459776;  // std dev = 4.135, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | | | else return 0.06890853898629336;  // std dev = 6.390, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04386864100431899;  // std dev = 7.634, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056061114558294066;  // std dev = 7.459, 285.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.071', 'seconds']
Parameter learned model CLL:-0.347779 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.243, 196, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.746, 71, 33], 'false,false,false,false': [6.927, 148, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.136, 74, 41], 'false,false,false,false': [6.455, 123, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.787, 22, 12], 'false,false,false,false': [7.987, 208, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.283, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.311, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.022, 0, 41], 'true,false': [0.032, 79, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.642, 36, 21], 'false,false,false,false': [5.259, 81, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.135, 86, 41], 'false,false,false,false': [6.39, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.634, 196, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.459, 181, 104]}]
{'': [nan, 0.2264888888888911], 'false': [nan, 0.2264888888888895], 'false,false': [nan, 0.2264888888888911], 'false,false,false': [nan, 0.2264888888888895]}
{'': [nan, 0.2183093866518415], 'false': [nan, 0.21830938665184146], 'false,false': [nan, 0.2183093866518415], 'false,false,false': [0.21662352071005886, 0.21909468109505612]}
{'': [nan, 0.22613341647583107], 'false': [nan, 0.22613341647583107], 'false,false': [nan, 0.22613341647583185], 'false,false,false': [0.22937895721484725, 0.2240050746670964]}
{'': [nan, 0.21442898643660557], 'false': [nan, 0.21442898643660557], 'false,false': [nan, 0.21442898643660693], 'false,false,false': [0.2283737024221453, 0.21264121924663154]}
{'': [nan, 0.22422983087857318], 'false': [nan, 0.22422983087857318], 'false,false': [nan, 0.22422983087857185], 'false,false,false': [nan, 0.22422983087857185]}
{'': [nan, 0.2228336468330983], 'false': [nan, 0.2228336468330983], 'false,false': [nan, 0.22283364683309914], 'false,false,false': [nan, 0.22283364683309823]}
{'': [0.22515468997294436, 0.22751609306696605], 'false': [nan, 0.22751609306696605], 'false,false': [nan, 0.22751609306696605], 'false,false,false': [0.23268698060941798, 0.2248661511005361], 'true': [1.1976423344692898e-05, 1.3237001970067549e-05], 'true,true': [nan, 1.1976423344692898e-05], 'true,true,false': [nan, 1.1976423344692898e-05]}
{'': [nan, 0.18964905823397352], 'false': [nan, 0.18964905823397352], 'false,false': [nan, 0.18964905823397415], 'false,false,false': [0.13462090140589406, 0.22812697792944442]}
{'': [nan, 0.19428298302315636], 'false': [nan, 0.19428298302315633], 'false,false': [nan, 0.19428298302315633], 'false,false,false': [nan, 0.19428298302315633]}
{'': [nan, 0.19523508970550094], 'false': [nan, 0.19523508970550094], 'false,false': [nan, 0.1952350897055001], 'false,false,false': [nan, 0.1952350897055001]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.289
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(D, D), complex(D, E) )
%   | | then return 0.058148935099512286;  // std dev = 0.400, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20297652130640864;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7152917922423694;  // std dev = 0.350, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6081489350995123;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return -0.03247606490048771;  // std dev = 2.497, 64.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14800400756327947;  // std dev = 5.330, 138.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=40 */
%   | | | else return 0.25814893509951226;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.726404933847509;  // std dev = 0.217, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), location(E, F) )
%   | | then if ( location(A, F) )
%   | | | then return 0.7998223425851307;  // std dev = 0.179, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.07791309780790934;  // std dev = 0.895, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1556771216025946;  // std dev = 0.153, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0.13038967896076423;  // std dev = 6.091, 181.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=53 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8238076132280732;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15071782685409493;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.07373365448410585;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.22452048543615094;  // std dev = 1.552, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.6530318218453064;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.03682058726961455;  // std dev = 0.369, 117.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=27 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then if ( interaction(G, A), phenotype(A, H) )
%   | | then return 0.06256320187254225;  // std dev = 0.379, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(F, F) )
%   | | | then return 0.14610440636754127;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2964985685614326;  // std dev = 1.103, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.633080708096215;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19693300946250725;  // std dev = 5.089, 114.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=44 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.36363763234844654;  // std dev = 0.957, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09666854487231236;  // std dev = 2.069, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.5017501409702624;  // std dev = 0.298, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.15355731446952753;  // std dev = 0.308, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0.022242305778104043;  // std dev = 2.848, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | else if ( location(G, C), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H), interaction(I, A) )
%   | | | then return 0.2691385349185486;  // std dev = 2.509, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return 0.5405659164138729;  // std dev = 3.022, 53.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=41 */
%   | | else return -0.20031770316206746;  // std dev = 0.140, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | then return 0.7837804064826716;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.21467515219501151;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.4364308833728785;  // std dev = 1.115, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, C) )
%   | then return 0.13290624210043062;  // std dev = 0.795, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.4547719852082046;  // std dev = 0.115, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H), location(E, H) )
%   | | | then return 0.5164202531790492;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.008826320695343726;  // std dev = 0.686, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, E), interaction(I, A) )
%   | | | then return -0.06610187152842403;  // std dev = 1.884, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | | else return 0.05504850457772847;  // std dev = 3.174, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5720567502854325;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return -0.03940309999020978;  // std dev = 1.921, 49.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
%   | | | else return 0.12417977477270052;  // std dev = 4.721, 119.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( location(F, C), complex(F, G) )
%   | | | then return 0.2859586686735122;  // std dev = 0.560, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.47288546208259225;  // std dev = 0.201, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(E, H) )
%   | | | then return 0.7052632063264765;  // std dev = 0.218, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.467810068807944;  // std dev = 0.815, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.18682727396903678;  // std dev = 0.272, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.347131424543682;  // std dev = 0.106, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4107793639882674;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.02514547157495051;  // std dev = 4.202, 133.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=35 */
%   | | | else return -0.03982510504767624;  // std dev = 3.435, 97.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.031865701170171255;  // std dev = 0.324, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( location(E, D) )
%   | | then if ( interaction(E, A), complex(E, F) )
%   | | | then return 0.023292071991947313;  // std dev = 1.320, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.04185380255106493;  // std dev = 2.333, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( location(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5145141185789107;  // std dev = 0.444, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.20202065625672322;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( location(A, J), enzyme(H, K) )
%   | | | then return 0.15629236862879636;  // std dev = 2.149, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.043468998650909765;  // std dev = 3.342, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.10973096485942814;  // std dev = 1.247, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.382862370526997;  // std dev = 0.687, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then return -0.04139080855441475;  // std dev = 0.583, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return 0.20449595670947004;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3136903429241147;  // std dev = 0.129, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(A, G) )
%   | | then return -0.042450787561257954;  // std dev = 0.557, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3623455359975976;  // std dev = 0.106, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.24472355525467923;  // std dev = 1.999, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | | else return -5.489316379705758E-4;  // std dev = 4.984, 217.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=49 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.026771743335263908;  // std dev = 0.833, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.04898866226208696;  // std dev = 2.127, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then return -0.05850043158727736;  // std dev = 0.264, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.18586899561587944;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | | then return 0.40709150009032397;  // std dev = 0.934, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.1900882284325146;  // std dev = 0.309, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then return -0.010860007730634629;  // std dev = 0.282, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return 0.049313062988755006;  // std dev = 1.919, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.43119013389834376;  // std dev = 0.743, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.05152710821292275;  // std dev = 4.456, 135.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=46 */
%   | | | else return -0.029385686229238855;  // std dev = 1.716, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.19502938358158384;  // std dev = 0.205, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( interaction(D, G), complex(C, H) )
%   | | | then return -0.12805735847977834;  // std dev = 1.878, 54.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=7 */
%   | | | else return 0.040847684491755167;  // std dev = 1.392, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( interaction(I, C), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, C), phenotype(C, J) )
%   | | | then return 0.36804069871461603;  // std dev = 0.318, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.11726560876824443;  // std dev = 1.068, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( interaction(A, K), phenotype(C, L) )
%   | | | then return -0.08658522600798985;  // std dev = 1.502, 51.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=7 */
%   | | | else return 0.02429111114639142;  // std dev = 4.781, 153.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=48 */
%   else if ( interaction(A, M), interaction(M, M) )
%   | then return 0.018948370840918976;  // std dev = 0.450, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3221701495836332;  // std dev = 0.650, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.459', 'seconds']
Refined model CLL: -0.245042


******************************************
Best model found
******************************************
Results 

CLL : -0.257352 

AUC ROC : 0.934955 

AUC PR : 0.22754 

Precision : 0.134295 

Recall : 0.456604 

F1 : 0.207547 

Total Learning Time : 12.289 

Total Inference Time : 8.827970743179321 

Total revision time: 24.25299345779419
Best scored revision CLL: -0.245042


Results 

CLL : -0.257352 

AUC ROC : 0.934955 

AUC PR : 0.22754 

Precision : 0.134295 

Recall : 0.456604 

F1 : 0.207547 

Total Learning Time : 24.28211533355713 

Total Inference Time : 8.827970743179321 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.201
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1963842292171595;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1573094572553313;  // std dev = 5.065, 117.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=38 */
%   | | | else return 0.15782433728828363;  // std dev = 6.036, 166.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14527504593493035;  // std dev = 5.406, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.17027244859723206;  // std dev = 5.539, 133.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10179796621269019;  // std dev = 4.052, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | | else return 0.1082384645393632;  // std dev = 6.774, 209.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09604461262951262;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03858721414242926;  // std dev = 8.076, 316.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6995130600600683;  // std dev = 1.382, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | else return -0.2571241970100382;  // std dev = 0.006, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.06311015606116337;  // std dev = 3.073, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.06752616538008838;  // std dev = 4.772, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0752843733489526;  // std dev = 4.256, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   | | | else return 0.05320314878524214;  // std dev = 5.676, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.038694976952959564;  // std dev = 7.131, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02931794729057441;  // std dev = 7.146, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.385', 'seconds']
Parameter learned model CLL:-0.320523 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.803, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.065, 79, 38], 'false,false,false,false': [6.036, 112, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.406, 87, 44], 'false,false,false,false': [5.539, 85, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.052, 52, 24], 'false,false,false,false': [6.774, 141, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.076, 224, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.382, 2, 44], 'true,false': [0.006, 92, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.073, 29, 14], 'false,false,false,false': [4.772, 69, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.256, 79, 44], 'false,false,false,false': [5.676, 98, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.131, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.146, 190, 92]}]
{'': [nan, 0.22383217993079713], 'false': [nan, 0.2238321799307967], 'false,false': [nan, 0.22383217993079713], 'false,false,false': [nan, 0.2238321799307967]}
{'': [nan, 0.2194059109240994], 'false': [nan, 0.21940591092409817], 'false,false': [nan, 0.2194059109240994], 'false,false,false': [0.2193001680181162, 0.21948033096240582]}
{'': [nan, 0.22704254038887872], 'false': [nan, 0.22704254038887872], 'false,false': [nan, 0.22704254038887978], 'false,false,false': [0.22306125934961407, 0.23065388440275425]}
{'': [nan, 0.2186290300173033], 'false': [nan, 0.2186290300173033], 'false,false': [nan, 0.21862903001730305], 'false,false,false': [0.21606648199445946, 0.21954980432365473]}
{'': [nan, 0.221444524738572], 'false': [nan, 0.221444524738572], 'false,false': [nan, 0.22144452473857168], 'false,false,false': [nan, 0.22144452473857168]}
{'': [nan, 0.206383010653134], 'false': [nan, 0.206383010653134], 'false,false': [nan, 0.20638301065313458], 'false,false,false': [nan, 0.20638301065313386]}
{'': [0.21721407289202943, 0.22067911694037182], 'false': [nan, 0.22067911694037182], 'false,false': [nan, 0.22067911694037182], 'false,false,false': [0.21957815035154163, 0.22113300028277943], 'true': [0.041538110202979144, 4.40365014916945e-07], 'true,true': [nan, 0.041538110202979144], 'true,true,false': [nan, 0.041538110202979144]}
{'': [nan, 0.18723528870498526], 'false': [nan, 0.18723528870498526], 'false,false': [nan, 0.18723528870498413], 'false,false,false': [0.14727483494854396, 0.22067765676556436]}
{'': [nan, 0.1796797306486377], 'false': [nan, 0.17967973064863751], 'false,false': [nan, 0.17967973064863751], 'false,false,false': [nan, 0.17967973064863751]}
{'': [nan, 0.18107044764485727], 'false': [nan, 0.18107044764485727], 'false,false': [nan, 0.18107044764485725], 'false,false,false': [nan, 0.18107044764485725]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 5.64
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.8581489350995117;  // std dev = 1.98e-07, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.19699191030612298;  // std dev = 5.206, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.49179034310462466;  // std dev = 0.895, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.7947833956475375;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.03309959706626686;  // std dev = 3.294, 79.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=16 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.08337940277013943;  // std dev = 3.613, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | | else return 0.12943558197953348;  // std dev = 4.799, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.5774813304490726;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2620487297325647;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7055250034391823;  // std dev = 0.104, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return -0.1340619346974987;  // std dev = 0.035, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, A) )
%   | | then return 0.5553664367462843;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6917310683969714;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.1455046483523214;  // std dev = 2.442, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.06288346411269882;  // std dev = 5.160, 147.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=37 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.47698856391638245;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then return 0.04433407687626301;  // std dev = 0.276, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( phenotype(A, H), phenotype(D, I) )
%   | | | then return 0.041986996392026917;  // std dev = 1.070, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.23215008706229515;  // std dev = 1.187, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( enzyme(A, J) )
%   | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.528353526916564;  // std dev = 0.063, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.12246352309694244;  // std dev = 0.016, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.4812718306234004;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.3755647145741474;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.07819093654794815;  // std dev = 5.513, 154.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=42 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.31914669851053057;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, D) )
%   | | then return 0.474177884687961;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.42992696720912743;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.10572416780586733;  // std dev = 0.008, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then if ( phenotype(F, G), complex(A, H) )
%   | | | then return 0.1654223128806914;  // std dev = 1.463, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.006338062281845032;  // std dev = 2.436, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.1781806134172507;  // std dev = 1.110, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.07472090842638379;  // std dev = 5.366, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.2981840467004882;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.10820975948802039;  // std dev = 0.858, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( location(E, F), complex(A, G) )
%   | | then return -0.08849509951582415;  // std dev = 0.204, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.028106263396703506;  // std dev = 0.465, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.028080818469721103;  // std dev = 0.502, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.18541402641634017;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.030947989691412055;  // std dev = 3.993, 108.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=29 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.07664922558567955;  // std dev = 3.060, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return 0.15155042857201614;  // std dev = 2.785, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2405887590978218;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5508004958516763;  // std dev = 0.176, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.1746952135401472;  // std dev = 0.055, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.3931116450643914;  // std dev = 0.069, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.14033072952854309;  // std dev = 0.023, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), complex(J, K) )
%   | | | then return 0.09506301355358523;  // std dev = 2.645, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.27082145593120305;  // std dev = 1.995, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.005803782441464916;  // std dev = 1.982, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.14085726465861134;  // std dev = 1.937, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.08689539308308734;  // std dev = 0.267, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | else if ( phenotype(A, E), complex(A, F) )
%   | | then return -0.00406285965337728;  // std dev = 0.263, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else return 0.0330174981161131;  // std dev = 0.367, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6012183246826804;  // std dev = 0.182, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.21528407790711357;  // std dev = 0.066, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4440773808923118;  // std dev = 0.426, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18169659334703747;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.4409457437375384;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08692145283412697;  // std dev = 1.499, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20519431646637423;  // std dev = 0.057, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), phenotype(A, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return -0.10222222392258358;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.053647781940397286;  // std dev = 0.333, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.08937335080260939;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10079961091154797;  // std dev = 3.152, 70.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=29 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.12698741805424724;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.04735762749815379;  // std dev = 0.987, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.05105016540861542;  // std dev = 2.265, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return -0.011476481350652195;  // std dev = 3.516, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1750032419406319;  // std dev = 0.048, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( enzyme(E, G), complex(E, F) )
%   | | | then return -0.07759912172653326;  // std dev = 0.842, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.016169708348524256;  // std dev = 2.003, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else if ( complex(E, H) )
%   | | | then return -0.17240311436909986;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.025416188862828912;  // std dev = 1.073, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(K, A), phenotype(I, L) )
%   | | | then return 0.1960486067052598;  // std dev = 1.634, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.021677831230903673;  // std dev = 2.837, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.06251063977346595;  // std dev = 1.243, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.021415268534248046;  // std dev = 3.121, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.053', 'seconds']
Refined model CLL: -0.23012


******************************************
Best model found
******************************************
Results 

CLL : -0.248604 

AUC ROC : 0.911124 

AUC PR : 0.260076 

Precision : 0.249554 

Recall : 0.505415 

F1 : 0.334129 

Total Learning Time : 5.64 

Total Inference Time : 2.468479871749878 

Total revision time: 11.020097414016723
Best scored revision CLL: -0.23012


Results 

CLL : -0.248604 

AUC ROC : 0.911124 

AUC PR : 0.260076 

Precision : 0.249554 

Recall : 0.505415 

F1 : 0.334129 

Total Learning Time : 11.049219289779662 

Total Inference Time : 2.468479871749878 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.175
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19806988371611367;  // std dev = 7.534, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16169973736594426;  // std dev = 4.333, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.17346444324829716;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15297311554019832;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.11087264338022754;  // std dev = 6.356, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.11701592409263058;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.11641134659125571;  // std dev = 7.190, 234.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10947875361617891;  // std dev = 7.520, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07377062601332851;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7269916965409716;  // std dev = 0.005, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2731442443159173;  // std dev = 0.007, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08870900240501128;  // std dev = 3.509, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.07667490476479437;  // std dev = 5.065, 114.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05957106685021475;  // std dev = 3.326, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.03801935503941958;  // std dev = 6.286, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035120548514223915;  // std dev = 7.096, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.008601598254061713;  // std dev = 7.204, 279.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.424', 'seconds']
Parameter learned model CLL:-0.333887 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.534, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.333, 57, 28], 'false,false,false,false': [6.182, 112, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.28, 53, 28], 'false,false,false,false': [6.356, 133, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.449, 18, 9], 'false,false,false,false': [7.19, 157, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.52, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.005, 0, 28], 'true,false': [0.007, 50, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.509, 35, 19], 'false,false,false,false': [5.065, 75, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.326, 50, 28], 'false,false,false,false': [6.286, 124, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.096, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.204, 193, 86]}]
{'': [nan, 0.22437469730819184], 'false': [nan, 0.2243746973081916], 'false,false': [nan, 0.22437469730819184], 'false,false,false': [nan, 0.2243746973081916]}
{'': [nan, 0.2235140330642056], 'false': [nan, 0.22351403306420592], 'false,false': [nan, 0.2235140330642056], 'false,false,false': [0.22089965397923872, 0.2247750865051901]}
{'': [nan, 0.21622475097144644], 'false': [nan, 0.21622475097144644], 'false,false': [nan, 0.21622475097144722], 'false,false,false': [0.22615513783606456, 0.2114856099647919]}
{'': [nan, 0.22103461540488023], 'false': [nan, 0.22103461540488023], 'false,false': [nan, 0.22103461540487965], 'false,false,false': [0.22222222222222246, 0.22089754603724537]}
{'': [nan, 0.22531251391496362], 'false': [nan, 0.22531251391496362], 'false,false': [nan, 0.2253125139149635], 'false,false,false': [nan, 0.2253125139149635]}
{'': [nan, 0.22010708330228596], 'false': [nan, 0.22010708330228596], 'false,false': [nan, 0.2201070833022859], 'false,false,false': [nan, 0.22010708330228587]}
{'': [0.23017532345613895, 0.22605961995313803], 'true': [1.0681671624673022e-06, 9.42245870474423e-07], 'false': [nan, 0.22605961995313803], 'false,false': [nan, 0.22605961995313803], 'false,false,false': [0.22805212620027462, 0.22506925207756315], 'true,true': [nan, 1.0681671624673022e-06], 'true,true,false': [nan, 1.0681671624673022e-06]}
{'': [nan, 0.1946230573770441], 'false': [nan, 0.1946230573770441], 'false,false': [nan, 0.19462305737704344], 'false,false,false': [0.14180019310657976, 0.21712208489407808]}
{'': [nan, 0.19219197666470988], 'false': [nan, 0.19219197666470994], 'false,false': [nan, 0.19219197666470994], 'false,false,false': [nan, 0.19219197666470994]}
{'': [nan, 0.18599516785770343], 'false': [nan, 0.18599516785770343], 'false,false': [nan, 0.18599516785770343], 'false,false,false': [nan, 0.18599516785770343]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.32
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( complex(A, E), interaction(A, F) )
%   | | then if ( interaction(F, G), phenotype(F, H) )
%   | | | then return 0.04419544672741935;  // std dev = 2.552, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.26199508894566564;  // std dev = 3.538, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | | | else return 0.16460054800273682;  // std dev = 5.134, 124.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8282978199981044;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.16710537001900985;  // std dev = 0.081, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then return 0.4850122940520396;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.8349593925902302;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.46947341221095434;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.0937809469782479;  // std dev = 6.428, 215.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=56 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.612263977321028;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5661818591148914;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6871909022703265;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G) )
%   | | then return 0.2805971520395422;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6159463602843244;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.821267888275982;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.01847634933093971;  // std dev = 4.358, 133.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=25 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.13919826669082544;  // std dev = 3.679, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | | | else return 0.23050692009039067;  // std dev = 2.614, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.4536723066802258;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.011832069564884659;  // std dev = 0.362, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.01270733844843771;  // std dev = 0.335, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.644685578076396;  // std dev = 0.294, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1980836856976119;  // std dev = 3.210, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.09195216578020794;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.31504897148267164;  // std dev = 1.380, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( location(A, L) )
%   | | | then return 0.06514121389668849;  // std dev = 4.359, 105.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=30 */
%   | | | else return 0.2876991048113893;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.2498051248694718;  // std dev = 0.294, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.502911137461136;  // std dev = 0.077, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12602042527819488;  // std dev = 0.060, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(E, F), complex(E, G) )
%   | | | then return 0.14873945976344521;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.005729799077994514;  // std dev = 2.453, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3949082946855662;  // std dev = 0.767, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.03018824425847805;  // std dev = 4.684, 129.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=33 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.10896273988277404;  // std dev = 2.605, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.06092091026669387;  // std dev = 2.637, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.13859089803728283;  // std dev = 0.571, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.2736837915501576;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.31626432014054473;  // std dev = 0.151, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3843485371855569;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.11915642856805954;  // std dev = 0.074, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( interaction(J, H), interaction(H, J) )
%   | | | then return 0.17053160377498341;  // std dev = 2.402, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.0036384482070569543;  // std dev = 4.037, 97.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=23 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.05029067444654485;  // std dev = 3.118, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.18312183938192317;  // std dev = 3.060, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2606148624350706;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.6214162701240351;  // std dev = 0.586, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.7579595084360214;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return -0.14594818407764878;  // std dev = 0.041, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.24993077324191032;  // std dev = 0.018, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.28092956292709925;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11511932910332295;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.0798799319936981;  // std dev = 4.102, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
%   | | | else return 0.02348077827197095;  // std dev = 3.790, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.2078919486946177;  // std dev = 0.051, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.38051095683855574;  // std dev = 0.183, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.47279749522623316;  // std dev = 0.307, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.1029561659665407;  // std dev = 0.191, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.2031346640985241;  // std dev = 0.184, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( interaction(H, H), phenotype(A, J) )
%   | | | then return 0.34421554835611695;  // std dev = 1.122, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11636413828781976;  // std dev = 1.817, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.03211366014401368;  // std dev = 2.257, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.05720062693037392;  // std dev = 5.030, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.17340998872823826;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.05855498739378446;  // std dev = 0.313, 71.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=13 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E) )
%   | | then return -0.10728087953029936;  // std dev = 0.231, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.053659928453804046;  // std dev = 1.895, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return -0.07572914798920931;  // std dev = 0.826, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3619001631999962;  // std dev = 0.444, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.06995555854584684;  // std dev = 2.642, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.009302435793661983;  // std dev = 3.191, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.07144325278836203;  // std dev = 2.848, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.27041630875622524;  // std dev = 0.166, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, F), phenotype(F, D) )
%   | | then return -0.13853268324186935;  // std dev = 0.216, 44.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.14969396718285663;  // std dev = 1.310, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.022404759168362726;  // std dev = 4.516, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
%   else if ( phenotype(A, I), interaction(A, J) )
%   | then if ( complex(J, K), phenotype(J, L) )
%   | | then if ( interaction(M, A) )
%   | | | then return 0.17456067840039388;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.004800593825898877;  // std dev = 1.340, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.13173189750955847;  // std dev = 1.379, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.6523382880858023;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.011382309751440814;  // std dev = 0.366, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.144', 'seconds']
Refined model CLL: -0.282248


******************************************
Best model found
******************************************
Results 

CLL : -0.285263 

AUC ROC : 0.867286 

AUC PR : 0.172933 

Precision : 0.204283 

Recall : 0.438163 

F1 : 0.278652 

Total Learning Time : 6.32 

Total Inference Time : 2.6280784606933594 

Total revision time: 11.86161744117737
Best scored revision CLL: -0.282248


Results 

CLL : -0.285263 

AUC ROC : 0.867286 

AUC PR : 0.172933 

Precision : 0.204283 

Recall : 0.438163 

F1 : 0.278652 

Total Learning Time : 11.890739316940309 

Total Inference Time : 2.6280784606933594 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.14
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1876943896449668;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16960910667136628;  // std dev = 5.406, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.20442089924836016;  // std dev = 5.202, 116.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.08884873942428398;  // std dev = 5.012, 124.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=35 */
%   | | | else return 0.13307626448863727;  // std dev = 5.915, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15839434229665844;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.12539678468342982;  // std dev = 6.650, 197.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1254760867088861;  // std dev = 7.456, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08924920048691945;  // std dev = 7.530, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7270983789600636;  // std dev = 0.001, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2728977829468925;  // std dev = 0.001, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03271176828410156;  // std dev = 4.076, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | | else return 0.03986416182668407;  // std dev = 4.358, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04456360773968033;  // std dev = 3.774, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.02705899159583083;  // std dev = 5.976, 166.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07089091290232663;  // std dev = 6.800, 235.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0202452603056068;  // std dev = 7.015, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.474', 'seconds']
Parameter learned model CLL:-0.341575 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.406, 87, 44], 'false,false,false,false': [5.202, 73, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.012, 89, 35], 'false,false,false,false': [5.915, 107, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.568, 35, 20], 'false,false,false,false': [6.65, 130, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.456, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.53, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.001, 0, 35], 'true,false': [0.001, 67, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.076, 54, 24], 'false,false,false,false': [4.358, 59, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.774, 68, 35], 'false,false,false,false': [5.976, 114, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.8, 148, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.015, 173, 87]}]
{'': [nan, 0.22094524793388515], 'false': [nan, 0.22094524793388517], 'false,false': [nan, 0.22094524793388515], 'false,false,false': [nan, 0.22094524793388517]}
{'': [nan, 0.2281630579094903], 'false': [nan, 0.22816305790948987], 'false,false': [nan, 0.2281630579094903], 'false,false,false': [0.22306392401375297, 0.23327883472057065]}
{'': [nan, 0.2128629187343912], 'false': [nan, 0.2128629187343912], 'false,false': [nan, 0.21286291873439073], 'false,false,false': [0.20256735217581776, 0.22003508726152596]}
{'': [nan, 0.22617295237413543], 'false': [nan, 0.22617295237413543], 'false,false': [nan, 0.22617295237413518], 'false,false,false': [0.2314049586776862, 0.22447459656362942]}
{'': [nan, 0.2306538817470317], 'false': [nan, 0.2306538817470317], 'false,false': [nan, 0.23065388174703158], 'false,false,false': [nan, 0.23065388174703158]}
{'': [nan, 0.22680078262457432], 'false': [nan, 0.22680078262457432], 'false,false': [nan, 0.2268007826245742], 'false,false,false': [nan, 0.22680078262457423]}
{'': [0.22539238063848557, 0.21579390484507174], 'true': [3.174109021334256e-08, 3.152896444753882e-08], 'false': [nan, 0.21579390484507174], 'false,false': [nan, 0.21579390484507174], 'false,false,false': [0.21301775147928995, 0.21825868674857915], 'true,true': [nan, 3.174109021334256e-08], 'true,true,false': [nan, 3.174109021334256e-08]}
{'': [nan, 0.18579576460980377], 'false': [nan, 0.18579576460980377], 'false,false': [nan, 0.18579576460980332], 'false,false,false': [0.1382758798106428, 0.2151636694520804]}
{'': [nan, 0.19676552578476428], 'false': [nan, 0.19676552578476403], 'false,false': [nan, 0.19676552578476403], 'false,false,false': [nan, 0.19676552578476403]}
{'': [nan, 0.18925630972452276], 'false': [nan, 0.18925630972452276], 'false,false': [nan, 0.1892563097245226], 'false,false,false': [nan, 0.1892563097245226]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.79
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.6763307532813305;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(F, A), interaction(D, G) )
%   | | then return -0.016851064900487777;  // std dev = 0.331, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else if ( phenotype(D, H) )
%   | | | then return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( complex(A, I), enzyme(A, J) )
%   | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1894372786577956;  // std dev = 6.009, 163.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=54 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, E), recursion_proteinclass(C, B) )
%   | then return 0.6590607940917018;  // std dev = 0.315, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( complex(A, F), complex(C, F) )
%   | | then return -0.08607653878726276;  // std dev = 0.233, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return 0.13655325423846584;  // std dev = 0.450, 156.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=48 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.7282722315525006;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(G, I) )
%   | | | then return 0.013844785973496481;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.33348949822444046;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then return 0.059698749514502346;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.15120917650417012;  // std dev = 3.277, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return 0.5810505372893568;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6134201827374586;  // std dev = 0.062, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.057798929399136695;  // std dev = 1.325, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.07609341239028483;  // std dev = 1.324, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.17636085568409934;  // std dev = 1.328, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.04596461498976576;  // std dev = 2.770, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.772812891034892;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06084523474032646;  // std dev = 3.385, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.2445205795363477;  // std dev = 1.817, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.1479243808970515;  // std dev = 4.539, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, C), phenotype(A, E) )
%   | then return 0.017626818948340225;  // std dev = 0.364, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( location(A, F), location(C, F) )
%   | | then return 0.43088412411396854;  // std dev = 0.438, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else return 0.1648751788441246;  // std dev = 0.432, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   else if ( enzyme(A, G), phenotype(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.7737272832453141;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1881102437471531;  // std dev = 0.102, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.681089802906232;  // std dev = 0.253, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.05944683897018831;  // std dev = 3.620, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.09659706684385595;  // std dev = 3.727, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return -0.009294479088253333;  // std dev = 1.403, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.3695741093912901;  // std dev = 0.125, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5490914663187795;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.1657675363420178;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3187489174163308;  // std dev = 1.511, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return -0.016807274639245105;  // std dev = 3.313, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.10606506225886357;  // std dev = 5.360, 142.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=49 */
%   | | | else return -0.01688256043806002;  // std dev = 1.420, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.28539404647662936;  // std dev = 0.364, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.05384621849505042;  // std dev = 0.382, 76.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(H, F), enzyme(H, I) )
%   | | then if ( interaction(F, H), location(A, J) )
%   | | | then return 0.05457823733910775;  // std dev = 3.665, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.20440031715161786;  // std dev = 2.217, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( enzyme(A, K), complex(F, L) )
%   | | | then return 0.27646028246282406;  // std dev = 1.203, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.007771309733061734;  // std dev = 3.215, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | else if ( interaction(A, M), complex(M, N) )
%   | | then if ( complex(A, N) )
%   | | | then return -0.0058553367852079785;  // std dev = 0.943, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3551673364206896;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4639249285721302;  // std dev = 0.800, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.572086057177052;  // std dev = 0.153, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.23203873663745336;  // std dev = 0.079, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(E, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3072159731420072;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0211365535802643;  // std dev = 2.174, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( location(A, I), location(E, I) )
%   | | | then return 0.1210755363889412;  // std dev = 2.355, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.2497581638374795;  // std dev = 1.761, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2367559507112804;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.010038542312892803;  // std dev = 3.701, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return -0.09781296358988191;  // std dev = 1.205, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, E), phenotype(C, F) )
%   | | then return -0.11372258525109182;  // std dev = 1.019, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.4391859290523483;  // std dev = 0.187, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, C) )
%   | | then return -0.20213003795580228;  // std dev = 0.103, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(G, C), location(G, D) )
%   | | | then return 0.08961717562676072;  // std dev = 4.938, 132.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=50 */
%   | | | else return -0.02169335009814312;  // std dev = 2.316, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   else if ( enzyme(A, H), phenotype(A, I) )
%   | then return -0.021252943903500805;  // std dev = 0.271, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( phenotype(A, J) )
%   | | then return -0.19460760538337327;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.1412023722715397;  // std dev = 1.031, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.03446983129197482;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.18839811333322498;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.41841370392090443;  // std dev = 0.201, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( location(E, F) )
%   | | then if ( enzyme(E, G), location(A, F) )
%   | | | then return -0.1473622342364929;  // std dev = 0.598, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.03423828121516661;  // std dev = 1.795, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else return -0.285100497793738;  // std dev = 0.560, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5485775935977529;  // std dev = 0.848, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.23472944187787245;  // std dev = 0.492, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.1145795623453836;  // std dev = 4.147, 81.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=34 */
%   | | | else return -0.07929498698660993;  // std dev = 1.501, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, D) )
%   | | then return 0.31806567741502584;  // std dev = 0.189, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.086402897160393;  // std dev = 0.490, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, C) )
%   | | then return -0.16801673255234867;  // std dev = 0.061, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, E), complex(E, F) )
%   | | | then return 0.08689089360872712;  // std dev = 1.955, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return -0.014165918170823067;  // std dev = 5.001, 160.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=48 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then return 0.0470758208651258;  // std dev = 0.528, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, I) )
%   | | then return -0.1523041111359922;  // std dev = 0.153, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.10414141362026177;  // std dev = 0.382, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.1284144299244464;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.078', 'seconds']
Refined model CLL: -0.264483


******************************************
Best model found
******************************************
Results 

CLL : -0.270608 

AUC ROC : 0.916944 

AUC PR : 0.305068 

Precision : 0.26087 

Recall : 0.446809 

F1 : 0.329412 

Total Learning Time : 9.79 

Total Inference Time : 5.413890838623047 

Total revision time: 17.994764499664306
Best scored revision CLL: -0.264483


Results 

CLL : -0.270608 

AUC ROC : 0.916944 

AUC PR : 0.305068 

Precision : 0.26087 

Recall : 0.446809 

F1 : 0.329412 

Total Learning Time : 18.017292671203613 

Total Inference Time : 5.413890838623047 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.137
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20366388526562584;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1669895544874203;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return 0.17137496456543003;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1540308787110773;  // std dev = 5.173, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
%   | | | else return 0.1106975936664779;  // std dev = 6.620, 207.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11498468018897018;  // std dev = 4.397, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return 0.12497455548567998;  // std dev = 7.049, 222.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10429986516408883;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08466220162597214;  // std dev = 8.290, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7245514543993901;  // std dev = 0.008, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27510020713714706;  // std dev = 0.009, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11531740567148005;  // std dev = 3.766, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.07595043915134497;  // std dev = 5.119, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.025353353431721792;  // std dev = 4.148, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
%   | | | else return 0.04133278245794818;  // std dev = 6.507, 192.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04342990624813013;  // std dev = 7.640, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.021408849651330403;  // std dev = 7.712, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.267', 'seconds']
Parameter learned model CLL:-0.336799 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.25, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.878, 103, 52], 'false,false,false,false': [5.859, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.173, 77, 41], 'false,false,false,false': [6.62, 144, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.397, 58, 29], 'false,false,false,false': [7.049, 147, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.286, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.29, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.008, 0, 41], 'true,false': [0.009, 70, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.766, 37, 23], 'false,false,false,false': [5.119, 76, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.148, 88, 41], 'false,false,false,false': [6.507, 129, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.64, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.712, 210, 104]}]
{'': [nan, 0.22613436937782366], 'false': [nan, 0.226134369377822], 'false,false': [nan, 0.22613436937782366], 'false,false,false': [nan, 0.226134369377822]}
{'': [nan, 0.22364648338673834], 'false': [nan, 0.22364648338674373], 'false,false': [nan, 0.22364648338673834], 'false,false,false': [0.2229344432882421, 0.2243581528471962]}
{'': [nan, 0.21761696546306628], 'false': [nan, 0.21761696546306628], 'false,false': [nan, 0.21761696546306342], 'false,false,false': [0.22674892038653982, 0.21172953374114606]}
{'': [nan, 0.22338124998140985], 'false': [nan, 0.22338124998140985], 'false,false': [nan, 0.22338124998140768], 'false,false,false': [0.22222222222222282, 0.22380736520693387]}
{'': [nan, 0.2243649476549471], 'false': [nan, 0.2243649476549471], 'false,false': [nan, 0.224364947654946], 'false,false,false': [nan, 0.224364947654946]}
{'': [nan, 0.2245994640299768], 'false': [nan, 0.2245994640299768], 'false,false': [nan, 0.2245994640299768], 'false,false,false': [nan, 0.224599464029977]}
{'': [0.23277475605371759, 0.229838157793744], 'true': [1.7085185540804283e-06, 1.1722529348366453e-06], 'false': [nan, 0.229838157793744], 'false,false': [nan, 0.229838157793744], 'false,false,false': [0.23638888888888926, 0.2259215219976224], 'true,true': [nan, 1.7085185540804283e-06], 'true,true,false': [nan, 1.7085185540804283e-06]}
{'': [nan, 0.18556689469516055], 'false': [nan, 0.18556689469516055], 'false,false': [nan, 0.18556689469516022], 'false,false,false': [0.1333578164922212, 0.22054225497690774]}
{'': [nan, 0.19390381308448537], 'false': [nan, 0.1939038130844859], 'false,false': [nan, 0.1939038130844859], 'false,false,false': [nan, 0.1939038130844859]}
{'': [nan, 0.18943344411599336], 'false': [nan, 0.18943344411599336], 'false,false': [nan, 0.1894334441159932], 'false,false,false': [nan, 0.1894334441159932]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.638
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, A) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.7581489350995123;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.17064893509951196;  // std dev = 0.464, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( interaction(A, F), recursion_proteinclass(G, B) )
%   | | then return 0.7867203636709409;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.12229987849573831;  // std dev = 0.441, 159.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=42 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.782068295118093;  // std dev = 0.188, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B), interaction(E, F) )
%   | | then if ( phenotype(A, G), interaction(A, F) )
%   | | | then return 0.7649046708693433;  // std dev = 0.169, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.3909554187614363;  // std dev = 1.335, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.16415888034597978;  // std dev = 0.099, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0.12910760773512042;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.812570295415677;  // std dev = 0.988, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return -0.1603925913279974;  // std dev = 0.025, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.04259974906527701;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.16150914349226278;  // std dev = 2.845, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C) )
%   | then return 0.5776409060624895;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7213657084396339;  // std dev = 0.077, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, D), interaction(D, D) )
%   | | then if ( phenotype(D, E), complex(A, F) )
%   | | | then return -0.06563192249907718;  // std dev = 1.051, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.05029105562473737;  // std dev = 1.522, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.12606782051255033;  // std dev = 5.797, 199.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=65 */
%   | | | else return 0.027681518920933245;  // std dev = 2.706, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7849805715949019;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.20109739599510945;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.02915491290116734;  // std dev = 0.700, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, C), interaction(C, A) )
%   | | then return 0.5261722779363426;  // std dev = 0.182, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return 0.18133312117965603;  // std dev = 0.433, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return -0.05558935205956058;  // std dev = 0.306, 143.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=19 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.6071730256624309;  // std dev = 0.235, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.17333553863820267;  // std dev = 0.141, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7173984452676084;  // std dev = 0.170, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.156927112462264;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.15201558877638943;  // std dev = 2.522, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.20812751432363383;  // std dev = 2.497, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.37966560170594726;  // std dev = 0.217, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else if ( interaction(A, F), phenotype(D, C) )
%   | | then return -0.07781802153854683;  // std dev = 0.258, 55.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=5 */
%   | | else if ( interaction(G, D), phenotype(G, H) )
%   | | | then return 0.13353810387515666;  // std dev = 3.387, 78.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
%   | | | else return -0.05242069305427886;  // std dev = 1.294, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then if ( phenotype(I, J), complex(A, K) )
%   | | then return -0.015440214399572771;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4575827824698234;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.18589561705517663;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.39964033711264957;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.011745469659556378;  // std dev = 4.168, 133.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=31 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3274823698500981;  // std dev = 0.257, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( location(E, D), phenotype(E, F) )
%   | | then if ( interaction(E, E), phenotype(A, F) )
%   | | | then return -0.07520328131647182;  // std dev = 0.805, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.029130416786436984;  // std dev = 4.666, 186.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=54 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.0041246958876261;  // std dev = 1.572, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.14622403221620336;  // std dev = 2.595, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(A, J), interaction(H, J) )
%   | | | then return -0.05435646686510209;  // std dev = 0.709, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3760026518652823;  // std dev = 1.243, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.1072430766637564;  // std dev = 1.076, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.005748187473162906;  // std dev = 0.920, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4663969923761572;  // std dev = 0.174, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.17845805535186118;  // std dev = 0.075, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.001900567423218888;  // std dev = 0.265, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.13367739286827052;  // std dev = 1.351, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.1737235481155047;  // std dev = 0.107, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5257598929617608;  // std dev = 0.567, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17724741108440634;  // std dev = 0.138, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.33932267649338793;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05959338867260299;  // std dev = 4.435, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return -0.01801586139755142;  // std dev = 0.790, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.5034885613847139;  // std dev = 0.271, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1772640319190855;  // std dev = 0.185, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( interaction(A, G), recursion_proteinclass(H, B) )
%   | | then return 0.3175970423506082;  // std dev = 0.100, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( interaction(A, I), interaction(G, H) )
%   | | | then return -0.05683446495323608;  // std dev = 2.742, 93.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=12 */
%   | | | else return 0.012732136075417936;  // std dev = 4.288, 155.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=44 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then return 0.24685663303699837;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.06694487817706751;  // std dev = 0.862, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.13950505991650058;  // std dev = 1.036, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.18344665739070432;  // std dev = 0.173, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.25481262756294215;  // std dev = 0.323, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.018060506352490076;  // std dev = 1.132, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.23826083059076675;  // std dev = 0.234, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08020295732452608;  // std dev = 2.413, 100.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=9 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.37870266597662805;  // std dev = 1.959, 38.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | | else return -0.19196702422194306;  // std dev = 0.344, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.1088617687741392;  // std dev = 1.258, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.02247388714572968;  // std dev = 3.151, 79.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.18850302520683163;  // std dev = 0.104, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( phenotype(E, F), interaction(G, A) )
%   | | then if ( interaction(G, E), location(G, D) )
%   | | | then return -0.044569223714125104;  // std dev = 1.545, 87.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=19 */
%   | | | else return 0.16418685186912613;  // std dev = 2.150, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( location(E, D), recursion_proteinclass(E, B) )
%   | | | then return 0.3504567801219705;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1273425346895886;  // std dev = 1.341, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(I, J), location(A, K) )
%   | | | then return 0.008123699969554156;  // std dev = 3.372, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | | else return 0.1312995280329226;  // std dev = 1.867, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( location(A, L) )
%   | | | then return 0.3925605840066237;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.050655909905699646;  // std dev = 0.965, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.087', 'seconds']
Refined model CLL: -0.213973


******************************************
Best model found
******************************************
Results 

CLL : -0.227772 

AUC ROC : 0.944348 

AUC PR : 0.314285 

Precision : 0.34026 

Recall : 0.49434 

F1 : 0.403077 

Total Learning Time : 12.638 

Total Inference Time : 6.471463441848755 

Total revision time: 22.23957028388977
Best scored revision CLL: -0.213973


Results 

CLL : -0.227772 

AUC ROC : 0.944348 

AUC PR : 0.314285 

Precision : 0.34026 

Recall : 0.49434 

F1 : 0.403077 

Total Learning Time : 22.262098455429076 

Total Inference Time : 6.471463441848755 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.156
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19027889899842937;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.20837266136613544;  // std dev = 5.646, 136.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=51 */
%   | | | else return 0.16943823513662873;  // std dev = 5.217, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14083699208008313;  // std dev = 5.405, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.15287633169800116;  // std dev = 5.597, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11677647572616638;  // std dev = 4.150, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.11325605128847452;  // std dev = 6.643, 199.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09085038121749339;  // std dev = 7.850, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06340528338362063;  // std dev = 7.912, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.732382824227895;  // std dev = 0.027, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26753192729532066;  // std dev = 0.040, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04375443374848946;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.05002060398634348;  // std dev = 3.969, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.036279862224557397;  // std dev = 4.290, 136.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
%   | | | else return 0.07754029357389836;  // std dev = 5.559, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03696013135589901;  // std dev = 7.085, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04043298857780253;  // std dev = 7.012, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.543', 'seconds']
Parameter learned model CLL:-0.329494 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.839, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.646, 85, 51], 'false,false,false,false': [5.217, 81, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.405, 87, 44], 'false,false,false,false': [5.597, 90, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.15, 51, 26], 'false,false,false,false': [6.643, 133, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.85, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.912, 196, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.027, 0, 44], 'true,false': [0.04, 93, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.134, 54, 25], 'false,false,false,false': [3.969, 50, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.29, 92, 44], 'false,false,false,false': [5.559, 87, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.085, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.012, 174, 92]}]
{'': [nan, 0.22181965097942233], 'false': [nan, 0.22181965097942197], 'false,false': [nan, 0.22181965097942233], 'false,false,false': [nan, 0.22181965097942197]}
{'': [nan, 0.2294333273240762], 'false': [nan, 0.2294333273240803], 'false,false': [nan, 0.2294333273240762], 'false,false,false': [0.23437500000000216, 0.22312550389680133]}
{'': [nan, 0.2251231677073354], 'false': [nan, 0.2251231677073354], 'false,false': [nan, 0.22512316770733407], 'false,false,false': [0.22302890791308785, 0.22704060999366363]}
{'': [nan, 0.22229366345420187], 'false': [nan, 0.22229366345420187], 'false,false': [nan, 0.22229366345420176], 'false,false,false': [0.22364648338674212, 0.22176675293978068]}
{'': [nan, 0.22084807812861937], 'false': [nan, 0.22084807812861937], 'false,false': [nan, 0.22084807812861953], 'false,false,false': [nan, 0.22084807812861953]}
{'': [nan, 0.21738082244757712], 'false': [nan, 0.21738082244757712], 'false,false': [nan, 0.21738082244757556], 'false,false,false': [nan, 0.21738082244757656]}
{'': [0.21799866224799944, 0.21607580258799566], 'true': [1.6675790291419514e-05, 1.679725806577036e-05], 'false': [nan, 0.21607580258799566], 'false,false': [nan, 0.21607580258799566], 'false,false,false': [0.2163114885435029, 0.21580033777444163], 'true,true': [nan, 1.6675790291419514e-05], 'true,true,false': [nan, 1.6675790291419514e-05]}
{'': [nan, 0.18238031308002436], 'false': [nan, 0.18238031308002436], 'false,false': [nan, 0.18238031308002361], 'false,false,false': [0.13532640077350397, 0.22892842028533825]}
{'': [nan, 0.18186000642579397], 'false': [nan, 0.1818600064257937], 'false,false': [nan, 0.1818600064257937], 'false,false,false': [nan, 0.1818600064257937]}
{'': [nan, 0.18482757368524286], 'false': [nan, 0.18482757368524286], 'false,false': [nan, 0.18482757368524302], 'false,false,false': [nan, 0.18482757368524302]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 5.705
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, E), interaction(A, F) )
%   | | then if ( complex(F, E) )
%   | | | then return -0.008517731567154362;  // std dev = 2.280, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | | | else return 0.1795775065280838;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.18573514199606533;  // std dev = 6.191, 174.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(C, C) )
%   | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7194734122109544;  // std dev = 2.98e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13620554826426284;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.10302942840491443;  // std dev = 1.480, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.22765649168901797;  // std dev = 3.666, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | | else return 0.13924166286862258;  // std dev = 5.714, 154.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.5687152915542181;  // std dev = 0.103, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.24873081302881817;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( enzyme(A, F), interaction(G, E) )
%   | | then if ( interaction(E, G) )
%   | | | then return -0.14235321926142608;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.06100193663951462;  // std dev = 0.605, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.2083802345229452;  // std dev = 1.631, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.01951364674720364;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.03057614873945073;  // std dev = 1.974, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.12224330823599652;  // std dev = 6.487, 197.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=61 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4423523618242586;  // std dev = 0.163, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.11151003040104768;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(D, A), interaction(E, D) )
%   | | then if ( enzyme(E, F), phenotype(E, G) )
%   | | | then return 0.23376874763497568;  // std dev = 2.477, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.05615243229993463;  // std dev = 4.710, 121.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=32 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.30481886380460765;  // std dev = 1.748, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.1406095366122642;  // std dev = 4.153, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6815758445614319;  // std dev = 0.164, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.22099364871483948;  // std dev = 0.356, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(E, G), complex(A, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6735751254040274;  // std dev = 0.418, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1678493953867904;  // std dev = 0.143, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.07640055065359588;  // std dev = 0.692, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.02178679897018386;  // std dev = 3.188, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4151246710393456;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, L), complex(A, M) )
%   | | | then return -0.059235057780356204;  // std dev = 1.590, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.07935361009525123;  // std dev = 4.026, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.258136240976597;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, D), complex(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.0021707645600370327;  // std dev = 0.976, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.3931234664322535;  // std dev = 0.688, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return -0.3403981509760286;  // std dev = 0.743, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05662060394892534;  // std dev = 1.564, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), enzyme(J, K) )
%   | | | then return 0.1167028513886768;  // std dev = 2.296, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return -0.02117995921867289;  // std dev = 2.484, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.038532856218812465;  // std dev = 2.603, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.1095273814044528;  // std dev = 4.474, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.0725176387067448;  // std dev = 0.379, 115.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=44 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( complex(D, F) )
%   | | then if ( interaction(D, G), interaction(G, D) )
%   | | | then return -0.05457703723393847;  // std dev = 1.651, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.03160974007539294;  // std dev = 1.982, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.04173814163981273;  // std dev = 1.607, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.1356128312647355;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5922259435311527;  // std dev = 1.032, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.2178381921666552;  // std dev = 0.163, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.1289712523878377;  // std dev = 1.545, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.035884759355862904;  // std dev = 2.107, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1904036482045556;  // std dev = 0.147, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.5669349297190125;  // std dev = 0.383, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, E), complex(A, G) )
%   | | | then return -0.18167147279471532;  // std dev = 0.600, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.03554180428589493;  // std dev = 2.919, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(I, H) )
%   | | | then return -0.10964342442502446;  // std dev = 1.286, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.0790537746710327;  // std dev = 2.017, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.26658058953831965;  // std dev = 1.268, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.04976914412116477;  // std dev = 4.812, 137.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=43 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2398267889610934;  // std dev = 0.167, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1195588121726149;  // std dev = 0.052, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.0153655256279119;  // std dev = 0.382, 191.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=56 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), phenotype(G, H) )
%   | | then if ( interaction(E, E), complex(A, F) )
%   | | | then return -0.06835244600915318;  // std dev = 0.447, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13530005133329415;  // std dev = 2.053, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.6104770312856213;  // std dev = 0.175, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2623761108412182;  // std dev = 0.067, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return 0.4314788981200469;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.462725723373301;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), interaction(E, E) )
%   | then if ( interaction(A, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.1322630942071675;  // std dev = 1.096, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06642711452857974;  // std dev = 0.709, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(E, D) )
%   | | | then return 0.21966045637881684;  // std dev = 1.081, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3838600138903705;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.03249413874559796;  // std dev = 0.375, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   else if ( enzyme(A, H), location(A, I) )
%   | then return -0.03363941901011918;  // std dev = 0.337, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then return -0.06898270189815608;  // std dev = 0.276, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.197694634785507;  // std dev = 1.524, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.041086274324329444;  // std dev = 3.277, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.535', 'seconds']
Refined model CLL: -0.294433


******************************************
Best model found
******************************************
Results 

CLL : -0.26998 

AUC ROC : 0.927369 

AUC PR : 0.186476 

Precision : 0.204868 

Recall : 0.364621 

F1 : 0.262338 

Total Learning Time : 5.705 

Total Inference Time : 2.4200356006622314 

Total revision time: 11.036538301467896
Best scored revision CLL: -0.294433


Results 

CLL : -0.26998 

AUC ROC : 0.927369 

AUC PR : 0.186476 

Precision : 0.204868 

Recall : 0.364621 

F1 : 0.262338 

Total Learning Time : 11.059066473007203 

Total Inference Time : 2.4200356006622314 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.201
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21648226843284596;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1410793832743112;  // std dev = 5.984, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
%   | | | else return 0.14745914711112204;  // std dev = 4.816, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.18186218331812018;  // std dev = 4.189, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   | | | else return 0.13609117725617545;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10671148232276531;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.12381798682609094;  // std dev = 6.657, 198.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08039411439099603;  // std dev = 7.661, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.072412674127333;  // std dev = 7.624, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7297749606786221;  // std dev = 0.011, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.27012560187378276;  // std dev = 0.016, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09555772508239349;  // std dev = 4.600, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | | | else return 0.09794203261194748;  // std dev = 3.993, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08094849806977103;  // std dev = 3.266, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
%   | | | else return 0.025654480029633702;  // std dev = 6.333, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037802471775794794;  // std dev = 7.092, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02472871363532194;  // std dev = 7.095, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.596', 'seconds']
Parameter learned model CLL:-0.339535 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.429, 154, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.984, 115, 52], 'false,false,false,false': [4.816, 73, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.189, 47, 28], 'false,false,false,false': [6.245, 119, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.574, 39, 19], 'false,false,false,false': [6.657, 131, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.661, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.624, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.011, 0, 28], 'true,false': [0.016, 60, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.6, 59, 33], 'false,false,false,false': [3.993, 44, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.266, 45, 28], 'false,false,false,false': [6.333, 130, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.092, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.095, 179, 86]}]
{'': [nan, 0.22993055555555644], 'false': [nan, 0.22993055555555617], 'false,false': [nan, 0.22993055555555644], 'false,false,false': [nan, 0.22993055555555617]}
{'': [nan, 0.21535510682508271], 'false': [nan, 0.21535510682508333], 'false,false': [nan, 0.21535510682508271], 'false,false,false': [0.21442145648821964, 0.2167874923574125]}
{'': [nan, 0.22480328877453526], 'false': [nan, 0.22480328877453526], 'false,false': [nan, 0.2248032887745349], 'false,false,false': [0.2339448688969228, 0.22030623043595532]}
{'': [nan, 0.22305519228938567], 'false': [nan, 0.22305519228938567], 'false,false': [nan, 0.22305519228938567], 'false,false,false': [0.2202734839476806, 0.2238037365971072]}
{'': [nan, 0.2165680415141531], 'false': [nan, 0.2165680415141531], 'false,false': [nan, 0.21656804151415276], 'false,false,false': [nan, 0.21656804151415276]}
{'': [nan, 0.21934988322070928], 'false': [nan, 0.21934988322070928], 'false,false': [nan, 0.21934988322070983], 'false,false,false': [nan, 0.2193498832207095]}
{'': [0.21690358416304048, 0.230467680820727], 'false': [nan, 0.230467680820727], 'false,false': [nan, 0.230467680820727], 'false,false,false': [0.23003308128544514, 0.23104389834068478], 'true': [4.696707842644088e-06, 4.522023270192576e-06], 'true,true': [nan, 4.696707842644088e-06], 'true,true,false': [nan, 4.696707842644088e-06]}
{'': [nan, 0.1951559832650994], 'false': [nan, 0.1951559832650994], 'false,false': [nan, 0.19515598326509953], 'false,false,false': [0.1461281678583258, 0.21333823685517656]}
{'': [nan, 0.19570054422847985], 'false': [nan, 0.19570054422848018], 'false,false': [nan, 0.19570054422848018], 'false,false,false': [nan, 0.19570054422848018]}
{'': [nan, 0.18997379146941407], 'false': [nan, 0.18997379146941407], 'false,false': [nan, 0.1899737914694142], 'false,false,false': [nan, 0.1899737914694142]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.986
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, E), complex(E, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), interaction(H, A) )
%   | | | then return 0.07920156667845946;  // std dev = 4.044, 95.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   | | | else return 0.20214893509951135;  // std dev = 5.311, 125.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7272428531314968;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8274784992514809;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.135974122712106;  // std dev = 0.071, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.11487932501221994;  // std dev = 4.385, 98.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.49602440583254764;  // std dev = 3.279, 49.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=33 */
%   | | | else return -0.1682821725121997;  // std dev = 4.47e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0.33722243532930757;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5562938396865637;  // std dev = 0.061, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.652680383748443;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), phenotype(H, F) )
%   | | | then return 0.7321774916367026;  // std dev = 0.230, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7907732679425515;  // std dev = 0.136, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.16762184138189345;  // std dev = 0.141, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11127085139409723;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.14647181797784256;  // std dev = 1.195, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return 0.14309398334178383;  // std dev = 2.954, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.06017222192029393;  // std dev = 4.826, 142.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=36 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.43907741997854877;  // std dev = 0.045, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(D, G) )
%   | | | then return 0.5307036622624065;  // std dev = 0.216, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7195754375522486;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.12049532917831292;  // std dev = 0.136, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.08027920342798311;  // std dev = 3.295, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6077679983541444;  // std dev = 1.472, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return -0.17397597111166155;  // std dev = 0.316, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.05983522943943317;  // std dev = 1.715, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.23611669876879096;  // std dev = 2.591, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.06415545507495479;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.4045843990323515;  // std dev = 0.116, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( enzyme(E, F), phenotype(E, G) )
%   | | then return -0.21754298460936008;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.09033171713413743;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.030300610347170003;  // std dev = 2.468, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(A, J), enzyme(I, K) )
%   | | | then return -0.02008544731013937;  // std dev = 1.773, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.09152690944317607;  // std dev = 3.795, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.034173805261770475;  // std dev = 2.124, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.17419144748186285;  // std dev = 1.978, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then return 0.27192764772344646;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5665751375974103;  // std dev = 0.105, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(G, D), interaction(G, A) )
%   | | then return -0.11236188965140281;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.21015388110017028;  // std dev = 0.133, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, I), interaction(J, A) )
%   | | | then return 0.49575764274984263;  // std dev = 2.221, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return -0.01632823397829497;  // std dev = 2.357, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else return -0.17490082505887425;  // std dev = 0.044, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.09313594898734673;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2196646815740646;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.20302361701745708;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.32283481085803667;  // std dev = 0.789, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.5797741436786422;  // std dev = 0.399, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.17003421765813492;  // std dev = 0.074, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2519325787640453;  // std dev = 0.092, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.23630735861959595;  // std dev = 3.233, 74.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   | | | else return -0.1507802712425875;  // std dev = 0.306, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.04155912040382537;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.19445858215256726;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.11395858297132291;  // std dev = 1.016, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.38281915199280947;  // std dev = 1.623, 56.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=54 */
%   | | else if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.47222085767939814;  // std dev = 0.576, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.242649903422018;  // std dev = 0.777, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return -0.07299558642855955;  // std dev = 0.081, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.13407474343528283;  // std dev = 0.028, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( enzyme(A, H) )
%   | then return -0.05766824183204429;  // std dev = 0.755, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return -0.14683201950688288;  // std dev = 1.027, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.11757423237918987;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(C, E), phenotype(A, F) )
%   | | then return 0.17953841641454316;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12131066194251769;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21654788250261156;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.27775553387873136;  // std dev = 1.791, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | | else return -0.0430074539756001;  // std dev = 1.829, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return -0.07091739702641484;  // std dev = 0.085, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.11987577315969644;  // std dev = 0.294, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.0659862455568004;  // std dev = 0.692, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.21841857850545754;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.17150266258465274;  // std dev = 0.091, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.10781386401387036;  // std dev = 0.359, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(C, A) )
%   | | then return -0.06965707364967988;  // std dev = 0.022, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( complex(C, F) )
%   | | | then return -0.01639157668733071;  // std dev = 1.927, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return 0.07312716331065744;  // std dev = 1.877, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), complex(I, J) )
%   | | | then return -0.08214107252967373;  // std dev = 1.125, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.18918712078117492;  // std dev = 0.937, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else return -0.09982971550307704;  // std dev = 0.025, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.1398196957020328;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '18.567', 'seconds']
Refined model CLL: -0.152032


******************************************
Best model found
******************************************
Results 

CLL : -0.169523 

AUC ROC : 0.990993 

AUC PR : 0.399467 

Precision : 0.222513 

Recall : 0.90106 

F1 : 0.356893 

Total Learning Time : 13.986 

Total Inference Time : 12.841452360153198 

Total revision time: 29.67627450180054
Best scored revision CLL: -0.152032


Results 

CLL : -0.169523 

AUC ROC : 0.990993 

AUC PR : 0.399467 

Precision : 0.222513 

Recall : 0.90106 

F1 : 0.356893 

Total Learning Time : 29.698802673339845 

Total Inference Time : 12.841452360153198 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.135
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16775747602477906;  // std dev = 7.750, 281.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16240253645857522;  // std dev = 5.446, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return 0.1414411495397415;  // std dev = 5.467, 141.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.18675416874030082;  // std dev = 4.687, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | | | else return 0.14599736337557898;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12780217941487804;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.15267165273495917;  // std dev = 6.537, 185.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09913591804793237;  // std dev = 7.602, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09154612839846339;  // std dev = 7.539, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7237072288591799;  // std dev = 0.002, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2762660384214674;  // std dev = 0.003, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04299469265130839;  // std dev = 4.052, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | | else return 0.06467696501234385;  // std dev = 4.320, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.012043963501983201;  // std dev = 3.876, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   | | | else return 0.10370389232094412;  // std dev = 5.654, 135.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03606667077869853;  // std dev = 6.966, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04704869145038214;  // std dev = 6.847, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.454', 'seconds']
Parameter learned model CLL:-0.347391 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.75, 194, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.446, 91, 44], 'false,false,false,false': [5.467, 98, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.687, 59, 35], 'false,false,false,false': [5.897, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.62, 38, 20], 'false,false,false,false': [6.537, 118, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.602, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.539, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.002, 0, 35], 'true,false': [0.003, 71, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.052, 52, 24], 'false,false,false,false': [4.32, 56, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.876, 81, 35], 'false,false,false,false': [5.654, 83, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.966, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.847, 158, 87]}]
{'': [nan, 0.21375109231139505], 'false': [nan, 0.21375109231139516], 'false,false': [nan, 0.21375109231139505], 'false,false,false': [nan, 0.21375109231139516]}
{'': [nan, 0.21585538752362826], 'false': [nan, 0.21585538752362876], 'false,false': [nan, 0.21585538752362826], 'false,false,false': [0.21969821673525328, 0.21196116895528402]}
{'': [nan, 0.22644063191514407], 'false': [nan, 0.22644063191514407], 'false,false': [nan, 0.2264406319151443], 'false,false,false': [0.23368758496445374, 0.22147960017864926]}
{'': [nan, 0.22991507933413935], 'false': [nan, 0.22991507933413935], 'false,false': [nan, 0.22991507933414002], 'false,false,false': [0.2259215219976221, 0.23101949023071164]}
{'': [nan, 0.22312063091787124], 'false': [nan, 0.22312063091787124], 'false,false': [nan, 0.2231206309178716], 'false,false,false': [nan, 0.2231206309178716]}
{'': [nan, 0.22646692573788535], 'false': [nan, 0.22646692573788535], 'false,false': [nan, 0.22646692573788527], 'false,false,false': [nan, 0.22646692573788535]}
{'': [0.2211524379717287, 0.2194154820221351], 'true': [1.4958442570949566e-07, 1.4588512169806608e-07], 'false': [nan, 0.2194154820221351], 'false,false': [nan, 0.2194154820221351], 'false,false,false': [0.2160664819944593, 0.2222222222222219], 'true,true': [nan, 1.4958442570949566e-07], 'true,true,false': [nan, 1.4958442570949566e-07]}
{'': [nan, 0.18931362871577354], 'false': [nan, 0.18931362871577354], 'false,false': [nan, 0.18931362871577312], 'false,false,false': [0.1295136940823703, 0.23681449164733506]}
{'': [nan, 0.1873639871119683], 'false': [nan, 0.1873639871119681], 'false,false': [nan, 0.1873639871119681], 'false,false,false': [nan, 0.1873639871119681]}
{'': [nan, 0.19132578412181855], 'false': [nan, 0.19132578412181855], 'false,false': [nan, 0.19132578412181883], 'false,false,false': [nan, 0.19132578412181883]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.026
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), enzyme(F, D) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(C, G), complex(C, H) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.4414822684328456;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( location(A, I), interaction(J, A) )
%   | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.6914822684328457;  // std dev = 0.373, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.16302698388000056;  // std dev = 5.895, 164.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=50 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7702470449276387;  // std dev = 0.152, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), phenotype(D, H) )
%   | | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.751137209125924;  // std dev = 0.073, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.12727281146411284;  // std dev = 0.065, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0.08461144011717693;  // std dev = 3.635, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8371226342796219;  // std dev = 4.21e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1628773657203779;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.10984990700689488;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.19785206723107465;  // std dev = 4.479, 88.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=32 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6253573615287908;  // std dev = 0.085, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, E) )
%   | | | then return 0.6037600804087794;  // std dev = 0.130, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2113196524382977;  // std dev = 1.071, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.1187931488517191;  // std dev = 0.102, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.09080671525921034;  // std dev = 3.731, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), enzyme(J, K) )
%   | | | then return 0.14970152556557048;  // std dev = 2.641, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.07325072820823715;  // std dev = 2.542, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.20831848842729359;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13320017689431932;  // std dev = 3.333, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.48294131621484593;  // std dev = 0.101, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.628260999375163;  // std dev = 0.423, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14996630307137615;  // std dev = 0.183, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.008259336510660175;  // std dev = 1.683, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return -0.23449534193729366;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6486334393534852;  // std dev = 1.466, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return -0.1994998341931058;  // std dev = 0.136, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.07651008567765752;  // std dev = 4.771, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | | else return 0.28431791155151864;  // std dev = 1.412, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.34905778387413733;  // std dev = 0.943, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.6413944440859464;  // std dev = 1.727, 62.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=59 */
%   | | else if ( interaction(D, G), interaction(A, G) )
%   | | | then return 0.6548965645042767;  // std dev = 0.185, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19244626491367792;  // std dev = 0.451, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.18200070470440496;  // std dev = 0.053, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.09456628857940176;  // std dev = 0.671, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.11487825819833249;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.21845507513500087;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.022472323468443675;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2401012241740579;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, C), phenotype(C, D) )
%   | | then return -0.06493311506999153;  // std dev = 0.185, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else return 0.032177155868672515;  // std dev = 0.321, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   else if ( phenotype(A, E), complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.45727325566420896;  // std dev = 0.147, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.1532596987902839;  // std dev = 0.237, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return 0.0748574630065174;  // std dev = 3.198, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.1374402889442381;  // std dev = 1.986, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.10251713407944492;  // std dev = 1.071, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.002861639775618786;  // std dev = 1.187, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.21583373311501236;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.34919425267818777;  // std dev = 0.459, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.46408451767528713;  // std dev = 0.879, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return -0.16029026802418506;  // std dev = 0.078, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J) )
%   | | | then return -0.013870032751631648;  // std dev = 1.345, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.29277418393234617;  // std dev = 2.710, 61.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=44 */
%   | | else return -0.17487490883967943;  // std dev = 0.071, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, K), interaction(K, A) )
%   | | then return 0.11697771899094171;  // std dev = 0.607, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2383113207815005;  // std dev = 0.972, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.1382344600874225;  // std dev = 0.259, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else return 0.022691222591390146;  // std dev = 0.277, 205.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=58 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( enzyme(A, G), location(A, H) )
%   | | then return -0.0625274877485115;  // std dev = 0.338, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.04089868504359665;  // std dev = 0.453, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06452188156509801;  // std dev = 0.762, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.15716305619458323;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.16254318403295884;  // std dev = 0.147, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return -0.017318763645823146;  // std dev = 0.643, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.17322907381255834;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(D, F), enzyme(D, G) )
%   | | | then return 0.15701225349645556;  // std dev = 0.923, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.3520827084518006;  // std dev = 2.104, 68.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=63 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.19206338854070357;  // std dev = 0.345, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.25987061132799516;  // std dev = 0.464, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.1384888341762815;  // std dev = 0.527, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then return 0.04786445620905378;  // std dev = 0.608, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3522613905340678;  // std dev = 0.710, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.1355928611642663;  // std dev = 0.113, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.29734480529891666;  // std dev = 0.109, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.1189605525107441;  // std dev = 0.054, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.2634903732445081;  // std dev = 0.094, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.1250789795348374;  // std dev = 0.283, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.16469565018917662;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.017104132018922313;  // std dev = 1.755, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.028258937092271792;  // std dev = 1.286, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.1521541807646839;  // std dev = 1.617, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '10.551', 'seconds']
Refined model CLL: -0.169011


******************************************
Best model found
******************************************
Results 

CLL : -0.169472 

AUC ROC : 0.99396 

AUC PR : 0.491768 

Precision : 0.312883 

Recall : 0.904255 

F1 : 0.464904 

Total Learning Time : 21.026 

Total Inference Time : 16.30924940109253 

Total revision time: 40.16143201446533
Best scored revision CLL: -0.169011


Results 

CLL : -0.169472 

AUC ROC : 0.99396 

AUC PR : 0.491768 

Precision : 0.312883 

Recall : 0.904255 

F1 : 0.464904 

Total Learning Time : 45.36628268814087 

Total Inference Time : 16.30924940109253 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.174
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19913254165689;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18830397304702315;  // std dev = 5.786, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
%   | | | else return 0.17651045041253163;  // std dev = 5.839, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.19895234558430944;  // std dev = 4.984, 104.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=41 */
%   | | | else return 0.14594089154080161;  // std dev = 6.445, 185.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13343727485620893;  // std dev = 4.300, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
%   | | | else return 0.1195483355083782;  // std dev = 7.038, 221.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10119002292231394;  // std dev = 8.248, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05093721975509035;  // std dev = 8.441, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7181965820529486;  // std dev = 0.015, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.282059796757704;  // std dev = 0.019, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05863537100725485;  // std dev = 3.930, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | | else return 0.049842100490899426;  // std dev = 5.225, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.01677901968546257;  // std dev = 4.164, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | | | else return 0.045639682619813195;  // std dev = 6.523, 194.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01157520191065893;  // std dev = 7.833, 342.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03952809011163699;  // std dev = 7.651, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.136', 'seconds']
Parameter learned model CLL:-0.328498 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.786, 94, 52], 'false,false,false,false': [5.839, 99, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.984, 63, 41], 'false,false,false,false': [6.445, 122, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.3, 51, 29], 'false,false,false,false': [7.038, 146, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.248, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.441, 227, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.015, 0, 41], 'true,false': [0.019, 74, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.93, 47, 23], 'false,false,false,false': [5.225, 86, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.164, 89, 41], 'false,false,false,false': [6.523, 131, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.833, 238, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.651, 203, 104]}]
{'': [nan, 0.2247137866165031], 'false': [nan, 0.22471378661650146], 'false,false': [nan, 0.2247137866165031], 'false,false,false': [nan, 0.22471378661650146]}
{'': [nan, 0.22755047670872716], 'false': [nan, 0.22755047670872677], 'false,false': [nan, 0.22755047670872716], 'false,false,false': [0.22931131544379893, 0.2257795710714451]}
{'': [nan, 0.23031829636237564], 'false': [nan, 0.23031829636237564], 'false,false': [nan, 0.23031829636237075], 'false,false,false': [0.2388057158711211, 0.22453570208361473]}
{'': [nan, 0.22603158795490572], 'false': [nan, 0.22603158795490572], 'false,false': [nan, 0.22603158795490888], 'false,false,false': [0.23109375000000112, 0.22414786130236392]}
{'': [nan, 0.22601915077135462], 'false': [nan, 0.22601915077135462], 'false,false': [nan, 0.22601915077135415], 'false,false,false': [nan, 0.22601915077135415]}
{'': [nan, 0.2152350408290097], 'false': [nan, 0.2152350408290097], 'false,false': [nan, 0.2152350408290091], 'false,false,false': [nan, 0.21523504082900896]}
{'': [0.2295368075320056, 0.21810165263638434], 'true': [5.5670410321726e-06, 4.95005454465164e-06], 'false': [nan, 0.21810165263638434], 'false,false': [nan, 0.21810165263638434], 'false,false,false': [0.22061224489795928, 0.216679264298313], 'true,true': [nan, 5.5670410321726e-06], 'true,true,false': [nan, 5.5670410321726e-06]}
{'': [nan, 0.1850572812863871], 'false': [nan, 0.1850572812863871], 'false,false': [nan, 0.18505728128638765], 'false,false,false': [0.1333881031194216, 0.21934675391329758]}
{'': [nan, 0.17940535547895356], 'false': [nan, 0.17940535547895428], 'false,false': [nan, 0.17940535547895428], 'false,false,false': [nan, 0.17940535547895428]}
{'': [nan, 0.19068052216354917], 'false': [nan, 0.19068052216354917], 'false,false': [nan, 0.19068052216354878], 'false,false,false': [nan, 0.19068052216354878]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.124
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), complex(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.8081489350995122;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.04839312097525403;  // std dev = 3.011, 107.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=10 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23198071080044574;  // std dev = 5.005, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6679622977832296;  // std dev = 0.238, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, D), complex(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1528722908404808;  // std dev = 0.126, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.051473642840224695;  // std dev = 2.207, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5935996495073436;  // std dev = 1.323, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.03332821117302846;  // std dev = 3.470, 89.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
%   | else if ( location(A, G), phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.681810905119405;  // std dev = 1.794, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | | else return -0.1634885427105791;  // std dev = 0.127, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( location(A, J), enzyme(A, K) )
%   | | | then return 0.24219766392148906;  // std dev = 2.059, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.11079302855221207;  // std dev = 3.278, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(C, E) )
%   | then return 0.21282933751544544;  // std dev = 1.113, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.6401870976581405;  // std dev = 0.075, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( location(A, F), interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I), complex(A, J) )
%   | | | then return 0.19337109071766895;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5811473446108989;  // std dev = 1.319, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.1476039446125768;  // std dev = 0.369, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0.08403772924862003;  // std dev = 5.485, 190.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=52 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then return 0.8273963482892213;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.22227480230962615;  // std dev = 1.528, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.020479396411144032;  // std dev = 1.473, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.3981791757141004;  // std dev = 0.317, 35.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | else if ( interaction(A, C) )
%   | | then return -0.13959329651415192;  // std dev = 0.065, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(F, C), interaction(C, F) )
%   | | | then return 0.08809442845041826;  // std dev = 5.042, 158.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=48 */
%   | | | else return -0.02838234951491801;  // std dev = 1.284, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.6737474338349313;  // std dev = 0.452, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.25275293401657006;  // std dev = 1.338, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return -0.16674502906792152;  // std dev = 0.188, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return 0.1386326144350646;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.05795037916683032;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), interaction(D, C) )
%   | then if ( enzyme(A, E), interaction(C, D) )
%   | | then return 0.012111242186958457;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.33378194083284063;  // std dev = 0.127, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5220308925144714;  // std dev = 0.143, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), complex(G, I) )
%   | | | then return 0.4832900913126901;  // std dev = 0.301, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 1.958313202563305E-4;  // std dev = 1.668, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.11761843756500864;  // std dev = 0.265, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0.06572195531602662;  // std dev = 5.581, 198.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=58 */
%   else if ( interaction(A, J), enzyme(J, K) )
%   | then return 0.2742976872932082;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.20371843877611936;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then return 0.23060217316858744;  // std dev = 0.280, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | else return -0.12442286485820205;  // std dev = 0.242, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.31174423769618664;  // std dev = 0.218, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.0979793573085317;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.04012289200400976;  // std dev = 2.768, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.32309228615119917;  // std dev = 0.718, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.0500520484243354;  // std dev = 2.403, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.25437371590115976;  // std dev = 1.993, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.13227805474139714;  // std dev = 2.852, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.28373589015615647;  // std dev = 0.057, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.41497996052432634;  // std dev = 0.122, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.14890097583035258;  // std dev = 0.091, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.11010677201187309;  // std dev = 1.490, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return 0.4554084515086332;  // std dev = 2.838, 55.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=43 */
%   | | else return -0.19202721329123695;  // std dev = 0.052, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(A, K) )
%   | | | then return -0.22605391605549494;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.10018532341939772;  // std dev = 1.353, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.14244219087064022;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(A, E) )
%   | | then return 0.20373249546732008;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.053120313249127284;  // std dev = 0.614, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.04859252780034415;  // std dev = 0.242, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.31435513345759236;  // std dev = 0.115, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.14308588866129854;  // std dev = 0.240, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.14720269643246045;  // std dev = 1.261, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.030815802800244835;  // std dev = 0.634, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.03750291903082954;  // std dev = 4.085, 127.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=42 */
%   | | | else return -0.04617705663512973;  // std dev = 2.115, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.17700257296502364;  // std dev = 0.209, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.04955085866877671;  // std dev = 0.142, 113.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=16 */
%   else if ( phenotype(A, F), interaction(G, A) )
%   | then if ( complex(G, H), location(A, I) )
%   | | then if ( phenotype(G, J), enzyme(G, K) )
%   | | | then return -0.006472596948259297;  // std dev = 2.146, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.05583013044423803;  // std dev = 2.381, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | else if ( interaction(G, L), recursion_proteinclass(L, B) )
%   | | | then return 0.2645450205546878;  // std dev = 0.951, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.2296203439766525;  // std dev = 0.464, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.2533483551584761;  // std dev = 0.229, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return -0.0010639980763142351;  // std dev = 1.580, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.07082243586096036;  // std dev = 2.929, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.16444682792082152;  // std dev = 0.135, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.2572930888810262;  // std dev = 0.222, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, E), complex(A, F) )
%   | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, F) )
%   | | | then return 0.24611136510620626;  // std dev = 0.378, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.16221510994554605;  // std dev = 0.354, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.09615578584059237;  // std dev = 0.189, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( phenotype(H, J), phenotype(I, J) )
%   | | | then return 0.07752371702024002;  // std dev = 2.020, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.40833049116469844;  // std dev = 1.054, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( location(A, K) )
%   | | | then return 0.014626569865418403;  // std dev = 3.552, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | | | else return 0.17686621342995;  // std dev = 1.381, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.226', 'seconds']
Refined model CLL: -0.217576


******************************************
Best model found
******************************************
Results 

CLL : -0.203935 

AUC ROC : 0.974458 

AUC PR : 0.41901 

Precision : 0.276899 

Recall : 0.660377 

F1 : 0.39019 

Total Learning Time : 13.124 

Total Inference Time : 12.297887086868286 

Total revision time: 28.646199844360353
Best scored revision CLL: -0.217576


Results 

CLL : -0.203935 

AUC ROC : 0.974458 

AUC PR : 0.41901 

Precision : 0.276899 

Recall : 0.660377 

F1 : 0.39019 

Total Learning Time : 33.85105051803589 

Total Inference Time : 12.297887086868286 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.15
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18908418689807358;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1647073273763479;  // std dev = 5.840, 154.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=51 */
%   | | | else return 0.16960406997800856;  // std dev = 5.217, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13026183069396113;  // std dev = 5.465, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.13116076802893828;  // std dev = 5.704, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12616888274126653;  // std dev = 4.150, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.09201262625660668;  // std dev = 6.777, 217.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10168829041110923;  // std dev = 7.844, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08679796860464889;  // std dev = 7.823, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7336484534942769;  // std dev = 0.019, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2655856896172742;  // std dev = 0.026, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03541587860418732;  // std dev = 4.190, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   | | | else return 0.056292885073817654;  // std dev = 3.956, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.057474137535570576;  // std dev = 4.210, 126.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
%   | | | else return 0.07872188730573838;  // std dev = 5.585, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04134398535098675;  // std dev = 7.054, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03870230962422353;  // std dev = 7.028, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.458', 'seconds']
Parameter learned model CLL:-0.32695 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.84, 103, 51], 'false,false,false,false': [5.217, 81, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.465, 93, 44], 'false,false,false,false': [5.704, 101, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.15, 51, 26], 'false,false,false,false': [6.777, 151, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.844, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.823, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.019, 0, 44], 'true,false': [0.026, 81, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.19, 59, 25], 'false,false,false,false': [3.956, 49, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.21, 82, 44], 'false,false,false,false': [5.585, 89, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.054, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.028, 176, 92]}]
{'': [nan, 0.22141711091558536], 'false': [nan, 0.221417110915585], 'false,false': [nan, 0.22141711091558536], 'false,false,false': [nan, 0.221417110915585]}
{'': [nan, 0.2222222222222273], 'false': [nan, 0.22222222222222213], 'false,false': [nan, 0.2222222222222273], 'false,false,false': [0.22149603643110127, 0.22312550389680183]}
{'': [nan, 0.21821776309372007], 'false': [nan, 0.21821776309372007], 'false,false': [nan, 0.21821776309371999], 'false,false,false': [0.21802614660512834, 0.21839356029062412]}
{'': [nan, 0.21502235514906437], 'false': [nan, 0.21502235514906437], 'false,false': [nan, 0.21502235514906537], 'false,false,false': [0.2236464833867436, 0.21165662946007938]}
{'': [nan, 0.22130682778424618], 'false': [nan, 0.22130682778424618], 'false,false': [nan, 0.22130682778424582], 'false,false,false': [nan, 0.22130682778424582]}
{'': [nan, 0.2225352803842843], 'false': [nan, 0.2225352803842843], 'false,false': [nan, 0.22253528038428455], 'false,false,false': [nan, 0.222535280384284]}
{'': [0.22775477351770756, 0.21300768675152057], 'true': [7.88234325810322e-06, 8.09094420321325e-06], 'false': [nan, 0.21300768675152057], 'false,false': [nan, 0.21300768675152057], 'false,false,false': [0.20904195011337887, 0.217399691358025], 'true,true': [nan, 7.88234325810322e-06], 'true,true,false': [nan, 7.88234325810322e-06]}
{'': [nan, 0.18609938065774792], 'false': [nan, 0.18609938065774792], 'false,false': [nan, 0.18609938065774673], 'false,false,false': [0.1406565108389782, 0.22767726078706058]}
{'': [nan, 0.18027262279093165], 'false': [nan, 0.1802726227909328], 'false,false': [nan, 0.1802726227909328], 'false,false,false': [nan, 0.1802726227909328]}
{'': [nan, 0.1843095553499169], 'false': [nan, 0.1843095553499169], 'false,false': [nan, 0.18430955534991667], 'false,false,false': [nan, 0.18430955534991667]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.34
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.13474467978036223;  // std dev = 5.312, 141.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=39 */
%   | else if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.12130682983635446;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.2140811384893424;  // std dev = 3.678, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( complex(D, E), interaction(D, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.7484779775297137;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.05333069487603197;  // std dev = 0.402, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | else if ( phenotype(A, G), phenotype(D, H) )
%   | | then return 0.8004526083941349;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.15619471171805724;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.26946765912198;  // std dev = 1.448, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then return 0.051315981139437014;  // std dev = 0.403, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.10578399316479915;  // std dev = 3.892, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | | else return 0.18399000605901633;  // std dev = 4.495, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, E) )
%   | | then if ( phenotype(E, G), complex(A, H) )
%   | | | then return 0.32014700871195684;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6824621856730623;  // std dev = 0.374, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.7923202730110798;  // std dev = 0.068, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.1719317661706713;  // std dev = 0.315, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( phenotype(A, I), complex(A, J) )
%   | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.7494353673314398;  // std dev = 0.109, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.17274597096203373;  // std dev = 0.138, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.5539317875463411;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.03271164519760405;  // std dev = 1.782, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.10055786240642517;  // std dev = 5.015, 128.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=37 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4043354171700833;  // std dev = 0.148, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(D, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.11905281945187655;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.05575326121538114;  // std dev = 0.616, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( phenotype(D, H) )
%   | | | then return -0.12941739319157686;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.12327055405314619;  // std dev = 1.046, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7859489990955776;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.15710068266104604;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.1306199054806143;  // std dev = 4.322, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | | else return 0.20088081568576374;  // std dev = 4.011, 82.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( complex(A, E), complex(C, E) )
%   | then return 0.006787582708473815;  // std dev = 0.292, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | else return 0.09175711543626686;  // std dev = 0.406, 148.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=51 */
%   else if ( complex(A, F), interaction(A, G) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.24505320477806303;  // std dev = 0.991, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, I), enzyme(G, I) )
%   | | | then return -0.09417956773756143;  // std dev = 0.839, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.0958090407680978;  // std dev = 1.514, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return 0.170311634916736;  // std dev = 0.990, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5131666954376333;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.0809770167071365;  // std dev = 1.454, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.27339227624848556;  // std dev = 1.345, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then return 0.3767878495987674;  // std dev = 0.149, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2789274142931558;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6059170280084677;  // std dev = 0.263, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.23817841628804956;  // std dev = 3.455, 71.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=40 */
%   | | | else return 0.45875009400086814;  // std dev = 2.663, 47.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=36 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return -0.12450799327618037;  // std dev = 0.118, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.22143985459091098;  // std dev = 0.561, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else return -0.13502698498700214;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.03728869029133046;  // std dev = 0.324, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( location(E, D), phenotype(A, F) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.0769200921325612;  // std dev = 0.457, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.322825773505194;  // std dev = 1.191, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.1547111102346245;  // std dev = 1.293, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.0045750242145521074;  // std dev = 2.105, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.297787499762231;  // std dev = 2.321, 33.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=23 */
%   | | | else return -0.19270567531728747;  // std dev = 0.280, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.08046286342226394;  // std dev = 0.299, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1450574224184509;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return -0.01984387767848943;  // std dev = 0.294, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.3660406690385845;  // std dev = 0.108, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(C, F), complex(A, F) )
%   | | | then return -0.12305154410680322;  // std dev = 1.167, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.04081470438877071;  // std dev = 3.266, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( phenotype(A, I), complex(G, J) )
%   | | then if ( interaction(G, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5052018024028951;  // std dev = 0.329, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.196121947556684;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(L, G), interaction(G, L) )
%   | | | then return 0.15718336691108437;  // std dev = 1.516, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.039333395186514575;  // std dev = 2.820, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | else return -0.01742212236482306;  // std dev = 0.602, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.2522875317700765;  // std dev = 0.079, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, C) )
%   | | then return -0.10317883174239942;  // std dev = 0.276, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else if ( phenotype(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0.4232460073459019;  // std dev = 0.924, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.20727435690822302;  // std dev = 0.586, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3327586267512738;  // std dev = 0.124, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(H, J), interaction(I, I) )
%   | | | then return 0.31971257635646855;  // std dev = 0.577, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.006813046202673194;  // std dev = 3.018, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.12305150831392225;  // std dev = 1.322, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.035291141805388414;  // std dev = 2.621, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then if ( interaction(C, E), enzyme(A, D) )
%   | | then return 0.20525709266030762;  // std dev = 0.139, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.2835591366867654;  // std dev = 0.612, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.2637497504785524;  // std dev = 0.115, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( location(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.3691398926445791;  // std dev = 0.212, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.1828934469344136;  // std dev = 0.072, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( phenotype(J, K), complex(I, L) )
%   | | | then return 0.019127497331661584;  // std dev = 1.511, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.13499786040696535;  // std dev = 0.809, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.008647012779696171;  // std dev = 1.937, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.03817461447145701;  // std dev = 3.412, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.972', 'seconds']
Refined model CLL: -0.225851


******************************************
Best model found
******************************************
Results 

CLL : -0.220645 

AUC ROC : 0.975958 

AUC PR : 0.330956 

Precision : 0.265789 

Recall : 0.729242 

F1 : 0.389585 

Total Learning Time : 9.34 

Total Inference Time : 5.550627946853638 

Total revision time: 17.910571804046633
Best scored revision CLL: -0.225851


Results 

CLL : -0.220645 

AUC ROC : 0.975958 

AUC PR : 0.330956 

Precision : 0.265789 

Recall : 0.729242 

F1 : 0.389585 

Total Learning Time : 23.11542247772217 

Total Inference Time : 5.550627946853638 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.133
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.209169343262778;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17510379948207444;  // std dev = 5.839, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
%   | | | else return 0.16406627188825362;  // std dev = 4.761, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13857732176969823;  // std dev = 4.320, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | | else return 0.11067701501163951;  // std dev = 6.348, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09343958349937188;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.10614079354210193;  // std dev = 6.754, 210.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08775777022208305;  // std dev = 7.648, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10149135600053603;  // std dev = 7.480, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7298626696245947;  // std dev = 0.000811, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2701590895662653;  // std dev = 0.001, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10374010710052745;  // std dev = 4.557, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
%   | | | else return 0.07757418544451189;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04875934799738399;  // std dev = 3.388, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.05840392059101187;  // std dev = 6.174, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033154808462386685;  // std dev = 7.090, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019639751987904363;  // std dev = 7.113, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.726', 'seconds']
Parameter learned model CLL:-0.342572 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.471, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.839, 99, 52], 'false,false,false,false': [4.761, 68, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.32, 56, 28], 'false,false,false,false': [6.348, 132, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.617, 42, 19], 'false,false,false,false': [6.754, 143, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.648, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.48, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.000811, 0, 28], 'true,false': [0.001, 49, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.557, 56, 33], 'false,false,false,false': [4.054, 48, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.388, 53, 28], 'false,false,false,false': [6.174, 111, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.09, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.113, 181, 86]}]
{'': [nan, 0.22780508121616078], 'false': [nan, 0.22780508121616053], 'false,false': [nan, 0.22780508121616078], 'false,false,false': [nan, 0.22780508121616053]}
{'': [nan, 0.2243746973081891], 'false': [nan, 0.22437469730818949], 'false,false': [nan, 0.2243746973081891], 'false,false,false': [0.22577957107144167, 0.22222222222222252]}
{'': [nan, 0.2153491924568559], 'false': [nan, 0.2153491924568559], 'false,false': [nan, 0.21534919245685552], 'false,false,false': [0.2222091641732892, 0.21207772096596328]}
{'': [nan, 0.21660550110699228], 'false': [nan, 0.21660550110699228], 'false,false': [nan, 0.21660550110699292], 'false,false,false': [0.21445847890352027, 0.21719284788981477]}
{'': [nan, 0.21745108713174682], 'false': [nan, 0.21745108713174682], 'false,false': [nan, 0.21745108713174657], 'false,false,false': [nan, 0.21745108713174657]}
{'': [nan, 0.22744046203590232], 'false': [nan, 0.22744046203590232], 'false,false': [nan, 0.2274404620359026], 'false,false,false': [nan, 0.22744046203590304]}
{'': [0.2314150539518389, 0.22981394551239845], 'true': [2.3474208545236153e-08, 2.5550159530046803e-08], 'false': [nan, 0.22981394551239845], 'false,false': [nan, 0.22981394551239845], 'false,false,false': [0.2333038757732599, 0.22518296115593875], 'true,true': [nan, 2.3474208545236153e-08], 'true,true,false': [nan, 2.3474208545236153e-08]}
{'': [nan, 0.1984191696143519], 'false': [nan, 0.1984191696143519], 'false,false': [nan, 0.1984191696143519], 'false,false,false': [0.1416980180159782, 0.22557490924676885]}
{'': [nan, 0.1933404116489378], 'false': [nan, 0.19334041164893837], 'false,false': [nan, 0.19334041164893837], 'false,false,false': [nan, 0.19334041164893837]}
{'': [nan, 0.18951418217990662], 'false': [nan, 0.18951418217990662], 'false,false': [nan, 0.1895141821799064], 'false,false,false': [nan, 0.1895141821799064]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.767
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), complex(G, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.084564029439135;  // std dev = 3.047, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.17140194714770407;  // std dev = 5.976, 166.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.7672312985929877;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, A) )
%   | | then return -0.15420859093029618;  // std dev = 0.035, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(C, F), interaction(F, F) )
%   | | | then return 0.30294340813204834;  // std dev = 2.322, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.15061800817848353;  // std dev = 2.639, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then return 0.1136236572348308;  // std dev = 0.437, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8359774955492693;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16402250445073077;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11972284624915794;  // std dev = 2.952, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6673698588550029;  // std dev = 0.081, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then if ( interaction(D, E) )
%   | | | then return -0.13077446362589626;  // std dev = 0.049, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.028837798776354187;  // std dev = 0.960, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | | then return 0.75324814461938;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07149059745873944;  // std dev = 4.930, 131.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=33 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then if ( phenotype(H, G) )
%   | | | then return 0.02571968756946384;  // std dev = 1.798, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.163095350493674;  // std dev = 2.134, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( location(A, I) )
%   | | | then return 0.23123109542085493;  // std dev = 2.847, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.10460873841434339;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), interaction(C, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.542504417851002;  // std dev = 0.198, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0858744175886842;  // std dev = 0.428, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.7968589601403409;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.20476223143058955;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6570959835569301;  // std dev = 0.275, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else return -0.19954530340242851;  // std dev = 0.063, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5032852645291709;  // std dev = 0.088, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.02078760171250969;  // std dev = 2.286, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.15717830830450732;  // std dev = 4.076, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then return 0.13382604280377244;  // std dev = 0.758, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.35327568264137127;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.43339589875958284;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5294587529336566;  // std dev = 0.166, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.11616411990368677;  // std dev = 0.049, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3519949828841576;  // std dev = 0.948, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.06879086187739085;  // std dev = 4.836, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12481581992660035;  // std dev = 2.801, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.28029450728806776;  // std dev = 1.726, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.3530951864638618;  // std dev = 0.127, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then return -0.029115469801149114;  // std dev = 0.346, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.2024597594948033;  // std dev = 1.944, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.09456765978874491;  // std dev = 3.522, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then return 0.05448172688591831;  // std dev = 0.387, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.456050247487006;  // std dev = 1.350, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return -0.22009649632965744;  // std dev = 0.529, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return -0.1049606096169387;  // std dev = 1.453, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.0489873768058493;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5313530113034094;  // std dev = 0.219, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.1911919368329101;  // std dev = 0.063, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.30887866830249583;  // std dev = 0.226, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.14484910171039508;  // std dev = 0.110, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.05805907230452323;  // std dev = 2.784, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | else if ( enzyme(A, G) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.14907657117663456;  // std dev = 0.916, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.008271597820454245;  // std dev = 1.665, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.36207918165737735;  // std dev = 1.499, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.14484464352413634;  // std dev = 2.560, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return -0.027196456825753466;  // std dev = 0.830, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.1702563913693965;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23678761441368268;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.39922135635557493;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.29682829607232347;  // std dev = 0.339, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K), phenotype(K, L) )
%   | | | then return -0.09627360821068806;  // std dev = 1.339, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return -0.00861380933231746;  // std dev = 2.121, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(M, A), location(A, N) )
%   | | | then return 0.010633658102368165;  // std dev = 4.627, 152.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
%   | | | else return 0.15368738018274986;  // std dev = 1.736, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.1898360048018214;  // std dev = 0.096, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.08698848300029786;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B), location(F, G) )
%   | | then return 0.253808814083286;  // std dev = 0.199, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(F, H), location(E, I) )
%   | | | then return -0.0560070889150297;  // std dev = 3.281, 128.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=22 */
%   | | | else return 0.28327475089086923;  // std dev = 0.970, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.541321162391217;  // std dev = 0.320, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.22023362839729002;  // std dev = 0.171, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return -0.010424739967117992;  // std dev = 1.282, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.09615280898082948;  // std dev = 3.418, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), complex(D, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.34343660666860165;  // std dev = 0.745, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.05005440198190776;  // std dev = 1.924, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | else if ( interaction(I, D), interaction(I, A) )
%   | | | then return 0.49753364140659634;  // std dev = 1.390, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | | else return 0.06013373809231162;  // std dev = 1.796, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( complex(A, J) )
%   | | then return -0.15098998001084332;  // std dev = 0.041, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.23751623552392234;  // std dev = 0.075, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(K, A) )
%   | then if ( interaction(K, K) )
%   | | then return 0.07321188432504928;  // std dev = 0.559, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14883958018510032;  // std dev = 0.270, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return -0.22453217966999636;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '8.057', 'seconds']
Refined model CLL: -0.224147


******************************************
Best model found
******************************************
Results 

CLL : -0.233696 

AUC ROC : 0.981117 

AUC PR : 0.296016 

Precision : 0.269891 

Recall : 0.611307 

F1 : 0.374459 

Total Learning Time : 9.767 

Total Inference Time : 7.351853132247925 

Total revision time: 19.807676696777342
Best scored revision CLL: -0.224147


Results 

CLL : -0.233696 

AUC ROC : 0.981117 

AUC PR : 0.296016 

Precision : 0.269891 

Recall : 0.611307 

F1 : 0.374459 

Total Learning Time : 25.01252737045288 

Total Inference Time : 7.351853132247925 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.104
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1979926850995123;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16065695708485472;  // std dev = 5.436, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return 0.18767064895607713;  // std dev = 5.265, 121.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11660790454998071;  // std dev = 4.915, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | | | else return 0.1577083727899228;  // std dev = 5.808, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11783849753931393;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.11177818321978462;  // std dev = 6.699, 203.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08484764587109002;  // std dev = 7.686, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0918838028149738;  // std dev = 7.557, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7351998950963323;  // std dev = 0.012, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2648495242103961;  // std dev = 0.016, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.117197239650935;  // std dev = 3.835, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return 0.04658342875509939;  // std dev = 4.358, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03389565687794793;  // std dev = 3.848, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | | else return 0.06995865266765525;  // std dev = 5.774, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03632739537156649;  // std dev = 6.982, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01471232920019604;  // std dev = 7.093, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.479', 'seconds']
Parameter learned model CLL:-0.336542 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.436, 90, 44], 'false,false,false,false': [5.265, 78, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.915, 78, 35], 'false,false,false,false': [5.808, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.666, 41, 20], 'false,false,false,false': [6.699, 136, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.686, 184, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.557, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.012, 0, 35], 'true,false': [0.016, 59, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.835, 38, 24], 'false,false,false,false': [4.358, 59, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.848, 75, 35], 'false,false,false,false': [5.774, 93, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.982, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.093, 179, 87]}]
{'': [nan, 0.2243499755859384], 'false': [nan, 0.22434997558593836], 'false,false': [nan, 0.2243499755859384], 'false,false,false': [nan, 0.22434997558593836]}
{'': [nan, 0.22477508650519057], 'false': [nan, 0.22477508650519118], 'false,false': [nan, 0.22477508650519057], 'false,false,false': [0.22053909556694223, 0.22908271292944551]}
{'': [nan, 0.2222266624040925], 'false': [nan, 0.2222266624040925], 'false,false': [nan, 0.2222266624040927], 'false,false,false': [0.21379348281030397, 0.22793414852867855]}
{'': [nan, 0.22092727192894804], 'false': [nan, 0.22092727192894804], 'false,false': [nan, 0.22092727192894804], 'false,false,false': [0.22037086804622436, 0.2210859809268131]}
{'': [nan, 0.21796490326720389], 'false': [nan, 0.21796490326720389], 'false,false': [nan, 0.2179649032672039], 'false,false,false': [nan, 0.2179649032672039]}
{'': [nan, 0.22572662999492715], 'false': [nan, 0.22572662999492715], 'false,false': [nan, 0.22572662999492699], 'false,false,false': [nan, 0.22572662999492718]}
{'': [0.23373022979314878, 0.22737378719453252], 'true': [4.080736550601419e-06, 4.1071130441916085e-06], 'false': [nan, 0.22737378719453252], 'false,false': [nan, 0.22737378719453252], 'false,false,false': [0.23725286160249787, 0.2182586867485797], 'true,true': [nan, 4.080736550601419e-06], 'true,true,false': [nan, 4.080736550601419e-06]}
{'': [nan, 0.18915083015099157], 'false': [nan, 0.18915083015099157], 'false,false': [nan, 0.18915083015099157], 'false,false,false': [0.13463518292734059, 0.22994651093426194]}
{'': [nan, 0.18747197588485845], 'false': [nan, 0.18747197588485895], 'false,false': [nan, 0.18747197588485895], 'false,false,false': [nan, 0.18747197588485895]}
{'': [nan, 0.18912573321167356], 'false': [nan, 0.18912573321167356], 'false,false': [nan, 0.1891257332116725], 'false,false,false': [nan, 0.1891257332116725]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.506
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(A, E), interaction(F, A) )
%   | | | then return 0.17393840878372288;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.0486251255757027;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.3343394112899885;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.18145720577620295;  // std dev = 5.394, 133.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, F), interaction(D, D) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.03562940169864797;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.019364193219334972;  // std dev = 2.248, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return 0.16224394837544137;  // std dev = 1.816, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(J, J), complex(A, K) )
%   | | | then return 0.36958258440601754;  // std dev = 1.413, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.13483081844807288;  // std dev = 5.956, 177.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=53 */
%   | | else if ( interaction(L, A), interaction(A, L) )
%   | | | then return 0.16792739860073366;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3290280377065246;  // std dev = 1.350, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then if ( interaction(C, A) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7178502499262273;  // std dev = 0.212, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3053664367462845;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.13149501633562855;  // std dev = 0.073, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( enzyme(A, G), interaction(H, E) )
%   | | | then return 0.17983400071344186;  // std dev = 2.133, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.02575471799826038;  // std dev = 2.718, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.22719060725702017;  // std dev = 3.240, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | else return 0.11149983304990316;  // std dev = 5.004, 128.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.5828601532018631;  // std dev = 0.162, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.014606767029180134;  // std dev = 0.381, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( phenotype(A, H), recursion_proteinclass(F, B) )
%   | | then return 0.5002553900825646;  // std dev = 0.235, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.43426782586843676;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.08699715268638125;  // std dev = 2.390, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.7234494155503766;  // std dev = 0.282, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.061393078760700624;  // std dev = 1.824, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.09131141401667917;  // std dev = 3.784, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | | else return 0.1848817480537692;  // std dev = 3.472, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3182275217191983;  // std dev = 0.122, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4914031257961861;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( complex(A, F) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.047976923048443657;  // std dev = 1.881, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.19354534371675552;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.08731417385448634;  // std dev = 1.123, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.008627582755382376;  // std dev = 0.834, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4254451421311235;  // std dev = 4.286, 92.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=63 */
%   | | | else return -0.22275591705559306;  // std dev = 0.395, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else return 0.25866281193524;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.4612516217931355;  // std dev = 0.504, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.06435369574570977;  // std dev = 0.614, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(D, F), interaction(G, A) )
%   | | then return -0.143986312046492;  // std dev = 0.302, 37.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | else if ( phenotype(D, H), interaction(I, A) )
%   | | | then return -0.08856353733459092;  // std dev = 0.768, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.21023751160572013;  // std dev = 1.502, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.22497893445202086;  // std dev = 0.186, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1514770300606195;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(A, K) )
%   | | | then return 0.05870230244126845;  // std dev = 5.580, 190.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=59 */
%   | | | else return -0.06587905635123385;  // std dev = 1.459, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5557362628949445;  // std dev = 0.164, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.21875054908070674;  // std dev = 0.061, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( location(A, F), recursion_proteinclass(E, B) )
%   | | then return 0.22906076195397357;  // std dev = 0.200, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, G), phenotype(E, H) )
%   | | | then return -0.1147745137982825;  // std dev = 1.356, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 6.501767440198889E-4;  // std dev = 2.784, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6769252836468922;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.21100593714190283;  // std dev = 0.106, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.021122778425587897;  // std dev = 1.985, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.13801199057227886;  // std dev = 2.602, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1935527437846065;  // std dev = 0.086, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G), phenotype(A, H) )
%   | | | then return 0.2448823592596606;  // std dev = 0.540, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5805173672228262;  // std dev = 0.255, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.16696355427647738;  // std dev = 0.372, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.03599972502786987;  // std dev = 3.066, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, I), phenotype(A, K) )
%   | | | then return 0.13827831344466177;  // std dev = 0.835, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.024373595741680257;  // std dev = 3.028, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.19781700152048448;  // std dev = 1.076, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.0839682359087963;  // std dev = 2.670, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then return -0.019692245942135134;  // std dev = 0.285, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), enzyme(G, H) )
%   | | then if ( complex(A, I), interaction(J, G) )
%   | | | then return 0.029323224795898228;  // std dev = 1.044, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.1935223779794375;  // std dev = 2.012, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( interaction(K, E), complex(K, L) )
%   | | | then return -0.003647320694453577;  // std dev = 1.779, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.11575960945993606;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(A, M), enzyme(M, N) )
%   | | then if ( complex(M, P), interaction(M, Q) )
%   | | | then return -0.21792593455531867;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.05337279208066108;  // std dev = 1.064, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, R) )
%   | | | then return 0.2014708575378568;  // std dev = 1.771, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.0014605740678145626;  // std dev = 3.042, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), phenotype(C, E) )
%   | then return 0.2442258281288937;  // std dev = 0.244, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(A, C), phenotype(D, H) )
%   | | | then return -0.20111334231716071;  // std dev = 0.833, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.028096917570647497;  // std dev = 2.005, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.2151508322705626;  // std dev = 1.046, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.006151287367821967;  // std dev = 4.283, 144.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=43 */
%   else if ( interaction(A, J), interaction(J, K) )
%   | then if ( interaction(K, K) )
%   | | then return 0.025929889275245716;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.04713765517179553;  // std dev = 0.191, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(A, L) )
%   | | then return 0.34178347336739506;  // std dev = 0.642, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.14942406078099846;  // std dev = 1.101, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.267', 'seconds']
Refined model CLL: -0.254538


******************************************
Best model found
******************************************
Results 

CLL : -0.258816 

AUC ROC : 0.948976 

AUC PR : 0.240757 

Precision : 0.30621 

Recall : 0.507092 

F1 : 0.381842 

Total Learning Time : 13.506 

Total Inference Time : 6.306264638900757 

Total revision time: 22.688426122665405
Best scored revision CLL: -0.254538


Results 

CLL : -0.258816 

AUC ROC : 0.948976 

AUC PR : 0.240757 

Precision : 0.30621 

Recall : 0.507092 

F1 : 0.381842 

Total Learning Time : 22.702076301574706 

Total Inference Time : 6.306264638900757 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.358
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1771673400074881;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19380610750078747;  // std dev = 5.775, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
%   | | | else return 0.19629652895672617;  // std dev = 5.764, 144.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16316659157421676;  // std dev = 5.136, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
%   | | | else return 0.15844875431623523;  // std dev = 6.390, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1380579091871612;  // std dev = 4.315, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | | | else return 0.1093759146073324;  // std dev = 7.094, 228.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09405174554032608;  // std dev = 8.319, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07979920015527808;  // std dev = 8.297, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7234390661562274;  // std dev = 0.015, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27639968559119166;  // std dev = 0.020, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06679965967241959;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.02882346341653674;  // std dev = 5.289, 133.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.015066468992154546;  // std dev = 4.183, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
%   | | | else return 0.07195867418201234;  // std dev = 6.387, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02722995708004464;  // std dev = 7.727, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03926470876750139;  // std dev = 7.617, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.329', 'seconds']
Parameter learned model CLL:-0.336546 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.416, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.775, 93, 52], 'false,false,false,false': [5.764, 92, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.136, 74, 41], 'false,false,false,false': [6.39, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.315, 52, 29], 'false,false,false,false': [7.094, 153, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.319, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.297, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.015, 0, 41], 'true,false': [0.02, 68, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.901, 45, 23], 'false,false,false,false': [5.289, 93, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.183, 93, 41], 'false,false,false,false': [6.387, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.727, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.617, 198, 104]}]
{'': [nan, 0.21724566223794836], 'false': [nan, 0.21724566223794714], 'false,false': [nan, 0.21724566223794836], 'false,false,false': [nan, 0.21724566223794714]}
{'': [nan, 0.23036122651787846], 'false': [nan, 0.23036122651788102], 'false,false': [nan, 0.23036122651787846], 'false,false,false': [0.2300118906064194, 0.23070987654320835]}
{'': [nan, 0.22861035801087048], 'false': [nan, 0.22861035801087048], 'false,false': [nan, 0.22861035801086876], 'false,false,false': [0.22940761330712103, 0.22808944853157412]}
{'': [nan, 0.22328029947216702], 'false': [nan, 0.22328029947216702], 'false,false': [nan, 0.22328029947216996], 'false,false,false': [0.2298430117360168, 0.22073316168650378]}
{'': [nan, 0.22249984198365344], 'false': [nan, 0.22249984198365344], 'false,false': [nan, 0.22249984198365402], 'false,false,false': [nan, 0.22249984198365402]}
{'': [nan, 0.22351040031768452], 'false': [nan, 0.22351040031768452], 'false,false': [nan, 0.2235104003176848], 'false,false,false': [nan, 0.22351040031768446]}
{'': [0.23459056994039057, 0.21520101735788635], 'true': [5.6570523896729215e-06, 5.9805531914471e-06], 'false': [nan, 0.21520101735788635], 'false,false': [nan, 0.21520101735788635], 'false,false,false': [0.22383217993079565, 0.21030018655661736], 'true,true': [nan, 5.6570523896729215e-06], 'true,true,false': [nan, 5.6570523896729215e-06]}
{'': [nan, 0.18701470366389758], 'false': [nan, 0.18701470366389758], 'false,false': [nan, 0.18701470366389794], 'false,false,false': [0.13056596437771203, 0.2278867293834726]}
{'': [nan, 0.18599920184218355], 'false': [nan, 0.18599920184218366], 'false,false': [nan, 0.18599920184218366], 'false,false,false': [nan, 0.18599920184218366]}
{'': [nan, 0.19209440089396093], 'false': [nan, 0.19209440089396093], 'false,false': [nan, 0.19209440089396135], 'false,false,false': [nan, 0.19209440089396135]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.359
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, C), phenotype(C, D) )
%   | | then return -0.03470820775763064;  // std dev = 0.309, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | else return 0.13087620782678508;  // std dev = 0.445, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then if ( enzyme(F, G) )
%   | | then if ( interaction(F, H), interaction(A, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10814893509951222;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.17210242347160554;  // std dev = 6.087, 172.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=54 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7137486763830146;  // std dev = 0.225, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(E, F) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8379303860761799;  // std dev = 0.075, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.16400426976912852;  // std dev = 0.216, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7321294225653449;  // std dev = 1.882, 39.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | | | else return -0.16238071970143939;  // std dev = 0.080, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.20822141960139756;  // std dev = 1.763, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.08264786835468951;  // std dev = 3.630, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(C, D), interaction(C, A) )
%   | then return 0.10948924073473329;  // std dev = 0.347, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(C, A) )
%   | | | then return 0.03850692556405955;  // std dev = 0.834, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21958341820041355;  // std dev = 1.547, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6705348963513285;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07093594686431495;  // std dev = 0.738, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.6953258799047085;  // std dev = 0.170, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.1554555704514885;  // std dev = 0.337, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6333913631071042;  // std dev = 0.157, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.06482372861453567;  // std dev = 0.385, 189.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5081571643646372;  // std dev = 0.128, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14962787039513556;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, D), enzyme(D, E) )
%   | | | then return 0.1794439106414584;  // std dev = 1.659, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.10536939692391227;  // std dev = 2.145, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.5118396859282267;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6530405880424639;  // std dev = 0.239, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.012218018838041012;  // std dev = 4.734, 183.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=39 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.036432070425285165;  // std dev = 1.388, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.1514224045833384;  // std dev = 2.640, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.39381011171699903;  // std dev = 0.079, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D), phenotype(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11518377138822714;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.011155437832496111;  // std dev = 1.586, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( complex(D, F), complex(A, F) )
%   | | | then return -0.1649693515063711;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.027033085568871167;  // std dev = 2.408, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | else if ( location(A, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.419125215356044;  // std dev = 0.904, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.002162891606343439;  // std dev = 2.999, 92.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=21 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.0372620628260334;  // std dev = 2.599, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.1036707596380625;  // std dev = 3.882, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.12473694625687126;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.3153995738301565;  // std dev = 0.069, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( complex(A, F), interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, F) )
%   | | | then return 0.5527069168982446;  // std dev = 0.294, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.05586745106869179;  // std dev = 0.435, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.06208824037703458;  // std dev = 0.235, 90.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=12 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, I), interaction(I, A) )
%   | | | then return -0.1519599049283091;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.04972231551123601;  // std dev = 2.578, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.20512274960440122;  // std dev = 1.423, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.08938291082661627;  // std dev = 4.478, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.018713210749051305;  // std dev = 0.299, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(E, G), phenotype(A, H) )
%   | | | then return 0.49752255072110124;  // std dev = 0.468, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1288878561731414;  // std dev = 1.012, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.19092555508984604;  // std dev = 0.340, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.021891432332402587;  // std dev = 2.137, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5602720738683611;  // std dev = 0.200, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17852650783592763;  // std dev = 0.190, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( location(A, K) )
%   | | | then return 0.17130072625931658;  // std dev = 3.515, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
%   | | | else return 0.05427536340701698;  // std dev = 1.743, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( enzyme(E, F), phenotype(E, G) )
%   | | then if ( phenotype(A, G), interaction(D, E) )
%   | | | then return 0.2945269425397508;  // std dev = 0.331, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.30963922137457367;  // std dev = 0.447, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.32186334212812906;  // std dev = 0.282, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | else return -0.08935060465402479;  // std dev = 0.235, 121.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=15 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.5440080370664451;  // std dev = 0.074, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.15049582616866883;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2632920166351124;  // std dev = 0.140, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, L), location(A, M) )
%   | | | then return 0.07608622837700241;  // std dev = 2.841, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | | else return 0.030791108659241378;  // std dev = 3.368, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25635483403883813;  // std dev = 0.105, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( location(A, F) )
%   | | then if ( interaction(D, D), location(D, F) )
%   | | | then return -0.0489678345972026;  // std dev = 1.753, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | | else return -0.001400060068096968;  // std dev = 4.498, 202.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=54 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6029930895934845;  // std dev = 0.159, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2036065881136056;  // std dev = 0.119, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.4449434716233305;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10497543186714045;  // std dev = 0.760, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.1013526003621828;  // std dev = 0.728, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.09902730017514629;  // std dev = 2.306, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( complex(A, D), complex(C, E) )
%   | then return 0.01312459292848307;  // std dev = 0.205, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | else return -0.04456196167654067;  // std dev = 0.295, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( phenotype(G, H) )
%   | | then if ( recursion_proteinclass(G, B), complex(F, I) )
%   | | | then return 0.22770740645807264;  // std dev = 1.026, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.00932906819610793;  // std dev = 4.546, 189.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=54 */
%   | | else if ( interaction(F, G) )
%   | | | then return 0.3079341799998027;  // std dev = 0.860, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.011471699506029479;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.14788724987472987;  // std dev = 0.462, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.004147491455491512;  // std dev = 0.866, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.062117899860166394;  // std dev = 1.690, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.731', 'seconds']
Refined model CLL: -0.222928


******************************************
Best model found
******************************************
Results 

CLL : -0.232089 

AUC ROC : 0.95354 

AUC PR : 0.321393 

Precision : 0.365625 

Recall : 0.441509 

F1 : 0.4 

Total Learning Time : 14.359 

Total Inference Time : 11.427978038787842 

Total revision time: 29.206049911499022
Best scored revision CLL: -0.222928


Results 

CLL : -0.232089 

AUC ROC : 0.95354 

AUC PR : 0.321393 

Precision : 0.365625 

Recall : 0.441509 

F1 : 0.4 

Total Learning Time : 29.219700090408324 

Total Inference Time : 11.427978038787842 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.205
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16895974591032312;  // std dev = 7.963, 296.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15308227966324284;  // std dev = 5.903, 161.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=51 */
%   | | | else return 0.15414155069217894;  // std dev = 5.289, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14255398721208806;  // std dev = 5.436, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return 0.18627870558012463;  // std dev = 5.490, 129.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1579302958546581;  // std dev = 4.059, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | | else return 0.1336083075638337;  // std dev = 6.564, 190.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08398651913590799;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09500468672061164;  // std dev = 7.751, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7326224137672814;  // std dev = 0.015, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2677224568237393;  // std dev = 0.020, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04743840205879973;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | | else return 0.04615970509103194;  // std dev = 3.956, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.027020177371942837;  // std dev = 4.330, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | | | else return 0.06028500426048516;  // std dev = 5.616, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04066152497760655;  // std dev = 7.044, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.016754237597477177;  // std dev = 7.148, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.492', 'seconds']
Parameter learned model CLL:-0.323554 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.963, 204, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.903, 110, 51], 'false,false,false,false': [5.289, 88, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.436, 90, 44], 'false,false,false,false': [5.49, 81, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.059, 45, 26], 'false,false,false,false': [6.564, 124, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.751, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.015, 0, 44], 'true,false': [0.02, 84, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.122, 53, 25], 'false,false,false,false': [3.956, 49, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.33, 97, 44], 'false,false,false,false': [5.616, 92, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.044, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.148, 197, 92]}]
{'': [nan, 0.21420745069393832], 'false': [nan, 0.21420745069393812], 'false,false': [nan, 0.21420745069393832], 'false,false,false': [nan, 0.21420745069393812]}
{'': [nan, 0.21659928656361463], 'false': [nan, 0.21659928656361446], 'false,false': [nan, 0.21659928656361463], 'false,false,false': [0.21642683538443688, 0.21681389339582952]}
{'': [nan, 0.2274441268783896], 'false': [nan, 0.2274441268783896], 'false,false': [nan, 0.22744412687838927], 'false,false,false': [0.22054081542562454, 0.23364090955576078]}
{'': [nan, 0.22833199958167608], 'false': [nan, 0.22833199958167608], 'false,false': [nan, 0.2283319995816749], 'false,false,false': [0.23209680618924722, 0.22676422858553769]}
{'': [nan, 0.217808895605155], 'false': [nan, 0.217808895605155], 'false,false': [nan, 0.2178088956051544], 'false,false,false': [nan, 0.2178088956051544]}
{'': [nan, 0.22671662917213034], 'false': [nan, 0.22671662917213034], 'false,false': [nan, 0.2267166291721303], 'false,false,false': [nan, 0.22671662917213048]}
{'': [0.2257463044387928, 0.21760012321217212], 'true': [5.009572718670731e-06, 4.605191254516311e-06], 'false': [nan, 0.21760012321217212], 'false,false': [nan, 0.21760012321217212], 'false,false,false': [0.21778435239973673, 0.21739969135802473], 'true,true': [nan, 5.009572718670731e-06], 'true,true,false': [nan, 5.009572718670731e-06]}
{'': [nan, 0.17924536807575284], 'false': [nan, 0.17924536807575284], 'false,false': [nan, 0.1792453680757511], 'false,false,false': [0.13295888014972557, 0.22530723047083553]}
{'': [nan, 0.17912823302147043], 'false': [nan, 0.17912823302146957], 'false,false': [nan, 0.17912823302146957], 'false,false,false': [nan, 0.17912823302146957]}
{'': [nan, 0.17677177676840852], 'false': [nan, 0.17677177676840852], 'false,false': [nan, 0.17677177676840972], 'false,false,false': [nan, 0.17677177676840972]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 5.365
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.09888967584025309;  // std dev = 3.142, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.19148226843284616;  // std dev = 5.715, 147.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=49 */
%   | | | else return 0.25208832903890627;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(E, A) )
%   | then return 0.5781864124495368;  // std dev = 0.817, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.7984912193974008;  // std dev = 0.145, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( enzyme(F, H), enzyme(G, H) )
%   | | then return -0.15760564871510496;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(F, I), interaction(F, J) )
%   | | | then return 0.09489875508313227;  // std dev = 2.948, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return -0.011508956401980493;  // std dev = 2.046, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then if ( complex(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.8240512029047585;  // std dev = 0.110, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.16682051956453203;  // std dev = 0.023, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(N, A), recursion_proteinclass(N, B) )
%   | | | then return 0.7387463734164046;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17388561557499532;  // std dev = 5.449, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5844991217640645;  // std dev = 0.164, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.11942995123782442;  // std dev = 0.043, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, D), enzyme(D, E) )
%   | | then if ( interaction(F, A), enzyme(F, E) )
%   | | | then return -0.14602508718481091;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.1055786659718288;  // std dev = 2.573, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6869509554578269;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10337519151108328;  // std dev = 6.561, 218.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=64 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.44068313067232406;  // std dev = 0.171, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.15785999081886176;  // std dev = 0.188, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(A, F), complex(D, F) )
%   | | | then return 0.060665388943367676;  // std dev = 1.117, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2861092923618279;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.5740186120202719;  // std dev = 0.173, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.15447526763303826;  // std dev = 3.074, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.09213640634113629;  // std dev = 5.809, 172.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.4491587183211372;  // std dev = 0.186, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, C), interaction(C, F) )
%   | | then return -0.08670966130249536;  // std dev = 0.245, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.07036967424646841;  // std dev = 2.336, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.26388014866477427;  // std dev = 2.387, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then return 0.02375341446568888;  // std dev = 0.362, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return 0.0642678461965323;  // std dev = 1.348, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2517286764162025;  // std dev = 1.880, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 0.0036967607310967117;  // std dev = 2.681, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.08744631240404578;  // std dev = 3.970, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.2766407309531262;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(D, A), interaction(E, D) )
%   | | then return 0.34400181493887166;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.479878729214028;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.31227977802452517;  // std dev = 0.166, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( phenotype(G, I), location(A, H) )
%   | | | then return 0.09348688063414302;  // std dev = 3.308, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return -0.0023317755008835303;  // std dev = 4.749, 140.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=32 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.04040530616288858;  // std dev = 3.190, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.19358367496490464;  // std dev = 1.932, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.13139119881994266;  // std dev = 0.294, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.6554543979351952;  // std dev = 0.132, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.20585132383579957;  // std dev = 0.383, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( location(A, F), phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6416858238898879;  // std dev = 0.193, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.23956167905777417;  // std dev = 0.064, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7096373017030552;  // std dev = 0.428, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.25427001217147915;  // std dev = 0.108, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.0027527256947039633;  // std dev = 2.183, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.0782952040047303;  // std dev = 2.830, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.19679638999259583;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.02349987948111978;  // std dev = 0.332, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(H, F), complex(H, I) )
%   | | then if ( phenotype(F, J), enzyme(H, K) )
%   | | | then return 0.2611073709472207;  // std dev = 1.054, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.045825632707333565;  // std dev = 2.348, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | else if ( interaction(F, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5258040080750069;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19955312614424225;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | then return 0.2147379221892253;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(N, A), interaction(A, P) )
%   | | | then return -0.10758507747935209;  // std dev = 0.895, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.03443141596213523;  // std dev = 4.202, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.2724147287858046;  // std dev = 0.166, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, A), interaction(D, G) )
%   | | then return -0.06121096024822598;  // std dev = 0.235, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( interaction(D, H), phenotype(H, C) )
%   | | | then return 0.029111343265912495;  // std dev = 0.888, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.17553574874255462;  // std dev = 1.881, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then if ( recursion_proteinclass(I, B), enzyme(A, J) )
%   | | then return 0.14888760324491562;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06764680343586749;  // std dev = 0.318, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1880830784789566;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.10417727035236411;  // std dev = 1.200, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.029453801576005273;  // std dev = 4.792, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, C), interaction(A, E) )
%   | then return -0.047201022118307276;  // std dev = 0.232, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.23235851047695158;  // std dev = 0.453, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(C, G), enzyme(A, G) )
%   | | | then return -0.08721524720799095;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.06457327912611828;  // std dev = 2.961, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
%   else if ( phenotype(A, H), interaction(I, A) )
%   | then return -0.055100345623086744;  // std dev = 0.261, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5108751119357551;  // std dev = 0.319, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.21452038480711788;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( location(A, M), interaction(A, N) )
%   | | | then return 0.018966519694529466;  // std dev = 2.951, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return -0.020261670113644357;  // std dev = 3.122, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.228', 'seconds']
Refined model CLL: -0.245321


******************************************
Best model found
******************************************
Results 

CLL : -0.254098 

AUC ROC : 0.957164 

AUC PR : 0.197423 

Precision : 0.208547 

Recall : 0.440433 

F1 : 0.283063 

Total Learning Time : 5.365 

Total Inference Time : 2.5535969734191895 

Total revision time: 10.893331594467163
Best scored revision CLL: -0.245321


Results 

CLL : -0.254098 

AUC ROC : 0.957164 

AUC PR : 0.197423 

Precision : 0.208547 

Recall : 0.440433 

F1 : 0.283063 

Total Learning Time : 10.906981773376465 

Total Inference Time : 2.5535969734191895 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.15
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19941877636935407;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17196888452270495;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
%   | | | else return 0.18626627014361816;  // std dev = 4.686, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15587323591018648;  // std dev = 4.267, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.14699207547480145;  // std dev = 6.181, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.0978779432933354;  // std dev = 3.603, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.1320264208979708;  // std dev = 6.596, 191.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0966898485866423;  // std dev = 7.548, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.062280677214963644;  // std dev = 7.639, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7310980398330059;  // std dev = 0.024, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.268344806332048;  // std dev = 0.032, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10421102153271011;  // std dev = 4.541, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   | | | else return 0.059711926153565464;  // std dev = 4.082, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return -0.009822815691438006;  // std dev = 3.564, 105.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=28 */
%   | | | else return 0.016285109696332678;  // std dev = 6.346, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024204084208488862;  // std dev = 7.193, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03831614106993922;  // std dev = 7.071, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.579', 'seconds']
Parameter learned model CLL:-0.336618 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.859, 101, 52], 'false,false,false,false': [4.686, 62, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.267, 52, 28], 'false,false,false,false': [6.181, 112, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.603, 41, 19], 'false,false,false,false': [6.596, 124, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.548, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.639, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.024, 0, 28], 'true,false': [0.032, 57, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.541, 55, 33], 'false,false,false,false': [4.082, 50, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.564, 77, 28], 'false,false,false,false': [6.346, 132, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.193, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.071, 172, 86]}]
{'': [nan, 0.22480473670949944], 'false': [nan, 0.2248047367094992], 'false,false': [nan, 0.22480473670949944], 'false,false,false': [nan, 0.2248047367094992]}
{'': [nan, 0.22609312753020064], 'false': [nan, 0.2260931275302007], 'false,false': [nan, 0.22609312753020064], 'false,false,false': [0.22435815284719504, 0.22873263888888903]}
{'': [nan, 0.225641533668743], 'false': [nan, 0.225641533668743], 'false,false': [nan, 0.22564153366874268], 'false,false,false': [0.22756554097740006, 0.22471087846125132]}
{'': [nan, 0.2252582676179177], 'false': [nan, 0.2252582676179177], 'false,false': [nan, 0.22525826761791723], 'false,false,false': [0.21638888888888866, 0.22776570645709096]}
{'': [nan, 0.22339257319515854], 'false': [nan, 0.22339257319515854], 'false,false': [nan, 0.22339257319515843], 'false,false,false': [nan, 0.22339257319515843]}
{'': [nan, 0.21776625518886109], 'false': [nan, 0.21776625518886109], 'false,false': [nan, 0.21776625518886153], 'false,false,false': [nan, 0.21776625518886128]}
{'': [0.22067202859296778, 0.22927512459248595], 'false': [nan, 0.22927512459248595], 'false,false': [nan, 0.22927512459248595], 'false,false,false': [0.23437500000000053, 0.22222222222222276], 'true': [1.994023043965549e-05, 1.7727233424832616e-05], 'true,true': [nan, 1.994023043965549e-05], 'true,true,false': [nan, 1.994023043965549e-05]}
{'': [nan, 0.17973189665452746], 'false': [nan, 0.17973189665452746], 'false,false': [nan, 0.17973189665452743], 'false,false,false': [0.12096544057103044, 0.21196548421944544]}
{'': [nan, 0.1895080776978884], 'false': [nan, 0.18950807769788874], 'false,false': [nan, 0.18950807769788874], 'false,false,false': [nan, 0.18950807769788874]}
{'': [nan, 0.19377998051290665], 'false': [nan, 0.19377998051290665], 'false,false': [nan, 0.1937799805129063], 'false,false,false': [nan, 0.1937799805129063]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.462
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(D, E) )
%   | | | then return 0.03206197857777315;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.2265699877310913;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.10814893509951237;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.19148226843284474;  // std dev = 5.598, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, D), complex(D, E) )
%   | | then if ( phenotype(A, F), interaction(D, G) )
%   | | | then return 0.14036777834920688;  // std dev = 2.736, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.027690675418541852;  // std dev = 2.207, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.38769657964538057;  // std dev = 1.624, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.16219474384528934;  // std dev = 5.580, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7262822467057651;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.14894273924030216;  // std dev = 2.222, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.45539558775032607;  // std dev = 1.092, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11165116146723128;  // std dev = 6.142, 181.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=54 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(A, A), recursion_proteinclass(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | | then return 0.6857794289600956;  // std dev = 0.356, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.23789454490129516;  // std dev = 0.362, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4389171689010401;  // std dev = 0.090, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.3959490041384035;  // std dev = 0.929, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.016307057046641277;  // std dev = 2.916, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return 0.11724220231353406;  // std dev = 5.745, 150.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=49 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32381190429096174;  // std dev = 0.107, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.45405632035057586;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(A, F) )
%   | | then if ( complex(F, G), enzyme(A, H) )
%   | | | then return 0.09965441693507898;  // std dev = 2.154, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.017394234062043098;  // std dev = 3.192, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.3479365441814018;  // std dev = 1.321, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.09081430725401136;  // std dev = 5.146, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(D, E), phenotype(D, F) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return -0.6421182689916197;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.01893728328258401;  // std dev = 0.376, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else return 0.040553090385254405;  // std dev = 0.391, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.4749610227164522;  // std dev = 0.224, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.015211609994516354;  // std dev = 0.396, 93.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=22 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7591033309931032;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2447862729817753;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.2097591815636792;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.055884879244286714;  // std dev = 3.599, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2340401264102271;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.6586208965535763;  // std dev = 0.556, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.738181697808254;  // std dev = 0.095, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.21569210041527748;  // std dev = 0.071, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2170828206813511;  // std dev = 0.059, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.06821671883722955;  // std dev = 1.457, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.05980425425370838;  // std dev = 1.513, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.09348206903014977;  // std dev = 2.985, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.012111560919385587;  // std dev = 4.173, 99.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( complex(D, E), interaction(D, D) )
%   | then return 0.4016601261351059;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(D, F), enzyme(D, C) )
%   | | then return 0.3418213209035932;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(D, G), interaction(D, H) )
%   | | | then return -2.7317855818077483E-4;  // std dev = 1.753, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.14088317830934513;  // std dev = 1.295, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.13528210421554732;  // std dev = 0.222, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.53288386305139;  // std dev = 0.532, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.18436653497683927;  // std dev = 0.407, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.03855006106057852;  // std dev = 1.660, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.05057265843328632;  // std dev = 4.734, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.16270293679354234;  // std dev = 0.086, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.25362715481178105;  // std dev = 0.117, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( complex(A, F), location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, F) )
%   | | | then return 0.4318901899106864;  // std dev = 0.573, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.17415621008092375;  // std dev = 0.255, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.17054879861373787;  // std dev = 0.061, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(I, J), phenotype(A, K) )
%   | | | then return 0.27638935262703207;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.055422225569342856;  // std dev = 1.861, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.11532858166261319;  // std dev = 2.583, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.040550006112084605;  // std dev = 4.322, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(E, A), phenotype(E, C) )
%   | then return -0.015211339819555726;  // std dev = 0.281, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else if ( interaction(F, A), interaction(F, D) )
%   | | then if ( interaction(G, F), phenotype(G, C) )
%   | | | then return 0.20130321207262414;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4629242038282915;  // std dev = 0.793, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.08597103162006028;  // std dev = 0.373, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then return -0.05821979999985844;  // std dev = 0.329, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(L, K) )
%   | | | then return -0.029321876438119787;  // std dev = 3.023, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | | | else return 0.09261758878175037;  // std dev = 1.572, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.045069197571435037;  // std dev = 0.979, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.07714349778677916;  // std dev = 2.476, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.639', 'seconds']
Refined model CLL: -0.272377


******************************************
Best model found
******************************************
Results 

CLL : -0.259118 

AUC ROC : 0.905076 

AUC PR : 0.210359 

Precision : 0.302326 

Recall : 0.5053 

F1 : 0.378307 

Total Learning Time : 6.462 

Total Inference Time : 3.315140724182129 

Total revision time: 12.686625492095947
Best scored revision CLL: -0.272377


Results 

CLL : -0.259118 

AUC ROC : 0.905076 

AUC PR : 0.210359 

Precision : 0.302326 

Recall : 0.5053 

F1 : 0.378307 

Total Learning Time : 12.70027567100525 

Total Inference Time : 3.315140724182129 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.178
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1940562710068482;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.13915377097354567;  // std dev = 4.856, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | | | else return 0.174782948538207;  // std dev = 5.906, 155.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1277579646960844;  // std dev = 4.883, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | | else return 0.1630258243866805;  // std dev = 5.796, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.18121959691377;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.1506723991630619;  // std dev = 6.798, 199.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08488870521421732;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08706816100480379;  // std dev = 7.548, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7276644212733914;  // std dev = 0.003, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.27234760089368437;  // std dev = 0.004, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.0844761981036739;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.03393592873966697;  // std dev = 4.686, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.025836413416215818;  // std dev = 3.844, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | | | else return 0.011064318201962454;  // std dev = 6.038, 174.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023843517109128614;  // std dev = 7.099, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031085396406148394;  // std dev = 7.028, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.475', 'seconds']
Parameter learned model CLL:-0.328294 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.856, 77, 34], 'false,false,false,false': [5.906, 102, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.883, 75, 35], 'false,false,false,false': [5.796, 95, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.925, 22, 14], 'false,false,false,false': [6.798, 126, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.548, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.003, 0, 35], 'true,false': [0.004, 67, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.586, 36, 20], 'false,false,false,false': [4.686, 70, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.844, 76, 35], 'false,false,false,false': [6.038, 122, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.099, 187, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.028, 176, 87]}]
{'': [nan, 0.223073597590973], 'false': [nan, 0.22307359759097298], 'false,false': [nan, 0.223073597590973], 'false,false,false': [nan, 0.22307359759097298]}
{'': [nan, 0.2200944089547187], 'false': [nan, 0.22009440895471702], 'false,false': [nan, 0.2200944089547187], 'false,false,false': [0.21248275302329286, 0.22501560874089443]}
{'': [nan, 0.22380823674265646], 'false': [nan, 0.22380823674265646], 'false,false': [nan, 0.22380823674265624], 'false,false,false': [0.21675915963270873, 0.22855068120482064]}
{'': [nan, 0.23319742814034516], 'false': [nan, 0.23319742814034516], 'false,false': [nan, 0.23319742814034555], 'false,false,false': [0.23765432098765432, 0.2322482082953161]}
{'': [nan, 0.2200818469955754], 'false': [nan, 0.2200818469955754], 'false,false': [nan, 0.22008184699557493], 'false,false,false': [nan, 0.22008184699557493]}
{'': [nan, 0.22608583866839507], 'false': [nan, 0.22608583866839507], 'false,false': [nan, 0.22608583866839557], 'false,false,false': [nan, 0.22608583866839543]}
{'': [0.22539974030069063, 0.22095108004082806], 'true': [2.4330239938308297e-07, 2.407369474048661e-07], 'false': [nan, 0.22095108004082806], 'false,false': [nan, 0.22095108004082806], 'false,false,false': [0.22959183673469405, 0.21530180699730778], 'true,true': [nan, 2.4330239938308297e-07], 'true,true,false': [nan, 2.4330239938308297e-07]}
{'': [nan, 0.1797964961721505], 'false': [nan, 0.1797964961721505], 'false,false': [nan, 0.17979649617214974], 'false,false,false': [0.13310125919782534, 0.20949984807965383]}
{'': [nan, 0.1839135267268198], 'false': [nan, 0.18391352672681924], 'false,false': [nan, 0.18391352672681924], 'false,false,false': [nan, 0.18391352672681924]}
{'': [nan, 0.1878026668028878], 'false': [nan, 0.1878026668028878], 'false,false': [nan, 0.18780266680288907], 'false,false,false': [nan, 0.18780266680288907]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 24.657
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08395538671241559;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.10814893509951237;  // std dev = 3.674, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | | else return 0.1771144523408902;  // std dev = 5.020, 116.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(D, F), enzyme(D, G) )
%   | | | then return 0.6331919559766613;  // std dev = 1.174, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.7939449747143252;  // std dev = 1.401, 65.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=63 */
%   | | else if ( complex(D, H), complex(A, H) )
%   | | | then return 0.7507219186171546;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12268699351686357;  // std dev = 0.975, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
%   | else return -0.1529930611101262;  // std dev = 0.214, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( interaction(A, A) )
%   | then return 0.1561947117180572;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5851926977427762;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.5711353235472211;  // std dev = 0.045, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.6961159497658714;  // std dev = 0.175, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.13105986138056816;  // std dev = 0.260, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(I, J), location(A, H) )
%   | | | then return 0.4575222181230917;  // std dev = 1.096, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.68906031601387;  // std dev = 0.167, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.14477760081993007;  // std dev = 0.122, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.1455479705347963;  // std dev = 4.110, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | else if ( interaction(A, K) )
%   | | then return 0.021221592547774185;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.06542312662283703;  // std dev = 0.364, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then return 0.4064298957575949;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6121007929413921;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), enzyme(A, F) )
%   | then if ( enzyme(E, F) )
%   | | then return -0.12541745141817912;  // std dev = 0.096, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(E, G) )
%   | | | then return 0.09671605444594977;  // std dev = 1.183, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.025037215719105575;  // std dev = 1.432, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5534994630648741;  // std dev = 0.871, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.1492798561184636;  // std dev = 0.355, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.11063924180207842;  // std dev = 3.742, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   | | | else return 0.30614901135162953;  // std dev = 0.926, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( phenotype(A, F), location(E, G) )
%   | | | then return 0.3348178865679329;  // std dev = 1.706, 44.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=38 */
%   | | | else return 0.5211873235775785;  // std dev = 1.447, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.15265114249658002;  // std dev = 0.253, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0.25890157444454204;  // std dev = 0.884, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( phenotype(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.10191216981565483;  // std dev = 0.245, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.13089524451971105;  // std dev = 0.158, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.15963953276780452;  // std dev = 0.233, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(K, A), phenotype(K, L) )
%   | then return -0.05148647902026732;  // std dev = 0.705, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.4332277167128395;  // std dev = 0.685, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( phenotype(A, E), complex(D, F) )
%   | then return 0.086914393887504;  // std dev = 0.233, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | else if ( location(A, G), location(D, G) )
%   | | then if ( interaction(H, D), interaction(H, A) )
%   | | | then return 0.13679410476819182;  // std dev = 0.930, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.24236207858709172;  // std dev = 0.949, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else return 0.0556916098579218;  // std dev = 0.419, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.2976333606310338;  // std dev = 0.092, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.20881515267799755;  // std dev = 2.670, 70.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=46 */
%   | | | else return -0.11595879636391922;  // std dev = 0.233, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.21380008298274084;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.026720715303309522;  // std dev = 1.063, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2379633187935589;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3735466367508206;  // std dev = 0.074, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.12688514073624868;  // std dev = 0.065, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, I) )
%   | | | then return 0.09238833299197481;  // std dev = 1.109, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.2672979236093312;  // std dev = 1.697, 45.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=35 */
%   | | else return -0.11446078969993348;  // std dev = 0.027, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, A) )
%   | | then return -0.04894292370373224;  // std dev = 0.439, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.16306678619175102;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.09833142333204412;  // std dev = 1.136, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1993608069202934;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.2376365613602667;  // std dev = 0.151, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.33478630315442476;  // std dev = 0.186, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( enzyme(A, G), interaction(A, H) )
%   | | | then return -0.09918374614889798;  // std dev = 0.094, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.13169050457237017;  // std dev = 0.595, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09180552598215423;  // std dev = 0.100, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.051333719391017614;  // std dev = 2.384, 106.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=42 */
%   | | else if ( interaction(K, A), interaction(A, K) )
%   | | | then return -0.01669333131930681;  // std dev = 0.715, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.33598371334631405;  // std dev = 0.865, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.1695024539006076;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.008018128859320255;  // std dev = 0.192, 154.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=49 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( interaction(G, E), enzyme(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.012585035903594674;  // std dev = 0.407, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2156847529708519;  // std dev = 0.920, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( location(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.060612269585155636;  // std dev = 1.169, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return -0.02171990292979747;  // std dev = 0.844, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(A, J) )
%   | | then if ( complex(A, K), complex(J, L) )
%   | | | then return -0.0070473746118211705;  // std dev = 0.393, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.0449300463506077;  // std dev = 0.683, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.08474437756752468;  // std dev = 0.495, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.10914924913767268;  // std dev = 0.745, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.23732528863863797;  // std dev = 1.583, 68.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=65 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.16405325880363153;  // std dev = 0.339, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.1461799589854695;  // std dev = 0.588, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then return -0.0689190716697973;  // std dev = 0.028, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11304854810808512;  // std dev = 0.028, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( interaction(A, K), interaction(K, A) )
%   | then return 0.07098752943037764;  // std dev = 0.731, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then return -0.20673935530521376;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.1338200121745954;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '3.794', 'seconds']
Refined model CLL: -0.155183


******************************************
Best model found
******************************************
Results 

CLL : -0.153972 

AUC ROC : 0.994484 

AUC PR : 0.563751 

Precision : 0.285083 

Recall : 0.914894 

F1 : 0.434709 

Total Learning Time : 24.657 

Total Inference Time : 19.88494300842285 

Total revision time: 47.39900752067566
Best scored revision CLL: -0.155183


Results 

CLL : -0.153972 

AUC ROC : 0.994484 

AUC PR : 0.563751 

Precision : 0.285083 

Recall : 0.914894 

F1 : 0.434709 

Total Learning Time : 47.42867895126343 

Total Inference Time : 19.88494300842285 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.243
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19041730570654156;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1506611332621609;  // std dev = 4.746, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | | | else return 0.16512914188904784;  // std dev = 6.888, 214.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1089816903500703;  // std dev = 5.361, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
%   | | | else return 0.1416003278183428;  // std dev = 6.488, 190.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.07983408333173364;  // std dev = 2.928, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.1218858795111321;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08547575077733828;  // std dev = 8.430, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11705686275130389;  // std dev = 8.137, 286.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7364190881741997;  // std dev = 0.032, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2631818063845917;  // std dev = 0.046, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.07966088647038563;  // std dev = 3.695, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return 0.035621051894257696;  // std dev = 5.388, 136.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0709200050393592;  // std dev = 4.038, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
%   | | | else return 0.07567754092954146;  // std dev = 6.359, 176.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06102669742361371;  // std dev = 7.513, 285.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014148540036414806;  // std dev = 7.714, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.219', 'seconds']
Parameter learned model CLL:-0.341821 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.746, 71, 33], 'false,false,false,false': [6.888, 143, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.361, 96, 41], 'false,false,false,false': [6.488, 127, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.928, 30, 12], 'false,false,false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.43, 225, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.137, 182, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.032, 0, 41], 'true,false': [0.046, 82, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.695, 39, 21], 'false,false,false,false': [5.388, 94, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.038, 71, 41], 'false,false,false,false': [6.359, 113, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.513, 181, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.714, 214, 104]}]
{'': [nan, 0.221866100501181], 'false': [nan, 0.22186610050117953], 'false,false': [nan, 0.221866100501181], 'false,false,false': [nan, 0.22186610050117953]}
{'': [nan, 0.2200862307661842], 'false': [nan, 0.2200862307661888], 'false,false': [nan, 0.2200862307661842], 'false,false,false': [0.21662352071006, 0.22170058520394864]}
{'': [nan, 0.21686568602173348], 'false': [nan, 0.21686568602173348], 'false,false': [nan, 0.21686568602173095], 'false,false,false': [0.2097579746120849, 0.2215449565980705]}
{'': [nan, 0.22004905497930388], 'false': [nan, 0.22004905497930388], 'false,false': [nan, 0.22004905497930652], 'false,false,false': [0.2040816326530615, 0.22224532398509053]}
{'': [nan, 0.2160208259992207], 'false': [nan, 0.2160208259992207], 'false,false': [nan, 0.216020825999221], 'false,false,false': [nan, 0.216020825999221]}
{'': [nan, 0.23151998100368806], 'false': [nan, 0.23151998100368806], 'false,false': [nan, 0.2315199810036893], 'false,false,false': [nan, 0.23151998100368865]}
{'': [0.22207061082424703, 0.21816407442844304], 'true': [2.4636103695307728e-05, 2.6282050278379797e-05], 'false': [nan, 0.21816407442844304], 'false,false': [nan, 0.21816407442844304], 'false,false,false': [0.22749999999999984, 0.21345155709342473], 'true,true': [nan, 2.4636103695307728e-05], 'true,true,false': [nan, 2.4636103695307728e-05]}
{'': [nan, 0.1970496415310691], 'false': [nan, 0.1970496415310691], 'false,false': [nan, 0.1970496415310692], 'false,false,false': [0.1455862405345719, 0.2297902763602722]}
{'': [nan, 0.19803107260541744], 'false': [nan, 0.1980310726054173], 'false,false': [nan, 0.1980310726054173], 'false,false,false': [nan, 0.1980310726054173]}
{'': [nan, 0.18711915049848177], 'false': [nan, 0.18711915049848177], 'false,false': [nan, 0.18711915049848094], 'false,false,false': [nan, 0.18711915049848094]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.649
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(D, E), phenotype(A, F) )
%   | then if ( interaction(G, A) )
%   | | then return 0.1914822684328457;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.1438632208137979;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0.0724346493852266;  // std dev = 0.410, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.16334374029431759;  // std dev = 5.715, 154.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10259337954395678;  // std dev = 2.883, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, A) )
%   | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( complex(C, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.8387763730016176;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.1629205595404382;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.7852084863011083;  // std dev = 0.979, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.05921681416262406;  // std dev = 5.856, 210.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=47 */
%   | | else if ( location(A, I) )
%   | | | then return 0.2224369345446917;  // std dev = 3.082, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.059841401822509535;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then if ( interaction(C, F), complex(A, E) )
%   | | then return 0.6939678667422904;  // std dev = 0.246, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.02014185040791111;  // std dev = 0.731, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(C, A) )
%   | | then return 0.6651256825773385;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7863762250931998;  // std dev = 0.132, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.1419025862223719;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.22203310341295093;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5798677630156385;  // std dev = 0.134, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.05216743929050991;  // std dev = 4.339, 116.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=29 */
%   | | | else return 0.1371973230213997;  // std dev = 5.569, 160.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=51 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(C, E) )
%   | | then return 0.4342898695246453;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6473968159969343;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.568364914315122;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0956258675121432;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.1254854183222294;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( location(A, G), complex(A, H) )
%   | | then if ( location(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.35184546358340885;  // std dev = 2.851, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | | | else return -0.18477673036199924;  // std dev = 0.207, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.11907952069575951;  // std dev = 5.428, 151.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=49 */
%   | | | else return 0.25527132546441583;  // std dev = 2.223, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), phenotype(E, D) )
%   | | then return 0.6204693468386907;  // std dev = 0.116, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.015003609491501332;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.19617055869707103;  // std dev = 0.055, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(G, H) )
%   | | then return 0.2586529382609219;  // std dev = 0.258, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.41420452858904794;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3754191989623162;  // std dev = 4.459, 97.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=63 */
%   | | | else return -0.18538683161514247;  // std dev = 0.434, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.17231067706063102;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5123141436944221;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(A, E) )
%   | then if ( complex(A, F), complex(C, F) )
%   | | then return 0.35167097580554685;  // std dev = 0.207, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.2003517481619615;  // std dev = 0.828, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.37891121277075274;  // std dev = 0.088, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.43767177346212527;  // std dev = 0.313, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.06963643418298111;  // std dev = 0.306, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.49916443453343334;  // std dev = 0.375, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.15001994180582273;  // std dev = 0.133, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.04976987327436867;  // std dev = 5.263, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
%   | | | else return -0.05131047227761254;  // std dev = 0.676, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4112127630277732;  // std dev = 0.154, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.16405960772572784;  // std dev = 0.101, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( enzyme(F, G), location(F, E) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.03572346150213729;  // std dev = 1.113, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.06219696596353901;  // std dev = 1.927, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( phenotype(F, I), complex(F, J) )
%   | | | then return 0.10531566881731984;  // std dev = 3.636, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
%   | | | else return 0.03649853088701799;  // std dev = 2.376, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then return -0.06311738366361667;  // std dev = 0.935, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.010154972883733552;  // std dev = 1.258, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.03537258639138118;  // std dev = 1.266, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22578106714316884;  // std dev = 0.084, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F), interaction(G, D) )
%   | | then if ( phenotype(G, F), complex(G, H) )
%   | | | then return -0.00396152843411063;  // std dev = 2.659, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return 0.14747741638262196;  // std dev = 1.440, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.044569229485269535;  // std dev = 0.878, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.1031447456212945;  // std dev = 1.538, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | else if ( interaction(A, K), complex(A, L) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.2725321918996913;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.05091687645172266;  // std dev = 1.733, 49.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.2585059298488697;  // std dev = 1.308, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.03417256743554291;  // std dev = 4.069, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), complex(C, E) )
%   | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.20873734148286446;  // std dev = 0.308, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | else if ( interaction(A, G), complex(G, E) )
%   | | | then return -0.07302819553975386;  // std dev = 1.385, 59.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | | | else return 0.048782071564468614;  // std dev = 4.219, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
%   | else if ( interaction(H, C) )
%   | | then if ( recursion_proteinclass(C, B) )
%   | | | then return 0.2158122291189816;  // std dev = 0.187, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.0711487705502939;  // std dev = 2.627, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | | else if ( interaction(C, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6091606695877659;  // std dev = 0.224, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.26044065059934324;  // std dev = 0.223, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(A, J), enzyme(J, K) )
%   | then return 0.16972060005005818;  // std dev = 0.731, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.27718594180117284;  // std dev = 0.533, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(C, E), interaction(A, F) )
%   | | then return 0.2831915207730095;  // std dev = 0.225, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return -0.015440942514824347;  // std dev = 0.321, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( interaction(A, C) )
%   | | then return -0.13716434067282515;  // std dev = 0.048, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(G, C), interaction(C, G) )
%   | | | then return 0.0469065958158063;  // std dev = 4.364, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
%   | | | else return -0.09696489605305274;  // std dev = 1.096, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then return 0.5402351795581747;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, J) )
%   | | then return 0.009964544933393781;  // std dev = 0.221, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.011370462759400169;  // std dev = 0.771, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2703991307806017;  // std dev = 1.545, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.073', 'seconds']
Refined model CLL: -0.237066


******************************************
Best model found
******************************************
Results 

CLL : -0.270925 

AUC ROC : 0.948537 

AUC PR : 0.292429 

Precision : 0.112135 

Recall : 0.550943 

F1 : 0.186343 

Total Learning Time : 9.649 

Total Inference Time : 6.9713075160980225 

Total revision time: 19.80146388244629
Best scored revision CLL: -0.237066


Results 

CLL : -0.270925 

AUC ROC : 0.948537 

AUC PR : 0.292429 

Precision : 0.112135 

Recall : 0.550943 

F1 : 0.186343 

Total Learning Time : 19.831135313034057 

Total Inference Time : 6.9713075160980225 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.088
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16791324486382206;  // std dev = 7.969, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.145398392241266;  // std dev = 5.124, 123.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
%   | | | else return 0.15224477649458212;  // std dev = 6.078, 171.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.18172276927884934;  // std dev = 5.279, 120.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | | else return 0.1326892101781507;  // std dev = 5.722, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.07582612464715903;  // std dev = 4.130, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | | else return 0.11543521006242494;  // std dev = 6.780, 210.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09042934915730975;  // std dev = 7.922, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13130453415961066;  // std dev = 7.583, 245.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7283302397406417;  // std dev = 0.030, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.27145101620730283;  // std dev = 0.037, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.11273305208736364;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.04494355991896587;  // std dev = 4.837, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.027216235353041903;  // std dev = 4.308, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.035193905817838364;  // std dev = 5.732, 153.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03714351780310506;  // std dev = 7.089, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032152797426488876;  // std dev = 7.069, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.452', 'seconds']
Parameter learned model CLL:-0.322479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.969, 205, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.124, 85, 38], 'false,false,false,false': [6.078, 117, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.279, 76, 44], 'false,false,false,false': [5.722, 103, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.13, 59, 24], 'false,false,false,false': [6.78, 142, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.922, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.583, 153, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.03, 0, 44], 'true,false': [0.037, 65, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.95, 23, 14], 'false,false,false,false': [4.837, 75, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.308, 95, 44], 'false,false,false,false': [5.732, 105, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.089, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.069, 186, 92]}]
{'': [nan, 0.21381038216055165], 'false': [nan, 0.21381038216055145], 'false,false': [nan, 0.21381038216055165], 'false,false,false': [nan, 0.21381038216055145]}
{'': [nan, 0.2150030080059212], 'false': [nan, 0.2150030080059224], 'false,false': [nan, 0.2150030080059212], 'false,false,false': [0.2134972569237896, 0.2160664819944583]}
{'': [nan, 0.2242732787154763], 'false': [nan, 0.2242732787154763], 'false,false': [nan, 0.22427327871547667], 'false,false,false': [0.23226319436254766, 0.2168590466547159]}
{'': [nan, 0.21542768523054737], 'false': [nan, 0.21542768523054737], 'false,false': [nan, 0.2154276852305467], 'false,false,false': [0.20554507185367954, 0.2188892438597889]}
{'': [nan, 0.21714337630152142], 'false': [nan, 0.21714337630152142], 'false,false': [nan, 0.21714337630152167], 'false,false,false': [nan, 0.21714337630152167]}
{'': [nan, 0.23467478197717245], 'false': [nan, 0.23467478197717245], 'false,false': [nan, 0.23467478197717373], 'false,false,false': [nan, 0.23467478197717295]}
{'': [0.24063602527327155, 0.22071327803372193], 'true': [2.098565992891821e-05, 2.0754859060846142e-05], 'false': [nan, 0.22071327803372193], 'false,false': [nan, 0.22071327803372193], 'false,false,false': [0.23520818115412678, 0.2146283982829729], 'true,true': [nan, 2.098565992891821e-05], 'true,true,false': [nan, 2.098565992891821e-05]}
{'': [nan, 0.17610053850598636], 'false': [nan, 0.17610053850598636], 'false,false': [nan, 0.1761005385059867], 'false,false,false': [0.13353674456342882, 0.2147393102861874]}
{'': [nan, 0.178846105839231], 'false': [nan, 0.1788461058392302], 'false,false': [nan, 0.1788461058392302], 'false,false,false': [nan, 0.1788461058392302]}
{'': [nan, 0.17974950456301095], 'false': [nan, 0.17974950456301095], 'false,false': [nan, 0.17974950456301095], 'false,false,false': [nan, 0.17974950456301095]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.565
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.034619523334806335;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( interaction(F, A), interaction(A, G) )
%   | | | then return 0.1034319539674369;  // std dev = 3.132, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.17453311589047174;  // std dev = 6.187, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(A, F) )
%   | | then if ( complex(E, G), phenotype(A, H) )
%   | | | then return 0.29963142481919597;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.047240208427853536;  // std dev = 2.962, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.11815639629703523;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.21274068310100278;  // std dev = 5.175, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.16719098178540023;  // std dev = 0.093, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.0388001850612504;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.09606916232563151;  // std dev = 1.712, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( interaction(H, F), complex(F, I) )
%   | | | then return 0.04503221321264562;  // std dev = 2.138, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.26546636501116744;  // std dev = 2.980, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.08443334799499722;  // std dev = 5.630, 161.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(D, E) )
%   | | then return -0.14120413067381904;  // std dev = 0.043, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.13556583976894537;  // std dev = 0.012, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.07931726794018232;  // std dev = 1.553, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7554578656552013;  // std dev = 0.621, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.20315352518429486;  // std dev = 0.175, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.25623074786857464;  // std dev = 1.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.11436009938179799;  // std dev = 5.029, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3214120947055155;  // std dev = 0.173, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.4818955317556893;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.13926575327175314;  // std dev = 0.077, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.003094518570444513;  // std dev = 2.631, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | else if ( phenotype(A, G) )
%   | | then if ( interaction(A, H), interaction(I, A) )
%   | | | then return -0.08172957294126061;  // std dev = 0.926, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.08254230439067559;  // std dev = 3.529, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1069077846712788;  // std dev = 3.532, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | | else return 0.3025349562461464;  // std dev = 2.644, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.27571407114608587;  // std dev = 0.091, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.4342309101694285;  // std dev = 0.545, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.13101870981649094;  // std dev = 0.121, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.02958374231842291;  // std dev = 2.561, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6791563922428493;  // std dev = 0.243, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1929775585294275;  // std dev = 0.127, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.18746805342620446;  // std dev = 1.562, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.07378125254173686;  // std dev = 5.184, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.04097791245628501;  // std dev = 0.320, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5955779947037932;  // std dev = 0.441, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2187626031961528;  // std dev = 0.416, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(H, D), phenotype(A, I) )
%   | | | then return -0.08993335884249153;  // std dev = 0.542, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.15094472610388582;  // std dev = 2.557, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6703995850363512;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2560087508791537;  // std dev = 0.182, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.005867721001275648;  // std dev = 2.493, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.027592206152395708;  // std dev = 3.151, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( complex(A, E) )
%   | then return 0.01584826638715445;  // std dev = 0.293, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.05160659434565491;  // std dev = 0.369, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else return 0.5751518503603739;  // std dev = 0.352, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( interaction(I, G), phenotype(I, J) )
%   | | then if ( interaction(K, I), complex(A, L) )
%   | | | then return 0.16020363059022344;  // std dev = 1.271, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.06252756237891981;  // std dev = 1.991, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else return 0.0038238924366365244;  // std dev = 0.336, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.2500251218000658;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.04923926635324007;  // std dev = 2.123, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.02828378548628289;  // std dev = 3.565, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.149705719002523;  // std dev = 0.383, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.5849493887963285;  // std dev = 0.700, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.2108749592385134;  // std dev = 0.132, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.19653815409554828;  // std dev = 0.051, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2084987715603987;  // std dev = 0.128, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( location(H, I) )
%   | | | then return -0.011240296028813122;  // std dev = 1.696, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.1140796340174979;  // std dev = 0.348, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.0426485954030523;  // std dev = 1.508, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.03284312881674449;  // std dev = 4.397, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.18087569275583587;  // std dev = 0.095, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return -0.08541176513020392;  // std dev = 1.155, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.1896719986735416;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11031866561326657;  // std dev = 1.157, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.028172522568303743;  // std dev = 3.239, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.16773916423170107;  // std dev = 0.128, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.0335178934455591;  // std dev = 0.289, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.2142813586716138;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.017444996293279308;  // std dev = 4.268, 127.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '8.688', 'seconds']
Refined model CLL: -0.263134


******************************************
Best model found
******************************************
Results 

CLL : -0.256651 

AUC ROC : 0.949137 

AUC PR : 0.166412 

Precision : 0.232558 

Recall : 0.469314 

F1 : 0.311005 

Total Learning Time : 8.565 

Total Inference Time : 7.566315412521362 

Total revision time: 18.983877542495726
Best scored revision CLL: -0.263134


Results 

CLL : -0.256651 

AUC ROC : 0.949137 

AUC PR : 0.166412 

Precision : 0.232558 

Recall : 0.469314 

F1 : 0.311005 

Total Learning Time : 19.013548973083495 

Total Inference Time : 7.566315412521362 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.157
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1743254056877481;  // std dev = 7.669, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15741532010510867;  // std dev = 4.358, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.1914044605042364;  // std dev = 6.112, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1504952709560959;  // std dev = 4.296, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | | else return 0.1859540773568168;  // std dev = 6.013, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.08880945438531289;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.09459849147236783;  // std dev = 7.263, 245.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09283641168722775;  // std dev = 7.599, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06345165322961624;  // std dev = 7.669, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7399273941968403;  // std dev = 0.019, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2604812596712853;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.053857503090679826;  // std dev = 3.603, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.042552887598100254;  // std dev = 5.180, 125.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08961771454739988;  // std dev = 3.277, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
%   | | | else return 0.06273288585895194;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.057959904872370335;  // std dev = 6.971, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028077694946488877;  // std dev = 7.073, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.488', 'seconds']
Parameter learned model CLL:-0.344469 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.669, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.358, 59, 28], 'false,false,false,false': [6.112, 105, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.296, 54, 28], 'false,false,false,false': [6.013, 96, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.51, 21, 9], 'false,false,false,false': [7.263, 168, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.599, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.669, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.019, 0, 28], 'true,false': [0.025, 56, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.603, 41, 19], 'false,false,false,false': [5.18, 86, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.277, 45, 28], 'false,false,false,false': [6.191, 113, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.971, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.073, 172, 86]}]
{'': [nan, 0.21620891003460282], 'false': [nan, 0.2162089100346027], 'false,false': [nan, 0.21620891003460282], 'false,false,false': [nan, 0.2162089100346027]}
{'': [nan, 0.22566399999999845], 'false': [nan, 0.22566399999999895], 'false,false': [nan, 0.22566399999999845], 'false,false,false': [0.21825868674858054, 0.22921449809928654]}
{'': [nan, 0.23165005720903395], 'false': [nan, 0.23165005720903395], 'false,false': [nan, 0.23165005720903395], 'false,false,false': [0.22501780592142495, 0.23474464784781854]}
{'': [nan, 0.2147163339331246], 'false': [nan, 0.2147163339331246], 'false,false': [nan, 0.21471633393312456], 'false,false,false': [0.21000000000000027, 0.21529018825242513]}
{'': [nan, 0.2203714924636406], 'false': [nan, 0.2203714924636406], 'false,false': [nan, 0.22037149246364085], 'false,false,false': [nan, 0.22037149246364085]}
{'': [nan, 0.21620678813773012], 'false': [nan, 0.21620678813773012], 'false,false': [nan, 0.21620678813773017], 'false,false,false': [nan, 0.21620678813772964]}
{'': [0.22241572157580183, 0.21524602261950007], 'true': [1.2691846778751475e-05, 1.141152890231169e-05], 'false': [nan, 0.21524602261950007], 'false,false': [nan, 0.21524602261950007], 'false,false,false': [0.21638888888888944, 0.2146559999999993], 'true,true': [nan, 1.2691846778751475e-05], 'true,true,false': [nan, 1.2691846778751475e-05]}
{'': [nan, 0.20126131059507393], 'false': [nan, 0.20126131059507393], 'false,false': [nan, 0.2012613105950738], 'false,false,false': [0.14711514558239105, 0.2241600943534394]}
{'': [nan, 0.19832800572242074], 'false': [nan, 0.19832800572242143], 'false,false': [nan, 0.19832800572242143], 'false,false,false': [nan, 0.19832800572242143]}
{'': [nan, 0.19390057825814325], 'false': [nan, 0.19390057825814325], 'false,false': [nan, 0.19390057825814258], 'false,false,false': [nan, 0.19390057825814258]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 5.788
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( enzyme(A, E), interaction(A, F) )
%   | | | then return 0.25814893509951237;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.12757898691298306;  // std dev = 6.164, 193.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then if ( complex(F, G) )
%   | | | then return -0.10661221121880564;  // std dev = 0.974, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return 0.15314467912661237;  // std dev = 1.414, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.10099880304151426;  // std dev = 3.192, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.17919868534187383;  // std dev = 5.519, 136.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=46 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.24873081302881817;  // std dev = 0.851, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5610873745211132;  // std dev = 0.077, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1214636624970918;  // std dev = 0.050, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.06893635042963003;  // std dev = 5.327, 150.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=38 */
%   | | | else return 0.15202294777801056;  // std dev = 4.155, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.43284147886479996;  // std dev = 0.126, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11004889515818372;  // std dev = 0.045, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | | then return 0.766448356435357;  // std dev = 0.217, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18740192482520338;  // std dev = 0.078, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(F, H), phenotype(F, I) )
%   | | | then return 0.24655856096818513;  // std dev = 1.320, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.013630871058631656;  // std dev = 2.801, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.061336519171672925;  // std dev = 2.835, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.1373983830181237;  // std dev = 5.039, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3053434708088023;  // std dev = 0.229, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, D), phenotype(D, H) )
%   | | | then return 0.09193134567652507;  // std dev = 2.202, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.447316414495668;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.10871158483996118;  // std dev = 1.076, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.019200269469118576;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( enzyme(J, K) )
%   | | | then return -0.066253397778478;  // std dev = 1.375, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.014892540039559858;  // std dev = 2.243, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return 0.4081167101546492;  // std dev = 0.662, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.057630053562916;  // std dev = 5.426, 151.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.31634002597322575;  // std dev = 0.229, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.041044261714324154;  // std dev = 0.363, 91.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=18 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(H, F), complex(F, I) )
%   | | then if ( interaction(J, H), interaction(J, F) )
%   | | | then return 0.07933442317576521;  // std dev = 2.521, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.21268666698967847;  // std dev = 2.253, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(K, F), complex(K, L) )
%   | | | then return 0.1335402055850467;  // std dev = 1.983, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.02133313361643987;  // std dev = 3.084, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | else if ( interaction(A, M), interaction(N, A) )
%   | | then return 0.4618521832117312;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(P, A), complex(A, Q) )
%   | | | then return -0.09347614370401804;  // std dev = 0.460, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.14910179906653495;  // std dev = 2.375, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2268908755319658;  // std dev = 0.085, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.7084058242420348;  // std dev = 0.146, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.21828046522043845;  // std dev = 0.052, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.48156248714040145;  // std dev = 0.210, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(I, F) )
%   | | | then return -0.08907877478673461;  // std dev = 2.485, 55.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | | | else return 0.10855302320007786;  // std dev = 1.469, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then return 0.4421065356824833;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.027485745046464574;  // std dev = 2.060, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.10889624007935324;  // std dev = 3.907, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.27522488069307594;  // std dev = 0.167, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, F), phenotype(D, G) )
%   | | then return 0.05827574752573513;  // std dev = 0.404, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return -0.0668462032590669;  // std dev = 0.309, 78.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=13 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | then return 0.655659624718829;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.22033592006980948;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( interaction(K, M) )
%   | | | then return 0.16490173265462982;  // std dev = 1.360, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.387210731804528;  // std dev = 0.703, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.02976928689884188;  // std dev = 3.410, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.13411735663285979;  // std dev = 2.674, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.12975270066065375;  // std dev = 0.306, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.02440436005985978;  // std dev = 0.338, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( phenotype(A, H) )
%   | | then if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4815752333797973;  // std dev = 0.975, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.2284777552053765;  // std dev = 0.120, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6276224457003545;  // std dev = 0.531, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.23257592535323005;  // std dev = 0.313, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2691210858043485;  // std dev = 0.247, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.08833510833879397;  // std dev = 2.109, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.010698199074527829;  // std dev = 3.536, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, D), enzyme(C, E) )
%   | then return 0.14136008810743309;  // std dev = 0.342, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(F, C), location(A, G) )
%   | | then return -7.254431257373824E-4;  // std dev = 0.325, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | | else if ( location(A, H), location(C, H) )
%   | | | then return 0.013099690649961318;  // std dev = 2.013, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.17929109480100605;  // std dev = 1.683, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( complex(A, I), interaction(A, J) )
%   | then return 0.00456651793896106;  // std dev = 0.295, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.7180406373144603;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3235129628091917;  // std dev = 0.429, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.12193801310573774;  // std dev = 2.367, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return -0.02763160844976294;  // std dev = 1.663, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.891', 'seconds']
Refined model CLL: -0.260492


******************************************
Best model found
******************************************
Results 

CLL : -0.249346 

AUC ROC : 0.945784 

AUC PR : 0.22418 

Precision : 0.230503 

Recall : 0.469965 

F1 : 0.309302 

Total Learning Time : 5.788 

Total Inference Time : 2.5537219047546387 

Total revision time: 11.091178722381592
Best scored revision CLL: -0.260492


Results 

CLL : -0.249346 

AUC ROC : 0.945784 

AUC PR : 0.22418 

Precision : 0.230503 

Recall : 0.469965 

F1 : 0.309302 

Total Learning Time : 11.12085015296936 

Total Inference Time : 2.5537219047546387 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.071
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16886322081379787;  // std dev = 7.744, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19116401629984933;  // std dev = 5.328, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | | | else return 0.17759514789227143;  // std dev = 5.322, 126.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1701380470090071;  // std dev = 4.730, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | | else return 0.14937278402137374;  // std dev = 5.860, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07922191536961554;  // std dev = 3.746, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0.08965484480305896;  // std dev = 6.824, 220.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10219214032980335;  // std dev = 7.615, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1080686167454804;  // std dev = 7.475, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7274445049749492;  // std dev = 0.002, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2725067100336283;  // std dev = 0.003, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.033020546777375794;  // std dev = 4.088, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   | | | else return 0.026630837270750888;  // std dev = 4.444, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.052856689810823906;  // std dev = 3.745, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | | else return 0.08086394502078036;  // std dev = 5.787, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024062684315033046;  // std dev = 7.068, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03128370754161658;  // std dev = 6.989, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.639', 'seconds']
Parameter learned model CLL:-0.332305 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.744, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.328, 80, 44], 'false,false,false,false': [5.322, 83, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.73, 62, 35], 'false,false,false,false': [5.86, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.746, 47, 20], 'false,false,false,false': [6.824, 153, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.615, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.475, 156, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.002, 0, 35], 'true,false': [0.003, 71, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.088, 55, 24], 'false,false,false,false': [4.444, 67, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.745, 65, 35], 'false,false,false,false': [5.787, 94, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.068, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.989, 175, 87]}]
{'': [nan, 0.21417091836734775], 'false': [nan, 0.21417091836734786], 'false,false': [nan, 0.21417091836734775], 'false,false,false': [nan, 0.21417091836734786]}
{'': [nan, 0.2268959999999997], 'false': [nan, 0.2268959999999991], 'false,false': [nan, 0.2268959999999997], 'false,false,false': [0.22892819979188303, 0.22480473670949877]}
{'': [nan, 0.2269353235924065], 'false': [nan, 0.2269353235924065], 'false,false': [nan, 0.22693532359240695], 'false,false,false': [0.23065577145639635, 0.2244093041749282]}
{'': [nan, 0.21117604267073456], 'false': [nan, 0.21117604267073456], 'false,false': [nan, 0.2111760426707344], 'false,false,false': [0.20940075740699426, 0.21169128768264991]}
{'': [nan, 0.22220060820878043], 'false': [nan, 0.22220060820878043], 'false,false': [nan, 0.22220060820878093], 'false,false,false': [nan, 0.22220060820878093]}
{'': [nan, 0.22993142013230086], 'false': [nan, 0.22993142013230086], 'false,false': [nan, 0.2299314201323024], 'false,false,false': [nan, 0.22993142013230022]}
{'': [0.22114263285345676, 0.20952867929924202], 'true': [9.465448432674098e-08, 9.660728505117489e-08], 'false': [nan, 0.20952867929924202], 'false,false': [nan, 0.20952867929924202], 'false,false,false': [0.2115045665758691, 0.20786703601108025], 'true,true': [nan, 9.465448432674098e-08], 'true,true,false': [nan, 9.465448432674098e-08]}
{'': [nan, 0.1933428485371728], 'false': [nan, 0.1933428485371728], 'false,false': [nan, 0.19334284853717307], 'false,false,false': [0.14025500080176653, 0.22938552371433163]}
{'': [nan, 0.18368725402826416], 'false': [nan, 0.18368725402826466], 'false,false': [nan, 0.18368725402826466], 'false,false,false': [nan, 0.18368725402826466]}
{'': [nan, 0.18644395666678346], 'false': [nan, 0.18644395666678346], 'false,false': [nan, 0.1864439566667838], 'false,false,false': [nan, 0.1864439566667838]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.423
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.14185106490048766;  // std dev = 6.83e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( complex(H, G) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3875606998053947;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.16278469668891624;  // std dev = 5.656, 151.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.49832145590361643;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.14414448574665484;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.078460833529236;  // std dev = 4.036, 94.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=23 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( enzyme(A, I), interaction(G, J) )
%   | | | then return 0.29701438684128156;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06625589512158708;  // std dev = 3.372, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1282669833160877;  // std dev = 2.455, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.1901728658293402;  // std dev = 3.582, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(C, E), enzyme(C, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1603395023718294;  // std dev = 0.437, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( location(A, D), enzyme(A, H) )
%   | | then return 0.07399062204600282;  // std dev = 0.413, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.30279792120475346;  // std dev = 1.856, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.12180517007207282;  // std dev = 5.096, 137.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=43 */
%   else if ( phenotype(A, J) )
%   | then if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.38329464929727913;  // std dev = 0.668, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.30270588781766794;  // std dev = 0.923, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(A, M) )
%   | | then return 0.07040236990224207;  // std dev = 0.594, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2168938415149492;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5436548471954548;  // std dev = 0.117, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E), enzyme(D, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.0722927646526713;  // std dev = 0.758, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.1373183350593063;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14953519279582722;  // std dev = 0.008, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.1553231449491337;  // std dev = 2.157, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( interaction(A, H), location(H, I) )
%   | | then if ( enzyme(A, J), complex(H, K) )
%   | | | then return 0.07935698698922142;  // std dev = 2.124, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.17931050442915503;  // std dev = 2.847, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.14934523883621692;  // std dev = 1.871, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.071194703203534;  // std dev = 4.989, 127.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.5537657494756043;  // std dev = 0.169, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, F), interaction(A, F) )
%   | | then return -0.1252817829531152;  // std dev = 0.263, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.04366838003664789;  // std dev = 2.777, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.07597695086424162;  // std dev = 1.126, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.47720966902537265;  // std dev = 0.322, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7505741228194898;  // std dev = 0.263, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.19460976248572362;  // std dev = 0.204, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.08834367113478891;  // std dev = 4.378, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
%   | | | else return 0.42635146522177864;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, C) )
%   | then return 0.13054659559241527;  // std dev = 0.525, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, C) )
%   | | then return 0.23513244425877367;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.452722632617723;  // std dev = 0.162, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.11507488254893633;  // std dev = 0.078, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( location(A, F), interaction(G, A) )
%   | | then if ( enzyme(G, H), phenotype(G, I) )
%   | | | then return -0.05917557131496687;  // std dev = 1.718, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.0616750377659076;  // std dev = 5.870, 204.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=63 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.10759137468832339;  // std dev = 1.530, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.19934658818632126;  // std dev = 1.090, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5328459873530355;  // std dev = 0.150, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.1967771809434029;  // std dev = 0.440, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( interaction(G, E), interaction(H, G) )
%   | | then if ( recursion_proteinclass(G, B), interaction(A, H) )
%   | | | then return 0.5152502780266732;  // std dev = 0.788, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.005590647784012002;  // std dev = 4.436, 128.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=32 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7347646761059984;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.24595990794453035;  // std dev = 0.104, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, J) )
%   | | then return 0.0915891305852889;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.01032777750701345;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.17162254715729705;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( location(D, E) )
%   | then if ( phenotype(D, F), enzyme(D, G) )
%   | | then return -0.024032135438440752;  // std dev = 0.222, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else return 0.0450536305701642;  // std dev = 0.326, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | else return -0.14133537232157573;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.5994422917104131;  // std dev = 1.210, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return -0.03553429242062081;  // std dev = 1.303, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return -0.21766766157094003;  // std dev = 0.319, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then return -0.13050594677341798;  // std dev = 0.789, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.03467718252828149;  // std dev = 0.384, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.03214721788388722;  // std dev = 1.037, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.015632891238194103;  // std dev = 0.226, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(D, H) )
%   | | | then return 0.12904693434076703;  // std dev = 0.596, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3838530960335913;  // std dev = 0.757, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.4061895112334845;  // std dev = 0.448, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.17455559651124994;  // std dev = 0.046, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( complex(J, L), complex(A, M) )
%   | | | then return 0.06448875792500448;  // std dev = 1.457, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return -0.024882579132796904;  // std dev = 3.238, 89.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.17806923675724678;  // std dev = 1.280, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.025216255454455442;  // std dev = 2.645, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(C, C), enzyme(D, E) )
%   | then if ( complex(C, F), recursion_proteinclass(C, B) )
%   | | then return -0.20091324203292013;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.03254952797235784;  // std dev = 0.275, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return -0.0927996617550031;  // std dev = 0.519, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.47627317527310925;  // std dev = 0.221, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.13128714886611226;  // std dev = 0.241, 48.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   else if ( complex(A, G) )
%   | then return -0.002641915526873952;  // std dev = 0.252, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( complex(H, J), interaction(A, K) )
%   | | | then return -0.026014864236318675;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.05243700760001997;  // std dev = 3.649, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | | else return 0.1320430703050027;  // std dev = 0.454, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.303', 'seconds']
Refined model CLL: -0.224562


******************************************
Best model found
******************************************
Results 

CLL : -0.21753 

AUC ROC : 0.971258 

AUC PR : 0.366357 

Precision : 0.406566 

Recall : 0.570922 

F1 : 0.474926 

Total Learning Time : 14.423 

Total Inference Time : 7.410033702850342 

Total revision time: 24.593907875061035
Best scored revision CLL: -0.224562


Results 

CLL : -0.21753 

AUC ROC : 0.971258 

AUC PR : 0.366357 

Precision : 0.406566 

Recall : 0.570922 

F1 : 0.474926 

Total Learning Time : 24.617165130615234 

Total Inference Time : 7.410033702850342 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.232
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18113030155914023;  // std dev = 8.391, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1536575933242226;  // std dev = 5.951, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
%   | | | else return 0.1813058550829138;  // std dev = 5.829, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14448669614683315;  // std dev = 5.228, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
%   | | | else return 0.1718564314459905;  // std dev = 6.338, 174.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14732706171159232;  // std dev = 4.315, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | | | else return 0.11853847068302382;  // std dev = 7.055, 223.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09846661428733784;  // std dev = 8.308, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09733389366977421;  // std dev = 8.200, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7028864926720493;  // std dev = 0.988, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.27330960971616586;  // std dev = 0.000954, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.010863680860849143;  // std dev = 4.058, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | | else return 0.07537259860402433;  // std dev = 5.083, 113.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05284476347705972;  // std dev = 4.101, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   | | | else return 0.04507449171036293;  // std dev = 6.484, 190.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023961949958742193;  // std dev = 7.738, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012972798885640397;  // std dev = 7.775, 330.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.225', 'seconds']
Parameter learned model CLL:-0.332017 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.391, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.951, 111, 52], 'false,false,false,false': [5.829, 98, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.228, 82, 41], 'false,false,false,false': [6.338, 111, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.315, 52, 29], 'false,false,false,false': [7.055, 148, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.308, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.2, 190, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.988, 1, 41], 'true,false': [0.000954, 92, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.058, 58, 23], 'false,false,false,false': [5.083, 73, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.101, 76, 41], 'false,false,false,false': [6.484, 127, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.738, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.775, 226, 104]}]
{'': [nan, 0.2186644033795012], 'false': [nan, 0.21866440337949986], 'false,false': [nan, 0.2186644033795012], 'false,false,false': [nan, 0.21866440337949986]}
{'': [nan, 0.22186610050117986], 'false': [nan, 0.22186610050117908], 'false,false': [nan, 0.22186610050117986], 'false,false,false': [0.21724566223794767, 0.22648888888888996]}
{'': [nan, 0.22744970971385697], 'false': [nan, 0.22744970971385697], 'false,false': [nan, 0.22744970971385745], 'false,false,false': [0.22217975130763387, 0.2308647908073891]}
{'': [nan, 0.22513372892189254], 'false': [nan, 0.22513372892189254], 'false,false': [nan, 0.22513372892189243], 'false,false,false': [0.2298430117360156, 0.22320235520724044]}
{'': [nan, 0.22336983084674739], 'false': [nan, 0.22336983084674739], 'false,false': [nan, 0.22336983084674775], 'false,false,false': [nan, 0.22336983084674775]}
{'': [nan, 0.22868529456461342], 'false': [nan, 0.22868529456461342], 'false,false': [nan, 0.22868529456461345], 'false,false,false': [nan, 0.22868529456461273]}
{'': [0.21235575656597921, 0.21910402245985067], 'false': [nan, 0.21910402245985067], 'false,false': [nan, 0.21910402245985067], 'false,false,false': [0.2033226642280142, 0.22867883154514748], 'true': [0.023245721864172134, 9.887949724707783e-09], 'true,true': [nan, 0.023245721864172134], 'true,true,false': [nan, 0.023245721864172134]}
{'': [nan, 0.1917388604839253], 'false': [nan, 0.1917388604839253], 'false,false': [nan, 0.1917388604839254], 'false,false,false': [0.14372158998042595, 0.2212843800409905]}
{'': [nan, 0.18478444657744772], 'false': [nan, 0.1847844465774484], 'false,false': [nan, 0.1847844465774484], 'false,false,false': [nan, 0.1847844465774484]}
{'': [nan, 0.18317147647847884], 'false': [nan, 0.18317147647847884], 'false,false': [nan, 0.18317147647847845], 'false,false,false': [nan, 0.18317147647847845]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.928
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( location(A, E), complex(A, D) )
%   | | | then return 0.1340110040650296;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.25497433192490837;  // std dev = 3.883, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7438632208137973;  // std dev = 1.882, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0.1386367399775605;  // std dev = 0.449, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.5076478686233081;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7529852615403413;  // std dev = 0.155, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.8334842974857803;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.7718821387460331;  // std dev = 0.230, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.1581251603230737;  // std dev = 0.242, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( phenotype(J, L), interaction(J, A) )
%   | | | then return 0.16976942657090194;  // std dev = 2.158, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.06380863080711391;  // std dev = 2.872, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.10669571568299065;  // std dev = 2.678, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.19021005380273845;  // std dev = 3.926, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.4632603481009327;  // std dev = 0.303, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.6220495256965564;  // std dev = 0.066, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( location(A, E), complex(A, F) )
%   | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H) )
%   | | | then return 0.44545747965751137;  // std dev = 2.111, 38.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=29 */
%   | | | else return -0.13241376393638069;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.13344105286168856;  // std dev = 0.147, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.03510528217566463;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.09319871255668054;  // std dev = 2.468, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.23421212822509113;  // std dev = 2.717, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.15402579408958947;  // std dev = 4.389, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(C, E) )
%   | then return 0.2303765669131191;  // std dev = 0.382, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.532157243289107;  // std dev = 0.131, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I), enzyme(G, J) )
%   | | | then return 0.35328495473058463;  // std dev = 1.130, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.6452961640293059;  // std dev = 0.943, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.057805812138423465;  // std dev = 0.297, 102.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=13 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.4235581334388451;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11004108389032673;  // std dev = 4.548, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return 0.05105361199676609;  // std dev = 0.798, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2671805470972303;  // std dev = 1.809, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(C, B), interaction(D, A) )
%   | then return 0.4082232330980439;  // std dev = 0.096, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, C), recursion_proteinclass(D, B) )
%   | | then if ( phenotype(D, E) )
%   | | | then return 0.5333112013885425;  // std dev = 0.452, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.348083277057634;  // std dev = 0.756, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.148039926207258;  // std dev = 0.343, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0.05973325856049935;  // std dev = 5.441, 193.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=58 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.1478898381853709;  // std dev = 0.502, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6707081221968446;  // std dev = 0.278, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.18034924519440027;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.4074313623461525;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), complex(C, E) )
%   | then return 0.39896635763816773;  // std dev = 0.116, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( interaction(A, C), complex(C, F) )
%   | | then return -0.14644619420778662;  // std dev = 0.052, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.34667485282881966;  // std dev = 0.427, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.05973386884974932;  // std dev = 5.245, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
%   else if ( interaction(A, H), interaction(H, H) )
%   | then return 0.04912270632562121;  // std dev = 0.670, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4992419683944697;  // std dev = 0.253, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.27485709457256224;  // std dev = 0.355, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.0657256002246452;  // std dev = 0.554, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.003664883292257221;  // std dev = 1.460, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.23365980354429275;  // std dev = 0.106, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.07851757590172725;  // std dev = 0.805, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3619853683473437;  // std dev = 0.117, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.13571039877868551;  // std dev = 0.045, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.317204124368586;  // std dev = 0.364, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5083391823342055;  // std dev = 1.743, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | | else return -0.19279317839007643;  // std dev = 0.202, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.08064987582565263;  // std dev = 2.109, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return 0.020212143208334563;  // std dev = 3.261, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.16734703044044308;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, D), complex(C, D) )
%   | | then return -0.13356070980407117;  // std dev = 0.086, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, E), phenotype(C, F) )
%   | | | then return -0.033959513727955734;  // std dev = 1.129, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.012790937778947437;  // std dev = 1.684, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2194242243720192;  // std dev = 0.120, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.14259667191877262;  // std dev = 0.790, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.0169997414422508;  // std dev = 4.230, 161.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=44 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.19565389031262656;  // std dev = 0.855, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.051129907428862996;  // std dev = 2.306, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.21476902196575032;  // std dev = 0.184, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, F), enzyme(F, D) )
%   | | then return -0.1149263977604824;  // std dev = 0.133, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.25478613801909655;  // std dev = 0.310, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.025552422866578682;  // std dev = 3.107, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   else if ( interaction(A, H), location(A, I) )
%   | then return -0.007070880744661889;  // std dev = 0.250, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(J, L), phenotype(A, M) )
%   | | | then return 0.030190117294710363;  // std dev = 1.937, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.12786013531096924;  // std dev = 2.816, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | else if ( enzyme(A, N) )
%   | | | then return -0.06296427322635867;  // std dev = 0.577, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.026889748509859257;  // std dev = 0.757, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then return -0.01703457900422682;  // std dev = 0.191, 124.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( complex(E, G), phenotype(A, H) )
%   | | then if ( location(A, I), location(E, I) )
%   | | | then return 0.05022296491963378;  // std dev = 1.321, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.18220258467815575;  // std dev = 1.218, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(J, E), interaction(J, A) )
%   | | | then return -0.15282404230881821;  // std dev = 1.129, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.00398140408945629;  // std dev = 2.136, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then if ( complex(K, M), phenotype(K, N) )
%   | | | then return 0.2105570631522419;  // std dev = 1.355, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.08220769244962504;  // std dev = 1.281, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( location(A, P) )
%   | | | then return 0.015714202542818235;  // std dev = 3.350, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | | | else return -0.04448269590873788;  // std dev = 1.162, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.925', 'seconds']
Refined model CLL: -0.218118


******************************************
Best model found
******************************************
Results 

CLL : -0.222094 

AUC ROC : 0.956894 

AUC PR : 0.374815 

Precision : 0.270531 

Recall : 0.633962 

F1 : 0.379233 

Total Learning Time : 13.928 

Total Inference Time : 10.935820579528809 

Total revision time: 28.159351501464844
Best scored revision CLL: -0.218118


Results 

CLL : -0.222094 

AUC ROC : 0.956894 

AUC PR : 0.374815 

Precision : 0.270531 

Recall : 0.633962 

F1 : 0.379233 

Total Learning Time : 28.182608757019043 

Total Inference Time : 10.935820579528809 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.286
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19391535845717667;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16403591171352583;  // std dev = 5.840, 154.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=51 */
%   | | | else return 0.1832944309720451;  // std dev = 5.161, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15132789105519562;  // std dev = 5.373, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | | else return 0.16297340397951587;  // std dev = 5.561, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09015152656913357;  // std dev = 4.248, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   | | | else return 0.10742453394496301;  // std dev = 6.667, 202.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08891256426669733;  // std dev = 7.879, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08934924873234529;  // std dev = 7.781, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7324890404513862;  // std dev = 0.023, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2675471668093155;  // std dev = 0.035, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.046212485409306316;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.02464331872372104;  // std dev = 4.016, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03077299352936585;  // std dev = 4.313, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.08438416683847337;  // std dev = 5.527, 132.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04718977739200836;  // std dev = 7.016, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0067894581925358796;  // std dev = 7.186, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.526', 'seconds']
Parameter learned model CLL:-0.324324 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.817, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.84, 103, 51], 'false,false,false,false': [5.161, 76, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.373, 84, 44], 'false,false,false,false': [5.561, 87, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.248, 59, 26], 'false,false,false,false': [6.667, 136, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.879, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.781, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.023, 0, 44], 'true,false': [0.035, 99, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.134, 54, 25], 'false,false,false,false': [4.016, 54, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.313, 95, 44], 'false,false,false,false': [5.527, 84, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.016, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.186, 205, 92]}]
{'': [nan, 0.2230273323032673], 'false': [nan, 0.2230273323032669], 'false,false': [nan, 0.2230273323032673], 'false,false,false': [nan, 0.2230273323032669]}
{'': [nan, 0.22423441946596354], 'false': [nan, 0.22423441946596678], 'false,false': [nan, 0.22423441946596354], 'false,false,false': [0.22149603643110233, 0.22762802249981826]}
{'': [nan, 0.22740362622201304], 'false': [nan, 0.22740362622201304], 'false,false': [nan, 0.22740362622201263], 'false,false,false': [0.22556614409883805, 0.22907982731061974]}
{'': [nan, 0.21781787619869722], 'false': [nan, 0.21781787619869722], 'false,false': [nan, 0.2178178761986973], 'false,false,false': [0.21231833910034706, 0.2200436743415944]}
{'': [nan, 0.21937787630326], 'false': [nan, 0.21937787630326], 'false,false': [nan, 0.21937787630326008], 'false,false,false': [nan, 0.21937787630326008]}
{'': [nan, 0.22505496608962974], 'false': [nan, 0.22505496608962974], 'false,false': [nan, 0.22505496608962736], 'false,false,false': [nan, 0.2250549660896293]}
{'': [0.21304563312498073, 0.21305524789537747], 'false': [nan, 0.21305524789537747], 'false,false': [nan, 0.21305524789537747], 'false,false,false': [0.21631148854350307, 0.20947883285545663], 'true': [1.2424022200847999e-05, 1.246990600003686e-05], 'true,true': [nan, 1.2424022200847999e-05], 'true,true,false': [nan, 1.2424022200847999e-05]}
{'': [nan, 0.18208156862076372], 'false': [nan, 0.18208156862076372], 'false,false': [nan, 0.18208156862076455], 'false,false,false': [0.13382687399516102, 0.2314210252526831]}
{'': [nan, 0.1843807630410219], 'false': [nan, 0.18438076304102105], 'false,false': [nan, 0.18438076304102105], 'false,false,false': [nan, 0.18438076304102105]}
{'': [nan, 0.17387199654103777], 'false': [nan, 0.17387199654103777], 'false,false': [nan, 0.1738719965410381], 'false,false,false': [nan, 0.1738719965410381]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.993
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(D, E), enzyme(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( location(D, F), location(A, F) )
%   | | | then return 0.14276431971489548;  // std dev = 5.145, 130.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=37 */
%   | | | else return 0.23069795470735546;  // std dev = 3.453, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.1914822684328457;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.29564893509951234;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F) )
%   | | then return 0.6116395507272997;  // std dev = 0.396, 48.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=38 */
%   | | else return -0.1564856344143466;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.16556989449241075;  // std dev = 0.088, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then if ( complex(A, I), interaction(J, H) )
%   | | then return 0.13971033144586392;  // std dev = 0.428, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(H, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8383437656284982;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1631790456698444;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(L, A), interaction(A, M) )
%   | | then return 0.07166323408270886;  // std dev = 0.420, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.15873014793661214;  // std dev = 2.585, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.10423136626684348;  // std dev = 3.672, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.5095253572265463;  // std dev = 0.314, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( phenotype(D, F), phenotype(A, F) )
%   | | then return -0.03464309658926893;  // std dev = 0.291, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( complex(D, G), complex(A, G) )
%   | | | then return 0.038933237537236876;  // std dev = 1.396, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.32959725064822315;  // std dev = 2.222, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7410521417239102;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( interaction(I, I), complex(I, J) )
%   | | | then return -0.18135211341753357;  // std dev = 0.136, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.05761612080639221;  // std dev = 1.867, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.4626391611113692;  // std dev = 1.034, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.10485050276281463;  // std dev = 5.661, 173.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=51 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.47475427555428346;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6284862001487396;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1588368170885707;  // std dev = 0.118, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, E), enzyme(A, F) )
%   | | | then return -0.007330540008732361;  // std dev = 2.679, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return 0.10292695149226225;  // std dev = 3.929, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(I, H), complex(A, J) )
%   | | | then return 0.12355599329105207;  // std dev = 2.721, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.3554642858961329;  // std dev = 2.519, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.0411042004841216;  // std dev = 1.636, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.19442008487987364;  // std dev = 1.504, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then return 0.3822997621729827;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5069628667316678;  // std dev = 0.165, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( phenotype(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.16384076962487884;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5708801015258458;  // std dev = 1.598, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | | else return -0.19808974185533207;  // std dev = 0.453, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), complex(A, K) )
%   | | | then return -0.02554792155230772;  // std dev = 1.550, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.15408010937395838;  // std dev = 1.838, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.5403945272828118;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12447062045236927;  // std dev = 4.470, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then return 0.2712586390589813;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F) )
%   | | then return 0.32156672520153723;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.40683160890846165;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(I, A) )
%   | | then return -0.19828920979677686;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4013168622853539;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(J, L), complex(K, M) )
%   | | | then return 0.06610602329986336;  // std dev = 3.200, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return -0.030116979679321434;  // std dev = 3.476, 104.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=21 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return -0.034975344296534656;  // std dev = 1.118, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.05713813844887483;  // std dev = 3.955, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2583059973543324;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.5354511541491787;  // std dev = 0.268, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.6900482226809872;  // std dev = 0.587, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.18230315106965234;  // std dev = 0.062, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.6289638259928804;  // std dev = 0.125, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.23498486992882103;  // std dev = 0.037, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2411880322452129;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.06092198606178092;  // std dev = 2.101, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.03864278240892607;  // std dev = 3.494, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.21237575699923034;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(D, E), enzyme(A, E) )
%   | | then return -0.11710226465176839;  // std dev = 0.028, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(D, F), interaction(G, D) )
%   | | | then return 0.00615200498064956;  // std dev = 1.727, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.12198441071608407;  // std dev = 2.017, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   else if ( complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.4606850015140988;  // std dev = 0.158, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.18054674769220083;  // std dev = 0.059, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20002335645244568;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.018638490442770318;  // std dev = 2.100, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.03860576615686777;  // std dev = 4.014, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), location(A, D) )
%   | then return 0.1475792762215382;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then return 0.22050336112515287;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17152795159457032;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, A) )
%   | then if ( location(A, G), phenotype(A, H) )
%   | | then return -0.08272795814797528;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1273032966335751;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( interaction(K, A), location(K, L) )
%   | | | then return -0.04843859821871265;  // std dev = 1.354, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | | else return 0.018169114573638012;  // std dev = 1.755, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.10317436777063606;  // std dev = 2.243, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.01822274606121701;  // std dev = 4.352, 151.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(E, D) )
%   | then return 0.23351254966862586;  // std dev = 0.156, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(F, D), interaction(D, F) )
%   | | then if ( location(D, G), complex(F, H) )
%   | | | then return -0.02373959315137409;  // std dev = 2.625, 81.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   | | | else return -0.11371275408457007;  // std dev = 1.933, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.15271982332878328;  // std dev = 0.888, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.023732543427258192;  // std dev = 1.884, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   else if ( location(A, K) )
%   | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | then if ( complex(L, M) )
%   | | | then return 0.07220328479201289;  // std dev = 1.683, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.4839389698618899;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return -0.19906711130586266;  // std dev = 0.065, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.09614753276378618;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '45.905', 'seconds']
Refined model CLL: -0.224133


******************************************
Best model found
******************************************
Results 

CLL : -0.237597 

AUC ROC : 0.974533 

AUC PR : 0.203409 

Precision : 0.203947 

Recall : 0.67148 

F1 : 0.312868 

Total Learning Time : 8.993 

Total Inference Time : 6.244518280029297 

Total revision time: 18.263841108322143
Best scored revision CLL: -0.224133


Results 

CLL : -0.237597 

AUC ROC : 0.974533 

AUC PR : 0.203409 

Precision : 0.203947 

Recall : 0.67148 

F1 : 0.312868 

Total Learning Time : 18.287098363876343 

Total Inference Time : 6.244518280029297 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.041
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20214893509951282;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17838449415446694;  // std dev = 5.829, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
%   | | | else return 0.1555273512973241;  // std dev = 4.795, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10751653205823879;  // std dev = 4.424, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | | else return 0.1254615777313491;  // std dev = 6.286, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.055444918763820926;  // std dev = 3.730, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | | else return 0.10163596637152061;  // std dev = 6.778, 213.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11824995364334227;  // std dev = 7.497, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09134434717840702;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7387308049837715;  // std dev = 0.011, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2610795942852059;  // std dev = 0.017, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.064393129391001;  // std dev = 4.678, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | | | else return 0.022862103680212933;  // std dev = 4.211, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03402309020024227;  // std dev = 3.455, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.05236063752961134;  // std dev = 6.231, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05673161191072525;  // std dev = 7.004, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06318037013216414;  // std dev = 6.890, 234.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.477', 'seconds']
Parameter learned model CLL:-0.351407 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.511, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.829, 98, 52], 'false,false,false,false': [4.795, 71, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.424, 65, 28], 'false,false,false,false': [6.286, 124, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.73, 52, 19], 'false,false,false,false': [6.778, 146, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.497, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.011, 0, 28], 'true,false': [0.017, 68, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.678, 65, 33], 'false,false,false,false': [4.211, 61, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.455, 61, 28], 'false,false,false,false': [6.231, 116, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.004, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.89, 148, 86]}]
{'': [nan, 0.2256640000000008], 'false': [nan, 0.22566400000000056], 'false,false': [nan, 0.2256640000000008], 'false,false,false': [nan, 0.22566400000000056]}
{'': [nan, 0.22351403306420803], 'false': [nan, 0.2235140330642067], 'false,false': [nan, 0.22351403306420803], 'false,false,false': [0.22648888888889018, 0.21895691609977214]}
{'': [nan, 0.21492969774746704], 'false': [nan, 0.21492969774746704], 'false,false': [nan, 0.214929697747467], 'false,false,false': [0.21040625100515553, 0.2171322264381403]}
{'': [nan, 0.211151612447688], 'false': [nan, 0.211151612447688], 'false,false': [nan, 0.21115161244768818], 'false,false,false': [0.1959928585598094, 0.2156711271905392]}
{'': [nan, 0.22661474348447208], 'false': [nan, 0.22661474348447208], 'false,false': [nan, 0.22661474348447175], 'false,false,false': [nan, 0.22661474348447175]}
{'': [nan, 0.2248305182650457], 'false': [nan, 0.2248305182650457], 'false,false': [nan, 0.2248305182650465], 'false,false,false': [nan, 0.22483051826504638]}
{'': [0.20652308711686937, 0.2157571618263218], 'false': [nan, 0.2157571618263218], 'false,false': [nan, 0.2157571618263218], 'false,false,false': [0.22334443981674354, 0.20619253650621963], 'true': [4.44133954584964e-06, 4.0998293920314165e-06], 'true,true': [nan, 4.44133954584964e-06], 'true,true,false': [nan, 4.44133954584964e-06]}
{'': [nan, 0.19307376308882085], 'false': [nan, 0.19307376308882085], 'false,false': [nan, 0.1930737630888206], 'false,false,false': [0.13414315456228995, 0.22310263735234953]}
{'': [nan, 0.19860913818793047], 'false': [nan, 0.1986091381879307], 'false,false': [nan, 0.1986091381879307], 'false,false,false': [nan, 0.1986091381879307]}
{'': [nan, 0.20288649517945348], 'false': [nan, 0.20288649517945348], 'false,false': [nan, 0.20288649517945323], 'false,false,false': [nan, 0.20288649517945323]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.476
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, C), enzyme(F, D) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(C, G), complex(C, H) )
%   | | | then return 0.08891816586874314;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.1739384087837228;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.7914822684328456;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17103237068233357;  // std dev = 5.920, 163.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7380592790815225;  // std dev = 0.117, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), complex(A, G) )
%   | | | then return 0.6175183262366618;  // std dev = 1.234, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.8284694256070767;  // std dev = 0.183, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.1629582889523141;  // std dev = 0.170, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7297840657371101;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return -0.09153127999457653;  // std dev = 1.357, 33.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   | | | else return 0.12174245097197468;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.10183201542053606;  // std dev = 3.633, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.3360281652576889;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then if ( interaction(E, C), complex(E, F) )
%   | | then return 0.6200441496158426;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5544682890838335;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return 0.5659523800304652;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.22291671611140562;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.11777011527573134;  // std dev = 0.031, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(I, A), interaction(G, J) )
%   | | | then return 0.013087700993868656;  // std dev = 1.930, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.12278501467760156;  // std dev = 2.393, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.09340843690580436;  // std dev = 3.752, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | | else return 0.14144207400016182;  // std dev = 3.989, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.13976425646753396;  // std dev = 0.899, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.4233003368956041;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5435286617644461;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.1066633786043228;  // std dev = 0.041, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.08205036289589622;  // std dev = 2.310, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.004891751091746853;  // std dev = 2.593, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return 0.1881085046625756;  // std dev = 2.454, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.09628348262931782;  // std dev = 4.424, 112.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3693529948742919;  // std dev = 0.070, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.14841843570491547;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(E, F), interaction(E, A) )
%   | | then return -0.08619619041879234;  // std dev = 0.115, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5597101601789777;  // std dev = 0.808, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.005470009598225732;  // std dev = 3.221, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7614087874641736;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2169325651800394;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.07911225709489278;  // std dev = 3.559, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.13459797348393632;  // std dev = 2.786, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(A, E), interaction(F, C) )
%   | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.321703615669161;  // std dev = 0.221, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(C, E), location(A, G) )
%   | | | then return -0.06700813412088155;  // std dev = 1.406, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.01620275320555009;  // std dev = 2.095, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | then return 0.548874885849297;  // std dev = 0.222, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | else return -0.19232639384289676;  // std dev = 0.074, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.3163766140319698;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.4039932078180679;  // std dev = 0.694, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.012021523185779032;  // std dev = 2.093, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.11831853862289181;  // std dev = 2.422, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5287525244546188;  // std dev = 0.210, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.17767020962116706;  // std dev = 0.058, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(E, F), enzyme(E, G) )
%   | | then if ( location(A, H) )
%   | | | then return -0.004160923329403724;  // std dev = 1.426, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return -0.08493427156807068;  // std dev = 0.790, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.22474003808874948;  // std dev = 0.147, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.06009570472690956;  // std dev = 3.441, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.010346222363764576;  // std dev = 0.695, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.24444025213543197;  // std dev = 1.163, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.44489504346707437;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1736342071348707;  // std dev = 0.049, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.49726282942584693;  // std dev = 0.341, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.5816846731903332;  // std dev = 0.241, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return -0.15494102999313453;  // std dev = 0.226, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.20026642419423418;  // std dev = 0.413, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.23476471983175926;  // std dev = 2.308, 38.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=28 */
%   | | | else return -0.15873010805908289;  // std dev = 0.726, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.09001481218855882;  // std dev = 1.209, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | | else return 0.08707394737206406;  // std dev = 2.516, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), interaction(C, E) )
%   | then return 0.02078620681048912;  // std dev = 0.212, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | else if ( interaction(F, C), complex(F, D) )
%   | | then return 0.38541862819463235;  // std dev = 0.658, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.11307194522279672;  // std dev = 0.336, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.22249280606554958;  // std dev = 0.256, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.1522466620856708;  // std dev = 0.623, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.08003724249817816;  // std dev = 2.484, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then return -0.01565740373628609;  // std dev = 0.238, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.012505354075201591;  // std dev = 1.054, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.17787846331190446;  // std dev = 1.534, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.03377640972937947;  // std dev = 0.233, 84.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( enzyme(D, G), complex(A, H) )
%   | | | then return 0.06782849030863917;  // std dev = 0.666, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.0446824406381459;  // std dev = 1.149, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.1838126761375253;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.02990088089487033;  // std dev = 2.515, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.1337301178765673;  // std dev = 1.078, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.030178608251927492;  // std dev = 2.168, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.13214424712288503;  // std dev = 0.634, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1711199516599906;  // std dev = 0.707, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.427', 'seconds']
Refined model CLL: -0.209313


******************************************
Best model found
******************************************
Results 

CLL : -0.232912 

AUC ROC : 0.978059 

AUC PR : 0.326937 

Precision : 0.316327 

Recall : 0.657244 

F1 : 0.427095 

Total Learning Time : 6.476 

Total Inference Time : 2.9356791973114014 

Total revision time: 12.121131460189819
Best scored revision CLL: -0.209313


Results 

CLL : -0.232912 

AUC ROC : 0.978059 

AUC PR : 0.326937 

Precision : 0.316327 

Recall : 0.657244 

F1 : 0.427095 

Total Learning Time : 12.144388715744018 

Total Inference Time : 2.9356791973114014 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.088
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18894741418696473;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13700574870086002;  // std dev = 5.536, 145.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=44 */
%   | | | else return 0.1831509687737504;  // std dev = 5.288, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.18299189626407217;  // std dev = 4.687, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | | | else return 0.11579653089282622;  // std dev = 6.007, 170.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08735599836592789;  // std dev = 3.734, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0.1263951631894259;  // std dev = 6.659, 198.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.132105422336665;  // std dev = 7.434, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06582180545152287;  // std dev = 7.673, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7248932425367378;  // std dev = 0.050, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.27501318554540266;  // std dev = 0.074, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10131305880199586;  // std dev = 3.908, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | | else return 0.07432875307615767;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0847739697752009;  // std dev = 3.616, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
%   | | | else return 0.03478200144408554;  // std dev = 5.949, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05580135389719301;  // std dev = 6.852, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026170357013853607;  // std dev = 6.955, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.689', 'seconds']
Parameter learned model CLL:-0.343797 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.63, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.536, 101, 44], 'false,false,false,false': [5.288, 80, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.687, 59, 35], 'false,false,false,false': [6.007, 118, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.734, 46, 20], 'false,false,false,false': [6.659, 131, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.434, 151, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.673, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.05, 0, 35], 'true,false': [0.074, 78, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.908, 42, 24], 'false,false,false,false': [4.28, 53, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.616, 54, 35], 'false,false,false,false': [5.949, 111, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.852, 157, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.955, 170, 87]}]
{'': [nan, 0.2213708453208816], 'false': [nan, 0.2213708453208816], 'false,false': [nan, 0.2213708453208816], 'false,false,false': [nan, 0.2213708453208816]}
{'': [nan, 0.2192442637558479], 'false': [nan, 0.21924426375584774], 'false,false': [nan, 0.2192442637558479], 'false,false,false': [0.21136741973840678, 0.22737788353493302]}
{'': [nan, 0.2209492846449852], 'false': [nan, 0.2209492846449852], 'false,false': [nan, 0.22094928464498467], 'false,false,false': [0.23369928242448418, 0.21229159492592245]}
{'': [nan, 0.22104407376059726], 'false': [nan, 0.22104407376059726], 'false,false': [nan, 0.22104407376059737], 'false,false,false': [0.21120293847566618, 0.22394343809137987]}
{'': [nan, 0.23218345150992634], 'false': [nan, 0.23218345150992634], 'false,false': [nan, 0.23218345150992573], 'false,false,false': [nan, 0.23218345150992573]}
{'': [nan, 0.21887058538854104], 'false': [nan, 0.21887058538854104], 'false,false': [nan, 0.21887058538854182], 'false,false,false': [nan, 0.218870585388541]}
{'': [0.21382989834753313, 0.2287088157206279], 'false': [nan, 0.2287088157206279], 'false,false': [nan, 0.2287088157206279], 'false,false,false': [0.231404958677686, 0.22618503276939547], 'true': [7.102626932190707e-05, 7.07898653195125e-05], 'true,true': [nan, 7.102626932190707e-05], 'true,true,false': [nan, 7.102626932190707e-05]}
{'': [nan, 0.1928768933515283], 'false': [nan, 0.1928768933515283], 'false,false': [nan, 0.1928768933515283], 'false,false,false': [0.14692399104387316, 0.21708508897822826]}
{'': [nan, 0.19241688845479316], 'false': [nan, 0.19241688845479332], 'false,false': [nan, 0.19241688845479332], 'false,false,false': [nan, 0.19241688845479332]}
{'': [nan, 0.1882357102333015], 'false': [nan, 0.1882357102333015], 'false,false': [nan, 0.18823571023330124], 'false,false,false': [nan, 0.18823571023330124]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 11.573
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(E, A), location(A, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.7331489350995123;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.18552988748046545;  // std dev = 6.082, 168.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=55 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.04564893509951222;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7324548349452544;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( enzyme(A, E), phenotype(D, F) )
%   | | | then return 0.03624586396507147;  // std dev = 1.135, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1448947623908366;  // std dev = 2.382, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2626025067137145;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.06998266233758439;  // std dev = 2.737, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.11180650519993382;  // std dev = 2.948, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.18631359415483095;  // std dev = 5.006, 110.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.568716520064092;  // std dev = 0.090, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E), interaction(F, A) )
%   | | then if ( enzyme(D, G) )
%   | | | then return 0.3179714077784648;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03549239497819906;  // std dev = 1.605, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(D, A), enzyme(D, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.002651299414439501;  // std dev = 1.662, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8118474886389914;  // std dev = 0.045, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1966090157002692;  // std dev = 0.111, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( complex(A, L), enzyme(A, M) )
%   | | | then return 0.015993262669900806;  // std dev = 1.959, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.13018431678178927;  // std dev = 5.701, 151.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=49 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), complex(A, D) )
%   | then return 0.07779078115799425;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4316484474240474;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.3988268767660685;  // std dev = 1.020, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(F, H) )
%   | | | then return 0.03946461112465471;  // std dev = 1.437, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.20632409118209;  // std dev = 1.872, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B), interaction(J, I) )
%   | | | then return 0.6124844776356171;  // std dev = 0.958, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.1366455313412111;  // std dev = 1.346, 37.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=2 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1908267700240005;  // std dev = 3.024, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.0777262050600007;  // std dev = 4.826, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), location(A, E) )
%   | then return 0.03152591321415182;  // std dev = 0.317, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.6925519925957943;  // std dev = 0.141, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1922983242370845;  // std dev = 0.166, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then if ( phenotype(G, H) )
%   | | then return 0.5287400839586649;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.39944306487224085;  // std dev = 0.740, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.14331726309952664;  // std dev = 3.183, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | | else return 0.035485744591007534;  // std dev = 2.488, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.4917469318427827;  // std dev = 0.875, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.12949077740134418;  // std dev = 3.566, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.40706559403262427;  // std dev = 0.165, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.1636148415786238;  // std dev = 0.519, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.0025960453967119454;  // std dev = 2.999, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | else if ( phenotype(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5960923451273319;  // std dev = 0.915, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.2799287975841733;  // std dev = 0.577, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.0530928817272501;  // std dev = 1.288, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.11742873670461065;  // std dev = 0.624, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.12216482784006819;  // std dev = 3.192, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.06468864933683635;  // std dev = 3.496, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5646478297143396;  // std dev = 0.154, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.23000827962750067;  // std dev = 0.074, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( phenotype(A, E), interaction(A, F) )
%   | then if ( location(F, G) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.26241461369195873;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.031106614732391822;  // std dev = 1.215, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else return -0.1338974604078066;  // std dev = 0.298, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5903429140330493;  // std dev = 0.564, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.19047552501912404;  // std dev = 0.367, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.043540130395633876;  // std dev = 2.598, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 3.1709096653813513E-4;  // std dev = 3.129, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, C), enzyme(C, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return -0.32792534357793535;  // std dev = 0.982, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.01371752061405041;  // std dev = 0.286, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.19927405133658616;  // std dev = 0.104, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.00392905460232864;  // std dev = 0.321, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.46693311423839035;  // std dev = 0.256, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.07291393205593721;  // std dev = 1.124, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.04871940114294169;  // std dev = 1.319, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -7.060098999024186E-4;  // std dev = 0.960, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.12144119436903256;  // std dev = 3.689, 75.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( location(A, D), complex(C, E) )
%   | then if ( interaction(F, C), enzyme(F, G) )
%   | | then return 0.03367516245078357;  // std dev = 0.360, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | else return -0.04896385723635824;  // std dev = 0.284, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | else if ( location(H, D), recursion_proteinclass(H, B) )
%   | | then if ( interaction(C, H) )
%   | | | then return 0.4639180561250545;  // std dev = 1.493, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | | else return -0.08663768972745464;  // std dev = 1.487, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else return -0.10577896274676593;  // std dev = 0.294, 67.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=9 */
%   else if ( enzyme(A, I) )
%   | then return 0.03132342698154882;  // std dev = 0.240, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, J) )
%   | | then return -0.10389385000180587;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.050498352579765274;  // std dev = 0.732, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.03816594886940017;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, E), enzyme(A, F) )
%   | then if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.471701479368891;  // std dev = 0.140, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.20998174404002257;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, C), recursion_proteinclass(H, B) )
%   | | then return 0.2359229835011727;  // std dev = 0.271, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.0019930486080353502;  // std dev = 0.324, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then return -0.053073179092380914;  // std dev = 0.266, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then if ( phenotype(L, M), phenotype(K, N) )
%   | | | then return -0.004853053159962359;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.09832337922344818;  // std dev = 1.380, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(P, A), location(P, Q) )
%   | | | then return -0.014483316787243818;  // std dev = 2.689, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.05904920201198892;  // std dev = 1.391, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.496', 'seconds']
Refined model CLL: -0.242838


******************************************
Best model found
******************************************
Results 

CLL : -0.239458 

AUC ROC : 0.944848 

AUC PR : 0.246027 

Precision : 0.236629 

Recall : 0.51773 

F1 : 0.324805 

Total Learning Time : 11.573 

Total Inference Time : 7.109128952026367 

Total revision time: 21.494234786987306
Best scored revision CLL: -0.242838


Results 

CLL : -0.239458 

AUC ROC : 0.944848 

AUC PR : 0.246027 

Precision : 0.236629 

Recall : 0.51773 

F1 : 0.324805 

Total Learning Time : 26.697471843719484 

Total Inference Time : 7.109128952026367 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.192
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20481560176617955;  // std dev = 8.243, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1523319161599946;  // std dev = 5.942, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
%   | | | else return 0.1625544529218095;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11670182228659261;  // std dev = 5.326, 133.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=41 */
%   | | | else return 0.11510726807355533;  // std dev = 6.607, 205.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11604589255673922;  // std dev = 4.422, 89.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=29 */
%   | | | else return 0.18405541436315073;  // std dev = 6.737, 190.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09079371994538016;  // std dev = 8.348, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0862508345288557;  // std dev = 8.268, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7329945183990287;  // std dev = 0.045, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2664640016064857;  // std dev = 0.055, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.057783652574106746;  // std dev = 3.916, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | | else return 0.05853945416094797;  // std dev = 5.153, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.10241437971401558;  // std dev = 3.894, 100.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
%   | | | else return 0.03948413019159706;  // std dev = 6.506, 192.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037492306979624336;  // std dev = 7.608, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.004984810639258269;  // std dev = 7.844, 341.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.226', 'seconds']
Parameter learned model CLL:-0.333343 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.243, 196, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.942, 110, 52], 'false,false,false,false': [5.897, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.326, 92, 41], 'false,false,false,false': [6.607, 142, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.422, 60, 29], 'false,false,false,false': [6.737, 115, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.348, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.268, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.045, 0, 41], 'true,false': [0.055, 66, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.916, 46, 23], 'false,false,false,false': [5.153, 79, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.894, 59, 41], 'false,false,false,false': [6.506, 129, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.608, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.844, 237, 104]}]
{'': [nan, 0.2264888888888911], 'false': [nan, 0.22648888888888943], 'false,false': [nan, 0.2264888888888911], 'false,false,false': [nan, 0.22648888888888943]}
{'': [nan, 0.21973054510077508], 'false': [nan, 0.21973054510077503], 'false,false': [nan, 0.21973054510077508], 'false,false,false': [0.2179545800944975, 0.22151000040569566]}
{'': [nan, 0.21305589611532813], 'false': [nan, 0.21305589611532813], 'false,false': [nan, 0.2130558961153291], 'false,false,false': [0.21324092508237733, 0.21293485244006213]}
{'': [nan, 0.23374590718096405], 'false': [nan, 0.23374590718096405], 'false,false': [nan, 0.23374590718096497], 'false,false,false': [0.21966923368261623, 0.23886426485375925]}
{'': [nan, 0.22124448555075285], 'false': [nan, 0.22124448555075285], 'false,false': [nan, 0.22124448555075082], 'false,false,false': [nan, 0.22124448555075082]}
{'': [nan, 0.2248795241639893], 'false': [nan, 0.2248795241639893], 'false,false': [nan, 0.22487952416399168], 'false,false,false': [nan, 0.2248795241639899]}
{'': [0.23614355959093553, 0.22280840495271534], 'true': [4.9247562052920696e-05, 4.5491508250415016e-05], 'false': [nan, 0.22280840495271534], 'false,false': [nan, 0.22280840495271534], 'false,false,false': [0.22222222222222268, 0.22314808276251571], 'true,true': [nan, 4.9247562052920696e-05], 'true,true,false': [nan, 4.9247562052920696e-05]}
{'': [nan, 0.19777751185446452], 'false': [nan, 0.19777751185446452], 'false,false': [nan, 0.19777751185446407], 'false,false,false': [0.1516509833528044, 0.22044550698847787]}
{'': [nan, 0.1879110856448905], 'false': [nan, 0.18791108564489126], 'false,false': [nan, 0.18791108564489126], 'false,false,false': [nan, 0.18791108564489126]}
{'': [nan, 0.18042254052304316], 'false': [nan, 0.18042254052304316], 'false,false': [nan, 0.18042254052304368], 'false,false,false': [nan, 0.18042254052304368]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.615
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.7914822684328456;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0.17393840878372288;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.01723984419042143;  // std dev = 2.426, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.2291166770349954;  // std dev = 3.804, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | | | else return 0.16974313799806248;  // std dev = 5.441, 138.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, C) )
%   | then return 0.5135568137407357;  // std dev = 0.759, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7997545779089413;  // std dev = 0.161, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8146708984447051;  // std dev = 0.231, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.16337415025999769;  // std dev = 0.142, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.007068326269712133;  // std dev = 1.827, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.2525776240514592;  // std dev = 1.314, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.27877793957760827;  // std dev = 1.849, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.14477209454187803;  // std dev = 5.488, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5859744790569027;  // std dev = 0.050, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7025342373471771;  // std dev = 0.905, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.07172731432419105;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.15553331388298702;  // std dev = 0.246, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return 0.05068715463860493;  // std dev = 3.053, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( complex(A, I), recursion_proteinclass(G, B) )
%   | | | then return 0.687997050468765;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10547562413959718;  // std dev = 4.907, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3442455642829707;  // std dev = 1.342, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.2141160667744054;  // std dev = 2.315, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.18787326026385456;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5317579080101532;  // std dev = 0.105, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( phenotype(A, F), location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, F) )
%   | | | then return 0.6122195642303724;  // std dev = 2.215, 61.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=55 */
%   | | | else return -0.18483867884093588;  // std dev = 0.124, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.174116083647016;  // std dev = 0.351, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.1567579202376571;  // std dev = 1.463, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.06589844391057659;  // std dev = 1.724, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.0787033214863062;  // std dev = 3.202, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | | else return 0.013867985255640862;  // std dev = 1.854, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.36557186070069675;  // std dev = 0.219, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G), complex(F, H) )
%   | | | then return 0.37678710930866516;  // std dev = 0.219, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.1269755302519937;  // std dev = 0.952, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(I, D), complex(I, E) )
%   | | | then return -0.11790406195866532;  // std dev = 0.268, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0.016660252928226527;  // std dev = 1.983, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6402101118884073;  // std dev = 1.057, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.18685063618375716;  // std dev = 0.299, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.13075559873239098;  // std dev = 3.912, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return 0.052547094633722084;  // std dev = 2.353, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.08098409952819108;  // std dev = 0.341, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.34737324437752876;  // std dev = 0.093, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( location(A, F), interaction(A, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), phenotype(G, J) )
%   | | | then return 0.16960089841262496;  // std dev = 1.288, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.48356916246774573;  // std dev = 0.259, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.07571404026557511;  // std dev = 0.211, 140.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=13 */
%   | else if ( location(A, K), complex(A, L) )
%   | | then if ( complex(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.5245881865751936;  // std dev = 0.158, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1569345863579795;  // std dev = 0.152, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.025379596271474777;  // std dev = 2.705, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.11723215263011348;  // std dev = 3.612, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.2569454901715761;  // std dev = 0.056, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.36600914753108144;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.1304395866572528;  // std dev = 0.078, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.1571957636546549;  // std dev = 1.583, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return 0.4201345972488808;  // std dev = 2.825, 57.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=43 */
%   | | else return -0.19732243608587824;  // std dev = 0.452, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6238616206885244;  // std dev = 0.354, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.23148110225237456;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.31056698762603746;  // std dev = 0.990, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), interaction(E, F) )
%   | then return -0.014451997067746051;  // std dev = 0.166, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( enzyme(G, D), recursion_proteinclass(G, B) )
%   | | then return 0.30285931880928296;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1422088674628389;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( phenotype(H, I), interaction(H, H) )
%   | | then return 0.04046930063574865;  // std dev = 0.618, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2336482278649911;  // std dev = 0.074, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, J), interaction(A, K) )
%   | | then if ( phenotype(K, L) )
%   | | | then return 0.03363046123020651;  // std dev = 2.468, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
%   | | | else return -0.09350662633706112;  // std dev = 0.843, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.05056803744900833;  // std dev = 3.480, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
%   | | | else return 0.13148890937748273;  // std dev = 1.854, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A), interaction(F, C) )
%   | | then return -0.4676761338833859;  // std dev = 0.720, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.2022119832680722;  // std dev = 0.506, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.4102862051505058;  // std dev = 1.032, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return -0.16823987371857713;  // std dev = 0.073, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.19082201295155388;  // std dev = 0.065, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.08987528464718923;  // std dev = 1.128, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return -0.10366314746617458;  // std dev = 0.132, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.13231930136538153;  // std dev = 1.231, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.04953049059008297;  // std dev = 3.338, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.12318188330105834;  // std dev = 0.269, 36.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=30 */
%   | else if ( interaction(A, F), complex(F, D) )
%   | | then return -0.08424234289613482;  // std dev = 0.163, 72.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=8 */
%   | | else if ( interaction(G, C), interaction(C, G) )
%   | | | then return 0.031017683507438658;  // std dev = 3.540, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
%   | | | else return -0.08984753822277994;  // std dev = 0.940, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   else if ( complex(A, H), location(A, I) )
%   | then return 0.08233315395296173;  // std dev = 0.198, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return -0.15912018501493252;  // std dev = 0.625, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.21433089016629525;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.03460065282236646;  // std dev = 0.721, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.06067672259619299;  // std dev = 1.951, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.056', 'seconds']
Refined model CLL: -0.19395


******************************************
Best model found
******************************************
Results 

CLL : -0.195156 

AUC ROC : 0.987315 

AUC PR : 0.433743 

Precision : 0.439276 

Recall : 0.641509 

F1 : 0.521472 

Total Learning Time : 15.615 

Total Inference Time : 16.720207929611206 

Total revision time: 35.57624562454224
Best scored revision CLL: -0.19395


Results 

CLL : -0.195156 

AUC ROC : 0.987315 

AUC PR : 0.433743 

Precision : 0.439276 

Recall : 0.641509 

F1 : 0.521472 

Total Learning Time : 40.779482681274416 

Total Inference Time : 16.720207929611206 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.153
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18439006985128545;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1632210533892654;  // std dev = 5.850, 155.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=51 */
%   | | | else return 0.18164642244339332;  // std dev = 5.172, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.19510671861256218;  // std dev = 5.198, 114.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=44 */
%   | | | else return 0.12256509099710994;  // std dev = 5.741, 153.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16661759314957808;  // std dev = 3.989, 67.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=26 */
%   | | | else return 0.10994336585132793;  // std dev = 6.674, 204.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08501179654097245;  // std dev = 7.892, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12447876670553389;  // std dev = 7.559, 243.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7102805102673626;  // std dev = 0.026, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.28977385075622125;  // std dev = 0.037, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11188431667230109;  // std dev = 3.941, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   | | | else return 0.06771106488056082;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03887073266142664;  // std dev = 4.174, 126.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
%   | | | else return 0.06842113767857504;  // std dev = 5.564, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02560203367965478;  // std dev = 7.070, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012554202525415425;  // std dev = 7.096, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.488', 'seconds']
Parameter learned model CLL:-0.334309 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.85, 104, 51], 'false,false,false,false': [5.172, 77, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.198, 70, 44], 'false,false,false,false': [5.741, 105, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.989, 41, 26], 'false,false,false,false': [6.674, 138, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.892, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.559, 151, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.026, 0, 44], 'true,false': [0.037, 92, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.941, 41, 25], 'false,false,false,false': [3.901, 45, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.174, 82, 44], 'false,false,false,false': [5.564, 87, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.07, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.096, 191, 92]}]
{'': [nan, 0.21980785674764972], 'false': [nan, 0.2198078567476494], 'false,false': [nan, 0.21980785674764972], 'false,false,false': [nan, 0.2198078567476494]}
{'': [nan, 0.22342980584738387], 'false': [nan, 0.2234298058473884], 'false,false': [nan, 0.22342980584738387], 'false,false,false': [0.22077003121748198, 0.22673082447572548]}
{'': [nan, 0.22593160044644797], 'false': [nan, 0.22593160044644797], 'false,false': [nan, 0.22593160044644633], 'false,false,false': [0.23704356318193942, 0.2154052793171369]}
{'': [nan, 0.2236530176926326], 'false': [nan, 0.2236530176926326], 'false,false': [nan, 0.22365301769263277], 'false,false,false': [0.2374693695700603, 0.2183211914823878]}
{'': [nan, 0.21929903539906861], 'false': [nan, 0.21929903539906861], 'false,false': [nan, 0.2192990353990691], 'false,false,false': [nan, 0.2192990353990691]}
{'': [nan, 0.23514524244482313], 'false': [nan, 0.23514524244482313], 'false,false': [nan, 0.23514524244482252], 'false,false,false': [nan, 0.23514524244482285]}
{'': [0.21889680301128198, 0.22997197354969262], 'false': [nan, 0.22997197354969262], 'false,false': [nan, 0.22997197354969262], 'false,false,false': [0.23530762167125838, 0.22383217993079568], 'true': [1.4930718116817394e-05, 1.4850085533653658e-05], 'true,true': [nan, 1.4930718116817394e-05], 'true,true,false': [nan, 1.4930718116817394e-05]}
{'': [nan, 0.185608371391719], 'false': [nan, 0.185608371391719], 'false,false': [nan, 0.18560837139171787], 'false,false,false': [0.13828446378218956, 0.2293557942371575]}
{'': [nan, 0.1824059316821429], 'false': [nan, 0.18240593168214245], 'false,false': [nan, 0.18240593168214245], 'false,false,false': [nan, 0.18240593168214245]}
{'': [nan, 0.17794374022294682], 'false': [nan, 0.17794374022294682], 'false,false': [nan, 0.17794374022294746], 'false,false,false': [nan, 0.17794374022294746]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.566
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.2643989350995111;  // std dev = 3.929, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
%   | | | else return 0.14868947564005208;  // std dev = 5.523, 148.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109543;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), phenotype(E, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.15587465154776112;  // std dev = 0.105, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.10958030830543156;  // std dev = 2.088, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.2202405661604873;  // std dev = 3.080, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.11978052939625329;  // std dev = 5.942, 177.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, D) )
%   | | then if ( enzyme(E, D) )
%   | | | then return -0.12319720656488106;  // std dev = 0.067, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.03709048356246122;  // std dev = 0.649, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, G), complex(A, H) )
%   | | | then return -0.019584195248978278;  // std dev = 1.951, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.09175613196811343;  // std dev = 2.759, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.1391856105572702;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.12376617097754189;  // std dev = 2.124, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.16586793010337064;  // std dev = 3.891, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return 0.12129631218707504;  // std dev = 4.448, 97.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4773195969369678;  // std dev = 0.074, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(D, F), location(A, F) )
%   | | then if ( enzyme(D, G), enzyme(A, G) )
%   | | | then return -0.12051402196876021;  // std dev = 0.127, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.06208039672834689;  // std dev = 4.420, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | | else if ( interaction(H, E), location(E, I) )
%   | | | then return 0.17071235363949225;  // std dev = 2.609, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.022418301041961877;  // std dev = 1.272, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), complex(L, M) )
%   | | | then return 0.07366092484095033;  // std dev = 2.486, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.2552274576424813;  // std dev = 1.323, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.24779632144513564;  // std dev = 2.093, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.13163705182175303;  // std dev = 2.923, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.34291003246445123;  // std dev = 0.157, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(E, G) )
%   | | | then return 0.5250736845140269;  // std dev = 1.200, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.7386618258034074;  // std dev = 0.507, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.2107330102446361;  // std dev = 0.401, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.12775284130560463;  // std dev = 1.794, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.09210667157259741;  // std dev = 1.306, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.46166311680755606;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1506383531457881;  // std dev = 4.693, 97.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=36 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5406604324286313;  // std dev = 0.271, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return -0.22297365966672705;  // std dev = 0.061, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( location(A, G), location(E, G) )
%   | | then if ( complex(E, H), complex(A, H) )
%   | | | then return 0.04059539797106386;  // std dev = 0.952, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.18047696552295628;  // std dev = 2.034, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( enzyme(E, I) )
%   | | | then return -0.09820031031245136;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.02582601634323101;  // std dev = 1.580, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then return 0.38929442033229256;  // std dev = 1.087, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.028046037214039764;  // std dev = 2.215, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.12287977414286529;  // std dev = 3.195, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.477288751738517;  // std dev = 0.190, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.18753440497904722;  // std dev = 0.060, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(E, A), phenotype(A, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.20568642574065457;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(E, G), interaction(H, E) )
%   | | | then return -0.20886474097674781;  // std dev = 0.125, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.03304840450601885;  // std dev = 1.391, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.0725107732717793;  // std dev = 2.366, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.04466046924195368;  // std dev = 2.447, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1633543778451273;  // std dev = 2.533, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.07588587572497058;  // std dev = 1.808, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.12419430291052899;  // std dev = 0.151, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.04526183027686022;  // std dev = 0.785, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.09804667138552238;  // std dev = 0.484, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.07277380972214403;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.11540049412687041;  // std dev = 2.043, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then if ( interaction(I, G), complex(I, J) )
%   | | | then return 0.05368653257755627;  // std dev = 1.986, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return -0.02674964541476037;  // std dev = 1.445, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.030245871670217604;  // std dev = 3.414, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | | else return -0.0010811593512600624;  // std dev = 3.321, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then return 0.03547945504022047;  // std dev = 0.261, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | else return -0.0271598858685968;  // std dev = 0.336, 140.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=37 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( interaction(I, A), interaction(G, J) )
%   | | then return 0.27425352021875843;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, K), phenotype(K, L) )
%   | | | then return -0.0023814395291824443;  // std dev = 1.860, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.07938848386927266;  // std dev = 1.293, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( phenotype(A, M) )
%   | | then if ( phenotype(N, M), recursion_proteinclass(N, B) )
%   | | | then return 0.4872617276797318;  // std dev = 0.290, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19094125360054165;  // std dev = 0.118, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, P) )
%   | | | then return 0.3302873340329841;  // std dev = 1.453, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.12566900004865222;  // std dev = 1.709, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.35743333228672447;  // std dev = 1.155, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.04412255808463546;  // std dev = 1.901, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0.562068004204015;  // std dev = 0.926, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.1447330788510454;  // std dev = 2.013, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then return -0.1472448375042538;  // std dev = 0.328, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.17504938537307047;  // std dev = 0.224, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.2810696805197212;  // std dev = 0.327, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( interaction(A, A) )
%   | then return -0.02589663330663682;  // std dev = 0.234, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.1075856120012223;  // std dev = 0.331, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '56.849', 'seconds']
Refined model CLL: -0.215789


******************************************
Best model found
******************************************
Results 

CLL : -0.213039 

AUC ROC : 0.984834 

AUC PR : 0.326256 

Precision : 0.309859 

Recall : 0.635379 

F1 : 0.416568 

Total Learning Time : 9.566 

Total Inference Time : 7.861504793167114 

Total revision time: 20.307004112243654
Best scored revision CLL: -0.215789


Results 

CLL : -0.213039 

AUC ROC : 0.984834 

AUC PR : 0.326256 

Precision : 0.309859 

Recall : 0.635379 

F1 : 0.416568 

Total Learning Time : 25.51024116897583 

Total Inference Time : 7.861504793167114 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.089
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15990332106442498;  // std dev = 7.749, 285.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17303196307658014;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return 0.1438543984151427;  // std dev = 4.856, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.09127700026006234;  // std dev = 4.499, 101.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
%   | | | else return 0.17240196562980117;  // std dev = 6.103, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13164697015699756;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.11758086123325512;  // std dev = 6.709, 204.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11071037937410648;  // std dev = 7.533, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08798234864723099;  // std dev = 7.547, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7425469425156895;  // std dev = 0.020, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2571669927035657;  // std dev = 0.034, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06699465933185204;  // std dev = 4.666, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | | | else return 0.03374850288339255;  // std dev = 4.180, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0524125610277456;  // std dev = 3.410, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | | else return 0.04609222209097867;  // std dev = 6.248, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.013949025108713448;  // std dev = 7.254, 283.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012517625267874118;  // std dev = 7.234, 283.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.566', 'seconds']
Parameter learned model CLL:-0.326185 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.749, 199, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.878, 103, 52], 'false,false,false,false': [4.856, 77, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.499, 73, 28], 'false,false,false,false': [6.103, 104, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.559, 38, 19], 'false,false,false,false': [6.709, 137, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.533, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.547, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.02, 0, 28], 'true,false': [0.034, 73, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.666, 64, 33], 'false,false,false,false': [4.18, 58, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.41, 56, 28], 'false,false,false,false': [6.248, 119, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.254, 197, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.234, 197, 86]}]
{'': [nan, 0.21069867651585175], 'false': [nan, 0.21069867651585172], 'false,false': [nan, 0.21069867651585175], 'false,false,false': [nan, 0.21069867651585172]}
{'': [nan, 0.21878003278873767], 'false': [nan, 0.21878003278873812], 'false,false': [nan, 0.21878003278873767], 'false,false,false': [0.2229344432882398, 0.21248275302329492]}
{'': [nan, 0.2201396465394843], 'false': [nan, 0.2201396465394843], 'false,false': [nan, 0.2201396465394843], 'false,false,false': [0.20036382883252443, 0.22994161033631705]}
{'': [nan, 0.22100188632945306], 'false': [nan, 0.22100188632945306], 'false,false': [nan, 0.2210018863294527], 'false,false,false': [0.2222222222222219, 0.22061770031969544]}
{'': [nan, 0.22427017754795153], 'false': [nan, 0.22427017754795153], 'false,false': [nan, 0.2242701775479511], 'false,false,false': [nan, 0.2242701775479511]}
{'': [nan, 0.2233556596075389], 'false': [nan, 0.2233556596075389], 'false,false': [nan, 0.22335565960753842], 'false,false,false': [nan, 0.22335565960753853]}
{'': [0.20027323175950446, 0.2182917406477344], 'false': [nan, 0.2182917406477344], 'false,false': [nan, 0.2182917406477344], 'false,false,false': [0.2244659368689554, 0.2104804761213534], 'true': [1.4792920316189903e-05, 1.5552469410789647e-05], 'true,true': [nan, 1.4792920316189903e-05], 'true,true,false': [nan, 1.4792920316189903e-05]}
{'': [nan, 0.19412293834185804], 'false': [nan, 0.19412293834185804], 'false,false': [nan, 0.1941229383418586], 'false,false,false': [0.1384196524672377, 0.22054553964093385]}
{'': [nan, 0.18593447122854714], 'false': [nan, 0.1859344712285472], 'false,false': [nan, 0.1859344712285472], 'false,false,false': [nan, 0.1859344712285472]}
{'': [nan, 0.18492135302940077], 'false': [nan, 0.18492135302940077], 'false,false': [nan, 0.1849213530294003], 'false,false,false': [nan, 0.1849213530294003]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 11.29
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(A, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.011416282291792045;  // std dev = 2.284, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | | | else return 0.13814893509951237;  // std dev = 5.020, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.7254232309641752;  // std dev = 0.077, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7298326667716779;  // std dev = 0.080, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14046704231411983;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.07565093640907054;  // std dev = 1.523, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.11921362539886861;  // std dev = 3.663, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.23232205177534854;  // std dev = 3.834, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.5642711554808788;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, D), interaction(A, E) )
%   | | then return -0.055448894551564466;  // std dev = 0.247, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( phenotype(D, F), interaction(A, G) )
%   | | | then return 0.4161360942758161;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08427358077156295;  // std dev = 2.349, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.66435784119511;  // std dev = 1.427, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return 0.21820575079579424;  // std dev = 2.609, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else return -0.1550564612132103;  // std dev = 0.313, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, K) )
%   | | then return -0.05031493719407736;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.05682791994877978;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5164888944744784;  // std dev = 0.137, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3027578337371272;  // std dev = 0.382, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then return -0.12429401743123483;  // std dev = 0.191, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( phenotype(A, H), interaction(F, E) )
%   | | | then return 0.0892432654541157;  // std dev = 2.562, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.005330847140703941;  // std dev = 2.781, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.48227929903191014;  // std dev = 1.140, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.18757688394138902;  // std dev = 1.411, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.03705590478102289;  // std dev = 2.779, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | | else return 0.17603493826867891;  // std dev = 2.199, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), location(A, E) )
%   | then return 0.43368548566877496;  // std dev = 0.119, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.25665648416451886;  // std dev = 0.279, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.40073237534616285;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, I), enzyme(I, J) )
%   | | | then return -0.05448620329012288;  // std dev = 1.577, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return 0.05011944862887539;  // std dev = 2.024, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(L, A), complex(A, M) )
%   | | | then return -0.028770208381240534;  // std dev = 1.669, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.0738038191850639;  // std dev = 3.600, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | | else if ( complex(A, N), phenotype(A, P) )
%   | | | then return 0.4414410121135905;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10163558381700573;  // std dev = 2.522, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(C, E) )
%   | then return 0.0813664664582288;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then return 0.25082207346083263;  // std dev = 0.129, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4510036856438605;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, I), interaction(J, A) )
%   | | | then return 0.5140175756750434;  // std dev = 1.776, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return -0.0041139695032823735;  // std dev = 2.680, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else return -0.1602000905342794;  // std dev = 0.566, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else return 0.18929743412926525;  // std dev = 0.511, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), location(A, F) )
%   | | then return 0.3946236851437892;  // std dev = 0.163, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.6743253344123102;  // std dev = 0.145, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.15268989448924583;  // std dev = 0.072, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I), interaction(J, H) )
%   | | | then return 0.09253946870021602;  // std dev = 0.927, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.44826104746113227;  // std dev = 1.078, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | else return -0.15259400174707463;  // std dev = 0.059, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.26348858606182796;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.00574230907560811;  // std dev = 0.612, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.11147911503943368;  // std dev = 2.300, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), interaction(E, C) )
%   | then if ( complex(C, F) )
%   | | then return 0.1482597130512891;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.056022770566949064;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2036713683209907;  // std dev = 0.124, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, A) )
%   | then return -0.09140154639037071;  // std dev = 0.084, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.05298027579127436;  // std dev = 1.039, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.01782719014535364;  // std dev = 2.968, 136.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=33 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return -0.008468975410836079;  // std dev = 0.980, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.04449502457814621;  // std dev = 2.794, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), location(A, E) )
%   | then return 0.23033912479590557;  // std dev = 0.182, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(A, F), phenotype(C, G) )
%   | | then if ( interaction(D, F), phenotype(F, H) )
%   | | | then return -0.14129128088231635;  // std dev = 1.390, 41.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   | | | else return -0.026798980174699144;  // std dev = 1.233, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( phenotype(D, I), location(C, J) )
%   | | | then return 0.04131107628175997;  // std dev = 2.295, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | | else return -0.07447029999444015;  // std dev = 0.478, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   else if ( interaction(K, A), enzyme(K, L) )
%   | then return 0.30538309585860063;  // std dev = 0.600, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(M, A), complex(M, N) )
%   | | then return 0.2264316797617518;  // std dev = 0.582, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, P), interaction(Q, A) )
%   | | | then return 0.14826251144057956;  // std dev = 0.334, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.00858455046773474;  // std dev = 2.730, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.21781043749699366;  // std dev = 0.141, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return -0.0650068635635752;  // std dev = 0.177, 53.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=8 */
%   | | else return 0.008847399064488611;  // std dev = 0.251, 138.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=43 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then if ( phenotype(A, J) )
%   | | then if ( complex(A, K), phenotype(A, I) )
%   | | | then return 0.017807873156424098;  // std dev = 0.906, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1502946912889526;  // std dev = 0.764, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(H, L) )
%   | | | then return 0.031085792635662295;  // std dev = 1.363, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.049785960496111725;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( phenotype(A, M) )
%   | | then return 0.08465570882366542;  // std dev = 0.787, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.2658105243609519;  // std dev = 1.078, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '52.523', 'seconds']
Refined model CLL: -0.178873


******************************************
Best model found
******************************************
Results 

CLL : -0.1875 

AUC ROC : 0.988006 

AUC PR : 0.390525 

Precision : 0.310651 

Recall : 0.742049 

F1 : 0.437956 

Total Learning Time : 11.29 

Total Inference Time : 6.928009986877441 

Total revision time: 21.035812906265257
Best scored revision CLL: -0.178873


Results 

CLL : -0.1875 

AUC ROC : 0.988006 

AUC PR : 0.390525 

Precision : 0.310651 

Recall : 0.742049 

F1 : 0.437956 

Total Learning Time : 26.239049962997434 

Total Inference Time : 6.928009986877441 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.15
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21180747168487823;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15152953569253214;  // std dev = 5.465, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.19170619029597935;  // std dev = 5.240, 119.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13538703330478677;  // std dev = 4.842, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return 0.10863519944695953;  // std dev = 6.016, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1139184990454559;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.12542707019134813;  // std dev = 6.648, 197.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09598897940499615;  // std dev = 7.624, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09292653379670161;  // std dev = 7.539, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7263422755986687;  // std dev = 0.030, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2745880748180395;  // std dev = 0.046, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11469311207961311;  // std dev = 3.854, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return 0.04400009279967909;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return -0.0011439955092013823;  // std dev = 3.934, 124.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=35 */
%   | | | else return 0.06550510916886716;  // std dev = 5.807, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030999331683045864;  // std dev = 7.046, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04169519236475447;  // std dev = 6.928, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.647', 'seconds']
Parameter learned model CLL:-0.339126 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.499, 159, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.465, 93, 44], 'false,false,false,false': [5.24, 76, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.842, 71, 35], 'false,false,false,false': [6.016, 119, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.666, 41, 20], 'false,false,false,false': [6.648, 130, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.624, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.539, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.03, 0, 35], 'true,false': [0.046, 79, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.854, 39, 24], 'false,false,false,false': [4.369, 60, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.934, 89, 35], 'false,false,false,false': [5.807, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.046, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.928, 164, 87]}]
{'': [nan, 0.22858417608566423], 'false': [nan, 0.22858417608566411], 'false,false': [nan, 0.22858417608566423], 'false,false,false': [nan, 0.22858417608566411]}
{'': [nan, 0.22434997558593642], 'false': [nan, 0.22434997558593783], 'false,false': [nan, 0.22434997558593642], 'false,false,false': [0.21801907400500853, 0.2307746628062993]}
{'': [nan, 0.21545912703431755], 'false': [nan, 0.21545912703431755], 'false,false': [nan, 0.21545912703431663], 'false,false,false': [0.22119637012008198, 0.21162884443699526]}
{'': [nan, 0.22343107520721794], 'false': [nan, 0.22343107520721794], 'false,false': [nan, 0.22343107520721833], 'false,false,false': [0.22037086804622374, 0.22434733700589043]}
{'': [nan, 0.22183314130447127], 'false': [nan, 0.22183314130447127], 'false,false': [nan, 0.22183314130447146], 'false,false,false': [nan, 0.22183314130447146]}
{'': [nan, 0.2264208412096097], 'false': [nan, 0.2264208412096097], 'false,false': [nan, 0.2264208412096087], 'false,false,false': [nan, 0.22642084120961026]}
{'': [0.21318011139412008, 0.2260366650870034], 'false': [nan, 0.2260366650870034], 'false,false': [nan, 0.2260366650870034], 'false,false,false': [0.23582766439909328, 0.21694214876033088], 'true': [2.5929165093937658e-05, 2.643118519499482e-05], 'true,true': [nan, 2.5929165093937658e-05], 'true,true,false': [nan, 2.5929165093937658e-05]}
{'': [nan, 0.18199023100303147], 'false': [nan, 0.18199023100303147], 'false,false': [nan, 0.18199023100303288], 'false,false,false': [0.1248081041495003, 0.22787450409093574]}
{'': [nan, 0.18878513609217853], 'false': [nan, 0.18878513609217784], 'false,false': [nan, 0.18878513609217784], 'false,false,false': [nan, 0.18878513609217784]}
{'': [nan, 0.19121180153783002], 'false': [nan, 0.19121180153783002], 'false,false': [nan, 0.19121180153783038], 'false,false,false': [nan, 0.19121180153783038]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 20.612
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.07814893509951236;  // std dev = 0.414, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( enzyme(G, H), location(G, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(K, G) )
%   | | | then return 0.39386322081379804;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), complex(A, N) )
%   | | | then return 0.12229987849573878;  // std dev = 3.210, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.19549833268987288;  // std dev = 4.307, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7667670724000054;  // std dev = 0.210, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | else return -0.16682490969323766;  // std dev = 0.176, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.7900572605767406;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.15693507706907192;  // std dev = 0.029, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.05572863811590493;  // std dev = 2.486, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5091946086025262;  // std dev = 2.870, 38.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | | | else return -0.1727675308250281;  // std dev = 0.078, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.08264661519083083;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3216446628858228;  // std dev = 1.176, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, D) )
%   | | then return 0.6444424830491412;  // std dev = 0.081, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.2731661281405268;  // std dev = 0.440, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, D) )
%   | | then return -0.13955296933702044;  // std dev = 0.091, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.7505388171702884;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10873578024806518;  // std dev = 5.295, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7040250257525416;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14382388636564042;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A) )
%   | | then return 0.3631035383147113;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.49684368398574147;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, C) )
%   | then if ( phenotype(E, D) )
%   | | then return 0.432836528291304;  // std dev = 0.167, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5770597715860509;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.23683413925852256;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( complex(A, F), interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, F) )
%   | | | then return 0.6509175190638612;  // std dev = 0.422, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.18549197428986888;  // std dev = 0.209, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.16539426831305193;  // std dev = 0.331, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.387774937838062;  // std dev = 0.641, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.0640014509663552;  // std dev = 1.680, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | | else return 0.044276591885073296;  // std dev = 4.887, 159.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=42 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.38612797690383954;  // std dev = 0.704, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.5934253924959462;  // std dev = 1.533, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.6082742685076022;  // std dev = 0.193, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20773040872464546;  // std dev = 0.328, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.1607857476748691;  // std dev = 0.534, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(A, A) )
%   | | then return -0.04694518685299456;  // std dev = 0.539, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.0383105280068625;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.06436560783829857;  // std dev = 1.088, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.1700933611383512;  // std dev = 0.234, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.3708811089795985;  // std dev = 0.257, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(A, G), recursion_proteinclass(H, B) )
%   | | | then return 0.39044275794624;  // std dev = 0.366, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.04521014666448501;  // std dev = 2.440, 98.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=14 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.043390704973488875;  // std dev = 0.817, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.1305888542468351;  // std dev = 1.190, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(J, J), location(A, K) )
%   | | | then return 0.28017826121877754;  // std dev = 0.714, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.046298823283641814;  // std dev = 3.459, 116.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=39 */
%   | | else return 0.20650681799215884;  // std dev = 0.698, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.02905785154942001;  // std dev = 0.243, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( recursion_proteinclass(F, B), interaction(D, A) )
%   | | | then return 0.29790318884076;  // std dev = 0.394, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.03478767540617858;  // std dev = 2.068, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.08055705409432093;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06693932677244141;  // std dev = 0.689, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( location(H, J), location(A, J) )
%   | | | then return 0.005906436854352947;  // std dev = 2.567, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return 0.06340194572210836;  // std dev = 1.684, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.08912894198105432;  // std dev = 0.583, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.010563434529053548;  // std dev = 0.603, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(C, D) )
%   | then if ( location(A, E), location(C, E) )
%   | | then return 0.03523949524872041;  // std dev = 0.228, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | | then return 0.35770412479561225;  // std dev = 0.575, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.15990300361543724;  // std dev = 0.237, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.05395704498401509;  // std dev = 0.221, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.03444428089892933;  // std dev = 0.225, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.3744741771646865;  // std dev = 0.608, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0735222374970773;  // std dev = 0.972, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.20079946611793434;  // std dev = 0.663, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.02112003066684229;  // std dev = 3.806, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then if ( interaction(C, E) )
%   | | then return 0.19542708183569393;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.28744607506696707;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.03226474267555644;  // std dev = 0.600, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( phenotype(A, F), complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.3099721474751795;  // std dev = 0.070, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.1402992398694982;  // std dev = 0.088, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(I, K), location(K, J) )
%   | | | then return 0.012162462192886378;  // std dev = 1.370, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.26725208958971164;  // std dev = 1.350, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.004851974394796144;  // std dev = 2.405, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.036044039983827464;  // std dev = 2.653, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(A, A), recursion_proteinclass(C, B) )
%   | then return 0.19065872960853905;  // std dev = 0.173, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10488247443138543;  // std dev = 0.125, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.027226736995621243;  // std dev = 0.175, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.3192735669330353;  // std dev = 0.087, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.16582475950682063;  // std dev = 0.076, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I) )
%   | | | then return 0.05077062366688635;  // std dev = 1.273, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.02277040011696429;  // std dev = 1.668, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.16106975259249556;  // std dev = 1.145, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.03995186166760124;  // std dev = 3.223, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '14.693', 'seconds']
Refined model CLL: -0.191215


******************************************
Best model found
******************************************
Results 

CLL : -0.198062 

AUC ROC : 0.989944 

AUC PR : 0.443291 

Precision : 0.312955 

Recall : 0.762411 

F1 : 0.443756 

Total Learning Time : 20.612 

Total Inference Time : 20.076903820037842 

Total revision time: 43.51766005706787
Best scored revision CLL: -0.191215


Results 

CLL : -0.198062 

AUC ROC : 0.989944 

AUC PR : 0.443291 

Precision : 0.312955 

Recall : 0.762411 

F1 : 0.443756 

Total Learning Time : 43.53121224594116 

Total Inference Time : 20.076903820037842 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.257
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20251979602666517;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14304315969806844;  // std dev = 5.984, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
%   | | | else return 0.1715351952348382;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13467666331531766;  // std dev = 5.260, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0.14663868889821946;  // std dev = 6.454, 186.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1343799326339305;  // std dev = 4.358, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | | | else return 0.1281945140366166;  // std dev = 7.014, 218.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1342152881102356;  // std dev = 8.086, 280.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08567939763150972;  // std dev = 8.234, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.722908336847831;  // std dev = 0.013, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2773114561435122;  // std dev = 0.019, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06634715154058916;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | | else return 0.06214973372071925;  // std dev = 5.119, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03211677903325741;  // std dev = 4.114, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return 0.03629137017343991;  // std dev = 6.497, 191.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04806648932550221;  // std dev = 7.552, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.004957778067224322;  // std dev = 7.816, 341.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.135', 'seconds']
Parameter learned model CLL:-0.337226 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.984, 115, 52], 'false,false,false,false': [5.859, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.26, 85, 41], 'false,false,false,false': [6.454, 123, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.358, 55, 29], 'false,false,false,false': [7.014, 143, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.086, 176, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.234, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.013, 0, 41], 'true,false': [0.019, 79, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.886, 44, 23], 'false,false,false,false': [5.119, 76, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.114, 84, 41], 'false,false,false,false': [6.497, 128, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.552, 192, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.816, 237, 104]}]
{'': [nan, 0.22577957107144642], 'false': [nan, 0.22577957107144478], 'false,false': [nan, 0.22577957107144642], 'false,false,false': [nan, 0.22577957107144478]}
{'': [nan, 0.21937499999999682], 'false': [nan, 0.21937500000000104], 'false,false': [nan, 0.21937499999999682], 'false,false,false': [0.21442145648822325, 0.22435815284719746]}
{'': [nan, 0.22222708787632994], 'false': [nan, 0.22222708787632994], 'false,false': [nan, 0.22222708787632797], 'false,false,false': [0.2195890862093922, 0.22395633489481928]}
{'': [nan, 0.2257775043425309], 'false': [nan, 0.2257775043425309], 'false,false': [nan, 0.22577750434253233], 'false,false,false': [0.2260487528344682, 0.22566234488668319]}
{'': [nan, 0.23351322047973525], 'false': [nan, 0.23351322047973525], 'false,false': [nan, 0.233513220479735], 'false,false,false': [nan, 0.233513220479735]}
{'': [nan, 0.22674909117434786], 'false': [nan, 0.22674909117434786], 'false,false': [nan, 0.22674909117434844], 'false,false,false': [nan, 0.22674909117434836]}
{'': [0.22503382974559571, 0.2257493028010795], 'false': [nan, 0.2257493028010795], 'false,false': [nan, 0.2257493028010795], 'false,false,false': [0.2254399643573181, 0.22592152199762155], 'true': [4.150179275363715e-06, 4.509913913711877e-06], 'true,true': [nan, 4.150179275363715e-06], 'true,true,false': [nan, 4.150179275363715e-06]}
{'': [nan, 0.18713844570684296], 'false': [nan, 0.18713844570684296], 'false,false': [nan, 0.18713844570684285], 'false,false,false': [0.13536748559757047, 0.22101307042765192]}
{'': [nan, 0.19268890004352773], 'false': [nan, 0.19268890004352815], 'false,false': [nan, 0.19268890004352815], 'false,false,false': [nan, 0.19268890004352815]}
{'': [nan, 0.17916594978502712], 'false': [nan, 0.17916594978502712], 'false,false': [nan, 0.1791659497850268], 'false,false,false': [nan, 0.1791659497850268]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.81
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( enzyme(A, D), location(A, E) )
%   | | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.822434649385226;  // std dev = 0.982, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.14185106490048768;  // std dev = 4.08e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.10814893509951237;  // std dev = 3.571, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return 0.18145720577620336;  // std dev = 5.394, 133.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(C, A) )
%   | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.8215358842844047;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3749442225650558;  // std dev = 0.950, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.21947341221095437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7979258483526727;  // std dev = 0.274, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.14854736306858163;  // std dev = 0.226, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( location(A, J) )
%   | | | then return 0.14504271681402528;  // std dev = 5.665, 163.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=51 */
%   | | | else return 0.057913328886106515;  // std dev = 2.162, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6615982235410978;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( location(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(G, E) )
%   | | | then return 0.6854616279512118;  // std dev = 0.141, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.578380926582519;  // std dev = 0.960, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.1339708826890831;  // std dev = 0.043, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( enzyme(H, J), enzyme(A, K) )
%   | | | then return 0.020928955711757163;  // std dev = 1.960, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.1287319989027123;  // std dev = 5.280, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.02644365860420698;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.24662356451168874;  // std dev = 1.973, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.4632616132306509;  // std dev = 0.066, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.016987590079251935;  // std dev = 1.140, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12202234518610035;  // std dev = 0.030, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.03599232445944114;  // std dev = 2.903, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.19605538372086007;  // std dev = 0.789, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( location(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.46890770164874257;  // std dev = 0.359, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.111341400275905;  // std dev = 0.097, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.09906843536039277;  // std dev = 2.455, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.17682201455333632;  // std dev = 4.684, 95.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3351409931836171;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09592341254520466;  // std dev = 0.072, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( complex(C, E) )
%   | | | then return 0.11505925753566731;  // std dev = 2.376, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.2515805537784306;  // std dev = 1.267, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( location(A, F), enzyme(A, G) )
%   | then return 0.08196114008060684;  // std dev = 0.309, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( enzyme(H, J), complex(A, K) )
%   | | | then return 0.3120573341203131;  // std dev = 0.488, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.012173386320597729;  // std dev = 5.204, 172.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=44 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.16057621761847174;  // std dev = 1.403, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.011454046462378496;  // std dev = 1.215, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.41664165518737495;  // std dev = 0.256, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.12373436381937535;  // std dev = 0.108, 41.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.39526253405503037;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07639806413583607;  // std dev = 5.118, 158.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=51 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.3530454488884458;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(I, J) )
%   | | | then return -0.00266809594576474;  // std dev = 1.906, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return -0.10606400746746344;  // std dev = 0.914, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.20761065416033428;  // std dev = 0.986, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.044724860370749124;  // std dev = 1.154, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.24705676026871473;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.356815106782447;  // std dev = 0.112, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.12590092242148032;  // std dev = 0.086, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H), interaction(I, A) )
%   | | | then return -0.13125317161753908;  // std dev = 1.117, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.5789509674167328;  // std dev = 2.162, 60.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=55 */
%   | | else return -0.21183022332054463;  // std dev = 0.041, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.4474321154410454;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.07384169310089254;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18843899245332177;  // std dev = 1.126, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( complex(C, E), location(C, D) )
%   | then return 0.013755735488862815;  // std dev = 0.296, 207.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=68 */
%   | else if ( interaction(F, C) )
%   | | then if ( recursion_proteinclass(F, B), interaction(A, C) )
%   | | | then return 0.4153496585111051;  // std dev = 0.305, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04099529088595849;  // std dev = 2.495, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | else return 0.33070562215235305;  // std dev = 0.539, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.4691281811595668;  // std dev = 0.428, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.269995390883804;  // std dev = 0.083, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( complex(A, I) )
%   | | then return 0.004672042269349313;  // std dev = 0.283, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.048047709139202664;  // std dev = 0.956, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10269689036019591;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.13600002243442116;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.5320358331421247;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.2559395759681097;  // std dev = 0.089, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then return 0.014518084220643815;  // std dev = 0.246, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( enzyme(A, I), phenotype(E, J) )
%   | | | then return 0.005533523583439166;  // std dev = 1.154, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.0877634872587856;  // std dev = 2.721, 70.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=13 */
%   | else if ( location(A, K), interaction(A, L) )
%   | | then return -0.026392108038278937;  // std dev = 0.231, 96.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=22 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 5.145032494236594E-4;  // std dev = 3.194, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | | | else return 0.06110845334286866;  // std dev = 1.716, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19086795516909758;  // std dev = 0.069, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D), interaction(D, A) )
%   | | | then return 0.3316033605699519;  // std dev = 0.658, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.21355599937942935;  // std dev = 0.744, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.13313523824921814;  // std dev = 0.397, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0.0038368357508335948;  // std dev = 1.980, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( enzyme(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.03650541763864786;  // std dev = 1.441, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.030447488725865342;  // std dev = 1.556, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return -0.029821063408134212;  // std dev = 0.751, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.0830279157217904;  // std dev = 3.772, 81.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.097', 'seconds']
Refined model CLL: -0.213919


******************************************
Best model found
******************************************
Results 

CLL : -0.216203 

AUC ROC : 0.978616 

AUC PR : 0.457463 

Precision : 0.464286 

Recall : 0.637736 

F1 : 0.537361 

Total Learning Time : 10.81 

Total Inference Time : 7.770649433135986 

Total revision time: 21.83919605445862
Best scored revision CLL: -0.213919


Results 

CLL : -0.216203 

AUC ROC : 0.978616 

AUC PR : 0.457463 

Precision : 0.464286 

Recall : 0.637736 

F1 : 0.537361 

Total Learning Time : 21.85274824333191 

Total Inference Time : 7.770649433135986 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.121
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1976323299334608;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17694363418982345;  // std dev = 5.781, 148.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=51 */
%   | | | else return 0.1577458649920542;  // std dev = 5.259, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12848707022351172;  // std dev = 5.466, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.12981597942119993;  // std dev = 5.704, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15674759947963887;  // std dev = 4.043, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | | else return 0.11733912700817964;  // std dev = 6.648, 200.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11162217923969708;  // std dev = 7.748, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08191507070889263;  // std dev = 7.802, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7252072141948701;  // std dev = 0.038, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2749643255207675;  // std dev = 0.048, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06588391324067439;  // std dev = 4.069, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | | else return 0.08031530181608451;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02319089244544545;  // std dev = 4.309, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.02898320305106952;  // std dev = 5.740, 153.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.047204820418003376;  // std dev = 7.013, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03269929302108752;  // std dev = 7.024, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.512', 'seconds']
Parameter learned model CLL:-0.329294 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.781, 97, 51], 'false,false,false,false': [5.259, 85, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.466, 93, 44], 'false,false,false,false': [5.704, 101, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.043, 44, 26], 'false,false,false,false': [6.648, 134, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.748, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.802, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.038, 0, 44], 'true,false': [0.048, 71, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.069, 49, 25], 'false,false,false,false': [3.871, 43, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.309, 96, 44], 'false,false,false,false': [5.74, 105, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.013, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.024, 182, 92]}]
{'': [nan, 0.2242344194659672], 'false': [nan, 0.22423441946596676], 'false,false': [nan, 0.2242344194659672], 'false,false,false': [nan, 0.22423441946596676]}
{'': [nan, 0.2230273323032655], 'false': [nan, 0.2230273323032661], 'false,false': [nan, 0.2230273323032655], 'false,false,false': [0.22584915997078156, 0.21951373141849345]}
{'': [nan, 0.2182133411451686], 'false': [nan, 0.2182133411451686], 'false,false': [nan, 0.21821334114517002], 'false,false,false': [0.21807772939547926, 0.21833718519232387]}
{'': [nan, 0.22451763975292816], 'false': [nan, 0.22451763975292816], 'false,false': [nan, 0.22451763975292852], 'false,false,false': [0.23346938775510262, 0.22098189114040018]}
{'': [nan, 0.22652696527390603], 'false': [nan, 0.22652696527390603], 'false,false': [nan, 0.22652696527390673], 'false,false,false': [nan, 0.22652696527390673]}
{'': [nan, 0.2237727089120126], 'false': [nan, 0.2237727089120126], 'false,false': [nan, 0.22377270891201326], 'false,false,false': [nan, 0.22377270891201279]}
{'': [0.23633289583339462, 0.22532977150970324], 'true': [3.2807735788751494e-05, 3.241496433892891e-05], 'false': [nan, 0.22532977150970324], 'false,false': [nan, 0.22532977150970324], 'false,false,false': [0.22370343316289265, 0.22704315886134122], 'true,true': [nan, 3.2807735788751494e-05], 'true,true,false': [nan, 3.2807735788751494e-05]}
{'': [nan, 0.17580779593085497], 'false': [nan, 0.17580779593085497], 'false,false': [nan, 0.17580779593085577], 'false,false,false': [0.13261864786374933, 0.2153112466936524]}
{'': [nan, 0.1828272086134666], 'false': [nan, 0.18282720861346655], 'false,false': [nan, 0.18282720861346655], 'false,false,false': [nan, 0.18282720861346655]}
{'': [nan, 0.180044761334008], 'false': [nan, 0.180044761334008], 'false,false': [nan, 0.18004476133400898], 'false,false,false': [nan, 0.18004476133400898]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.012
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, A), enzyme(E, F) )
%   | | | then return 0.058148935099512356;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.15814893509951225;  // std dev = 6.797, 220.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=66 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( phenotype(A, E), interaction(F, D) )
%   | then return 0.08301872137846851;  // std dev = 0.420, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.11590224866980357;  // std dev = 0.445, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   else if ( interaction(G, A), complex(A, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(G, I), interaction(G, G) )
%   | | | then return -0.15485960387929512;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.24181348516883028;  // std dev = 2.718, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.09644853346832111;  // std dev = 3.110, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.1765635347178647;  // std dev = 4.182, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.7024166397269905;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5871499804076188;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(F, C), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(G, H) )
%   | | | then return 0.5053609906085927;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7706401481158477;  // std dev = 1.007, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.17209233827009532;  // std dev = 0.191, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5735284616956184;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3335738535661602;  // std dev = 0.903, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), interaction(A, K) )
%   | | | then return -0.07445482486411109;  // std dev = 0.931, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.08436839134627999;  // std dev = 5.549, 158.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=42 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), complex(A, E) )
%   | then return 0.4903025262699723;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.43466327374752317;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H), location(A, I) )
%   | | then if ( interaction(H, J), interaction(J, H) )
%   | | | then return 0.06094076023165147;  // std dev = 3.120, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return 0.21101326889883282;  // std dev = 1.475, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( phenotype(A, K), complex(A, G) )
%   | | | then return 0.2597142912956859;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04629090639159917;  // std dev = 1.835, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.4778743941888533;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.20174566568879726;  // std dev = 2.947, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.09045788805752099;  // std dev = 4.336, 101.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( phenotype(A, D), interaction(C, C) )
%   | then return 0.0073311375102801425;  // std dev = 0.267, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( complex(C, E), interaction(F, A) )
%   | | then if ( interaction(F, F), interaction(C, G) )
%   | | | then return 0.026624632697201816;  // std dev = 1.442, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.10657556866707463;  // std dev = 2.062, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( enzyme(C, H) )
%   | | | then return 0.38700016163679957;  // std dev = 1.050, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1442960553262924;  // std dev = 2.215, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.34134191753161053;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then return -0.01359154757685705;  // std dev = 0.373, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | else if ( location(A, L) )
%   | | | then return 0.07848694974863171;  // std dev = 4.390, 106.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   | | | else return 0.3064662362483641;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.41007393174843826;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, F) )
%   | | then return 0.2594195616282579;  // std dev = 0.074, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.33388998655788704;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.12556551563314428;  // std dev = 0.086, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5807216169188967;  // std dev = 0.346, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06284212582884137;  // std dev = 2.856, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.11824756368766641;  // std dev = 1.994, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.036346532933101874;  // std dev = 5.612, 185.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5386533143045503;  // std dev = 0.213, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2010685444635585;  // std dev = 0.033, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.26940803391191737;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), phenotype(A, H) )
%   | | | then return -0.08919026672629121;  // std dev = 0.642, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.07979151766096525;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7334347556588267;  // std dev = 0.213, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.23118289190957134;  // std dev = 0.073, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.18119795478655895;  // std dev = 1.672, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.06102594703701158;  // std dev = 3.126, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( enzyme(C, E), phenotype(C, F) )
%   | then if ( complex(D, G), complex(A, G) )
%   | | then return -0.04103976570205005;  // std dev = 0.147, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.14141566148322568;  // std dev = 0.427, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return -0.0229263750557288;  // std dev = 0.276, 80.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=22 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.44313147520421425;  // std dev = 0.136, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.17407715685282638;  // std dev = 0.053, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( enzyme(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.49861268030624056;  // std dev = 1.056, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.19632799148977345;  // std dev = 0.114, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( location(A, N), interaction(A, P) )
%   | | | then return 0.12280200744821353;  // std dev = 2.533, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.19224014985428017;  // std dev = 3.014, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(A, E), interaction(C, C) )
%   | then return -0.05030692969750947;  // std dev = 0.140, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( phenotype(A, F), location(C, G) )
%   | | then return 0.0225765232055517;  // std dev = 0.277, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5884493497116476;  // std dev = 0.760, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.2148309083332631;  // std dev = 0.341, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( interaction(I, A), complex(I, J) )
%   | then return -0.05203734342854077;  // std dev = 0.300, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( enzyme(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.4358492753098469;  // std dev = 0.472, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.16160209371620013;  // std dev = 0.113, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, N), location(A, P) )
%   | | | then return 0.02071202184468906;  // std dev = 2.849, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return -0.04478802195457277;  // std dev = 1.960, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, A), location(C, E) )
%   | then return -0.04749700358371067;  // std dev = 0.186, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( complex(A, F), enzyme(C, D) )
%   | | then return -0.05385289372651507;  // std dev = 0.228, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0.006495654022695874;  // std dev = 0.285, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   else if ( interaction(G, A), complex(A, H) )
%   | then if ( interaction(A, I), complex(G, H) )
%   | | then return 0.218663391697892;  // std dev = 0.244, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.03379861873707268;  // std dev = 0.256, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), interaction(M, L) )
%   | | | then return -0.04222306783716556;  // std dev = 2.824, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return 0.005504544233094798;  // std dev = 2.185, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( phenotype(A, N) )
%   | | | then return -0.004963291598229161;  // std dev = 1.673, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.07279880621285498;  // std dev = 2.036, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.957', 'seconds']
Refined model CLL: -0.226426


******************************************
Best model found
******************************************
Results 

CLL : -0.236745 

AUC ROC : 0.981234 

AUC PR : 0.277001 

Precision : 0.281426 

Recall : 0.541516 

F1 : 0.37037 

Total Learning Time : 6.012 

Total Inference Time : 2.51455020904541 

Total revision time: 11.440769060134887
Best scored revision CLL: -0.226426


Results 

CLL : -0.236745 

AUC ROC : 0.981234 

AUC PR : 0.277001 

Precision : 0.281426 

Recall : 0.541516 

F1 : 0.37037 

Total Learning Time : 11.454321249008178 

Total Inference Time : 2.51455020904541 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.125
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19277928529406524;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16006918672865847;  // std dev = 5.916, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
%   | | | else return 0.12612860984728608;  // std dev = 4.902, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.09106123080957408;  // std dev = 4.491, 100.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=28 */
%   | | | else return 0.1469148498111751;  // std dev = 6.211, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.2173457559822278;  // std dev = 3.313, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | else return 0.1426884188142017;  // std dev = 6.585, 190.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07376134987636306;  // std dev = 7.704, 277.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07116734488913318;  // std dev = 7.640, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.736549543080263;  // std dev = 0.052, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2659848089153264;  // std dev = 0.075, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09222814138885121;  // std dev = 4.600, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | | | else return 0.07795164287764957;  // std dev = 4.069, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04737290258698251;  // std dev = 3.404, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | | else return 0.06609414556293351;  // std dev = 6.158, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05135370558677014;  // std dev = 7.017, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02561700537713898;  // std dev = 7.115, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.461', 'seconds']
Parameter learned model CLL:-0.344636 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.565, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.916, 107, 52], 'false,false,false,false': [4.902, 82, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.491, 72, 28], 'false,false,false,false': [6.211, 115, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.313, 26, 19], 'false,false,false,false': [6.585, 123, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.704, 191, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.64, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.052, 0, 28], 'true,false': [0.075, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.6, 59, 33], 'false,false,false,false': [4.069, 49, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.404, 56, 28], 'false,false,false,false': [6.158, 109, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.017, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.115, 170, 86]}]
{'': [nan, 0.22265287892322444], 'false': [nan, 0.22265287892322427], 'false,false': [nan, 0.22265287892322444], 'false,false,false': [nan, 0.22265287892322427]}
{'': [nan, 0.21492892561983415], 'false': [nan, 0.21492892561983418], 'false,false': [nan, 0.21492892561983415], 'false,false,false': [0.2200862307661866, 0.20719381688466254]}
{'': [nan, 0.21589468462309894], 'false': [nan, 0.21589468462309894], 'false,false': [nan, 0.21589468462309902], 'false,false,false': [0.20169664969101664, 0.2229589208079512]}
{'': [nan, 0.23211362049784567], 'false': [nan, 0.23211362049784567], 'false,false': [nan, 0.23211362049784562], 'false,false,false': [0.24395061728395093, 0.2282428135582401]}
{'': [nan, 0.2142840958123703], 'false': [nan, 0.2142840958123703], 'false,false': [nan, 0.21428409581236962], 'false,false,false': [nan, 0.21428409581236962]}
{'': [nan, 0.2177887616359889], 'false': [nan, 0.2177887616359889], 'false,false': [nan, 0.21778876163598848], 'false,false,false': [nan, 0.2177887616359892]}
{'': [0.19309480244630958, 0.22726178640215464], 'false': [nan, 0.22726178640215464], 'false,false': [nan, 0.22726178640215464], 'false,false,false': [0.23003308128544345, 0.2237034331628922], 'true': [9.501061820271772e-05, 6.969667805440949e-05], 'true,true': [nan, 9.501061820271772e-05], 'true,true,false': [nan, 9.501061820271772e-05]}
{'': [nan, 0.19732879140051326], 'false': [nan, 0.19732879140051326], 'false,false': [nan, 0.19732879140051388], 'false,false,false': [0.13796779625063582, 0.22706972274154122]}
{'': [nan, 0.19932943184551355], 'false': [nan, 0.19932943184551352], 'false,false': [nan, 0.19932943184551352], 'false,false,false': [nan, 0.19932943184551352]}
{'': [nan, 0.1977556387188283], 'false': [nan, 0.1977556387188283], 'false,false': [nan, 0.19775563871882823], 'false,false,false': [nan, 0.19775563871882823]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.781
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(C, E) )
%   | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, C), interaction(C, G) )
%   | | | then return 0.15814893509951236;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.4295775065280836;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(C, C), interaction(A, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.18046298468628788;  // std dev = 5.141, 121.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=39 */
%   else if ( enzyme(A, I) )
%   | then return 0.06403128804068885;  // std dev = 0.404, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then return 0.10814893509951237;  // std dev = 0.433, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else return 0.21529179224236947;  // std dev = 0.479, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8387801674741958;  // std dev = 0.053, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.16631453741725588;  // std dev = 0.136, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( enzyme(A, F) )
%   | then if ( interaction(A, G), location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.12044555437961314;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.16526873133467251;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(J, F), recursion_proteinclass(J, B) )
%   | | | then return 0.8347312686653277;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.16526873133467254;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.8035405751276194;  // std dev = 0.053, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.013672312757068586;  // std dev = 2.383, 47.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
%   | | | else return 0.15374789293753408;  // std dev = 4.954, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.3601054379768296;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, C), phenotype(A, F) )
%   | | then return 0.5345226057939648;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6943770946260946;  // std dev = 0.062, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( enzyme(A, I), interaction(G, G) )
%   | | then return 0.42212144681434643;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, J), interaction(A, J) )
%   | | | then return -0.051199957354142484;  // std dev = 1.747, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return 0.0697649663157718;  // std dev = 2.599, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.7116745801598652;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.07932961032045333;  // std dev = 2.707, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.150608750610823;  // std dev = 4.715, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( complex(E, C) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.49240282568443333;  // std dev = 0.235, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.751013612712207;  // std dev = 0.260, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.17802375527316666;  // std dev = 0.144, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.17159627104655523;  // std dev = 0.224, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5312745944384308;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), interaction(K, A) )
%   | | | then return -0.07836504434516316;  // std dev = 1.270, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.1341085769615451;  // std dev = 1.827, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.18604125472031247;  // std dev = 2.700, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.10061370317238841;  // std dev = 4.082, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), phenotype(A, D) )
%   | then return 0.2887421198579057;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.42292735017195104;  // std dev = 0.076, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13691840042191628;  // std dev = 0.154, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( location(A, F), location(E, F) )
%   | | | then return 0.06288564943102927;  // std dev = 2.279, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return -0.06541901710196298;  // std dev = 1.151, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( complex(G, H), enzyme(G, I) )
%   | | | then return 0.007952972437828328;  // std dev = 1.726, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.13486641798859048;  // std dev = 4.659, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.10235260811678948;  // std dev = 0.846, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3448629014375998;  // std dev = 1.472, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3621462311144449;  // std dev = 0.104, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( complex(E, G), interaction(A, H) )
%   | | | then return 0.21387485885519542;  // std dev = 0.960, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.04569414319482855;  // std dev = 2.052, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5805712983754845;  // std dev = 0.207, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1699990975236969;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11653316803420614;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.025554537346421095;  // std dev = 1.548, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.020665889948813212;  // std dev = 3.748, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | | | else return 0.06671368159860919;  // std dev = 3.366, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.44518482335891024;  // std dev = 0.161, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.15894050989529973;  // std dev = 0.047, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5237037122557198;  // std dev = 0.229, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( phenotype(F, H), interaction(E, I) )
%   | | | then return -0.06386507798260502;  // std dev = 1.785, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.27941103604359047;  // std dev = 1.589, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( complex(K, L) )
%   | | | then return -0.028511826699795642;  // std dev = 1.208, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.04427575411263632;  // std dev = 1.493, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.14839271494907472;  // std dev = 1.295, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.03603719993734895;  // std dev = 3.543, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), phenotype(A, E) )
%   | | then if ( complex(A, F), interaction(A, G) )
%   | | | then return 0.25913829280252004;  // std dev = 0.755, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.5402963320336961;  // std dev = 1.299, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | else if ( interaction(H, A), interaction(H, D) )
%   | | | then return 0.3981522033280811;  // std dev = 1.318, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return -0.08205006867208453;  // std dev = 1.806, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | else if ( complex(A, I) )
%   | | then return -0.1443068266233399;  // std dev = 0.043, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.24012911040979792;  // std dev = 0.052, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(A, J) )
%   | then if ( interaction(J, K) )
%   | | then return -0.008671034075114006;  // std dev = 0.443, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.07472878628654915;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.18414363699823985;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( enzyme(D, E) )
%   | | | then return 0.3389068369617904;  // std dev = 0.546, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.17271657036978807;  // std dev = 0.206, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(G, D), interaction(G, A) )
%   | | | then return 0.4027548527463468;  // std dev = 1.504, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | | else return 0.048643785975130784;  // std dev = 2.250, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | else if ( complex(A, H) )
%   | | then return -0.12798936972131164;  // std dev = 0.037, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.1988774033365812;  // std dev = 0.048, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( enzyme(A, I) )
%   | then return -0.035844001486340996;  // std dev = 0.486, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, J) )
%   | | then return -0.1418948697155362;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.11010617518973667;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( enzyme(A, D) )
%   | then return 0.009262350639043663;  // std dev = 0.227, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | else if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), complex(E, G) )
%   | | | then return 0.05665888806972727;  // std dev = 0.913, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.4099137409106497;  // std dev = 0.726, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.19012388091588509;  // std dev = 0.100, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.15745717203814058;  // std dev = 0.111, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3363674150721896;  // std dev = 0.614, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.037621018824214515;  // std dev = 1.538, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.042819198487047794;  // std dev = 1.729, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.2810185577605129;  // std dev = 0.913, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '24.709', 'seconds']
Refined model CLL: -0.1848


******************************************
Best model found
******************************************
Results 

CLL : -0.183738 

AUC ROC : 0.989495 

AUC PR : 0.43859 

Precision : 0.365052 

Recall : 0.745583 

F1 : 0.490128 

Total Learning Time : 16.781 

Total Inference Time : 12.959084510803223 

Total revision time: 32.54275856590271
Best scored revision CLL: -0.1848


Results 

CLL : -0.183738 

AUC ROC : 0.989495 

AUC PR : 0.43859 

Precision : 0.365052 

Recall : 0.745583 

F1 : 0.490128 

Total Learning Time : 32.556310754776 

Total Inference Time : 12.959084510803223 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.069
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18277580077115402;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.20397717450535757;  // std dev = 4.630, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
%   | | | else return 0.12562074832284612;  // std dev = 6.129, 182.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16817827563157783;  // std dev = 4.747, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | | else return 0.14975890440974882;  // std dev = 5.866, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.06811173756517808;  // std dev = 3.149, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.11269876541267584;  // std dev = 7.024, 225.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10530141497061289;  // std dev = 7.595, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07211724927628618;  // std dev = 7.675, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7349211221564533;  // std dev = 0.019, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2649533756327014;  // std dev = 0.025, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.06477388872880448;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.11319943833428718;  // std dev = 4.483, 86.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07906932728407365;  // std dev = 3.683, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | | | else return 0.05624371215300614;  // std dev = 5.860, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.051905331410125405;  // std dev = 6.900, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015943495651199735;  // std dev = 7.029, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.332', 'seconds']
Parameter learned model CLL:-0.338329 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.665, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.63, 58, 34], 'false,false,false,false': [6.129, 129, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.747, 63, 35], 'false,false,false,false': [5.866, 102, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.149, 34, 14], 'false,false,false,false': [7.024, 152, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.595, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.675, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.019, 0, 35], 'true,false': [0.025, 63, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.636, 39, 20], 'false,false,false,false': [4.483, 54, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.683, 58, 35], 'false,false,false,false': [5.86, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.9, 160, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.029, 182, 87]}]
{'': [nan, 0.2192442637558485], 'false': [nan, 0.21924426375584855], 'false,false': [nan, 0.2192442637558485], 'false,false,false': [nan, 0.21924426375584855]}
{'': [nan, 0.2167004102509459], 'false': [nan, 0.2167004102509469], 'false,false': [nan, 0.2167004102509459], 'false,false,false': [0.2329867674858225, 0.20640623113150808]}
{'': [nan, 0.22603416015868782], 'false': [nan, 0.22603416015868782], 'false,false': [nan, 0.22603416015868769], 'false,false,false': [0.22996104484822896, 0.223403293946212]}
{'': [nan, 0.21730970286524237], 'false': [nan, 0.21730970286524237], 'false,false': [nan, 0.21730970286524187], 'false,false,false': [0.20659722222222165, 0.21924549307088487]}
{'': [nan, 0.22358758487705602], 'false': [nan, 0.22358758487705602], 'false,false': [nan, 0.22358758487705618], 'false,false,false': [nan, 0.22358758487705618]}
{'': [nan, 0.2189856044834623], 'false': [nan, 0.2189856044834623], 'false,false': [nan, 0.21898560448346258], 'false,false,false': [nan, 0.21898560448346277]}
{'': [0.22954451449875346, 0.23031325690433238], 'false': [nan, 0.23031325690433238], 'false,false': [nan, 0.23031325690433238], 'false,false,false': [0.22407354208560756, 0.23363980530016235], 'true': [1.041915745909299e-05, 1.023802320263133e-05], 'true,true': [nan, 1.041915745909299e-05], 'true,true,false': [nan, 1.041915745909299e-05]}
{'': [nan, 0.19485659473521308], 'false': [nan, 0.19485659473521308], 'false,false': [nan, 0.1948565947352132], 'false,false,false': [0.14588724777445655, 0.22442530951519427]}
{'': [nan, 0.19272804024180987], 'false': [nan, 0.19272804024181076], 'false,false': [nan, 0.19272804024181076], 'false,false,false': [nan, 0.19272804024181076]}
{'': [nan, 0.18366648805074326], 'false': [nan, 0.18366648805074326], 'false,false': [nan, 0.18366648805074326], 'false,false,false': [nan, 0.18366648805074326]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.934
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7299438068943832;  // std dev = 2.088, 39.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | | | else return -0.14185106490048763;  // std dev = 8.56e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.15360348055405665;  // std dev = 5.242, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
%   | | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(A, E), phenotype(C, F) )
%   | then if ( interaction(A, G), complex(G, E) )
%   | | then return 0.15794041880897552;  // std dev = 1.079, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7773118946197666;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13448262019808793;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.08066638894934175;  // std dev = 0.400, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   else if ( phenotype(A, I), interaction(J, A) )
%   | then return 0.16012299378709005;  // std dev = 0.411, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
%   | else if ( interaction(A, K) )
%   | | then if ( interaction(L, A), phenotype(K, M) )
%   | | | then return 0.5050701014594893;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.3213788811839001;  // std dev = 1.844, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.2999418963312841;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.1545628234968775;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6890263351867387;  // std dev = 0.113, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.14443612401703698;  // std dev = 0.043, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( phenotype(A, D) )
%   | | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | | then return 0.623226054144264;  // std dev = 1.678, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | | else return -0.14167753511530276;  // std dev = 0.106, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.18583102390795997;  // std dev = 3.577, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return 0.11110244689573616;  // std dev = 3.783, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(C, E), interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.554539217048697;  // std dev = 0.096, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.11594342356401413;  // std dev = 0.389, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | else if ( complex(A, G), phenotype(A, D) )
%   | | then return 0.26697520604313696;  // std dev = 0.705, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, C), recursion_proteinclass(H, B) )
%   | | | then return 0.2881984753859969;  // std dev = 1.133, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08295892281803753;  // std dev = 3.673, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   else if ( interaction(A, I), location(I, J) )
%   | then return 0.0062879647704052535;  // std dev = 0.377, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(K, L) )
%   | | | then return 0.13777515469638632;  // std dev = 2.789, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.01501598042722605;  // std dev = 1.534, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0.38980220995630904;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.42543325767476153;  // std dev = 0.192, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.7091698210786735;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, A) )
%   | | then return -0.18752684382684584;  // std dev = 0.087, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( enzyme(C, G) )
%   | | | then return 0.22997013473279462;  // std dev = 1.257, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.010293829619655095;  // std dev = 2.627, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.31321795353669896;  // std dev = 0.927, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13588712492746546;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.06236410333525936;  // std dev = 1.493, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.11479825711400093;  // std dev = 4.796, 119.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=42 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.41975653611486136;  // std dev = 0.233, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( interaction(A, F), interaction(D, F) )
%   | | then if ( interaction(A, D) )
%   | | | then return -0.141020115670868;  // std dev = 0.287, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.13255429196714427;  // std dev = 1.325, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( complex(A, G), complex(D, H) )
%   | | | then return -0.02446901720268483;  // std dev = 2.506, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.09168997717778232;  // std dev = 4.528, 113.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then if ( enzyme(A, J) )
%   | | then if ( interaction(I, K) )
%   | | | then return 0.011778935299484969;  // std dev = 0.545, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.06580638132801582;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.12146816710871496;  // std dev = 0.905, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.6558591562905436;  // std dev = 0.248, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.2757390877203752;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4489654895892494;  // std dev = 0.367, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.6898097306405669;  // std dev = 0.091, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.19652587026175006;  // std dev = 0.079, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3493432768488021;  // std dev = 0.210, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(H, J), location(A, K) )
%   | | | then return -0.003351165844387518;  // std dev = 3.038, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return 0.07662056428746207;  // std dev = 3.531, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.14321024876466382;  // std dev = 0.719, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.03200532369209002;  // std dev = 1.403, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(A, E) )
%   | then return 0.14078923495525916;  // std dev = 0.415, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.3435300753293311;  // std dev = 0.248, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, F), interaction(G, A) )
%   | then if ( location(G, F), complex(A, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.2529066061786279;  // std dev = 0.113, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.023626116991275634;  // std dev = 2.446, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | else if ( interaction(J, G), interaction(J, J) )
%   | | | then return 0.11591433787739075;  // std dev = 3.322, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
%   | | | else return 0.040891416010195365;  // std dev = 3.066, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | else if ( interaction(K, A), interaction(A, K) )
%   | | then return -0.21222600589834667;  // std dev = 0.324, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.10465009161907418;  // std dev = 0.809, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.004754531397329093;  // std dev = 1.364, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then return 0.17959252820011276;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.28159154228088584;  // std dev = 0.154, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, F), enzyme(F, G) )
%   | | then return -0.11623039093780818;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(F, H) )
%   | | | then return -0.031223822244645528;  // std dev = 1.214, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.2321408418730976;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(I, K), phenotype(A, L) )
%   | | | then return 0.21517608164107704;  // std dev = 0.615, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.039563886489220094;  // std dev = 1.932, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.07814736860086419;  // std dev = 1.546, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.02196625153946086;  // std dev = 4.622, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), location(D, C) )
%   | then return -0.04296050255332414;  // std dev = 0.332, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | else if ( location(D, C) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.17356089895959714;  // std dev = 0.915, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.002486136351029389;  // std dev = 3.554, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.05080537408335771;  // std dev = 1.652, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.18148088650777036;  // std dev = 1.657, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.01306587368530647;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.1851222878516794;  // std dev = 0.608, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( location(A, J) )
%   | | | then return -0.023156805812946643;  // std dev = 1.165, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.15749694950395535;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.001', 'seconds']
Refined model CLL: -0.265034


******************************************
Best model found
******************************************
Results 

CLL : -0.272119 

AUC ROC : 0.942795 

AUC PR : 0.241956 

Precision : 0.139939 

Recall : 0.656028 

F1 : 0.230673 

Total Learning Time : 9.934 

Total Inference Time : 5.188439130783081 

Total revision time: 17.89524147796631
Best scored revision CLL: -0.265034


Results 

CLL : -0.272119 

AUC ROC : 0.942795 

AUC PR : 0.241956 

Precision : 0.139939 

Recall : 0.656028 

F1 : 0.230673 

Total Learning Time : 17.924601057052612 

Total Inference Time : 5.188439130783081 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.149
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16952618060849498;  // std dev = 8.463, 334.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.144645751897585;  // std dev = 4.777, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | | else return 0.14763804571624087;  // std dev = 6.992, 228.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13298372261677913;  // std dev = 5.288, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
%   | | | else return 0.16323367123851837;  // std dev = 6.409, 181.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.223165683325618;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.12780586150057077;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08252407454114098;  // std dev = 8.440, 330.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08335893439270585;  // std dev = 8.342, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7366662433305824;  // std dev = 0.053, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26390116821797605;  // std dev = 0.088, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.059780577249147086;  // std dev = 3.770, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.10780423977864245;  // std dev = 5.137, 113.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.044903908921840624;  // std dev = 4.131, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.01635549557544632;  // std dev = 6.651, 211.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06629377774062145;  // std dev = 7.526, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026924523023404527;  // std dev = 7.677, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.156', 'seconds']
Parameter learned model CLL:-0.33295 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.463, 230, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.777, 74, 33], 'false,false,false,false': [6.992, 157, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.288, 88, 41], 'false,false,false,false': [6.409, 118, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.619, 16, 12], 'false,false,false,false': [7.81, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.44, 226, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.342, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.053, 0, 41], 'true,false': [0.088, 108, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.77, 44, 21], 'false,false,false,false': [5.137, 71, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.131, 83, 41], 'false,false,false,false': [6.651, 148, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.526, 188, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.677, 213, 104]}]
{'': [nan, 0.21442145648822297], 'false': [nan, 0.21442145648822178], 'false,false': [nan, 0.21442145648822297], 'false,false,false': [nan, 0.21442145648822178]}
{'': [nan, 0.2140699487636467], 'false': [nan, 0.2140699487636435], 'false,false': [nan, 0.2140699487636467], 'false,false,false': [0.21329373744431843, 0.21443136349645886]}
{'': [nan, 0.22292216390278086], 'false': [nan, 0.22292216390278086], 'false,false': [nan, 0.22292216390278255], 'false,false,false': [0.21680007106118596, 0.22690464066272834]}
{'': [nan, 0.22619401561862537], 'false': [nan, 0.22619401561862537], 'false,false': [nan, 0.22619401561862637], 'false,false,false': [0.2448979591836738, 0.22342975586330469]}
{'': [nan, 0.21584775924766755], 'false': [nan, 0.21584775924766755], 'false,false': [nan, 0.21584775924766686], 'false,false,false': [nan, 0.21584775924766686]}
{'': [nan, 0.2216428050049629], 'false': [nan, 0.2216428050049629], 'false,false': [nan, 0.2216428050049631], 'false,false,false': [nan, 0.22164280500496228]}
{'': [0.1997473679058192, 0.22865129923895738], 'false': [nan, 0.22865129923895738], 'false,false': [nan, 0.22865129923895738], 'false,false,false': [0.21869822485207097, 0.2335343409820669], 'true': [6.763842651151169e-05, 7.156906754519961e-05], 'true,true': [nan, 6.763842651151169e-05], 'true,true,false': [nan, 6.763842651151169e-05]}
{'': [nan, 0.18316523364227313], 'false': [nan, 0.18316523364227313], 'false,false': [nan, 0.18316523364227313], 'false,false,false': [0.13760883755226305, 0.20963603681277826]}
{'': [nan, 0.19396303294245254], 'false': [nan, 0.19396303294245273], 'false,false': [nan, 0.19396303294245273], 'false,false,false': [nan, 0.19396303294245273]}
{'': [nan, 0.1859303428759909], 'false': [nan, 0.1859303428759909], 'false,false': [nan, 0.18593034287599014], 'false,false,false': [nan, 0.18593034287599014]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.645
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), complex(H, I) )
%   | | | then return 0.7655563425069197;  // std dev = 2.130, 54.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=49 */
%   | | | else return 0.5581489350995122;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( enzyme(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06492798797741087;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10324697431519864;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7234856546527463;  // std dev = 0.183, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return -0.010489220436180174;  // std dev = 0.325, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | else if ( recursion_proteinclass(C, B), complex(C, G) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.10171270534245058;  // std dev = 0.408, 157.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8220354751580453;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14605626173399103;  // std dev = 0.043, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1680659303351045;  // std dev = 1.643, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.2902527079083409;  // std dev = 1.787, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.3225178668587494;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6165033306572786;  // std dev = 0.070, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( phenotype(A, F), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1242983980352262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5142332804089171;  // std dev = 1.094, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.11391883027222127;  // std dev = 4.200, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.07126159235046238;  // std dev = 2.515, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return -0.14516537976759705;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(L, A), interaction(A, L) )
%   | | | then return 0.3740534643966835;  // std dev = 0.963, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09304119452894186;  // std dev = 3.875, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), phenotype(A, D) )
%   | then return 0.1971145840528581;  // std dev = 0.709, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.4949133152724095;  // std dev = 0.074, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.3333182093585563;  // std dev = 0.744, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.27028843324626856;  // std dev = 0.163, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.6870481799485584;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.37954195144377056;  // std dev = 1.596, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return -0.07303177770351194;  // std dev = 2.831, 113.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=11 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12304026264997676;  // std dev = 3.745, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return 0.0423228572211315;  // std dev = 3.874, 89.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.42027154990540094;  // std dev = 0.102, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E), phenotype(D, E) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return -0.05853398215446833;  // std dev = 1.545, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return -0.17018125839010378;  // std dev = 0.740, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( complex(A, G), interaction(D, D) )
%   | | | then return 0.14977143907799095;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.026282788470344563;  // std dev = 1.481, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5865065431596159;  // std dev = 0.660, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.1570839223859428;  // std dev = 0.254, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( location(A, J) )
%   | | | then return 0.088018397583179;  // std dev = 5.026, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   | | | else return 0.23889744214497613;  // std dev = 1.671, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.1970037807367902;  // std dev = 2.209, 40.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=31 */
%   | | | else return 0.5497166711874085;  // std dev = 2.240, 67.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=61 */
%   | | else if ( interaction(G, D) )
%   | | | then return -0.18259381995872082;  // std dev = 1.137, 36.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | | else return 0.6233552715716825;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.16050764579956217;  // std dev = 0.512, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( complex(A, H) )
%   | then return 0.08992849686969673;  // std dev = 0.549, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6377396523133108;  // std dev = 0.334, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2220641376787021;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2760090318172427;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.036237503482089484;  // std dev = 0.229, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), enzyme(F, E) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2046030258471375;  // std dev = 0.705, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.1710268412263435;  // std dev = 0.486, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( enzyme(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5050807995353073;  // std dev = 0.263, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1479212551931653;  // std dev = 0.111, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5952970778796782;  // std dev = 0.424, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17727327826033296;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.05086177429552236;  // std dev = 3.810, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
%   | | | else return -0.07535341207032564;  // std dev = 1.497, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( complex(C, D), phenotype(C, E) )
%   | then return -0.02595459798637132;  // std dev = 0.244, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | else if ( enzyme(A, F), complex(C, G) )
%   | | then return -0.020861521643237662;  // std dev = 0.304, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(C, H) )
%   | | | then return 0.012474731344321009;  // std dev = 0.685, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.07285139302817985;  // std dev = 0.908, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.2937236740243404;  // std dev = 0.089, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( interaction(K, K), phenotype(K, L) )
%   | | | then return -0.08286128088885998;  // std dev = 0.897, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.042319325586534014;  // std dev = 3.012, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return 0.004909542933302264;  // std dev = 1.488, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.08040538158413199;  // std dev = 3.006, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, E) )
%   | then return 0.24656030983491511;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.15439741511365232;  // std dev = 0.111, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.2474336690999095;  // std dev = 0.339, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0947649217971891;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.026720599369476714;  // std dev = 1.725, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.07766102733016994;  // std dev = 1.178, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return 0.2623358130395605;  // std dev = 0.739, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, K) )
%   | | | then return 0.01876035879677492;  // std dev = 4.252, 198.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=57 */
%   | | | else return -0.04634966024529399;  // std dev = 1.847, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20969846439868536;  // std dev = 0.061, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(A, E), enzyme(D, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.19818928148992354;  // std dev = 0.799, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.09548687897988094;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( complex(A, G), phenotype(D, H) )
%   | | | then return -0.01674251040428802;  // std dev = 1.609, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.03598370371900692;  // std dev = 1.068, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3184400031596689;  // std dev = 0.553, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.13226381505125628;  // std dev = 0.238, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.19166910264129253;  // std dev = 1.602, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.06393562988309202;  // std dev = 3.659, 110.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '981', 'milliseconds']
Refined model CLL: -0.197451


******************************************
Best model found
******************************************
Results 

CLL : -0.191424 

AUC ROC : 0.989513 

AUC PR : 0.451556 

Precision : 0.459064 

Recall : 0.592453 

F1 : 0.517298 

Total Learning Time : 21.645 

Total Inference Time : 22.12072443962097 

Total revision time: 46.891279787063596
Best scored revision CLL: -0.197451


Results 

CLL : -0.191424 

AUC ROC : 0.989513 

AUC PR : 0.451556 

Precision : 0.459064 

Recall : 0.592453 

F1 : 0.517298 

Total Learning Time : 46.9206393661499 

Total Inference Time : 22.12072443962097 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.132
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2014325171890647;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1772726213168656;  // std dev = 4.987, 110.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=38 */
%   | | | else return 0.12370996775421346;  // std dev = 6.184, 185.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.2241394083975899;  // std dev = 5.075, 106.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=44 */
%   | | | else return 0.14052665667067102;  // std dev = 5.673, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10604653695820376;  // std dev = 3.986, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | | else return 0.12096507069314094;  // std dev = 6.721, 203.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0794211184909886;  // std dev = 7.918, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0696318250402;  // std dev = 7.893, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7230294674961313;  // std dev = 0.026, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2759985659924521;  // std dev = 0.034, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.018881222794427666;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.10910527023324826;  // std dev = 4.644, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05079076584787513;  // std dev = 4.187, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   | | | else return 0.032051616642138354;  // std dev = 5.764, 156.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05003207391013864;  // std dev = 7.016, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03426106087359452;  // std dev = 7.030, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.328', 'seconds']
Parameter learned model CLL:-0.328348 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.773, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.987, 72, 38], 'false,false,false,false': [6.184, 131, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.075, 62, 44], 'false,false,false,false': [5.673, 98, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.986, 47, 24], 'false,false,false,false': [6.721, 135, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.918, 196, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.893, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.026, 0, 44], 'true,false': [0.034, 81, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.162, 35, 14], 'false,false,false,false': [4.644, 59, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.187, 81, 44], 'false,false,false,false': [5.764, 108, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.016, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.03, 178, 92]}]
{'': [nan, 0.22543996435731922], 'false': [nan, 0.22543996435731875], 'false,false': [nan, 0.22543996435731922], 'false,false,false': [nan, 0.22543996435731875]}
{'': [nan, 0.2146049985636322], 'false': [nan, 0.2146049985636324], 'false,false': [nan, 0.2146049985636322], 'false,false,false': [0.22611570247934035, 0.20669101533966505]}
{'': [nan, 0.2316430758008287], 'false': [nan, 0.2316430758008287], 'false,false': [nan, 0.23164307580082905], 'false,false,false': [0.24301334011611092, 0.22044725485954672]}
{'': [nan, 0.22288063427934804], 'false': [nan, 0.22288063427934804], 'false,false': [nan, 0.2228806342793471], 'false,false,false': [0.22376512596707018, 0.2225136087004383]}
{'': [nan, 0.21770701381597346], 'false': [nan, 0.21770701381597346], 'false,false': [nan, 0.21770701381597304], 'false,false,false': [nan, 0.21770701381597304]}
{'': [nan, 0.22016018002558307], 'false': [nan, 0.22016018002558307], 'false,false': [nan, 0.22016018002558238], 'false,false,false': [nan, 0.2201601800255826]}
{'': [0.22766746643984778, 0.22416288618745525], 'true': [1.4823742103799795e-05, 1.4562257408549065e-05], 'false': [nan, 0.22416288618745525], 'false,false': [nan, 0.22416288618745525], 'false,false,false': [0.20408163265306098, 0.2319343276679376], 'true,true': [nan, 1.4823742103799795e-05], 'true,true,false': [nan, 1.4823742103799795e-05]}
{'': [nan, 0.18071267596697016], 'false': [nan, 0.18071267596697016], 'false,false': [nan, 0.18071267596696872], 'false,false,false': [0.14024088613198044, 0.21298578668763987]}
{'': [nan, 0.18646322343424257], 'false': [nan, 0.18646322343424301], 'false,false': [nan, 0.18646322343424301], 'false,false,false': [nan, 0.18646322343424301]}
{'': [nan, 0.1830602803913054], 'false': [nan, 0.1830602803913054], 'false,false': [nan, 0.1830602803913043], 'false,false,false': [nan, 0.1830602803913043]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.587
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7914822684328456;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( complex(E, D), interaction(A, E) )
%   | | then if ( interaction(E, F), phenotype(F, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(E, H), location(E, I) )
%   | | | then return 0.22957750652808379;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.07481560176617902;  // std dev = 3.191, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), interaction(L, L) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.3343394112899885;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.11346808403568258;  // std dev = 2.989, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0.152266582158335;  // std dev = 4.201, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7327299667445832;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8384873731952259;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( phenotype(E, G), complex(F, H) )
%   | | | then return 0.16263039632182935;  // std dev = 3.539, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.0406666319041441;  // std dev = 4.098, 105.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=21 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.29945286799056514;  // std dev = 2.543, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.17577299675025876;  // std dev = 3.635, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, E), enzyme(C, F) )
%   | then if ( complex(C, G), interaction(H, C) )
%   | | then return 0.012106408444388903;  // std dev = 0.376, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return -0.048152015456463214;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5993721323944062;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.05114017772709192;  // std dev = 0.915, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.09182155938565079;  // std dev = 4.371, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.6457387124808773;  // std dev = 0.062, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.5685132372860082;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.08256087463814689;  // std dev = 3.787, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | | | else return 0.1728079125527422;  // std dev = 3.905, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.4832021855017133;  // std dev = 0.072, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, D), enzyme(C, E) )
%   | | then return -0.15144179684548667;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(C, F), interaction(G, D) )
%   | | | then return 0.12545713321577115;  // std dev = 2.798, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return -0.027724527004406828;  // std dev = 2.028, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.47474696616308554;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( location(J, K) )
%   | | | then return 0.13078546690068701;  // std dev = 4.270, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | | | else return -0.1690048975841428;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.15036181338283353;  // std dev = 3.627, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | | | else return 0.345102352286023;  // std dev = 1.973, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.36312944695989086;  // std dev = 0.079, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), interaction(D, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.17989717545525774;  // std dev = 0.336, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.001268805091436842;  // std dev = 1.233, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( complex(A, G), complex(D, H) )
%   | | | then return 0.20775694900780398;  // std dev = 1.706, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.027565050228302874;  // std dev = 4.025, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6026699231580602;  // std dev = 0.392, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.032916501230810476;  // std dev = 2.613, 50.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | else if ( location(A, L) )
%   | | | then return 0.1222035943989249;  // std dev = 4.515, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
%   | | | else return 0.4329762827919416;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then return 0.26174546761600187;  // std dev = 0.132, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.404891481057356;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.11579794704022223;  // std dev = 0.051, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B), enzyme(G, H) )
%   | | | then return 0.5793493464972564;  // std dev = 0.415, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0823898009073893;  // std dev = 5.202, 133.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=43 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.04745258657019567;  // std dev = 2.877, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return -0.008470416931719326;  // std dev = 3.823, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5926491971130857;  // std dev = 0.238, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.20778451166368617;  // std dev = 0.052, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.3841670436652598;  // std dev = 0.363, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, E), interaction(E, H) )
%   | | | then return -0.09519415987803442;  // std dev = 1.363, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.08735354264748624;  // std dev = 1.450, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return -0.05481972354840106;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.09812180311323905;  // std dev = 2.820, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.2206076767777457;  // std dev = 1.734, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.11102645591624882;  // std dev = 3.099, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.48518417526445434;  // std dev = 0.287, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | else return -0.2376705326373948;  // std dev = 0.066, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, E) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.6610700824117465;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18193787867628475;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.04216976902568718;  // std dev = 0.306, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6627160939709034;  // std dev = 0.503, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.2773007224980948;  // std dev = 0.232, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(K, A), interaction(A, K) )
%   | | | then return -0.03300407168836955;  // std dev = 0.692, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.10316961362307;  // std dev = 3.566, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then return 0.11374823176785737;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.19916753072100316;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(G, H), enzyme(A, H) )
%   | | | then return 0.5118787552231623;  // std dev = 0.745, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.21055088020831564;  // std dev = 3.761, 86.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=46 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.16646176112883446;  // std dev = 0.274, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.25788034446648406;  // std dev = 0.341, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1032790988502155;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0804083264642692;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3495917393107094;  // std dev = 0.186, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return -0.19251739303203116;  // std dev = 0.072, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), enzyme(G, H) )
%   | | then if ( location(G, I) )
%   | | | then return 0.4373262203098787;  // std dev = 0.752, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.00921106894422477;  // std dev = 0.619, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, J), recursion_proteinclass(J, B) )
%   | | | then return 0.358186599910945;  // std dev = 0.754, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1464482788002194;  // std dev = 0.283, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(K, A), interaction(A, L) )
%   | | then return -0.06501810885763824;  // std dev = 0.247, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return -0.03256602012766164;  // std dev = 1.932, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.0629303686946195;  // std dev = 2.790, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.694', 'seconds']
Refined model CLL: -0.219412


******************************************
Best model found
******************************************
Results 

CLL : -0.24055 

AUC ROC : 0.982251 

AUC PR : 0.307776 

Precision : 0.216374 

Recall : 0.801444 

F1 : 0.340752 

Total Learning Time : 8.587 

Total Inference Time : 5.601062536239624 

Total revision time: 17.02865280532837
Best scored revision CLL: -0.219412


Results 

CLL : -0.24055 

AUC ROC : 0.982251 

AUC PR : 0.307776 

Precision : 0.216374 

Recall : 0.801444 

F1 : 0.340752 

Total Learning Time : 17.058012384414674 

Total Inference Time : 5.601062536239624 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.148
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1967316122648671;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1506565100049445;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.17978008104468565;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15729574939322966;  // std dev = 4.266, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.14461662382142437;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.057772912497898725;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.11485166313290757;  // std dev = 7.172, 232.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06143420439436994;  // std dev = 7.775, 289.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09576694421621092;  // std dev = 7.516, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7352578588936992;  // std dev = 0.041, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.26472295460030226;  // std dev = 0.061, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.060100237454079324;  // std dev = 3.589, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.04691326493469211;  // std dev = 5.170, 124.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.015174193024688691;  // std dev = 3.518, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   | | | else return 0.0575326301553873;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05770262478482569;  // std dev = 7.032, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06112016881393032;  // std dev = 6.921, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.427', 'seconds']
Parameter learned model CLL:-0.347844 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.542, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.369, 60, 28], 'false,false,false,false': [6.153, 109, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.266, 52, 28], 'false,false,false,false': [6.2, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [7.172, 155, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.775, 203, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.516, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.041, 0, 28], 'true,false': [0.061, 62, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.589, 40, 19], 'false,false,false,false': [5.17, 85, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.518, 66, 28], 'false,false,false,false': [6.218, 116, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.032, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.921, 150, 86]}]
{'': [nan, 0.2239444478888966], 'false': [nan, 0.22394444788889636], 'false,false': [nan, 0.2239444478888966], 'false,false,false': [nan, 0.22394444788889636]}
{'': [nan, 0.22351403306420453], 'false': [nan, 0.22351403306420464], 'false,false': [nan, 0.22351403306420453], 'false,false,false': [0.2169421487603298, 0.2266843558392179]}
{'': [nan, 0.22479757919254525], 'false': [nan, 0.22479757919254525], 'false,false': [nan, 0.22479757919254598], 'false,false,false': [0.22753260157105615, 0.22347444076853298]}
{'': [nan, 0.21917844874898582], 'false': [nan, 0.21917844874898582], 'false,false': [nan, 0.2191784487489853], 'false,false,false': [0.1983471074380167, 0.22173581628298533]}
{'': [nan, 0.20917712306763925], 'false': [nan, 0.20917712306763925], 'false,false': [nan, 0.20917712306763928], 'false,false,false': [nan, 0.20917712306763928]}
{'': [nan, 0.22504385430342752], 'false': [nan, 0.22504385430342752], 'false,false': [nan, 0.2250438543034273], 'false,false,false': [nan, 0.22504385430342677]}
{'': [0.21437333581071627, 0.2165146390639549], 'false': [nan, 0.2165146390639549], 'false,false': [nan, 0.2165146390639549], 'false,false,false': [0.21832806664751495, 0.21559573361082263], 'true': [6.049385842343824e-05, 6.060760812482395e-05], 'true,true': [nan, 6.049385842343824e-05], 'true,true,false': [nan, 6.049385842343824e-05]}
{'': [nan, 0.1908528345737665], 'false': [nan, 0.1908528345737665], 'false,false': [nan, 0.19085283457376603], 'false,false,false': [0.13168460249763134, 0.22218795978567346]}
{'': [nan, 0.201844467952178], 'false': [nan, 0.201844467952178], 'false,false': [nan, 0.201844467952178], 'false,false,false': [nan, 0.201844467952178]}
{'': [nan, 0.20299391332892833], 'false': [nan, 0.20299391332892833], 'false,false': [nan, 0.20299391332892813], 'false,false,false': [nan, 0.20299391332892813]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 7.47
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(E, G), phenotype(A, H) )
%   | | | then return 0.3025933795439568;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.1321215378392382;  // std dev = 3.811, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.26555634250691845;  // std dev = 4.422, 81.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.7516452696228312;  // std dev = 0.175, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.4549281669312902;  // std dev = 0.901, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7398727907934262;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.14530260817899215;  // std dev = 1.650, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.019944415549778813;  // std dev = 2.251, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | else if ( location(A, H), interaction(I, A) )
%   | | | then return 0.13496272321571529;  // std dev = 5.591, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   | | | else return 0.42937868472799917;  // std dev = 1.893, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.6583267687143006;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8011060651037908;  // std dev = 0.072, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.19849122785235634;  // std dev = 0.091, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5474086049192842;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.7054662803043789;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12517275391567922;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.050972722035624494;  // std dev = 3.433, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | | else return 0.10998751211268563;  // std dev = 4.997, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.4313239650353832;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6808090029949228;  // std dev = 0.144, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, A) )
%   | | then return -0.18071463136217253;  // std dev = 0.124, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(F, A), phenotype(F, D) )
%   | | | then return 0.2448244622900306;  // std dev = 1.233, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.003941820684567943;  // std dev = 3.867, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), complex(I, J) )
%   | | | then return 0.21117240844520557;  // std dev = 1.849, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.6061061375093498;  // std dev = 2.189, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | | else return -0.1901440596764713;  // std dev = 0.215, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.06991035144721339;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(C, E) )
%   | then return 0.2531446208723488;  // std dev = 0.265, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.42698186839015223;  // std dev = 0.108, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( complex(A, G), interaction(H, A) )
%   | | then if ( enzyme(H, I), enzyme(F, I) )
%   | | | then return -0.004212213857815297;  // std dev = 0.871, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.1361851091424749;  // std dev = 0.930, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( phenotype(F, J), enzyme(A, K) )
%   | | | then return 0.10741707579069734;  // std dev = 1.513, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.011756570794434361;  // std dev = 2.295, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11991830156567417;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.23166822046837143;  // std dev = 1.559, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.0924416245991515;  // std dev = 4.891, 138.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=47 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.26235585299964004;  // std dev = 0.095, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.45674768422025463;  // std dev = 0.181, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( enzyme(A, E), complex(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.5119749517380304;  // std dev = 0.365, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7154552224504421;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.16389113813600076;  // std dev = 0.120, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.2194745845288512;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.41510241159199396;  // std dev = 0.177, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.03600977402246237;  // std dev = 2.488, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
%   | | | else return 0.007131765509177931;  // std dev = 5.175, 186.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2365265646234152;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.49752424233532055;  // std dev = 0.179, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6505955284624025;  // std dev = 0.558, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.1790231753712998;  // std dev = 0.048, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.2770049965598538;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.08504669012808189;  // std dev = 1.329, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.020455742655419884;  // std dev = 2.048, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.03595741039557123;  // std dev = 3.320, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return 0.11077515301954347;  // std dev = 2.688, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return -0.048682418742394006;  // std dev = 0.404, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.22913909838077529;  // std dev = 0.071, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return -0.10664318030044702;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return -0.07881558521628189;  // std dev = 0.652, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.018362086342678056;  // std dev = 1.936, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( complex(L, J), interaction(M, L) )
%   | | | then return -0.02618553475457323;  // std dev = 1.766, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return 0.0784882588755342;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.003936562400892264;  // std dev = 2.052, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.06889690628279202;  // std dev = 4.299, 113.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19357365804337767;  // std dev = 0.070, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), enzyme(F, G) )
%   | | then if ( interaction(D, D), enzyme(A, H) )
%   | | | then return 0.07202644764075224;  // std dev = 0.652, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06616800239535903;  // std dev = 1.483, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.5867552485711993;  // std dev = 0.586, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.21651367250133305;  // std dev = 0.257, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(J, A) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.06513167789354679;  // std dev = 4.012, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   | | | else return -0.017215023605705926;  // std dev = 2.043, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.3891744831234288;  // std dev = 0.641, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.05343571909706606;  // std dev = 1.284, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.12225262869653214;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.22839669104684965;  // std dev = 0.079, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08344889622779347;  // std dev = 0.070, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5533062512639871;  // std dev = 0.467, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0368994114112465;  // std dev = 3.057, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.017870692940246763;  // std dev = 1.133, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.09296090886177062;  // std dev = 1.420, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(L, A), interaction(A, L) )
%   | | | then return 0.10991857877260429;  // std dev = 0.808, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.05025263939316269;  // std dev = 3.870, 119.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.336', 'seconds']
Refined model CLL: -0.239706


******************************************
Best model found
******************************************
Results 

CLL : -0.242046 

AUC ROC : 0.954726 

AUC PR : 0.216708 

Precision : 0.251521 

Recall : 0.438163 

F1 : 0.319588 

Total Learning Time : 7.47 

Total Inference Time : 3.6197714805603027 

Total revision time: 13.81880780982971
Best scored revision CLL: -0.239706


Results 

CLL : -0.242046 

AUC ROC : 0.954726 

AUC PR : 0.216708 

Precision : 0.251521 

Recall : 0.438163 

F1 : 0.319588 

Total Learning Time : 13.848167388916014 

Total Inference Time : 3.6197714805603027 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.218
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17336632640386;  // std dev = 7.719, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13707782680229172;  // std dev = 5.544, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   | | | else return 0.19107986461503937;  // std dev = 5.265, 121.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1738608319812739;  // std dev = 4.726, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | | else return 0.1307803197971163;  // std dev = 5.949, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07417886322379026;  // std dev = 3.780, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.12999669044168216;  // std dev = 6.641, 196.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13692094460998439;  // std dev = 7.409, 236.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07206573542450401;  // std dev = 7.641, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7280579464778452;  // std dev = 0.064, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2736628381486513;  // std dev = 0.089, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.020646397813435562;  // std dev = 4.140, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | | else return 0.057612917715232366;  // std dev = 4.320, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02739216180591758;  // std dev = 3.846, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | | else return 0.03155029023035049;  // std dev = 5.993, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037327599928729645;  // std dev = 7.031, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06178245856248164;  // std dev = 6.840, 240.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.473', 'seconds']
Parameter learned model CLL:-0.336068 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.719, 189, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.544, 102, 44], 'false,false,false,false': [5.265, 78, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.726, 62, 35], 'false,false,false,false': [5.949, 111, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.78, 50, 20], 'false,false,false,false': [6.641, 129, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.409, 149, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.641, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.064, 0, 35], 'true,false': [0.089, 67, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.14, 60, 24], 'false,false,false,false': [4.32, 56, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.846, 75, 35], 'false,false,false,false': [5.993, 115, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.031, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.84, 153, 87]}]
{'': [nan, 0.21585538752363032], 'false': [nan, 0.2158553875236304], 'false,false': [nan, 0.21585538752363032], 'false,false,false': [nan, 0.2158553875236304]}
{'': [nan, 0.2196692336826131], 'false': [nan, 0.21966923368261432], 'false,false': [nan, 0.2196692336826131], 'false,false,false': [0.21054606868080186, 0.22908271292944452]}
{'': [nan, 0.2224630394333968], 'false': [nan, 0.2224630394333968], 'false,false': [nan, 0.22246303943339707], 'false,false,false': [0.23024276955798778, 0.21714097923158515]}
{'': [nan, 0.220134718146038], 'false': [nan, 0.220134718146038], 'false,false': [nan, 0.22013471814603744], 'false,false,false': [0.20408163265306145, 0.22504806037671315]}
{'': [nan, 0.2326023098246214], 'false': [nan, 0.2326023098246214], 'false,false': [nan, 0.2326023098246215], 'false,false,false': [nan, 0.2326023098246215]}
{'': [nan, 0.22115270289227434], 'false': [nan, 0.22115270289227434], 'false,false': [nan, 0.2211527028922742], 'false,false,false': [nan, 0.2211527028922744]}
{'': [0.22628854762776357, 0.21349355833605502], 'true': [0.00011651462403037272, 0.00011891551570425844], 'false': [nan, 0.21349355833605502], 'false,false': [nan, 0.21349355833605502], 'false,false,false': [0.20408163265306095, 0.22222222222222254], 'true,true': [nan, 0.00011651462403037272], 'true,true,false': [nan, 0.00011651462403037272]}
{'': [nan, 0.18305650850661365], 'false': [nan, 0.18305650850661365], 'false,false': [nan, 0.18305650850661376], 'false,false,false': [0.13447047447584776, 0.21505241933541913]}
{'': [nan, 0.18586869621631716], 'false': [nan, 0.18586869621631633], 'false,false': [nan, 0.18586869621631633], 'false,false,false': [nan, 0.18586869621631633]}
{'': [nan, 0.1949218680083077], 'false': [nan, 0.1949218680083077], 'false,false': [nan, 0.19492186800830905], 'false,false,false': [nan, 0.19492186800830905]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.188
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, D), phenotype(D, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.10008441897048011;  // std dev = 3.372, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | | else return 0.17393840878372288;  // std dev = 2.865, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.18335218713203175;  // std dev = 5.195, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( phenotype(C, E), location(A, F) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.7388327437922366;  // std dev = 0.106, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.11542785614339597;  // std dev = 0.444, 84.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=23 */
%   | else return 0.06652646426692514;  // std dev = 0.408, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   else if ( complex(A, G), phenotype(A, H) )
%   | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.8141395274665514;  // std dev = 0.150, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.16651284588896922;  // std dev = 0.030, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.834332303241645;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16766563657497832;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.17859330458694506;  // std dev = 4.264, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.3405765553453997;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6088077658565316;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.23594286146047166;  // std dev = 0.957, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13579587276951907;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(E, F) )
%   | | | then return 0.07893109842517425;  // std dev = 2.600, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.23369511883729746;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.45301741908861026;  // std dev = 1.373, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.22897337148308503;  // std dev = 1.614, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.05215632381845102;  // std dev = 2.298, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.12052351339498224;  // std dev = 5.516, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.39992216173163464;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(C, E) )
%   | | then return 0.6557755804174512;  // std dev = 0.304, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5662375939635808;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.5249312464979446;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.07560005763998713;  // std dev = 1.297, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.06681102322303818;  // std dev = 2.649, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.05900368568639809;  // std dev = 4.023, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | | | else return 0.11537896645302032;  // std dev = 4.918, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3602992291037117;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.1420652703819268;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04556887452201985;  // std dev = 0.714, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.6600094256792213;  // std dev = 0.920, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.005701410097388637;  // std dev = 3.974, 98.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=23 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.5922249410236309;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11475745312560502;  // std dev = 3.528, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11039423103205713;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0815778074768122;  // std dev = 3.775, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, A), enzyme(A, C) )
%   then return -0.02191048607113565;  // std dev = 0.166, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.1978445974767349;  // std dev = 1.916, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.04461097478403959;  // std dev = 3.910, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.7253511947655921;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16247925747173034;  // std dev = 1.995, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( interaction(A, J) )
%   | | then if ( location(J, K) )
%   | | | then return 0.054455530224857156;  // std dev = 2.900, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.2792884411446144;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.039511730704417554;  // std dev = 3.508, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return -0.03405806625607506;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.3727032150207502;  // std dev = 0.432, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6526068540657105;  // std dev = 0.129, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.23327406058851646;  // std dev = 0.094, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6271661670144629;  // std dev = 0.170, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.261714248712816;  // std dev = 0.066, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4688469169405951;  // std dev = 0.271, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07493047100064398;  // std dev = 1.589, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( location(A, K) )
%   | | | then return 0.09904953605754072;  // std dev = 3.816, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | | else return 0.49006258193331476;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B), complex(A, E) )
%   | then return -0.33963301590701384;  // std dev = 0.591, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(F, D), interaction(F, F) )
%   | | then if ( interaction(A, G), enzyme(F, H) )
%   | | | then return 0.03898979507343437;  // std dev = 1.164, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.10155430113509152;  // std dev = 2.326, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.5181652012830149;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.010853444767992595;  // std dev = 2.576, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   else if ( interaction(A, J), interaction(J, J) )
%   | then return 0.02219986743997079;  // std dev = 0.315, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else if ( interaction(K, A), complex(A, L) )
%   | | then return 0.11249363538361284;  // std dev = 0.343, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.06906750167306791;  // std dev = 2.447, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.02448252729745259;  // std dev = 3.336, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, C) )
%   | | then return 0.39953644313955494;  // std dev = 0.171, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.04653504672609813;  // std dev = 0.987, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, F), interaction(F, C) )
%   | | then return -0.1825974003698482;  // std dev = 0.135, 33.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
%   | | else if ( complex(C, G), enzyme(C, H) )
%   | | | then return -0.11524426182291686;  // std dev = 0.801, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.024240609324344135;  // std dev = 5.386, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   else if ( interaction(A, I) )
%   | then if ( complex(A, J), complex(I, J) )
%   | | then return 0.26625179305203955;  // std dev = 0.525, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(I, K) )
%   | | | then return 0.003134944837867308;  // std dev = 0.972, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.04103055788364316;  // std dev = 0.542, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.35723966755760067;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), location(E, G) )
%   | | | then return 0.34456696076476284;  // std dev = 1.864, 43.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=38 */
%   | | | else return 0.568723395706972;  // std dev = 1.568, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.22343493143112936;  // std dev = 0.338, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.4826916534898455;  // std dev = 0.236, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then return -0.16964156175246398;  // std dev = 0.246, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.2565229882735938;  // std dev = 0.056, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return -0.10682025566578049;  // std dev = 0.349, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(A, M), interaction(M, A) )
%   | | then return -0.18884354246045654;  // std dev = 0.756, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.22625406394001674;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '1.848', 'seconds']
Refined model CLL: -0.23495


******************************************
Best model found
******************************************
Results 

CLL : -0.244927 

AUC ROC : 0.984724 

AUC PR : 0.281163 

Precision : 0.256894 

Recall : 0.62766 

F1 : 0.364573 

Total Learning Time : 15.188 

Total Inference Time : 10.256107330322266 

Total revision time: 28.369089942932128
Best scored revision CLL: -0.23495


Results 

CLL : -0.244927 

AUC ROC : 0.984724 

AUC PR : 0.281163 

Precision : 0.256894 

Recall : 0.62766 

F1 : 0.364573 

Total Learning Time : 28.391678672790526 

Total Inference Time : 10.256107330322266 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.374
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20025419825740776;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13083342913566157;  // std dev = 6.038, 174.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=52 */
%   | | | else return 0.17185213546876954;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15011604711431897;  // std dev = 5.205, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
%   | | | else return 0.17321857151809256;  // std dev = 6.327, 173.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1301578473327471;  // std dev = 4.371, 85.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return 0.1155031337763484;  // std dev = 7.066, 224.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08907337779780486;  // std dev = 8.368, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06266486503733353;  // std dev = 8.429, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7129772573266742;  // std dev = 0.987, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.2632864528934308;  // std dev = 0.021, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06518718462506684;  // std dev = 3.930, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | | else return 0.06191406906671434;  // std dev = 5.164, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06010069700050312;  // std dev = 4.108, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
%   | | | else return 0.03996231628447174;  // std dev = 6.542, 196.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03830583479433652;  // std dev = 7.700, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04385485825423837;  // std dev = 7.618, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.363', 'seconds']
Parameter learned model CLL:-0.334852 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.038, 122, 52], 'false,false,false,false': [5.859, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.205, 80, 41], 'false,false,false,false': [6.327, 110, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.371, 56, 29], 'false,false,false,false': [7.066, 149, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.368, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.429, 224, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.987, 1, 41], 'true,false': [0.021, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.93, 47, 23], 'false,false,false,false': [5.164, 80, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.108, 77, 41], 'false,false,false,false': [6.542, 133, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.7, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.618, 197, 104]}]
{'': [nan, 0.22506925207756448], 'false': [nan, 0.22506925207756284], 'false,false': [nan, 0.22506925207756448], 'false,false,false': [nan, 0.22506925207756284]}
{'': [nan, 0.21689158226486993], 'false': [nan, 0.21689158226486882], 'false,false': [nan, 0.21689158226486993], 'false,false,false': [0.20953890870656883, 0.22435815284719807]}
{'': [nan, 0.2284511075286279], 'false': [nan, 0.2284511075286279], 'false,false': [nan, 0.22845110752862835], 'false,false,false': [0.2238797822738115, 0.23142872982010243]}
{'': [nan, 0.22343260628081846], 'false': [nan, 0.22343260628081846], 'false,false': [nan, 0.22343260628082123], 'false,false,false': [0.22477508650519082, 0.22286410643284954]}
{'': [nan, 0.2201896214559511], 'false': [nan, 0.2201896214559511], 'false,false': [nan, 0.22018962145595286], 'false,false,false': [nan, 0.22018962145595286]}
{'': [nan, 0.2165880545699875], 'false': [nan, 0.2165880545699875], 'false,false': [nan, 0.21658805456998656], 'false,false,false': [nan, 0.21658805456998673]}
{'': [0.22313923645588674, 0.22163156552375182], 'true': [0.02317824691369875, 5.518756565303651e-06], 'false': [nan, 0.22163156552375182], 'false,false': [nan, 0.22163156552375182], 'false,false,false': [0.22061224489795878, 0.22222222222222204], 'true,true': [nan, 0.02317824691369875], 'true,true,false': [nan, 0.02317824691369875]}
{'': [nan, 0.19016894469435836], 'false': [nan, 0.19016894469435836], 'false,false': [nan, 0.1901689446943583], 'false,false,false': [0.1430432816413593, 0.218388111563403]}
{'': [nan, 0.18761433055519142], 'false': [nan, 0.18761433055519153], 'false,false': [nan, 0.18761433055519153], 'false,false,false': [nan, 0.18761433055519153]}
{'': [nan, 0.19278583519941742], 'false': [nan, 0.19278583519941742], 'false,false': [nan, 0.19278583519941722], 'false,false,false': [nan, 0.19278583519941722]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.503
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(C, C), enzyme(A, E) )
%   | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(C, C), interaction(A, C) )
%   | | then if ( recursion_proteinclass(C, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.05094197399139689;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | | then return 0.572434649385226;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | else return 0.13733675235839596;  // std dev = 6.296, 197.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=55 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then return -0.005487428536851416;  // std dev = 0.343, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else return 0.13087620782678508;  // std dev = 0.445, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(A, E) )
%   | then return 0.5099124802764001;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7752340847188138;  // std dev = 0.058, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( phenotype(G, H) )
%   | | then if ( complex(F, I), complex(A, I) )
%   | | | then return -0.0013956165109818741;  // std dev = 2.166, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | | else return 0.13106575798964443;  // std dev = 6.679, 223.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=66 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8447575375158717;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15304341410034283;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.7303478538290826;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1585410350598063;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.12630947420681307;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.409290852594507;  // std dev = 0.350, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.7383906601770239;  // std dev = 0.086, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1461390215412187;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.606291538976757;  // std dev = 1.727, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return -0.032611468413145064;  // std dev = 3.298, 95.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=14 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7353204813695187;  // std dev = 0.383, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1727550617838785;  // std dev = 0.132, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( location(A, J), enzyme(A, K) )
%   | | | then return 0.12233509999339903;  // std dev = 2.381, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.24494194334600747;  // std dev = 4.171, 73.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( location(A, E), enzyme(A, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.5721893335508316;  // std dev = 0.145, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), enzyme(H, F) )
%   | | | then return -0.07928692661758115;  // std dev = 1.066, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.19366237286050825;  // std dev = 2.772, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.45307926433185836;  // std dev = 0.273, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( enzyme(C, J) )
%   | | | then return 0.11968249922444461;  // std dev = 2.695, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.03847172292814706;  // std dev = 4.851, 145.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=36 */
%   else if ( interaction(K, A), enzyme(A, L) )
%   | then return 0.0012408092764427691;  // std dev = 0.329, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else if ( interaction(A, M) )
%   | | then return 0.11157467352566271;  // std dev = 0.387, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.05431920514059599;  // std dev = 0.426, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D), interaction(D, A) )
%   | | then return 0.3367443542472741;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6037966943615569;  // std dev = 0.123, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.17100044554019087;  // std dev = 0.468, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.06643222531783773;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.56441482765153;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( location(A, I), location(H, I) )
%   | | | then return 0.11336093440762003;  // std dev = 4.985, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
%   | | | else return 0.017103621781136776;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.034608756291645906;  // std dev = 0.710, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.27852384174370964;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3674866536242363;  // std dev = 0.130, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.14313087954001494;  // std dev = 0.332, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(E, A), interaction(G, E) )
%   | | | then return 0.46565398766036303;  // std dev = 0.911, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.07322856118821841;  // std dev = 0.768, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.16314036607388815;  // std dev = 0.221, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.06744038703939836;  // std dev = 2.902, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.44531070818922563;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.1363498530463586;  // std dev = 0.740, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.022773303648535408;  // std dev = 5.368, 180.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.041830236191898254;  // std dev = 0.270, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2906476044934957;  // std dev = 0.590, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.08788270082039208;  // std dev = 2.083, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.292335767121172;  // std dev = 0.679, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0387259425718717;  // std dev = 1.816, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.35857410579799287;  // std dev = 3.585, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | | | else return -0.23873283372319382;  // std dev = 0.241, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.019999237056491884;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.6355633777553639;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then return 0.2739036404514351;  // std dev = 0.126, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.008768670735433892;  // std dev = 0.274, 103.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=28 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), phenotype(F, G) )
%   | | | then return 0.5786183808159485;  // std dev = 1.215, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | | else return 0.1765838754376672;  // std dev = 2.757, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | else return -0.189908742608956;  // std dev = 0.253, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4895813769708159;  // std dev = 0.208, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.4025377007376125;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.11089663793322797;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.05215253981812763;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.16018597843701735;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.06433392085575924;  // std dev = 0.438, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.2550179951751962;  // std dev = 0.103, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), phenotype(G, E) )
%   | | | then return 0.14286057396447008;  // std dev = 2.014, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return 0.5018021031552787;  // std dev = 0.901, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return -0.17208644441372586;  // std dev = 0.062, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.33241339443310836;  // std dev = 0.178, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return -0.07176957163451206;  // std dev = 1.176, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
%   | | | else return 0.004652228504085423;  // std dev = 3.313, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.013861454904082554;  // std dev = 0.220, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, C) )
%   | | | then return -0.0909707002893918;  // std dev = 0.624, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3766547779291306;  // std dev = 0.213, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.22021297161107814;  // std dev = 0.167, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( complex(A, G) )
%   | then return -0.0016097795045325908;  // std dev = 0.231, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.32090701017293993;  // std dev = 1.508, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return -0.16774279419484797;  // std dev = 0.405, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.10995725848772209;  // std dev = 2.713, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.029661810131242413;  // std dev = 1.565, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.163', 'seconds']
Refined model CLL: -0.205086


******************************************
Best model found
******************************************
Results 

CLL : -0.197895 

AUC ROC : 0.975352 

AUC PR : 0.361358 

Precision : 0.190527 

Recall : 0.667925 

F1 : 0.296482 

Total Learning Time : 14.503 

Total Inference Time : 10.641696214675903 

Total revision time: 28.532336141586303
Best scored revision CLL: -0.205086


Results 

CLL : -0.197895 

AUC ROC : 0.975352 

AUC PR : 0.361358 

Precision : 0.190527 

Recall : 0.667925 

F1 : 0.296482 

Total Learning Time : 28.5549248714447 

Total Inference Time : 10.641696214675903 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.135
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24470355694825222;  // std dev = 7.512, 238.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18996310109306372;  // std dev = 5.694, 140.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=51 */
%   | | | else return 0.13628344741341003;  // std dev = 5.316, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14929564242419946;  // std dev = 5.352, 126.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
%   | | | else return 0.10622802700487236;  // std dev = 5.775, 157.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10902784423141824;  // std dev = 4.150, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.10177791777524921;  // std dev = 6.701, 207.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07500850070355225;  // std dev = 7.945, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05532453810664804;  // std dev = 7.982, 298.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7313326954190525;  // std dev = 0.039, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26968887190126356;  // std dev = 0.056, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05684559523097638;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | | else return 0.11758925460328494;  // std dev = 3.804, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.062144431937963616;  // std dev = 4.180, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   | | | else return 0.05090273993499789;  // std dev = 5.687, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03080417403814184;  // std dev = 7.114, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.021883332778414536;  // std dev = 7.132, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.499', 'seconds']
Parameter learned model CLL:-0.319892 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.512, 146, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.694, 89, 51], 'false,false,false,false': [5.316, 91, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.352, 82, 44], 'false,false,false,false': [5.775, 109, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.15, 51, 26], 'false,false,false,false': [6.701, 141, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.945, 201, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.982, 206, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.039, 0, 44], 'true,false': [0.056, 102, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.122, 53, 25], 'false,false,false,false': [3.804, 39, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.18, 79, 44], 'false,false,false,false': [5.687, 99, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.114, 193, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.132, 194, 92]}]
{'': [nan, 0.23713014617611913], 'false': [nan, 0.23713014617611822], 'false,false': [nan, 0.23713014617611913], 'false,false,false': [nan, 0.23713014617611822]}
{'': [nan, 0.22383217993079796], 'false': [nan, 0.22383217993079596], 'false,false': [nan, 0.22383217993079796], 'false,false,false': [0.2315816326530622, 0.2141299357208434]}
{'': [nan, 0.2195048768121612], 'false': [nan, 0.2195048768121612], 'false,false': [nan, 0.2195048768121609], 'false,false,false': [0.22730479852203442, 0.21241924633708126]}
{'': [nan, 0.2187735891160252], 'false': [nan, 0.2187735891160252], 'false,false': [nan, 0.21877358911602604], 'false,false,false': [0.22364648338674367, 0.21694671579829947]}
{'': [nan, 0.2154473835262604], 'false': [nan, 0.2154473835262604], 'false,false': [nan, 0.21544738352626036], 'false,false,false': [nan, 0.21544738352626036]}
{'': [nan, 0.2137850584737706], 'false': [nan, 0.2137850584737706], 'false,false': [nan, 0.2137850584737702], 'false,false,false': [nan, 0.21378505847376977]}
{'': [0.21100864416094772, 0.22558840989945486], 'false': [nan, 0.22558840989945486], 'false,false': [nan, 0.22558840989945486], 'false,false,false': [0.2177843523997368, 0.23335067637877166], 'true': [3.4460195017112355e-05, 3.119894567325673e-05], 'true,true': [nan, 3.4460195017112355e-05], 'true,true,false': [nan, 3.4460195017112355e-05]}
{'': [nan, 0.18451863824570838], 'false': [nan, 0.18451863824570838], 'false,false': [nan, 0.18451863824570972], 'false,false,false': [0.1420751162024454, 0.21997503454519143]}
{'': [nan, 0.17758620484429744], 'false': [nan, 0.17758620484429574], 'false,false': [nan, 0.17758620484429574], 'false,false,false': [nan, 0.17758620484429574]}
{'': [nan, 0.17784837793747732], 'false': [nan, 0.17784837793747732], 'false,false': [nan, 0.17784837793747704], 'false,false,false': [nan, 0.17784837793747704]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.027
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), complex(A, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(E, E) )
%   | | | then return -0.03658790700575096;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then return 0.030562728202960583;  // std dev = 0.378, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else return 0.16849376268571922;  // std dev = 0.463, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.15973623668681386;  // std dev = 5.152, 126.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.8116532090030272;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, E) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7710159584820848;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8250472775999178;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -7.544018562814115E-4;  // std dev = 3.322, 80.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.31125503506822033;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.15857779753656098;  // std dev = 5.615, 144.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5832516836704769;  // std dev = 0.153, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), enzyme(E, D) )
%   | | then return -0.08738168158713691;  // std dev = 0.216, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(F, A), location(F, G) )
%   | | | then return 0.30904252244104813;  // std dev = 2.018, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.09663236443336601;  // std dev = 2.322, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   else if ( interaction(A, H), phenotype(A, I) )
%   | then return 0.02446763251852642;  // std dev = 0.397, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0012078566731026329;  // std dev = 1.563, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.09983669333850118;  // std dev = 5.616, 160.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=48 */
%   | | | else return 0.2592715452732117;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5115184974603727;  // std dev = 0.094, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(F, D), interaction(G, G) )
%   | | | then return -0.14699162701178042;  // std dev = 0.054, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.007499786813819547;  // std dev = 1.780, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( complex(E, H) )
%   | | | then return 0.1800036035029898;  // std dev = 2.452, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.0360014410564638;  // std dev = 2.424, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.12182060705280819;  // std dev = 2.338, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.1690694261926479;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.2556059824770865;  // std dev = 1.792, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.12579377124354674;  // std dev = 5.106, 120.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), interaction(E, E) )
%   | then return 0.0422389819243017;  // std dev = 0.371, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( complex(C, F) )
%   | | then if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7373766943160734;  // std dev = 0.394, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.2248633507272406;  // std dev = 0.089, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( enzyme(A, H), location(C, I) )
%   | | | then return 0.21614489492115838;  // std dev = 1.521, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.028168985290734586;  // std dev = 2.490, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   else if ( interaction(A, J), complex(A, K) )
%   | then return 0.0011967903862414612;  // std dev = 0.371, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(L, A), enzyme(A, M) )
%   | | then return 0.003669343178457088;  // std dev = 0.411, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( phenotype(A, N), enzyme(A, P) )
%   | | | then return 0.23934981337400751;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06887465042654194;  // std dev = 4.276, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.32992567891966396;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4862158755714453;  // std dev = 0.164, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13200392927160726;  // std dev = 0.051, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( complex(A, F), enzyme(A, G) )
%   | | | then return -0.09830381899829943;  // std dev = 0.758, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.12946760844014799;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.01924133865794853;  // std dev = 2.087, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.13983691592516195;  // std dev = 3.551, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.0739693602348277;  // std dev = 2.876, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.03155473711026173;  // std dev = 4.609, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5888318428191357;  // std dev = 0.198, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2197120636014822;  // std dev = 0.050, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( phenotype(A, E), interaction(A, F) )
%   | then if ( enzyme(A, G) )
%   | | then return -0.0629288431993187;  // std dev = 0.377, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( phenotype(F, H) )
%   | | | then return 0.014567601460519922;  // std dev = 1.644, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.07319583282482421;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7341996405044358;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.23707455430010094;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.12607488045316503;  // std dev = 2.408, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.04077892978952953;  // std dev = 3.610, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2903799995347843;  // std dev = 0.130, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), phenotype(D, G) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.06339435634240456;  // std dev = 0.788, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.06344470149252861;  // std dev = 1.861, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( complex(D, H) )
%   | | | then return -0.11600931558681264;  // std dev = 0.936, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.027459093597485437;  // std dev = 0.254, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( phenotype(I, J) )
%   | | | then return -0.1424244893228157;  // std dev = 0.135, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.01925387198733075;  // std dev = 1.602, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.060484996056666664;  // std dev = 3.513, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | | | else return 0.02546199057130796;  // std dev = 4.468, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.23831260180200461;  // std dev = 0.112, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09793475222066274;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.014586590611599524;  // std dev = 3.031, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5313441775664618;  // std dev = 0.842, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.22569258535772324;  // std dev = 0.135, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5975854208686784;  // std dev = 0.280, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.22188605018568236;  // std dev = 0.464, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.02797380797288354;  // std dev = 3.901, 110.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=28 */
%   | | | else return 0.04767066598475531;  // std dev = 3.174, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( complex(D, C) )
%   | then return -0.031953591944805224;  // std dev = 0.238, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | else return 0.014377072089816909;  // std dev = 0.346, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( phenotype(A, H), phenotype(G, H) )
%   | | | then return -4.8080854403200455E-4;  // std dev = 1.066, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.10658416577823648;  // std dev = 1.465, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.09647351492044402;  // std dev = 0.232, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5904191913678792;  // std dev = 0.458, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.23689756355722827;  // std dev = 0.205, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.1357227053892895;  // std dev = 2.466, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.09204902113021696;  // std dev = 3.127, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.138', 'seconds']
Refined model CLL: -0.255714


******************************************
Best model found
******************************************
Results 

CLL : -0.242785 

AUC ROC : 0.9541 

AUC PR : 0.261363 

Precision : 0.198734 

Recall : 0.566787 

F1 : 0.294283 

Total Learning Time : 6.027 

Total Inference Time : 2.5055365562438965 

Total revision time: 11.494197904586791
Best scored revision CLL: -0.255714


Results 

CLL : -0.242785 

AUC ROC : 0.9541 

AUC PR : 0.261363 

Precision : 0.198734 

Recall : 0.566787 

F1 : 0.294283 

Total Learning Time : 11.51678663444519 

Total Inference Time : 2.5055365562438965 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.146
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14967435882832617;  // std dev = 7.806, 295.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.20772938314210695;  // std dev = 5.729, 141.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=52 */
%   | | | else return 0.1968297937430775;  // std dev = 4.672, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11708390483768454;  // std dev = 4.403, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | | | else return 0.11815315767098832;  // std dev = 6.332, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1355519019690588;  // std dev = 3.527, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.11776096673917535;  // std dev = 6.715, 205.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10298523642381846;  // std dev = 7.574, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10791940475970999;  // std dev = 7.437, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7287394850884911;  // std dev = 0.014, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.27083952953140195;  // std dev = 0.019, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06356090705562441;  // std dev = 4.690, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | | | else return 0.07483509890555023;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07635415480443296;  // std dev = 3.276, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   | | | else return 0.04703613770799028;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0293861432265075;  // std dev = 7.116, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035397473764936224;  // std dev = 7.039, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.579', 'seconds']
Parameter learned model CLL:-0.344083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.806, 209, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.729, 89, 52], 'false,false,false,false': [4.672, 61, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.403, 63, 28], 'false,false,false,false': [6.332, 130, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.527, 36, 19], 'false,false,false,false': [6.715, 138, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.574, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.437, 155, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 28], 'true,false': [0.019, 48, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.69, 66, 33], 'false,false,false,false': [4.054, 48, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.276, 46, 28], 'false,false,false,false': [6.236, 118, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.116, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.039, 168, 86]}]
{'': [nan, 0.20653835104854998], 'false': [nan, 0.20653835104855], 'false,false': [nan, 0.20653835104854998], 'false,false,false': [nan, 0.20653835104855]}
{'': [nan, 0.23161447859810375], 'false': [nan, 0.23161447859810494], 'false,false': [nan, 0.23161447859810375], 'false,false,false': [0.23278507117348315, 0.22980609418282646]}
{'': [nan, 0.21320536337374385], 'false': [nan, 0.21320536337374385], 'false,false': [nan, 0.21320536337374363], 'false,false,false': [0.2130212032922006, 0.21329413178497975]}
{'': [nan, 0.22131888915576126], 'false': [nan, 0.22131888915576126], 'false,false': [nan, 0.22131888915576156], 'false,false,false': [0.22611570247933913, 0.21996498364083605]}
{'': [nan, 0.22234772699359912], 'false': [nan, 0.22234772699359912], 'false,false': [nan, 0.2223477269935998], 'false,false,false': [nan, 0.2223477269935998]}
{'': [nan, 0.22951806337364808], 'false': [nan, 0.22951806337364808], 'false,false': [nan, 0.22951806337364875], 'false,false,false': [nan, 0.22951806337364844]}
{'': [0.2324985140899586, 0.2235098656526272], 'true': [6.98252683051237e-06, 7.655995853487566e-06], 'false': [nan, 0.2235098656526272], 'false,false': [nan, 0.2235098656526272], 'false,false,false': [0.2222222222222217, 0.22518296115593942], 'true,true': [nan, 6.98252683051237e-06], 'true,true,false': [nan, 6.98252683051237e-06]}
{'': [nan, 0.1986639651589488], 'false': [nan, 0.1986639651589488], 'false,false': [nan, 0.1986639651589486], 'false,false,false': [0.1450633979286434, 0.22094614163643805]}
{'': [nan, 0.1925627455390932], 'false': [nan, 0.1925627455390935], 'false,false': [nan, 0.1925627455390935], 'false,false,false': [nan, 0.1925627455390935]}
{'': [nan, 0.1950789296331727], 'false': [nan, 0.1950789296331727], 'false,false': [nan, 0.19507892963317217], 'false,false,false': [nan, 0.19507892963317217]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 7.729
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( location(A, G) )
%   | | | then return 0.13756069980539556;  // std dev = 6.409, 204.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=57 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6925353041872231;  // std dev = 0.276, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, C) )
%   | | then return -0.13918010186902413;  // std dev = 0.056, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(F, C) )
%   | | | then return 0.12404038305651406;  // std dev = 3.939, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | | | else return 0.23652878617815176;  // std dev = 2.659, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5803412241530077;  // std dev = 0.968, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10340181249481367;  // std dev = 3.488, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.14207446911896834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.33689317346873077;  // std dev = 2.544, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.613205665437043;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8053842672361388;  // std dev = 0.113, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.17957347575082205;  // std dev = 0.210, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.10222481746263828;  // std dev = 1.440, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.6564736289964622;  // std dev = 2.205, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | else return -0.17354252225317343;  // std dev = 0.183, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, I) )
%   | | then return -0.04881208797238033;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.11913071541083436;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.49790634074594076;  // std dev = 0.104, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(C, A) )
%   | | then return -0.14685571296763805;  // std dev = 0.047, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.04006453917364274;  // std dev = 0.373, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6267760482202663;  // std dev = 0.089, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.1651677171228198;  // std dev = 0.134, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7128911832772572;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18166382208727677;  // std dev = 0.188, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.26437555089967185;  // std dev = 1.745, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.14170128214796895;  // std dev = 2.489, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.3248986066917208;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.626205320626767;  // std dev = 0.083, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.15082733249740604;  // std dev = 0.039, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( enzyme(G, H), phenotype(G, I) )
%   | | then return -0.02283666326452029;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.35242327917697336;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( interaction(J, J), interaction(A, L) )
%   | | | then return -0.03318122220490201;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.07075732389282183;  // std dev = 4.357, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | else if ( location(A, M), complex(A, N) )
%   | | | then return -0.0074135900182477794;  // std dev = 0.894, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.23110062095308873;  // std dev = 1.915, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then if ( phenotype(C, E) )
%   | | then return 0.2806924451107444;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.23409515685496343;  // std dev = 0.087, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4545616441777286;  // std dev = 0.180, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then return -0.17914985168249387;  // std dev = 0.395, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10740616913014778;  // std dev = 0.079, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(H, J) )
%   | | | then return 0.0168132968017036;  // std dev = 1.808, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.054228933631556314;  // std dev = 1.408, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.07390301313387747;  // std dev = 3.332, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
%   | | | else return 0.01613504097637285;  // std dev = 3.462, 94.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.21321300830821088;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5087661360788076;  // std dev = 0.123, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1746061033666822;  // std dev = 0.088, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.4743044318065397;  // std dev = 0.384, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.02651055652843474;  // std dev = 1.455, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.11781842241168278;  // std dev = 1.981, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.33019498366206146;  // std dev = 0.197, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.029445599600659504;  // std dev = 2.801, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | | | else return -0.022352785687073023;  // std dev = 2.530, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.1635767145515993;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.32329089237378855;  // std dev = 0.334, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.27663115103605346;  // std dev = 0.200, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, H), enzyme(H, I) )
%   | | | then return -0.12421869384294934;  // std dev = 1.684, 50.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   | | | else return 0.0029613681221665506;  // std dev = 2.038, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.07058844004318839;  // std dev = 1.657, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return 0.013620019754718729;  // std dev = 1.495, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.02494266302759824;  // std dev = 1.770, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.06595988393766106;  // std dev = 3.240, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1857987224907678;  // std dev = 0.071, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.4658269934110939;  // std dev = 0.145, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5629211994364962;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G), location(A, H) )
%   | | | then return -0.0898023105110473;  // std dev = 0.116, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.2758023829718394;  // std dev = 0.249, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.09458325751918772;  // std dev = 1.820, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.01710873387099396;  // std dev = 3.122, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.009573992679370116;  // std dev = 1.270, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.2143793619416188;  // std dev = 2.065, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.12712831819368928;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2326895156643959;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, E), location(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, H) )
%   | | | then return 0.21842231208138707;  // std dev = 0.777, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4715662201032522;  // std dev = 0.542, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.16218578968445138;  // std dev = 0.044, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return -0.09236816042039689;  // std dev = 1.234, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | | else return 0.13532587149912065;  // std dev = 0.856, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.08774958266266282;  // std dev = 1.488, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.010381383317824558;  // std dev = 3.321, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.792', 'seconds']
Refined model CLL: -0.21182


******************************************
Best model found
******************************************
Results 

CLL : -0.219031 

AUC ROC : 0.985257 

AUC PR : 0.3386 

Precision : 0.286127 

Recall : 0.699647 

F1 : 0.406154 

Total Learning Time : 7.729 

Total Inference Time : 4.304746150970459 

Total revision time: 14.86139440536499
Best scored revision CLL: -0.21182


Results 

CLL : -0.219031 

AUC ROC : 0.985257 

AUC PR : 0.3386 

Precision : 0.286127 

Recall : 0.699647 

F1 : 0.406154 

Total Learning Time : 14.883983135223389 

Total Inference Time : 4.304746150970459 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.17
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1914822684328456;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.20295339039121202;  // std dev = 5.266, 119.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=44 */
%   | | | else return 0.20711853470980915;  // std dev = 5.189, 115.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.08733402807527342;  // std dev = 5.004, 123.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=35 */
%   | | | else return 0.11788112274673575;  // std dev = 5.967, 165.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.17350251067661088;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.11955836841203377;  // std dev = 6.674, 200.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10770061532838147;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06445858053794164;  // std dev = 7.680, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7298305162500766;  // std dev = 0.029, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2702861319956623;  // std dev = 0.041, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08320581555386984;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return 0.04762522820960547;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.031782826698362285;  // std dev = 3.833, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.0358696481691629;  // std dev = 5.952, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056051401796297674;  // std dev = 6.916, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.020824442376298463;  // std dev = 7.026, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.443', 'seconds']
Parameter learned model CLL:-0.334149 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.266, 75, 44], 'false,false,false,false': [5.189, 72, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.004, 88, 35], 'false,false,false,false': [5.967, 113, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.508, 32, 20], 'false,false,false,false': [6.674, 133, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.68, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.029, 0, 35], 'true,false': [0.041, 72, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.941, 44, 24], 'false,false,false,false': [4.369, 60, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.833, 74, 35], 'false,false,false,false': [5.952, 111, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.916, 160, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.026, 182, 87]}]
{'': [nan, 0.2222222222222231], 'false': [nan, 0.2222222222222231], 'false,false': [nan, 0.2222222222222231], 'false,false,false': [nan, 0.2222222222222231]}
{'': [nan, 0.23356344510190538], 'false': [nan, 0.23356344510190624], 'false,false': [nan, 0.23356344510190538], 'false,false,false': [0.23303439022667918, 0.23410207939508593]}
{'': [nan, 0.2108217063686423], 'false': [nan, 0.2108217063686423], 'false,false': [nan, 0.2108217063686419], 'false,false,false': [0.2035835022139753, 0.21581893642429567]}
{'': [nan, 0.22606950953455007], 'false': [nan, 0.22606950953455007], 'false,false': [nan, 0.22606950953455032], 'false,false,false': [0.23668639053254398, 0.2227086503750618]}
{'': [nan, 0.226014440525948], 'false': [nan, 0.226014440525948], 'false,false': [nan, 0.22601444052594857], 'false,false,false': [nan, 0.22601444052594857]}
{'': [nan, 0.21847349621138118], 'false': [nan, 0.21847349621138118], 'false,false': [nan, 0.21847349621138182], 'false,false,false': [nan, 0.21847349621138068]}
{'': [0.22018130615333095, 0.22223642615875155], 'false': [nan, 0.22223642615875155], 'false,false': [nan, 0.22223642615875155], 'false,false,false': [0.22837370242214472, 0.21694214876033013], 'true': [2.351257326854547e-05, 2.3335684696109322e-05], 'true,true': [nan, 2.351257326854547e-05], 'true,true,false': [nan, 2.351257326854547e-05]}
{'': [nan, 0.1842796033074409], 'false': [nan, 0.1842796033074409], 'false,false': [nan, 0.18427960330744061], 'false,false,false': [0.1348158207606556, 0.21734991814331747]}
{'': [nan, 0.19362317802895093], 'false': [nan, 0.19362317802895262], 'false,false': [nan, 0.19362317802895262], 'false,false,false': [nan, 0.19362317802895262]}
{'': [nan, 0.18350806856084764], 'false': [nan, 0.18350806856084764], 'false,false': [nan, 0.18350806856084798], 'false,false,false': [nan, 0.18350806856084798]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.796
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( phenotype(E, F) )
%   | | | then return 0.10139217834275562;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.30259337954395676;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.16827551737799318;  // std dev = 5.814, 158.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7678023474921802;  // std dev = 1.975, 79.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=75 */
%   | | | else return 0.43256206378702994;  // std dev = 1.106, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.8225389833882207;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16397909990891427;  // std dev = 0.030, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.16231696887451733;  // std dev = 0.193, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( phenotype(H, J) )
%   | | then return 0.15288007360931785;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.08578487415644506;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08640573867609547;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.0030724053427621336;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5732593514548339;  // std dev = 0.158, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.067658431360365;  // std dev = 0.831, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.027905614993853082;  // std dev = 2.368, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.25745966086249306;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08224606835022782;  // std dev = 1.687, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( complex(A, L), complex(J, L) )
%   | | | then return -0.00892098813555738;  // std dev = 1.275, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.1256953059056898;  // std dev = 4.937, 153.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=49 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.07016893635579963;  // std dev = 1.128, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.43780663747062337;  // std dev = 1.013, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.10133975232874778;  // std dev = 0.363, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | else if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.5066246419656086;  // std dev = 0.304, 36.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=30 */
%   | | else return -0.16259935757493693;  // std dev = 0.105, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6638987453765237;  // std dev = 0.073, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.16992853260146226;  // std dev = 0.267, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6238918094284729;  // std dev = 0.914, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.17002050733589533;  // std dev = 0.123, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.06356449502440935;  // std dev = 2.766, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.13370556073158163;  // std dev = 1.252, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.283293487729823;  // std dev = 0.190, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.5272121750672059;  // std dev = 0.183, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | else return -0.148954002390584;  // std dev = 0.391, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then return 0.19580499547239905;  // std dev = 0.842, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.008276542299379791;  // std dev = 1.049, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.07338048511940799;  // std dev = 1.360, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.42961598351258246;  // std dev = 1.892, 39.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=31 */
%   | | | else return -0.1492652203817937;  // std dev = 0.133, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0.45005844348977925;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3364099320639308;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.4149106059683169;  // std dev = 0.845, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.10595696669922541;  // std dev = 0.444, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return -0.11482613093647169;  // std dev = 0.642, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
%   | | | else return 0.0015857530122648264;  // std dev = 2.160, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4267486161563815;  // std dev = 0.167, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.12678384279915045;  // std dev = 0.217, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( location(A, J) )
%   | | | then return 0.0989575495116195;  // std dev = 2.849, 69.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=28 */
%   | | | else return 0.3168848854056647;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.23757518656747031;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.48665493775239355;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3713846161513621;  // std dev = 0.328, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(G, A) )
%   | | then return -0.13331824436741072;  // std dev = 0.320, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.19792800747818484;  // std dev = 0.124, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( location(A, I), recursion_proteinclass(H, B) )
%   | | then return 0.256358924574;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, I), interaction(A, H) )
%   | | | then return -0.06169110136260482;  // std dev = 1.226, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.022568523062693302;  // std dev = 3.416, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | else return 0.1904182211359454;  // std dev = 0.696, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22957510199209918;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.08304658866360498;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.01789454671107007;  // std dev = 1.164, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.05697775340597639;  // std dev = 0.641, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.14470571877585078;  // std dev = 0.720, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.24021062359227327;  // std dev = 0.780, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.03677253904945681;  // std dev = 3.427, 159.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=54 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.028285506820332384;  // std dev = 0.527, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.09315664567759062;  // std dev = 0.560, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( location(A, E), location(C, F) )
%   | then if ( recursion_proteinclass(D, B), location(D, F) )
%   | | then return 0.2632173108692139;  // std dev = 0.094, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( location(D, E), interaction(D, A) )
%   | | | then return -0.06104474015056315;  // std dev = 2.021, 94.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=17 */
%   | | | else return 0.03787977690048645;  // std dev = 2.896, 101.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=38 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.2615033642783063;  // std dev = 0.718, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.11546722281037373;  // std dev = 0.785, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(A, K) )
%   | | | then return 0.2892610867282707;  // std dev = 0.233, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.05156660565457251;  // std dev = 0.933, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.12664287668707905;  // std dev = 0.041, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.19254108743895876;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), location(C, E) )
%   | then if ( interaction(A, F), interaction(G, C) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.21560553923276027;  // std dev = 0.265, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09346378979456216;  // std dev = 1.190, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | else if ( phenotype(A, H), phenotype(C, H) )
%   | | | then return -0.04431930042395618;  // std dev = 0.448, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.043568766122730224;  // std dev = 1.326, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | else if ( location(A, I), location(C, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.009922658185766455;  // std dev = 1.853, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
%   | | | else return 0.054910455753812946;  // std dev = 2.492, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
%   | | else if ( interaction(C, L), interaction(L, L) )
%   | | | then return 0.10738091145347257;  // std dev = 0.793, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4372210039265651;  // std dev = 0.247, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.0680570414918171;  // std dev = 0.194, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '16.419', 'seconds']
Refined model CLL: -0.186698


******************************************
Best model found
******************************************
Results 

CLL : -0.184062 

AUC ROC : 0.99327 

AUC PR : 0.415288 

Precision : 0.292463 

Recall : 0.921986 

F1 : 0.444065 

Total Learning Time : 19.796 

Total Inference Time : 12.09888243675232 

Total revision time: 34.83105937576294
Best scored revision CLL: -0.186698


Results 

CLL : -0.184062 

AUC ROC : 0.99327 

AUC PR : 0.415288 

Precision : 0.292463 

Recall : 0.921986 

F1 : 0.444065 

Total Learning Time : 40.03452197647095 

Total Inference Time : 12.09888243675232 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.247
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20366388526562584;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13738803646085465;  // std dev = 6.008, 170.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=52 */
%   | | | else return 0.20293425494825001;  // std dev = 5.717, 140.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1800042229057465;  // std dev = 5.080, 110.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=41 */
%   | | | else return 0.12152439795388172;  // std dev = 6.561, 199.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12750803885005396;  // std dev = 4.358, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | | | else return 0.09078724510393313;  // std dev = 7.209, 243.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11756063919678589;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09932843212280787;  // std dev = 8.184, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6925092879764227;  // std dev = 0.986, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.28350558370767626;  // std dev = 0.024, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.15504873230547256;  // std dev = 3.658, 55.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=23 */
%   | | | else return 0.09433252584419771;  // std dev = 5.018, 108.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06207795528471143;  // std dev = 4.016, 110.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=41 */
%   | | | else return 0.029822926233772282;  // std dev = 6.522, 194.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02009086777142128;  // std dev = 7.713, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035772537915091704;  // std dev = 7.591, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.278', 'seconds']
Parameter learned model CLL:-0.346145 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.25, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.008, 118, 52], 'false,false,false,false': [5.717, 88, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.08, 69, 41], 'false,false,false,false': [6.561, 136, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.358, 55, 29], 'false,false,false,false': [7.209, 168, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.206, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.184, 188, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.986, 1, 41], 'true,false': [0.024, 86, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.658, 32, 23], 'false,false,false,false': [5.018, 68, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.016, 69, 41], 'false,false,false,false': [6.522, 131, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.713, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.591, 195, 104]}]
{'': [nan, 0.22613436937782366], 'false': [nan, 0.226134369377822], 'false,false': [nan, 0.22613436937782366], 'false,false,false': [nan, 0.226134369377822]}
{'': [nan, 0.2229344432882366], 'false': [nan, 0.2229344432882421], 'false,false': [nan, 0.2229344432882366], 'false,false,false': [0.2123183391003468, 0.23346938775510262]}
{'': [nan, 0.2236398249107373], 'false': [nan, 0.2236398249107373], 'false,false': [nan, 0.2236398249107363], 'false,false,false': [0.23464576040579782, 0.21633870543038874]}
{'': [nan, 0.2172405116781859], 'false': [nan, 0.2172405116781859], 'false,false': [nan, 0.21724051167818606], 'false,false,false': [0.22604875283446643, 0.21384930530493043]}
{'': [nan, 0.22827795389775005], 'false': [nan, 0.22827795389775005], 'false,false': [nan, 0.2282779538977494], 'false,false,false': [nan, 0.2282779538977494]}
{'': [nan, 0.22938312711528527], 'false': [nan, 0.22938312711528527], 'false,false': [nan, 0.22938312711528558], 'false,false,false': [nan, 0.22938312711528508]}
{'': [0.21761732824937227, 0.23743155962664153], 'false': [nan, 0.23743155962664153], 'false,false': [nan, 0.23743155962664153], 'false,false,false': [0.243305785123967, 0.23319615912208552], 'true': [0.023169764887856763, 6.566365271727433e-06], 'true,true': [nan, 0.023169764887856763], 'true,true,false': [nan, 0.023169764887856763]}
{'': [nan, 0.19323335060469704], 'false': [nan, 0.19323335060469704], 'false,false': [nan, 0.1932333506046974], 'false,false,false': [0.1466189606133383, 0.21928773450466937]}
{'': [nan, 0.1859145603770522], 'false': [nan, 0.18591456037705167], 'false,false': [nan, 0.18591456037705167], 'false,false,false': [nan, 0.18591456037705167]}
{'': [nan, 0.1926985406535331], 'false': [nan, 0.1926985406535331], 'false,false': [nan, 0.19269854065353278], 'false,false,false': [nan, 0.19269854065353278]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.562
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(C, E), interaction(E, C) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( complex(F, G), complex(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.22549587387502257;  // std dev = 3.375, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.08433941128998852;  // std dev = 3.834, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | | | else return 0.16117923812981522;  // std dev = 5.903, 165.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.23842875871438682;  // std dev = 1.182, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.727597132140997;  // std dev = 0.110, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.8375522684949149;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A), location(A, H) )
%   | | then if ( complex(G, I), complex(A, I) )
%   | | | then return 0.009585511620062511;  // std dev = 2.216, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | | else return 0.13498916078792014;  // std dev = 6.703, 216.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=64 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.18090238132709632;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.37070774774951254;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5256046955171932;  // std dev = 0.242, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7628226141705248;  // std dev = 0.984, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.2531772372144255;  // std dev = 1.073, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.17145321797445162;  // std dev = 0.158, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0.040131329217998814;  // std dev = 2.875, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8193846214349427;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.17393323108769632;  // std dev = 0.075, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.1265613479869479;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.2006687441335646;  // std dev = 4.682, 93.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=36 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then return 0.11317204268071834;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.514984340864745;  // std dev = 0.103, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I), interaction(J, A) )
%   | | | then return 0.5473450887833721;  // std dev = 0.822, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7586939982846005;  // std dev = 0.165, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.2009781253245939;  // std dev = 0.374, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( interaction(K, M), phenotype(K, N) )
%   | | | then return 0.1392271489286665;  // std dev = 2.048, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.06472724567470792;  // std dev = 1.471, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return 0.1215807239944011;  // std dev = 5.130, 138.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=47 */
%   | | | else return 0.06507917168606417;  // std dev = 2.710, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.40874677700638734;  // std dev = 0.102, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, D), interaction(D, A) )
%   | | | then return 0.6351165348244574;  // std dev = 0.245, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.11202444308647812;  // std dev = 0.762, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.16282702000777766;  // std dev = 0.366, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.024482300210577113;  // std dev = 3.193, 79.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=16 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(F, H), interaction(F, G) )
%   | | | then return 0.11366460231038193;  // std dev = 4.389, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
%   | | | else return 0.009456844143813046;  // std dev = 2.645, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( location(A, I) )
%   | | | then return 0.2641299628736666;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.17074254051615131;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then return 0.22529321563123217;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3200534026253526;  // std dev = 0.190, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.43007819996538;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.32530627572376886;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4280958538423048;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.33082262813442226;  // std dev = 1.619, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.06285373977310843;  // std dev = 3.125, 113.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=13 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.07371567012526171;  // std dev = 4.781, 118.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=39 */
%   | | | else return 0.22232882196765472;  // std dev = 1.932, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.38747892027331493;  // std dev = 0.231, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.15921597684064193;  // std dev = 0.054, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( phenotype(A, E), location(A, F) )
%   | then if ( phenotype(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.2622095218019895;  // std dev = 0.887, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.6766295561019348;  // std dev = 1.009, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return -0.21808295579400136;  // std dev = 0.054, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(A, K), complex(I, L) )
%   | | | then return -0.036582442940461105;  // std dev = 2.015, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.06749980103807376;  // std dev = 2.826, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | else if ( location(A, M) )
%   | | | then return -0.03475306057402815;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.09345106187248148;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22076080793608427;  // std dev = 0.079, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), complex(F, G) )
%   | | | then return 0.3699415823464954;  // std dev = 0.436, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.20048655005446453;  // std dev = 0.969, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( interaction(H, D), interaction(H, A) )
%   | | | then return -0.08368268571519495;  // std dev = 2.351, 96.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=12 */
%   | | | else return 0.0183971609677579;  // std dev = 4.009, 128.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=35 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.484050313706489;  // std dev = 0.381, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.16505546403366822;  // std dev = 0.121, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.1821508860650297;  // std dev = 1.293, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.01549618515972764;  // std dev = 2.141, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, C), interaction(C, A) )
%   | | then return 0.18130413377684476;  // std dev = 0.231, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | else return -0.10319021586132715;  // std dev = 0.270, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else return -0.05965701998534993;  // std dev = 0.233, 123.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=17 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H) )
%   | | | then return 0.05205265956163611;  // std dev = 1.733, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.44580829018271173;  // std dev = 2.216, 43.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=36 */
%   | | else return -0.22064047182606608;  // std dev = 0.057, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(A, I) )
%   | | then return 0.38053461215873385;  // std dev = 0.700, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16565049896053283;  // std dev = 0.935, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04002098636422644;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.15113394013339623;  // std dev = 0.283, 39.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | else if ( interaction(A, D) )
%   | | then return -0.10621344919456202;  // std dev = 0.216, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.22215986958203807;  // std dev = 0.182, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.012103786452421855;  // std dev = 4.417, 172.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=52 */
%   else if ( phenotype(A, G), complex(A, H) )
%   | then return 0.049175153984385746;  // std dev = 0.762, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.36503709303813897;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.3233437468749842;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.11613184955545683;  // std dev = 0.802, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.06661161145761765;  // std dev = 1.481, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.025', 'seconds']
Refined model CLL: -0.211711


******************************************
Best model found
******************************************
Results 

CLL : -0.207477 

AUC ROC : 0.954827 

AUC PR : 0.36064 

Precision : 0.338384 

Recall : 0.50566 

F1 : 0.405446 

Total Learning Time : 13.562 

Total Inference Time : 12.096125364303589 

Total revision time: 28.99572728538513
Best scored revision CLL: -0.211711


Results 

CLL : -0.207477 

AUC ROC : 0.954827 

AUC PR : 0.36064 

Precision : 0.338384 

Recall : 0.50566 

F1 : 0.405446 

Total Learning Time : 34.19918988609314 

Total Inference Time : 12.096125364303589 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.192
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18672036367094097;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16939253882555777;  // std dev = 5.821, 152.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=51 */
%   | | | else return 0.18429357346343575;  // std dev = 5.161, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1688396483073769;  // std dev = 5.303, 122.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=44 */
%   | | | else return 0.13223952620025417;  // std dev = 5.695, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12827223017468525;  // std dev = 4.121, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | | else return 0.09728205584825238;  // std dev = 6.735, 211.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09742031459993362;  // std dev = 7.838, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06671438553866865;  // std dev = 7.913, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7289314805643259;  // std dev = 0.010, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2710775447264528;  // std dev = 0.015, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05727491579755095;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.061891541421240565;  // std dev = 3.943, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07450569368481755;  // std dev = 4.117, 117.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=44 */
%   | | | else return 0.052349569984450214;  // std dev = 5.693, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0705904044754341;  // std dev = 6.872, 250.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.006685181573770768;  // std dev = 7.161, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.396', 'seconds']
Parameter learned model CLL:-0.326721 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.821, 101, 51], 'false,false,false,false': [5.161, 76, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.303, 78, 44], 'false,false,false,false': [5.695, 100, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.121, 49, 26], 'false,false,false,false': [6.735, 145, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.838, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.913, 196, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.01, 0, 44], 'true,false': [0.015, 96, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.134, 54, 25], 'false,false,false,false': [3.943, 48, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.117, 73, 44], 'false,false,false,false': [5.693, 100, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.872, 158, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.161, 200, 92]}]
{'': [nan, 0.22061224489796044], 'false': [nan, 0.2206122448979601], 'false,false': [nan, 0.22061224489796044], 'false,false,false': [nan, 0.2206122448979601]}
{'': [nan, 0.22503834938710304], 'false': [nan, 0.2250383493871019], 'false,false': [nan, 0.22503834938710304], 'false,false,false': [0.22294840720221804, 0.22762802249981656]}
{'': [nan, 0.22463006623112758], 'false': [nan, 0.22463006623112758], 'false,false': [nan, 0.224630066231128], 'false,false,false': [0.23053098409810707, 0.21916050939210283]}
{'': [nan, 0.2181965352308952], 'false': [nan, 0.2181965352308952], 'false,false': [nan, 0.21819653523089488], 'false,false,false': [0.2264888888888885, 0.21499716539640418]}
{'': [nan, 0.2217669148599771], 'false': [nan, 0.2217669148599771], 'false,false': [nan, 0.22176691485997693], 'false,false,false': [nan, 0.22176691485997693]}
{'': [nan, 0.21739696646653417], 'false': [nan, 0.21739696646653417], 'false,false': [nan, 0.21739696646653406], 'false,false,false': [nan, 0.21739696646653406]}
{'': [0.21551653031942594, 0.21759133561585864], 'false': [nan, 0.21759133561585864], 'false,false': [nan, 0.21759133561585864], 'false,false,false': [0.21631148854350263, 0.21900416584011054], 'true': [2.4397663276332082e-06, 2.4344716953913124e-06], 'true,true': [nan, 2.4397663276332082e-06], 'true,true,false': [nan, 2.4397663276332082e-06]}
{'': [nan, 0.18638255948828567], 'false': [nan, 0.18638255948828567], 'false,false': [nan, 0.18638255948828567], 'false,false,false': [0.14483919754238503, 0.2190075370454019]}
{'': [nan, 0.18890339231072073], 'false': [nan, 0.18890339231072117], 'false,false': [nan, 0.18890339231072117], 'false,false,false': [nan, 0.18890339231072117]}
{'': [nan, 0.1755948164284679], 'false': [nan, 0.1755948164284679], 'false,false': [nan, 0.17559481642846833], 'false,false,false': [nan, 0.17559481642846833]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.147
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(C, E), complex(A, E) )
%   | | then return 0.02481560176617899;  // std dev = 0.373, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.058148935099512286;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.1959867729373502;  // std dev = 4.069, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.13314893509951237;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7288625993754257;  // std dev = 0.127, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14691265668380324;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( complex(A, E), location(D, F) )
%   | | | then return 0.23249279037667225;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.0777940368929422;  // std dev = 1.903, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13965764460032432;  // std dev = 3.859, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.1526014158815645;  // std dev = 3.872, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | | else return 0.07768832026827602;  // std dev = 3.746, 82.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5740742458263359;  // std dev = 0.186, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12992676114408683;  // std dev = 0.012, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(E, F), phenotype(E, G) )
%   | | | then return 0.14239694052929366;  // std dev = 2.838, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return -0.029039744680443538;  // std dev = 2.059, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( enzyme(H, I), complex(A, J) )
%   | | | then return 0.15377374488523546;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.33971693234647765;  // std dev = 1.576, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5530467331200107;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13997271719764715;  // std dev = 5.489, 150.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=49 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.43352995857051063;  // std dev = 0.075, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( location(D, F), complex(A, G) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.021230709392505282;  // std dev = 1.566, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.25410166040696286;  // std dev = 2.081, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.05781403569877553;  // std dev = 1.372, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.04454295712622454;  // std dev = 3.132, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( enzyme(A, L) )
%   | | | then return -0.16088336462516548;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.01909804453498464;  // std dev = 1.264, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(M, A), interaction(A, N) )
%   | | | then return 0.25050721377324325;  // std dev = 1.798, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.12216232954609686;  // std dev = 4.768, 112.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=38 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.42161482691346996;  // std dev = 0.190, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(C, F), complex(A, F) )
%   | | then return -0.038486490611700036;  // std dev = 0.315, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.2551271606756881;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14076084163864291;  // std dev = 2.887, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.38737132486432074;  // std dev = 0.086, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7336531692021716;  // std dev = 0.637, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.19174662212435212;  // std dev = 0.300, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.013471542212125006;  // std dev = 2.991, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | | else return 0.0398198681548968;  // std dev = 3.931, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( recursion_proteinclass(C, B), complex(A, D) )
%   | then return 0.251994889676214;  // std dev = 0.087, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.004668399130977798;  // std dev = 0.391, 115.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=27 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( complex(A, G), complex(E, G) )
%   | | then return -0.019802932310229438;  // std dev = 0.296, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(H, E), interaction(I, H) )
%   | | | then return 0.19073418419977678;  // std dev = 3.213, 50.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=23 */
%   | | | else return 0.08917830174405518;  // std dev = 2.874, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7728316723724805;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2271683276275195;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.006968555108940094;  // std dev = 1.443, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.10616500570581384;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.20766738218277886;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.6403809712717651;  // std dev = 0.153, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.21384624060215499;  // std dev = 0.055, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5958403578951692;  // std dev = 0.121, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.22297137409655998;  // std dev = 0.155, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.44785963742562435;  // std dev = 0.499, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1662751201876135;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.2916654478281112;  // std dev = 1.551, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.1312537262533166;  // std dev = 3.305, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.17453020553177012;  // std dev = 0.068, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2736806020385088;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, E), phenotype(A, F) )
%   | then if ( complex(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.5555790634430106;  // std dev = 0.183, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.4162497680419848;  // std dev = 0.337, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.19985201736338923;  // std dev = 0.057, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return -0.10494109202025258;  // std dev = 0.069, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.03996716440084975;  // std dev = 0.893, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.12210314434102731;  // std dev = 2.810, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return 0.025308261571779747;  // std dev = 4.036, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( phenotype(C, E) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.16887835022237765;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A), interaction(C, G) )
%   | | | then return 0.05260563824619167;  // std dev = 2.149, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return -0.02431693817971843;  // std dev = 2.540, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | else if ( interaction(H, A), location(H, D) )
%   | | then return 0.032253679983601576;  // std dev = 0.283, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( location(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.5048659272215298;  // std dev = 0.845, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.2551278740950472;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.14577519258710328;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, K) )
%   | | then return 0.003810442646128539;  // std dev = 0.273, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else return -0.033215973586555675;  // std dev = 0.328, 98.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( enzyme(D, C), interaction(E, D) )
%   | then return -0.04671698612053896;  // std dev = 0.132, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else return 0.06761377930305817;  // std dev = 0.310, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   else if ( phenotype(A, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.15952265364611354;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.06008674758797863;  // std dev = 1.717, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return -0.008173719710973136;  // std dev = 2.009, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( complex(A, K), complex(J, K) )
%   | | | then return 0.046280403332489055;  // std dev = 0.292, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18376684540265908;  // std dev = 1.173, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return -0.03138851098233563;  // std dev = 2.383, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.027757677743850698;  // std dev = 2.923, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.559', 'seconds']
Refined model CLL: -0.233113


******************************************
Best model found
******************************************
Results 

CLL : -0.229076 

AUC ROC : 0.982744 

AUC PR : 0.259014 

Precision : 0.219086 

Recall : 0.588448 

F1 : 0.319295 

Total Learning Time : 6.147 

Total Inference Time : 2.7675719261169434 

Total revision time: 11.933823122024537
Best scored revision CLL: -0.233113


Results 

CLL : -0.229076 

AUC ROC : 0.982744 

AUC PR : 0.259014 

Precision : 0.219086 

Recall : 0.588448 

F1 : 0.319295 

Total Learning Time : 17.137285722732543 

Total Inference Time : 2.7675719261169434 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.093
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1994187763693541;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16121352752758616;  // std dev = 5.906, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
%   | | | else return 0.13840590978325779;  // std dev = 4.856, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15101813549493623;  // std dev = 4.294, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | | else return 0.15509842946628996;  // std dev = 6.163, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07174649206008535;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.11350152605792665;  // std dev = 6.709, 204.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08305202439832844;  // std dev = 7.668, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07608087468269402;  // std dev = 7.623, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7065937834804273;  // std dev = 0.981, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.2592095094705544;  // std dev = 0.013, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08440379823270801;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   | | | else return 0.12239163690420349;  // std dev = 3.922, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04155391152626686;  // std dev = 3.485, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.06890789670799981;  // std dev = 6.122, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05215870539262704;  // std dev = 7.026, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026601192789384276;  // std dev = 7.095, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.574', 'seconds']
Parameter learned model CLL:-0.34823 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.906, 106, 52], 'false,false,false,false': [4.856, 77, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.294, 54, 28], 'false,false,false,false': [6.163, 110, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.678, 47, 19], 'false,false,false,false': [6.709, 137, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.668, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.623, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.981, 1, 28], 'true,false': [0.013, 54, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.628, 61, 33], 'false,false,false,false': [3.922, 40, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.485, 60, 28], 'false,false,false,false': [6.122, 106, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.026, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.095, 173, 86]}]
{'': [nan, 0.22480473670949944], 'false': [nan, 0.2248047367094992], 'false,false': [nan, 0.22480473670949944], 'false,false,false': [nan, 0.2248047367094992]}
{'': [nan, 0.21749284835753968], 'false': [nan, 0.21749284835754035], 'false,false': [nan, 0.21749284835753968], 'false,false,false': [0.22079794904662675, 0.2124827530232937]}
{'': [nan, 0.22565572718608623], 'false': [nan, 0.22565572718608623], 'false,false': [nan, 0.22565572718608629], 'false,false,false': [0.22482091535366058, 0.22605773406016202]}
{'': [nan, 0.2171602478396328], 'false': [nan, 0.2171602478396328], 'false,false': [nan, 0.21716024783963325], 'false,false,false': [0.20500459136822785, 0.2206667755273136]}
{'': [nan, 0.21616314273165374], 'false': [nan, 0.21616314273165374], 'false,false': [nan, 0.21616314273165294], 'false,false,false': [nan, 0.21616314273165294]}
{'': [nan, 0.21925671579831038], 'false': [nan, 0.21925671579831038], 'false,false': [nan, 0.2192567157983104], 'false,false,false': [nan, 0.21925671579831085]}
{'': [0.22364617320076155, 0.23179222043943473], 'false': [nan, 0.23179222043943473], 'false,false': [nan, 0.23179222043943473], 'false,false,false': [0.22781801720235484, 0.23668639053254484], 'true': [0.03321858835083771, 3.152155865849127e-06], 'true,true': [nan, 0.03321858835083771], 'true,true,false': [nan, 0.03321858835083771]}
{'': [nan, 0.19709227323356188], 'false': [nan, 0.19709227323356188], 'false,false': [nan, 0.1970922732335618], 'false,false,false': [0.13800330136422156, 0.2285372604867963]}
{'': [nan, 0.20068948180950774], 'false': [nan, 0.20068948180950696], 'false,false': [nan, 0.20068948180950696], 'false,false,false': [nan, 0.20068948180950696]}
{'': [nan, 0.19438566250768463], 'false': [nan, 0.19438566250768463], 'false,false': [nan, 0.1943856625076842], 'false,false,false': [nan, 0.1943856625076842]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.679
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(E, A), interaction(D, E) )
%   | then if ( phenotype(D, F), complex(D, C) )
%   | | then return 0.30259337954395676;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.12130682983635432;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else return 0.05045662740720463;  // std dev = 0.394, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( phenotype(A, I), phenotype(G, I) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3025933795439568;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12195261608110615;  // std dev = 5.626, 163.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.8354433391552105;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7345040769014473;  // std dev = 0.112, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.7436921625518845;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(F, A), interaction(F, G) )
%   | | | then return -0.16570965615811253;  // std dev = 0.062, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0.10062617281919155;  // std dev = 3.937, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.4768951986507378;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.14418290015278404;  // std dev = 5.128, 124.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(E, F), complex(A, G) )
%   | | then if ( interaction(A, H), phenotype(H, C) )
%   | | | then return 0.31002678071554046;  // std dev = 0.923, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5299464376917677;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.716582225318872;  // std dev = 0.334, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.06528294737365288;  // std dev = 3.604, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | else if ( phenotype(I, C), recursion_proteinclass(I, B) )
%   | | then return 0.794857831392179;  // std dev = 0.062, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.180928352599712;  // std dev = 0.080, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.6326466791791794;  // std dev = 0.074, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return -0.06621457484794244;  // std dev = 0.293, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else return 0.12786356632815826;  // std dev = 0.460, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), enzyme(E, D) )
%   | then if ( location(A, F), location(C, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6399216761970428;  // std dev = 0.187, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19760686967980234;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.11015478455226048;  // std dev = 0.720, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, C), phenotype(A, I) )
%   | | then return -0.03485112162284934;  // std dev = 0.398, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else return 0.08748130272298098;  // std dev = 0.435, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.36174250436190514;  // std dev = 0.311, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then return -0.006783411866483476;  // std dev = 0.341, 72.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=13 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.4931828958092994;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12363792302699624;  // std dev = 4.844, 117.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=38 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( phenotype(A, E), complex(C, D) )
%   | | then return 0.4114819279953263;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.48654813074558356;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), enzyme(F, G) )
%   | | then return 0.3904199505045714;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.30249965189652717;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.14819651697320815;  // std dev = 0.093, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(H, J), complex(A, K) )
%   | | | then return -0.08766437566044827;  // std dev = 1.471, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.035142990218543925;  // std dev = 2.635, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.06249801526173694;  // std dev = 4.396, 112.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | | else return 0.15326827848885397;  // std dev = 3.646, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.3265980258956799;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.28838071586369385;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4044185393195478;  // std dev = 0.246, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.13057430608937534;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.36949366756884566;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2419353187866233;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.008294957464107347;  // std dev = 2.830, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return 0.09862930777247017;  // std dev = 5.564, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.4075985707566203;  // std dev = 0.293, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.6630348193394914;  // std dev = 0.125, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.21195618005236816;  // std dev = 0.061, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( phenotype(A, G), interaction(H, A) )
%   | then if ( recursion_proteinclass(H, B), phenotype(H, I) )
%   | | then return 0.3284748840073488;  // std dev = 0.219, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(H, G), interaction(A, J) )
%   | | | then return -0.09029648945292157;  // std dev = 1.210, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.1022634724612155;  // std dev = 3.644, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.11861905779304353;  // std dev = 0.923, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.05068516648873572;  // std dev = 1.372, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.06085675914205539;  // std dev = 3.460, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22169315720870392;  // std dev = 0.062, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( complex(A, D) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5552151160470249;  // std dev = 0.379, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.19064791825823035;  // std dev = 0.197, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( complex(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.5034955561635885;  // std dev = 0.581, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.18749721538724648;  // std dev = 0.417, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.028736981126965624;  // std dev = 1.555, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.17675042017107043;  // std dev = 2.247, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( location(A, M) )
%   | | | then return 0.01724539027427732;  // std dev = 4.376, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
%   | | | else return 0.2101822663904841;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return 0.06828638800772001;  // std dev = 0.321, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   else if ( interaction(E, A), phenotype(A, F) )
%   | then if ( interaction(G, E), interaction(E, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.3723665155153699;  // std dev = 0.576, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.012576125002681857;  // std dev = 1.776, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5109943414028714;  // std dev = 1.219, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.2375800928198805;  // std dev = 0.367, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( location(A, K), complex(J, L) )
%   | | | then return 0.05053850681164204;  // std dev = 1.752, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.28993076268118106;  // std dev = 0.565, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return -0.1565756413643657;  // std dev = 0.515, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.032003593372182886;  // std dev = 3.286, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.06078686075057242;  // std dev = 0.280, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.48575663553981785;  // std dev = 0.206, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, F), interaction(D, F) )
%   | | then return -0.10430063674052989;  // std dev = 0.248, 65.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.20790447328855213;  // std dev = 1.679, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.027920661717766356;  // std dev = 3.407, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then return 0.12625607008436543;  // std dev = 0.321, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.010681232640566184;  // std dev = 0.286, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.11603624177380117;  // std dev = 1.502, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.01391303436720821;  // std dev = 1.980, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.509', 'seconds']
Refined model CLL: -0.250946


******************************************
Best model found
******************************************
Results 

CLL : -0.26492 

AUC ROC : 0.89277 

AUC PR : 0.160547 

Precision : 0.240809 

Recall : 0.462898 

F1 : 0.316808 

Total Learning Time : 6.679 

Total Inference Time : 2.9419519901275635 

Total revision time: 12.436631605148316
Best scored revision CLL: -0.250946


Results 

CLL : -0.26492 

AUC ROC : 0.89277 

AUC PR : 0.160547 

Precision : 0.240809 

Recall : 0.462898 

F1 : 0.316808 

Total Learning Time : 17.64009420585632 

Total Inference Time : 2.9419519901275635 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.086
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2006686201388824;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16028312445694265;  // std dev = 5.436, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return 0.15282043788977864;  // std dev = 5.404, 134.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11051868431571844;  // std dev = 4.944, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   | | | else return 0.14228394494363572;  // std dev = 5.888, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1609676749554616;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.14369501434698262;  // std dev = 6.567, 188.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07758392811825887;  // std dev = 7.718, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.101637763397824;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7308435218123356;  // std dev = 0.014, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2689906222864624;  // std dev = 0.020, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05465286564408769;  // std dev = 4.014, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | | else return 0.056779894072956714;  // std dev = 4.333, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.035209955736264446;  // std dev = 3.824, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.06926241191622802;  // std dev = 5.797, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.022561797592659777;  // std dev = 7.065, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03053336148205099;  // std dev = 6.992, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.422', 'seconds']
Parameter learned model CLL:-0.334967 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.436, 90, 44], 'false,false,false,false': [5.404, 91, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.944, 81, 35], 'false,false,false,false': [5.888, 104, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.549, 34, 20], 'false,false,false,false': [6.567, 121, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.718, 189, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.499, 159, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 35], 'true,false': [0.02, 67, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.014, 49, 24], 'false,false,false,false': [4.333, 57, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.824, 73, 35], 'false,false,false,false': [5.797, 95, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.065, 186, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.992, 174, 87]}]
{'': [nan, 0.2251999503999017], 'false': [nan, 0.22519995039990162], 'false,false': [nan, 0.2251999503999017], 'false,false,false': [nan, 0.22519995039990162]}
{'': [nan, 0.21924426375584868], 'false': [nan, 0.21924426375584807], 'false,false': [nan, 0.21924426375584868], 'false,false,false': [0.22053909556694182, 0.2179215860993543]}
{'': [nan, 0.2175431285372736], 'false': [nan, 0.2175431285372736], 'false,false': [nan, 0.21754312853727295], 'false,false,false': [0.21069129402265196, 0.22220776002917775]}
{'': [nan, 0.2302651415535607], 'false': [nan, 0.2302651415535607], 'false,false': [nan, 0.23026514155356093], 'false,false,false': [0.23319615912208447, 0.22935668072094495]}
{'': [nan, 0.21584089721006997], 'false': [nan, 0.21584089721006997], 'false,false': [nan, 0.2158408972100702], 'false,false,false': [nan, 0.2158408972100702]}
{'': [nan, 0.22860033642593952], 'false': [nan, 0.22860033642593952], 'false,false': [nan, 0.22860033642594], 'false,false,false': [nan, 0.22860033642593927]}
{'': [0.2253251654422827, 0.22079897029343024], 'true': [5.7883228061582165e-06, 5.876005129353839e-06], 'false': [nan, 0.22079897029343024], 'false,false': [nan, 0.22079897029343024], 'false,false,false': [0.22067930193282081, 0.22089965397923894], 'true,true': [nan, 5.7883228061582165e-06], 'true,true,false': [nan, 5.7883228061582165e-06]}
{'': [nan, 0.1893929380792688], 'false': [nan, 0.1893929380792688], 'false,false': [nan, 0.18939293807926735], 'false,false,false': [0.1354032572547593, 0.22856771412857918]}
{'': [nan, 0.18282746095589397], 'false': [nan, 0.18282746095589383], 'false,false': [nan, 0.18282746095589383], 'false,false,false': [nan, 0.18282746095589383]}
{'': [nan, 0.18733313766482426], 'false': [nan, 0.18733313766482426], 'false,false': [nan, 0.18733313766482382], 'false,false,false': [nan, 0.18733313766482382]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.873
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.14185106490048768;  // std dev = 4.08e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08144990597329878;  // std dev = 4.227, 103.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=23 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return 0.11740819435877163;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.1772978712697251;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6212109419034767;  // std dev = 0.306, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(A, C), phenotype(C, D) )
%   | | then return -0.015067336418946697;  // std dev = 0.292, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else if ( complex(C, E), complex(A, E) )
%   | | | then return -0.040952833454456807;  // std dev = 0.802, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.12265000884588757;  // std dev = 3.836, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.6398923308913577;  // std dev = 0.376, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.15362286866537064;  // std dev = 0.009, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.16819326704441193;  // std dev = 4.701, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.08578487415644509;  // std dev = 0.366, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.4865917637964599;  // std dev = 1.126, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6646788422806756;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7001015647574164;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13365188981358103;  // std dev = 0.021, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(A, E) )
%   | | | then return -0.18712606168685036;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.05084404346441161;  // std dev = 1.993, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6877545454209345;  // std dev = 1.587, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | | else return -0.15777245063092019;  // std dev = 0.190, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.19240134128043979;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
%   | | | else return 0.0687114470092306;  // std dev = 1.708, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5089458662587454;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(D, E), complex(A, F) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.06776146214450002;  // std dev = 0.715, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.144612956574242;  // std dev = 0.923, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(D, A), enzyme(D, G) )
%   | | | then return -0.13211850804704944;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.011790915025388472;  // std dev = 1.726, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.3657083984093461;  // std dev = 1.689, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.1296378396254367;  // std dev = 2.698, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.013131730397888439;  // std dev = 2.260, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return 0.13765387338493434;  // std dev = 3.862, 82.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, A) )
%   | then return 0.32056221546848307;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.47436105314712335;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3877101750653005;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.4174570681287653;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11655703604270302;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.0645739588497767;  // std dev = 3.372, 96.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   | | | else return 0.1530374754037761;  // std dev = 4.607, 111.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=44 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.28715472634262107;  // std dev = 0.051, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(E, F), interaction(G, E) )
%   | | then if ( complex(G, F), phenotype(A, H) )
%   | | | then return -0.036303667722488386;  // std dev = 2.767, 91.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=17 */
%   | | | else return 0.038015344698025505;  // std dev = 4.637, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
%   | | else if ( phenotype(A, I), complex(E, J) )
%   | | | then return 0.36177033908519307;  // std dev = 0.646, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08275719406413412;  // std dev = 1.742, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( phenotype(A, K), interaction(A, L) )
%   | | then if ( interaction(L, M) )
%   | | | then return 0.1975002642199264;  // std dev = 0.747, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.032184177027409874;  // std dev = 0.678, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.3907594945855214;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2046707312772773;  // std dev = 1.113, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.20321441114407096;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.5376008098915916;  // std dev = 0.541, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.3780307245123435;  // std dev = 0.710, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.1725657854737753;  // std dev = 0.060, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2652506222153494;  // std dev = 0.143, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( enzyme(I, K) )
%   | | | then return -0.07136790648700685;  // std dev = 0.627, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.09148677531089931;  // std dev = 3.310, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.10779649285023003;  // std dev = 1.391, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.006948846640148417;  // std dev = 3.262, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.038910200558556096;  // std dev = 0.319, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | else if ( enzyme(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.48177747948051214;  // std dev = 0.205, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return -0.23880570310268012;  // std dev = 0.080, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.36634525718703104;  // std dev = 0.175, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.13894483830672594;  // std dev = 0.186, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.0791582605070368;  // std dev = 3.609, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return -0.1603817032873185;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.11275857702164722;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.02469663677017916;  // std dev = 1.012, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), interaction(D, A) )
%   | then return 0.1775257320647737;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), phenotype(A, G) )
%   | | | then return 0.4109608428151343;  // std dev = 0.361, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14323597628640353;  // std dev = 1.312, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return -0.08579159631535574;  // std dev = 0.276, 131.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=21 */
%   else if ( enzyme(A, H), phenotype(A, I) )
%   | then return -0.04106440247523397;  // std dev = 0.239, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3844359570010343;  // std dev = 0.459, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.16722367725020984;  // std dev = 0.245, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.1943370545504467;  // std dev = 1.116, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.07843606227094976;  // std dev = 3.030, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(C, E), complex(C, F) )
%   | then if ( interaction(G, A), phenotype(G, E) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.09874597263950001;  // std dev = 0.418, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0804457636816021;  // std dev = 0.571, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.00540080024812623;  // std dev = 0.688, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.028388108888012055;  // std dev = 0.244, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   else if ( interaction(I, A), location(A, J) )
%   | then if ( location(I, J), complex(A, K) )
%   | | then return 0.0034783908623679323;  // std dev = 0.222, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | else if ( phenotype(I, L), location(I, M) )
%   | | | then return 0.0830606526777872;  // std dev = 2.542, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | | else return 0.028684958508030992;  // std dev = 3.132, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | else if ( interaction(A, N), interaction(N, A) )
%   | | then return 0.05604120733549283;  // std dev = 0.430, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.32696911991624045;  // std dev = 0.865, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.721', 'seconds']
Refined model CLL: -0.239985


******************************************
Best model found
******************************************
Results 

CLL : -0.245604 

AUC ROC : 0.967894 

AUC PR : 0.321267 

Precision : 0.298401 

Recall : 0.595745 

F1 : 0.397633 

Total Learning Time : 13.873 

Total Inference Time : 4.686260461807251 

Total revision time: 21.504093536376953
Best scored revision CLL: -0.239985


Results 

CLL : -0.245604 

AUC ROC : 0.967894 

AUC PR : 0.321267 

Precision : 0.298401 

Recall : 0.595745 

F1 : 0.397633 

Total Learning Time : 21.517737516403198 

Total Inference Time : 4.686260461807251 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.207
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21676962475468514;  // std dev = 8.167, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17403239240300922;  // std dev = 5.839, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
%   | | | else return 0.18582591503750073;  // std dev = 5.786, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13913854741115692;  // std dev = 5.218, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.1505706328586041;  // std dev = 6.408, 181.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16741958877471674;  // std dev = 4.217, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.11116182882373056;  // std dev = 7.070, 225.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10395375915382893;  // std dev = 8.233, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07396024424776385;  // std dev = 8.299, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6947528070208485;  // std dev = 0.991, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.2824290031977021;  // std dev = 0.030, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.12158182087930204;  // std dev = 3.725, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | | else return 0.03036500161318142;  // std dev = 5.262, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return -0.0012290426794742142;  // std dev = 4.259, 143.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=41 */
%   | | | else return 0.06599042575490996;  // std dev = 6.376, 177.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.022083096946070458;  // std dev = 7.753, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040285978853591184;  // std dev = 7.593, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.227', 'seconds']
Parameter learned model CLL:-0.342838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.167, 186, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.839, 99, 52], 'false,false,false,false': [5.786, 94, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.218, 81, 41], 'false,false,false,false': [6.408, 118, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.217, 46, 29], 'false,false,false,false': [7.07, 150, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.233, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.299, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.991, 1, 41], 'true,false': [0.03, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.725, 35, 23], 'false,false,false,false': [5.262, 90, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.259, 102, 41], 'false,false,false,false': [6.376, 114, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.753, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.593, 196, 104]}]
{'': [nan, 0.2300118906064233], 'false': [nan, 0.23001189060642147], 'false,false': [nan, 0.2300118906064233], 'false,false,false': [nan, 0.23001189060642147]}
{'': [nan, 0.2275504767087259], 'false': [nan, 0.22755047670872716], 'false,false': [nan, 0.2275504767087259], 'false,false,false': [0.22577957107144553, 0.2293113154437994]}
{'': [nan, 0.22540635241212365], 'false': [nan, 0.22540635241212365], 'false,false': [nan, 0.22540635241212026], 'false,false,false': [0.2231395424215076, 0.22688163539468337]}
{'': [nan, 0.22648179534844776], 'false': [nan, 0.22648179534844776], 'false,false': [nan, 0.22648179534844773], 'false,false,false': [0.23715555555555662, 0.22213264139073524]}
{'': [nan, 0.2266918565949294], 'false': [nan, 0.2266918565949294], 'false,false': [nan, 0.2266918565949295], 'false,false,false': [nan, 0.2266918565949295]}
{'': [nan, 0.22359929194685974], 'false': [nan, 0.22359929194685974], 'false,false': [nan, 0.22359929194685943], 'false,false,false': [nan, 0.2235992919468595]}
{'': [0.22361781011753948, 0.22290065703326778], 'true': [0.02338081531635227, 1.157509862015349e-05], 'false': [nan, 0.22290065703326778], 'false,false': [nan, 0.22290065703326778], 'false,false,false': [0.23929845422116502, 0.2130177514792894], 'true,true': [nan, 0.02338081531635227], 'true,true,false': [nan, 0.02338081531635227]}
{'': [nan, 0.1848252694589663], 'false': [nan, 0.1848252694589663], 'false,false': [nan, 0.18482526945896577], 'false,false,false': [0.1268265125458442, 0.22966383677574065]}
{'': [nan, 0.18725915899783277], 'false': [nan, 0.1872591589978326], 'false,false': [nan, 0.1872591589978326], 'false,false,false': [nan, 0.1872591589978326]}
{'': [nan, 0.19219770632712804], 'false': [nan, 0.19219770632712804], 'false,false': [nan, 0.19219770632712746], 'false,false,false': [nan, 0.19219770632712746]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.766
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(E, D), interaction(E, F) )
%   | | | then return 0.020311097261674484;  // std dev = 2.242, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return 0.31269438964496693;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, C) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.13484796422572676;  // std dev = 6.421, 206.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=57 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, C) )
%   | | then return -0.011814155143084584;  // std dev = 0.349, 47.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
%   | | else return 0.16392776829090686;  // std dev = 0.431, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.7445520049927604;  // std dev = 2.326, 70.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=64 */
%   | | | else return 0.02073724196514842;  // std dev = 1.935, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else return -0.16474075675644798;  // std dev = 0.133, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(H, I), interaction(A, J) )
%   | | | then return 0.1742617241691866;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.078147336479928;  // std dev = 1.730, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else return 0.24092839083585318;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(C, D), phenotype(C, E) )
%   | | then return 0.5553664367462843;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.12885014711828316;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.6764932721999541;  // std dev = 0.057, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.6649121348116352;  // std dev = 0.223, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.04215243720082301;  // std dev = 0.628, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7432020116002115;  // std dev = 0.929, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.1106368739977907;  // std dev = 1.839, 74.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=4 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.08262802418500896;  // std dev = 3.490, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | | else return 0.15445500315618405;  // std dev = 4.646, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.49487194644877236;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.686102094447542;  // std dev = 0.128, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.17952812144041563;  // std dev = 0.060, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, A), complex(A, H) )
%   | | then return 0.21751358415830996;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.44318274297375687;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5979363075616675;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13045901596409876;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.15024582066449893;  // std dev = 2.877, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.09808599834047081;  // std dev = 5.552, 191.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=60 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then if ( enzyme(A, D), phenotype(A, E) )
%   | | then return 0.02805791455138229;  // std dev = 0.703, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.37122188034319353;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.49145565155954773;  // std dev = 0.157, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), phenotype(G, H) )
%   | | | then return 0.5771987313487419;  // std dev = 0.854, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.1634142537056418;  // std dev = 1.497, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(I, C), interaction(I, A) )
%   | | | then return -0.04649434838569302;  // std dev = 3.017, 112.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=17 */
%   | | | else return 0.08656688289678238;  // std dev = 4.493, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
%   else if ( phenotype(A, J) )
%   | then return 0.41050155537971356;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.004077341599841522;  // std dev = 0.619, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.4548704909164919;  // std dev = 0.138, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.17030412547808763;  // std dev = 0.061, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( location(A, H) )
%   | | then if ( interaction(A, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4063466809874705;  // std dev = 0.793, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.06535577776882318;  // std dev = 4.450, 136.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=42 */
%   | | else if ( complex(F, I) )
%   | | | then return 0.5226607665710288;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24815355132058933;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then return 0.36633913584231764;  // std dev = 0.674, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return 0.09681406060776769;  // std dev = 1.033, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.08537709523686808;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.03727044316294672;  // std dev = 0.264, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(F, A), phenotype(D, G) )
%   | | then if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.28071931161018776;  // std dev = 0.769, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.05393532189392816;  // std dev = 1.991, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.328989096397224;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1355192866930291;  // std dev = 1.376, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4962952237089615;  // std dev = 2.008, 36.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=31 */
%   | | | else return -0.19744369409502405;  // std dev = 0.305, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.09300119240962426;  // std dev = 0.909, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.014042118061994383;  // std dev = 2.139, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.21189761944924568;  // std dev = 0.131, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.04073881234018658;  // std dev = 0.278, 168.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=38 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( location(A, H) )
%   | | then if ( location(F, H), enzyme(A, I) )
%   | | | then return 0.04397688868684603;  // std dev = 1.562, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.09989035390310302;  // std dev = 2.833, 69.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=27 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4590090274067455;  // std dev = 1.021, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.251159536509947;  // std dev = 0.126, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.1918019772738302;  // std dev = 1.405, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return -0.1767996414727215;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.1261686638595759;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.2706062770513461;  // std dev = 0.214, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.11462711324803236;  // std dev = 0.136, 61.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.19161250876702987;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.004091250462641525;  // std dev = 3.917, 166.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=43 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then return 0.38887366846154553;  // std dev = 0.697, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4603866985213097;  // std dev = 0.364, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14768740195804297;  // std dev = 0.158, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, K) )
%   | | | then return -5.262716165840772E-4;  // std dev = 1.360, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.18479459262789893;  // std dev = 1.779, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1673954327089968;  // std dev = 0.069, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), interaction(E, D) )
%   | | then return -0.04256208038147257;  // std dev = 0.226, 86.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=18 */
%   | | else return 0.07392319014624249;  // std dev = 0.377, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.3295977724967938;  // std dev = 0.135, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.1296389684165016;  // std dev = 0.089, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.15930363116611482;  // std dev = 1.264, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.19858893757140247;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.03085982686542109;  // std dev = 2.973, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | | else return 0.0017836665586014456;  // std dev = 2.538, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.543', 'seconds']
Refined model CLL: -0.218328


******************************************
Best model found
******************************************
Results 

CLL : -0.23381 

AUC ROC : 0.98233 

AUC PR : 0.422074 

Precision : 0.397985 

Recall : 0.596226 

F1 : 0.477341 

Total Learning Time : 13.766 

Total Inference Time : 19.257079362869263 

Total revision time: 36.207551429748534
Best scored revision CLL: -0.218328


Results 

CLL : -0.23381 

AUC ROC : 0.98233 

AUC PR : 0.422074 

Precision : 0.397985 

Recall : 0.596226 

F1 : 0.477341 

Total Learning Time : 36.22119540977478 

Total Inference Time : 19.257079362869263 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.151
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17321742825019726;  // std dev = 7.938, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15447840650747555;  // std dev = 5.894, 160.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=51 */
%   | | | else return 0.18026622163352515;  // std dev = 5.184, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16120454819464958;  // std dev = 5.350, 126.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
%   | | | else return 0.15685762809393008;  // std dev = 5.606, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1538942865236332;  // std dev = 4.059, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | | else return 0.13273055700004824;  // std dev = 6.565, 190.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11847114787382086;  // std dev = 7.694, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06144967356790282;  // std dev = 7.900, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7261928663031636;  // std dev = 0.003, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.27385160238709416;  // std dev = 0.004, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03648583390745572;  // std dev = 4.169, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | | else return 0.11634451295170621;  // std dev = 3.746, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04481750060268137;  // std dev = 4.226, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.035749602264886986;  // std dev = 5.700, 150.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04326869484809285;  // std dev = 7.034, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012288643581795556;  // std dev = 7.125, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.512', 'seconds']
Parameter learned model CLL:-0.326793 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.938, 200, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.894, 109, 51], 'false,false,false,false': [5.184, 78, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.35, 82, 44], 'false,false,false,false': [5.606, 91, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.059, 45, 26], 'false,false,false,false': [6.565, 124, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.694, 166, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.9, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.003, 0, 44], 'true,false': [0.004, 94, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.169, 57, 25], 'false,false,false,false': [3.746, 36, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.226, 85, 44], 'false,false,false,false': [5.7, 102, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.034, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.125, 200, 92]}]
{'': [nan, 0.2158003377744429], 'false': [nan, 0.21580033777444269], 'false,false': [nan, 0.2158003377744429], 'false,false,false': [nan, 0.21580033777444269]}
{'': [nan, 0.22101463239167454], 'false': [nan, 0.2210146323916695], 'false,false': [nan, 0.22101463239167454], 'false,false,false': [0.21714843749999915, 0.2258315090742173]}
{'': [nan, 0.22657334450552455], 'false': [nan, 0.22657334450552455], 'false,false': [nan, 0.22657334450552344], 'false,false,false': [0.22712169680184968, 0.22606729257894087]}
{'': [nan, 0.2283480221098989], 'false': [nan, 0.2283480221098989], 'false,false': [nan, 0.2283480221098981], 'false,false,false': [0.23209680618924752, 0.2268253172242531]}
{'': [nan, 0.2294509827946514], 'false': [nan, 0.2294509827946514], 'false,false': [nan, 0.22945098279465045], 'false,false,false': [nan, 0.22945098279465045]}
{'': [nan, 0.21819135986227986], 'false': [nan, 0.21819135986227986], 'false,false': [nan, 0.2181913598622792], 'false,false,false': [nan, 0.21819135986227972]}
{'': [0.21720078855274572, 0.22433169568748915], 'false': [nan, 0.22433169568748915], 'false,false': [nan, 0.22433169568748915], 'false,false,false': [0.21192742415229043, 0.2378626831370299], 'true': [2.0443264487307095e-07, 2.09890445525067e-07], 'true,true': [nan, 2.0443264487307095e-07], 'true,true,false': [nan, 2.0443264487307095e-07]}
{'': [nan, 0.1804955752516729], 'false': [nan, 0.1804955752516729], 'false,false': [nan, 0.18049557525167306], 'false,false,false': [0.138448299321867, 0.21661821371742052]}
{'': [nan, 0.1853026955175511], 'false': [nan, 0.18530269551754938], 'false,false': [nan, 0.18530269551754938], 'false,false,false': [nan, 0.18530269551754938]}
{'': [nan, 0.17386848186980727], 'false': [nan, 0.17386848186980727], 'false,false': [nan, 0.1738684818698064], 'false,false,false': [nan, 0.1738684818698064]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.06
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(A, F), complex(D, F) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.22178529873587588;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.23789577054254948;  // std dev = 4.314, 79.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=30 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.09952824544433996;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.16665957339738455;  // std dev = 4.478, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.7373370249903576;  // std dev = 0.138, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.49626883138005945;  // std dev = 0.773, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.15737815358454738;  // std dev = 0.103, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.11312914637001588;  // std dev = 3.135, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7461686826569042;  // std dev = 0.954, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.16492657784943157;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.1154441181220746;  // std dev = 3.051, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.20305968624393333;  // std dev = 4.678, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5753330719025174;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(A, D) )
%   | | then return -0.010807082395286417;  // std dev = 0.355, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.05784979468701798;  // std dev = 1.038, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.25401458984463987;  // std dev = 2.960, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( phenotype(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.7371078636571862;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.14014685948999342;  // std dev = 0.053, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.030990602387212764;  // std dev = 0.418, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08639840263956443;  // std dev = 4.773, 115.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=32 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4761144784718881;  // std dev = 0.099, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15079235432334875;  // std dev = 0.256, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.05150242240409978;  // std dev = 0.958, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.46462590151257166;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06267864367192426;  // std dev = 5.746, 185.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=49 */
%   | else if ( complex(A, F), interaction(A, G) )
%   | | then if ( interaction(G, G), phenotype(A, H) )
%   | | | then return 0.12457867088145189;  // std dev = 0.856, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.045687290064048175;  // std dev = 1.792, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.3797665523437886;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16046126702498553;  // std dev = 2.837, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( enzyme(F, D), phenotype(E, C) )
%   | | | then return 0.39191425266797286;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5818208649500208;  // std dev = 0.283, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.19371360656110292;  // std dev = 0.767, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.17041597280589948;  // std dev = 0.084, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3242302686966059;  // std dev = 0.148, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.36670543596922806;  // std dev = 1.112, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.057470103273763375;  // std dev = 1.607, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.15868016467782203;  // std dev = 2.851, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.0706888672587424;  // std dev = 5.320, 143.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F) )
%   | | then if ( interaction(A, G), enzyme(G, C) )
%   | | | then return 0.2482909967074491;  // std dev = 0.658, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4850538237237971;  // std dev = 0.546, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.7482711615942177;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.17831689366419765;  // std dev = 0.073, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.34888335364240125;  // std dev = 0.122, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return -0.04286195992700635;  // std dev = 0.863, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.16759501831192444;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.22567185645547722;  // std dev = 1.310, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07649733072296011;  // std dev = 5.793, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), enzyme(A, G) )
%   | | | then return -0.1111366833269491;  // std dev = 0.862, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21703445002398158;  // std dev = 0.151, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5471458099120112;  // std dev = 0.207, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.17437683980128194;  // std dev = 0.064, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.33907835287757304;  // std dev = 0.249, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), location(A, L) )
%   | | | then return 0.015307045347734997;  // std dev = 2.530, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.16463232485079268;  // std dev = 0.882, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.031630538508638895;  // std dev = 3.124, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.1367888845460738;  // std dev = 3.133, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), phenotype(A, E) )
%   | then return -0.03805939247474622;  // std dev = 0.311, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
%   | else if ( phenotype(C, F) )
%   | | then return 0.0960368028354476;  // std dev = 0.382, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | else return -0.025321309692989902;  // std dev = 0.351, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( enzyme(H, I), enzyme(A, J) )
%   | | then return -0.0703523913670231;  // std dev = 0.256, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( interaction(K, H) )
%   | | | then return 0.05291900561667539;  // std dev = 3.178, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.19364713948689635;  // std dev = 1.531, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then return 0.39071753649479773;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.028450448411948537;  // std dev = 0.292, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.18754334660551147;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then return 0.16492067433122848;  // std dev = 0.065, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.31713139999508905;  // std dev = 0.154, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09721812350957139;  // std dev = 0.077, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(F, H), interaction(I, F) )
%   | | | then return 0.20979019067419874;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.04282800151338999;  // std dev = 2.708, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( enzyme(K, L), phenotype(A, M) )
%   | | | then return 0.0626340748652746;  // std dev = 0.564, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07012862469144723;  // std dev = 2.020, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | else if ( interaction(N, A), recursion_proteinclass(N, B) )
%   | | | then return -0.17334668614465676;  // std dev = 0.965, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.02023851771438615;  // std dev = 4.329, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then return 0.14350897555053022;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.253943674293264;  // std dev = 0.133, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.09850685028027599;  // std dev = 0.073, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( complex(A, H), complex(F, I) )
%   | | | then return -0.005275229588743004;  // std dev = 1.152, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.06134657216350569;  // std dev = 2.373, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.11831694509534425;  // std dev = 1.622, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.01334479691807725;  // std dev = 5.257, 171.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.550', 'seconds']
Refined model CLL: -0.269304


******************************************
Best model found
******************************************
Results 

CLL : -0.280872 

AUC ROC : 0.890981 

AUC PR : 0.183689 

Precision : 0.204355 

Recall : 0.440433 

F1 : 0.279176 

Total Learning Time : 6.06 

Total Inference Time : 2.6265604496002197 

Total revision time: 11.583060537338255
Best scored revision CLL: -0.269304


Results 

CLL : -0.280872 

AUC ROC : 0.890981 

AUC PR : 0.183689 

Precision : 0.204355 

Recall : 0.440433 

F1 : 0.279176 

Total Learning Time : 11.5967045173645 

Total Inference Time : 2.6265604496002197 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.136
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18765085080832508;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14326108901609422;  // std dev = 5.992, 168.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=52 */
%   | | | else return 0.19932867734174875;  // std dev = 4.644, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16009876900213013;  // std dev = 4.267, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.1407278332759819;  // std dev = 6.226, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07965167087858886;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.13966678036030775;  // std dev = 6.578, 189.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07241051151520235;  // std dev = 7.709, 279.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07456624257887426;  // std dev = 7.627, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7396879549974325;  // std dev = 0.056, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2620848881871609;  // std dev = 0.092, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.053466821491967395;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.02943250214850887;  // std dev = 4.180, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.010150540673981787;  // std dev = 3.550, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | | | else return 0.0752962926882424;  // std dev = 6.144, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03550045513325683;  // std dev = 7.131, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05232488743847755;  // std dev = 7.001, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.531', 'seconds']
Parameter learned model CLL:-0.33906 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.594, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.992, 116, 52], 'false,false,false,false': [4.644, 59, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.267, 52, 28], 'false,false,false,false': [6.226, 117, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.667, 46, 19], 'false,false,false,false': [6.578, 122, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.709, 193, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.627, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.056, 0, 28], 'true,false': [0.092, 70, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.757, 72, 33], 'false,false,false,false': [4.18, 58, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.55, 70, 28], 'false,false,false,false': [6.144, 108, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.131, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.001, 161, 86]}]
{'': [nan, 0.22093040325303584], 'false': [nan, 0.22093040325303565], 'false,false': [nan, 0.22093040325303584], 'false,false,false': [nan, 0.22093040325303565]}
{'': [nan, 0.22093040325303726], 'false': [nan, 0.22093040325303634], 'false,false': [nan, 0.22093040325303726], 'false,false,false': [0.21371882086168004, 0.23193432766793762]}
{'': [nan, 0.22349028170208649], 'false': [nan, 0.22349028170208649], 'false,false': [nan, 0.2234902817020861], 'false,false,false': [0.22753820819223294, 0.22152208081667016]}
{'': [nan, 0.22400145543273028], 'false': [nan, 0.22400145543273028], 'false,false': [nan, 0.22400145543273045], 'false,false,false': [0.20686390532544358, 0.22897359797884434]}
{'': [nan, 0.2129906552607049], 'false': [nan, 0.2129906552607049], 'false,false': [nan, 0.2129906552607052], 'false,false,false': [nan, 0.2129906552607052]}
{'': [nan, 0.21949016133062998], 'false': [nan, 0.21949016133062998], 'false,false': [nan, 0.2194901613306296], 'false,false,false': [nan, 0.21949016133062976]}
{'': [0.20492488606900816, 0.21343206724483646], 'false': [nan, 0.21343206724483646], 'false,false': [nan, 0.21343206724483646], 'false,false,false': [0.2155102040816315, 0.21048047612135223], 'true': [0.00011104305282553082, 0.00012218632058246724], 'true,true': [nan, 0.00011104305282553082], 'true,true,false': [nan, 0.00011104305282553082]}
{'': [nan, 0.19170509610251907], 'false': [nan, 0.19170509610251907], 'false,false': [nan, 0.19170509610251882], 'false,false,false': [0.12858271474680302, 0.22739470368406198]}
{'': [nan, 0.18906407124967967], 'false': [nan, 0.1890640712496801], 'false,false': [nan, 0.1890640712496801], 'false,false,false': [nan, 0.1890640712496801]}
{'': [nan, 0.1984398648982455], 'false': [nan, 0.1984398648982455], 'false,false': [nan, 0.19843986489824592], 'false,false,false': [nan, 0.19843986489824592]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.765
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.03073995378937667;  // std dev = 1.633, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.14948751777667768;  // std dev = 5.121, 127.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(C, B), interaction(E, D) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, D), interaction(A, D) )
%   | | then return -0.03336813370334334;  // std dev = 0.287, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.8027362998306142;  // std dev = 0.184, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.12235950157078727;  // std dev = 4.457, 110.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=32 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.691165545982813;  // std dev = 1.295, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.15057378968940985;  // std dev = 0.173, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.045655082784665964;  // std dev = 1.629, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.07645069655942846;  // std dev = 1.896, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.3300113105400625;  // std dev = 0.431, 46.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=27 */
%   | else return -0.15412445643294184;  // std dev = 0.214, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.6730239980673548;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.07945584532825788;  // std dev = 1.593, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.26910282332270763;  // std dev = 2.179, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else if ( location(A, K), interaction(L, A) )
%   | | then if ( interaction(M, L), complex(M, N) )
%   | | | then return 0.23135278577717422;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.08622795331433464;  // std dev = 2.852, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | else if ( interaction(A, P), phenotype(P, Q) )
%   | | | then return 0.11866283307976941;  // std dev = 1.712, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.38420935837331527;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.017447097811443935;  // std dev = 1.116, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( complex(C, G) )
%   | | | then return 0.47311753331870965;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12576570767309977;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5303673566488102;  // std dev = 0.139, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, A) )
%   | then return -0.13764441439702207;  // std dev = 0.065, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B), interaction(I, J) )
%   | | | then return 0.6352879027587169;  // std dev = 0.302, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.020987251875615745;  // std dev = 3.610, 110.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=25 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.08854264080828468;  // std dev = 3.523, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   | | | else return 0.17748239073194624;  // std dev = 2.753, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3979084294886049;  // std dev = 0.102, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(C, F), location(A, G) )
%   | | then return -0.02999398864988817;  // std dev = 0.284, 78.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=14 */
%   | | else return 0.15534725291658572;  // std dev = 0.381, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( phenotype(A, I) )
%   | | then return 0.554313815007867;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.11908099894944701;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), enzyme(L, M) )
%   | | | then return 0.21855200190393861;  // std dev = 2.345, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.04614503822075312;  // std dev = 3.585, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return -0.04021238687450021;  // std dev = 0.879, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.22915631889122315;  // std dev = 2.200, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.27315782516463283;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3809271842744012;  // std dev = 0.133, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.433196489873033;  // std dev = 0.314, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G) )
%   | | then return 0.2841565848888565;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.383192088609728;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12245725813533764;  // std dev = 0.085, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(H, A), complex(A, I) )
%   | | | then return 0.009910055713701975;  // std dev = 2.638, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return 0.07955594356047682;  // std dev = 4.944, 151.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2670317433757713;  // std dev = 0.111, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5954660094426734;  // std dev = 0.139, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.17635717973493506;  // std dev = 0.064, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( interaction(A, F), phenotype(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.39981678613587734;  // std dev = 0.194, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.15642583932087067;  // std dev = 0.140, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.06420943359917206;  // std dev = 2.331, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.31246205135449895;  // std dev = 2.987, 52.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=36 */
%   | | | else return -0.22099378740104864;  // std dev = 0.533, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return 0.11490573040140677;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.23424316666920442;  // std dev = 0.085, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, D), enzyme(E, F) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.10495531042135675;  // std dev = 0.792, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.11727031461084389;  // std dev = 1.299, 47.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.08778125609093516;  // std dev = 1.398, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.05340711896796917;  // std dev = 2.546, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | else if ( phenotype(A, K), enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.39467439588351444;  // std dev = 0.256, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.16827773291091316;  // std dev = 0.175, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.01555863210995881;  // std dev = 1.687, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.11202231522678605;  // std dev = 3.092, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.21267369184614401;  // std dev = 0.086, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( interaction(E, D) )
%   | | | then return -0.0904086072828691;  // std dev = 0.049, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.13976986878275785;  // std dev = 0.474, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3418090707273521;  // std dev = 0.180, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1510258589523382;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.44091231603232967;  // std dev = 0.453, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.15906614060269514;  // std dev = 0.227, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.04640439895996148;  // std dev = 2.062, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.00414452294656543;  // std dev = 4.289, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C) )
%   | then return 0.14266203611463463;  // std dev = 0.092, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(D, A), interaction(E, D) )
%   | | then return 0.2947975566473347;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1757632220151671;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.0923734568579461;  // std dev = 0.083, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( phenotype(A, F), complex(A, G) )
%   | | then if ( complex(H, G), interaction(H, I) )
%   | | | then return -0.009860340483797522;  // std dev = 1.477, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return -0.08325422081324532;  // std dev = 0.483, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( location(A, J) )
%   | | | then return 0.04224869030505738;  // std dev = 4.372, 153.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=54 */
%   | | | else return 0.20811506208100486;  // std dev = 1.019, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.950', 'seconds']
Refined model CLL: -0.227527


******************************************
Best model found
******************************************
Results 

CLL : -0.245199 

AUC ROC : 0.965854 

AUC PR : 0.218428 

Precision : 0.231863 

Recall : 0.575972 

F1 : 0.330629 

Total Learning Time : 6.765 

Total Inference Time : 3.4660580158233643 

Total revision time: 13.05385062789917
Best scored revision CLL: -0.227527


Results 

CLL : -0.245199 

AUC ROC : 0.965854 

AUC PR : 0.218428 

Precision : 0.231863 

Recall : 0.575972 

F1 : 0.330629 

Total Learning Time : 13.067494607925415 

Total Inference Time : 3.4660580158233643 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.08
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19667033587772242;  // std dev = 7.586, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15940631421255372;  // std dev = 4.784, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.18116744781579058;  // std dev = 5.875, 152.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12530500130038744;  // std dev = 4.884, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | | else return 0.10938007662406733;  // std dev = 6.023, 172.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.05818251312200669;  // std dev = 3.199, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.13883485883339036;  // std dev = 6.887, 208.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10490617249481742;  // std dev = 7.588, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0827952997304132;  // std dev = 7.605, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7331566985821187;  // std dev = 0.058, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2665941374667721;  // std dev = 0.088, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.07745750973018929;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.01153160255163176;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05994656763763655;  // std dev = 3.747, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.04452675569477024;  // std dev = 5.935, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053357381045153876;  // std dev = 6.935, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.017289111639084535;  // std dev = 7.061, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.525', 'seconds']
Parameter learned model CLL:-0.330475 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.586, 170, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.784, 70, 34], 'false,false,false,false': [5.875, 99, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.884, 75, 35], 'false,false,false,false': [6.023, 120, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.199, 38, 14], 'false,false,false,false': [6.887, 135, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.588, 170, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.605, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.058, 0, 35], 'true,false': [0.088, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.62, 38, 20], 'false,false,false,false': [4.789, 81, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.747, 64, 35], 'false,false,false,false': [5.935, 110, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.935, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.061, 186, 87]}]
{'': [nan, 0.22392466199336944], 'false': [nan, 0.22392466199336938], 'false,false': [nan, 0.22392466199336944], 'false,false,false': [nan, 0.22392466199336938]}
{'': [nan, 0.2243499755859373], 'false': [nan, 0.22434997558593722], 'false,false': [nan, 0.2243499755859373], 'false,false,false': [0.22004437869822419, 0.22710353185595575]}
{'': [nan, 0.21328430230990147], 'false': [nan, 0.21328430230990147], 'false,false': [nan, 0.21328430230990053], 'false,false,false': [0.21688621561612045, 0.21088182985827078]}
{'': [nan, 0.22280709195568005], 'false': [nan, 0.22280709195568005], 'false,false': [nan, 0.22280709195568005], 'false,false,false': [0.19674556213017777, 0.22802151423830644]}
{'': [nan, 0.22404564254124362], 'false': [nan, 0.22404564254124362], 'false,false': [nan, 0.22404564254124287], 'false,false,false': [nan, 0.22404564254124287]}
{'': [nan, 0.22333095559430954], 'false': [nan, 0.22333095559430954], 'false,false': [nan, 0.22333095559430932], 'false,false,false': [nan, 0.22333095559430957]}
{'': [0.21171074069805276, 0.21174316524824174], 'false': [nan, 0.21174316524824174], 'false,false': [nan, 0.21174316524824174], 'false,false,false': [0.2259215219976219, 0.20299162033048782], 'true': [9.535898808142715e-05, 9.62902281998801e-05], 'true,true': [nan, 9.535898808142715e-05], 'true,true,false': [nan, 9.535898808142715e-05]}
{'': [nan, 0.18879288734113892], 'false': [nan, 0.18879288734113892], 'false,false': [nan, 0.1887928873411383], 'false,false,false': [0.14183812757219644, 0.2173972739070818]}
{'': [nan, 0.19235642309111095], 'false': [nan, 0.1923564230911114], 'false,false': [nan, 0.1923564230911114], 'false,false,false': [nan, 0.1923564230911114]}
{'': [nan, 0.18261407241964406], 'false': [nan, 0.18261407241964406], 'false,false': [nan, 0.18261407241964356], 'false,false,false': [nan, 0.18261407241964356]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 7.263
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.14386322081379807;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( location(A, F) )
%   | | | then return 0.20100607795665645;  // std dev = 6.279, 175.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=60 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8192973742135017;  // std dev = 0.151, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.16828254897281664;  // std dev = 0.128, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109543;  // std dev = 5.16e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.0904295230328849;  // std dev = 3.809, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | | else return 0.1348150686219859;  // std dev = 5.340, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7121780954285922;  // std dev = 0.089, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.16501688448511675;  // std dev = 0.095, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6677245609408023;  // std dev = 0.228, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.16671716212760399;  // std dev = 0.347, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.17072580878681665;  // std dev = 1.819, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.10826803395647118;  // std dev = 1.020, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.02792935752077775;  // std dev = 2.113, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.055674257565897424;  // std dev = 1.850, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.12618609872003003;  // std dev = 4.768, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C) )
%   | then return 0.38711305955981995;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5614545868592961;  // std dev = 0.260, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then return 0.2122057733269578;  // std dev = 0.900, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(D, E) )
%   | | | then return -0.0840958131600309;  // std dev = 0.498, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.05964244690338949;  // std dev = 2.343, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5663151767335839;  // std dev = 2.026, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return -0.17599421211820715;  // std dev = 0.229, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.23818197909518787;  // std dev = 2.118, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.11451321131216054;  // std dev = 4.060, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.2551498749209888;  // std dev = 0.220, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.5590226921365511;  // std dev = 0.184, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.15058116643780614;  // std dev = 0.225, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( complex(A, F), interaction(A, G) )
%   | then if ( interaction(G, G) )
%   | | then return 0.08591220062914401;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.37518628344612936;  // std dev = 0.689, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6588014145293728;  // std dev = 0.409, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.20273387169163717;  // std dev = 0.094, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.1318473215475862;  // std dev = 4.309, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   | | | else return -0.060658028641898454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), interaction(C, E) )
%   | then return -0.02513815245037766;  // std dev = 0.293, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return -0.009551199890377367;  // std dev = 0.364, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4709572800692799;  // std dev = 0.463, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20514806915470352;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( enzyme(A, I) )
%   | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.5057294844706994;  // std dev = 0.173, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.17728563611469356;  // std dev = 0.056, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return 0.22804584365912903;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.06186300317954292;  // std dev = 3.941, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | | else return -0.0038619058828632397;  // std dev = 1.554, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.432135728001476;  // std dev = 0.173, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.15958810675033758;  // std dev = 0.069, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(F, G), phenotype(F, H) )
%   | | then return 0.1165338110090681;  // std dev = 0.260, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.24158362781337514;  // std dev = 1.142, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.04261676149993159;  // std dev = 2.237, 59.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.12210451360161612;  // std dev = 0.414, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.031149349836376936;  // std dev = 2.375, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( enzyme(A, N), phenotype(A, P) )
%   | | | then return -0.029167788935186213;  // std dev = 0.338, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.10486437490005875;  // std dev = 2.866, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20398075856114462;  // std dev = 0.105, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F), interaction(D, G) )
%   | | then if ( interaction(G, H) )
%   | | | then return 0.15114886942500028;  // std dev = 0.464, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.006907412039113862;  // std dev = 0.295, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.08732552220825096;  // std dev = 0.080, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0035569426840042773;  // std dev = 1.406, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( complex(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.30978973900063755;  // std dev = 0.531, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.110334488007901;  // std dev = 0.192, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.027292804760385432;  // std dev = 4.675, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | | else return 0.1613153757013767;  // std dev = 1.115, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(E, G) )
%   | | then return -0.10584397824663075;  // std dev = 0.201, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return -0.00420998153744086;  // std dev = 0.196, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( complex(H, C), recursion_proteinclass(H, B) )
%   | | then return 0.3316346769636831;  // std dev = 0.165, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.14894527707203847;  // std dev = 0.069, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( location(A, I), interaction(A, A) )
%   | then return -0.013907380148909396;  // std dev = 0.135, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.052910748756019844;  // std dev = 0.948, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.22501393137367232;  // std dev = 1.463, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.04950841489349275;  // std dev = 3.853, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   | | | else return 0.1372090385521848;  // std dev = 1.118, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(A, E) )
%   | then return 0.03806627240505498;  // std dev = 0.186, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.24626020503508905;  // std dev = 0.270, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.12597622767931474;  // std dev = 0.227, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( complex(A, H) )
%   | | then return 0.08445713007544485;  // std dev = 0.208, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( complex(G, I), interaction(A, J) )
%   | | | then return 0.05832391146210088;  // std dev = 1.030, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.020382857200469062;  // std dev = 1.759, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( complex(A, K) )
%   | | then return 0.013404852956923606;  // std dev = 0.235, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.45061879431916196;  // std dev = 1.156, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.07750411120395309;  // std dev = 3.113, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.974', 'seconds']
Refined model CLL: -0.230505


******************************************
Best model found
******************************************
Results 

CLL : -0.253859 

AUC ROC : 0.979242 

AUC PR : 0.46984 

Precision : 0.269388 

Recall : 0.702128 

F1 : 0.389381 

Total Learning Time : 7.263 

Total Inference Time : 3.3613553047180176 

Total revision time: 13.367151086807251
Best scored revision CLL: -0.230505


Results 

CLL : -0.253859 

AUC ROC : 0.979242 

AUC PR : 0.46984 

Precision : 0.269388 

Recall : 0.702128 

F1 : 0.389381 

Total Learning Time : 13.396352117538452 

Total Inference Time : 3.3613553047180176 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.275
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18113030155914006;  // std dev = 8.391, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15502753793081023;  // std dev = 4.736, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | | | else return 0.16487174655578202;  // std dev = 6.896, 215.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1615167756922317;  // std dev = 5.160, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   | | | else return 0.20986207177515706;  // std dev = 6.155, 158.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.11955941470280479;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.10891648102866354;  // std dev = 7.854, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09843755924691901;  // std dev = 8.298, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06822308472357232;  // std dev = 8.373, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7343234967005074;  // std dev = 0.000454, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2656877271663764;  // std dev = 0.000692, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.060124547862303965;  // std dev = 3.742, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | | else return 0.0635418113453472;  // std dev = 5.270, 124.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03972977108481554;  // std dev = 4.162, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.03111992837473914;  // std dev = 6.553, 198.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02608874205423815;  // std dev = 7.742, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042401365364571175;  // std dev = 7.621, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.190', 'seconds']
Parameter learned model CLL:-0.333944 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.391, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.736, 70, 33], 'false,false,false,false': [6.896, 144, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.16, 76, 41], 'false,false,false,false': [6.155, 95, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.828, 24, 12], 'false,false,false,false': [7.854, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.298, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.373, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.000454, 0, 41], 'true,false': [0.000692, 85, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.742, 42, 21], 'false,false,false,false': [5.27, 82, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.162, 83, 41], 'false,false,false,false': [6.553, 135, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.742, 223, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.621, 197, 104]}]
{'': [nan, 0.2186644033795012], 'false': [nan, 0.2186644033794999], 'false,false': [nan, 0.2186644033795012], 'false,false,false': [nan, 0.2186644033794999]}
{'': [nan, 0.220086230766189], 'false': [nan, 0.22008623076618813], 'false,false': [nan, 0.220086230766189], 'false,false,false': [0.21773965500989617, 0.2211790156841545]}
{'': [nan, 0.23514533326294093], 'false': [nan, 0.23514533326294093], 'false,false': [nan, 0.23514533326293924], 'false,false,false': [0.22760363899279348, 0.23973560445516456]}
{'': [nan, 0.22124361137630555], 'false': [nan, 0.22124361137630555], 'false,false': [nan, 0.2212436113763074], 'false,false,false': [0.22222222222222246, 0.22110439363341305]}
{'': [nan, 0.2235536209962955], 'false': [nan, 0.2235536209962955], 'false,false': [nan, 0.22355362099629567], 'false,false,false': [nan, 0.22355362099629567]}
{'': [nan, 0.21976829224060876], 'false': [nan, 0.21976829224060876], 'false,false': [nan, 0.2197682922406081], 'false,false,false': [nan, 0.21976829224060979]}
{'': [0.2195186644637401, 0.22339401812063342], 'false': [nan, 0.22339401812063342], 'false,false': [nan, 0.22339401812063342], 'false,false,false': [0.22222222222222254, 0.22398543184183234], 'true': [5.027529698786455e-09, 5.626790484527913e-09], 'true,true': [nan, 5.027529698786455e-09], 'true,true,false': [nan, 5.027529698786455e-09]}
{'': [nan, 0.18718423225135666], 'false': [nan, 0.18718423225135666], 'false,false': [nan, 0.18718423225135628], 'false,false,false': [0.13967496012906477, 0.21690896706029872]}
{'': [nan, 0.1833012562511767], 'false': [nan, 0.18330125625117635], 'false,false': [nan, 0.18330125625117635], 'false,false,false': [nan, 0.18330125625117635]}
{'': [nan, 0.19297512597786173], 'false': [nan, 0.19297512597786173], 'false,false': [nan, 0.19297512597786115], 'false,false,false': [nan, 0.19297512597786115]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.082
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then if ( interaction(C, F), interaction(A, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.762910839861417;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.010529887480464713;  // std dev = 3.683, 105.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=16 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.2914822684328457;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.18601778755852783;  // std dev = 5.185, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.6508764998462637;  // std dev = 0.290, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(C, A) )
%   | | then return -0.14313770151993407;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.1330352830249379;  // std dev = 2.697, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.4806815135556193;  // std dev = 1.074, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.7177385767149276;  // std dev = 0.297, 49.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=44 */
%   | | else return -0.16041496785143353;  // std dev = 0.134, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7977799510824343;  // std dev = 0.129, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.14768875505402176;  // std dev = 1.871, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.05214330638767387;  // std dev = 3.897, 91.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.39704986282212884;  // std dev = 0.333, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.6718006880421646;  // std dev = 0.062, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( enzyme(E, H), complex(A, I) )
%   | | | then return 0.2455254819241647;  // std dev = 0.945, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.02406507105427983;  // std dev = 2.531, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.2354249050818686;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13964736863228663;  // std dev = 5.785, 180.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=61 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then return 0.5281105883888659;  // std dev = 0.802, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.03975884061734018;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3119713933373318;  // std dev = 1.672, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(A, E), complex(D, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then return 0.07187897283506588;  // std dev = 0.333, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.1863765962548421;  // std dev = 0.394, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( interaction(D, A) )
%   | | then return 0.24850871102981686;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.48181205263935384;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.41483490519396443;  // std dev = 0.282, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6689398767884073;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1899750751675513;  // std dev = 0.198, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.47801961786022246;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.056786807801815;  // std dev = 5.965, 223.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=60 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.43513676837018755;  // std dev = 0.280, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else return -0.05964774961243221;  // std dev = 0.292, 91.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.33924164059824474;  // std dev = 0.312, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.1596190979212858;  // std dev = 0.168, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.07336786692789823;  // std dev = 3.209, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6179637797904519;  // std dev = 1.618, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return -0.189015040391686;  // std dev = 0.207, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.7109759182775588;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17251594261860795;  // std dev = 2.052, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.39335674632032536;  // std dev = 0.203, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return 0.5584114933608255;  // std dev = 0.117, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.19195434569298783;  // std dev = 0.067, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( location(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5531668769989063;  // std dev = 0.149, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.18888315373592654;  // std dev = 0.066, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.062253283933374454;  // std dev = 1.108, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.1923130711112428;  // std dev = 1.641, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.11895941493634692;  // std dev = 2.429, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.07135021193197649;  // std dev = 2.816, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.27382381358355007;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, F), location(A, G) )
%   | | | then return 0.39527741535010186;  // std dev = 0.352, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4831424272168793;  // std dev = 0.413, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1688878167433416;  // std dev = 0.091, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.3008696184588348;  // std dev = 0.257, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4095772177049517;  // std dev = 0.421, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.14239437055265672;  // std dev = 0.338, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.19802389624527578;  // std dev = 1.339, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.02721813911537143;  // std dev = 4.316, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20225426806984947;  // std dev = 0.192, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( phenotype(D, E), location(A, F) )
%   | | then if ( complex(A, G), complex(D, G) )
%   | | | then return -0.0603028122864246;  // std dev = 0.860, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.04579204428233507;  // std dev = 2.601, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | else if ( interaction(D, H), phenotype(H, I) )
%   | | | then return -0.03489503542305617;  // std dev = 1.061, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.15591014245546575;  // std dev = 0.385, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3898565950029006;  // std dev = 1.287, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return -0.16896282833646462;  // std dev = 0.412, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( location(A, L) )
%   | | | then return 0.18844207368482474;  // std dev = 2.419, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | | else return 0.03283614172993485;  // std dev = 1.449, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.1550206318525599;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.23428515629212165;  // std dev = 0.066, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( complex(E, F), interaction(E, E) )
%   | | then return -0.12673594668936114;  // std dev = 0.119, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.039944342071768175;  // std dev = 1.371, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.003457658525787242;  // std dev = 1.480, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( phenotype(A, K), interaction(I, L) )
%   | | | then return 0.029508553039131146;  // std dev = 1.836, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.19754547097279884;  // std dev = 1.372, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.0012185902594047324;  // std dev = 3.492, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | | else return 0.10776871510884166;  // std dev = 1.492, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.03906503029525726;  // std dev = 0.233, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F), phenotype(D, G) )
%   | | | then return -0.07755522963175306;  // std dev = 0.571, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.27358921627366406;  // std dev = 0.609, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.20478590330653987;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07923079928572886;  // std dev = 2.209, 87.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=13 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(I, K), recursion_proteinclass(J, B) )
%   | | | then return -0.1519995941578243;  // std dev = 0.651, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0637770037894572;  // std dev = 3.283, 101.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=39 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.026621903732418628;  // std dev = 0.323, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24048974093524286;  // std dev = 1.244, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.726', 'seconds']
Refined model CLL: -0.216222


******************************************
Best model found
******************************************
Results 

CLL : -0.24206 

AUC ROC : 0.97248 

AUC PR : 0.469781 

Precision : 0.374419 

Recall : 0.607547 

F1 : 0.463309 

Total Learning Time : 10.082 

Total Inference Time : 6.333776235580444 

Total revision time: 19.6844405002594
Best scored revision CLL: -0.216222


Results 

CLL : -0.24206 

AUC ROC : 0.97248 

AUC PR : 0.469781 

Precision : 0.374419 

Recall : 0.607547 

F1 : 0.463309 

Total Learning Time : 19.7136415309906 

Total Inference Time : 6.333776235580444 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.177
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18209259707134337;  // std dev = 7.887, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.24310848341390068;  // std dev = 4.741, 93.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=38 */
%   | | | else return 0.14132451469444807;  // std dev = 6.118, 176.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.090373832260184;  // std dev = 5.613, 154.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=44 */
%   | | | else return 0.13938776481394827;  // std dev = 5.676, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.1212302516788943;  // std dev = 3.986, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | | else return 0.12305216165407387;  // std dev = 6.737, 205.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10475679956790361;  // std dev = 7.811, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07588448959848691;  // std dev = 7.868, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7364123932646727;  // std dev = 0.064, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2638331264965644;  // std dev = 0.089, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.12918834627644935;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.08810966860394263;  // std dev = 4.699, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.038122180042329736;  // std dev = 4.302, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.045492197425796195;  // std dev = 5.644, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028734127371171793;  // std dev = 7.132, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.017581469850999912;  // std dev = 7.142, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.451', 'seconds']
Parameter learned model CLL:-0.322477 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.887, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.741, 55, 38], 'false,false,false,false': [6.118, 122, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.613, 110, 44], 'false,false,false,false': [5.676, 97, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.986, 47, 24], 'false,false,false,false': [6.737, 137, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.811, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.868, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.064, 0, 44], 'true,false': [0.089, 86, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.87, 20, 14], 'false,false,false,false': [4.699, 63, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.302, 93, 44], 'false,false,false,false': [5.644, 97, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.132, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.142, 200, 92]}]
{'': [nan, 0.21900416584011229], 'false': [nan, 0.219004165840112], 'false,false': [nan, 0.21900416584011229], 'false,false,false': [nan, 0.219004165840112]}
{'': [nan, 0.22503834938709813], 'false': [nan, 0.22503834938710177], 'false,false': [nan, 0.22503834938709813], 'false,false,false': [0.24164643311365566, 0.212680785123968]}
{'': [nan, 0.21371903400761705], 'false': [nan, 0.21371903400761705], 'false,false': [nan, 0.21371903400761788], 'false,false,false': [0.20455578353649456, 0.22221369916028835]}
{'': [nan, 0.2220110556774144], 'false': [nan, 0.2220110556774144], 'false,false': [nan, 0.22201105567741447], 'false,false,false': [0.22376512596707002, 0.22140269451406933]}
{'': [nan, 0.22346773381871488], 'false': [nan, 0.22346773381871488], 'false,false': [nan, 0.22346773381871488], 'false,false,false': [nan, 0.22346773381871488]}
{'': [nan, 0.22030536075746465], 'false': [nan, 0.22030536075746465], 'false,false': [nan, 0.220305360757464], 'false,false,false': [nan, 0.22030536075746399]}
{'': [0.22410784099972156, 0.23175764167667082], 'false': [nan, 0.23175764167667082], 'false,false': [nan, 0.23175764167667082], 'false,false,false': [0.24221453287197256, 0.22765437347220713], 'true': [9.288136115741126e-05, 9.238907487336483e-05], 'true,true': [nan, 9.288136115741126e-05], 'true,true,false': [nan, 9.288136115741126e-05]}
{'': [nan, 0.17859714545650943], 'false': [nan, 0.17859714545650943], 'false,false': [nan, 0.1785971454565085], 'false,false,false': [0.13511746639770505, 0.21965155754868881]}
{'': [nan, 0.17910858242059224], 'false': [nan, 0.179108582420593], 'false,false': [nan, 0.179108582420593], 'false,false,false': [nan, 0.179108582420593]}
{'': [nan, 0.17470399922296787], 'false': [nan, 0.17470399922296787], 'false,false': [nan, 0.174703999222967], 'false,false,false': [nan, 0.174703999222967]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.738
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, D) )
%   | | then return 0.0010060779566550774;  // std dev = 0.350, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else return 0.6359267128772901;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, E), phenotype(A, F) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.25814893509951237;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.10233498161113995;  // std dev = 3.984, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
%   | | | else return 0.19880827575885163;  // std dev = 4.521, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.757486652941057;  // std dev = 0.183, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.017651842075514956;  // std dev = 1.813, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.2278396992881241;  // std dev = 1.503, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.19314923555430152;  // std dev = 0.185, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.049811800300180856;  // std dev = 3.056, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | | else return 0.17064753731247587;  // std dev = 5.883, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.601134724623069;  // std dev = 0.070, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.288455270770112;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, E) )
%   | | | then return 0.45372014460454474;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7937892583231777;  // std dev = 0.359, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.16851176750546443;  // std dev = 0.197, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7865198035946027;  // std dev = 0.352, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.17632153752219365;  // std dev = 0.123, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.1753690841771362;  // std dev = 2.206, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.06754275934820347;  // std dev = 4.007, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4112006695408282;  // std dev = 0.057, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), complex(F, G) )
%   | | then if ( interaction(H, F), complex(A, I) )
%   | | | then return 0.03962383275972827;  // std dev = 2.362, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.31192495837410134;  // std dev = 1.274, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.0333774244077242;  // std dev = 1.449, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.09691228617097847;  // std dev = 1.163, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6581129295363553;  // std dev = 0.329, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.16249029634754886;  // std dev = 0.494, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.08852233361548192;  // std dev = 2.570, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.1697769508343738;  // std dev = 3.932, 74.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.09386116333703542;  // std dev = 0.692, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, F) )
%   | | then return 0.2986667610996877;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.3921962819395272;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.4551456145682719;  // std dev = 0.226, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11775668653782953;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.1633158665254326;  // std dev = 2.436, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.06539949590915517;  // std dev = 5.580, 194.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=58 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.019918638402286453;  // std dev = 0.297, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), enzyme(A, F) )
%   | | then if ( enzyme(D, G) )
%   | | | then return 0.30153176847474344;  // std dev = 0.544, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20078379758719062;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.14084117656712675;  // std dev = 0.984, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.06426112746828107;  // std dev = 1.955, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.39701377151806583;  // std dev = 0.366, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.006196762519824345;  // std dev = 2.937, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.041158976580992226;  // std dev = 3.164, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | | else return 0.11029952334770249;  // std dev = 3.048, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4524500396884532;  // std dev = 0.164, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.16611709527698632;  // std dev = 0.059, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( phenotype(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.47723955470801194;  // std dev = 1.491, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.19559743149665032;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.22072601537963688;  // std dev = 0.046, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6392426456017591;  // std dev = 0.479, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2491906806117041;  // std dev = 0.272, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.15811821056951694;  // std dev = 2.040, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.06975064132920965;  // std dev = 3.030, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.1717710158000335;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.29815593645689614;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.2330300529572487;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(E, H), complex(A, I) )
%   | | | then return -0.05676323646388531;  // std dev = 1.542, 59.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | | | else return 0.014220935181653566;  // std dev = 3.233, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(J, L), phenotype(J, M) )
%   | | | then return 0.17244359254052896;  // std dev = 1.392, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.011927116544224995;  // std dev = 3.149, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.19513566317085645;  // std dev = 1.575, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.049164860737332595;  // std dev = 1.379, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, D), complex(C, E) )
%   | then if ( interaction(A, F) )
%   | | then return 0.011146861286450533;  // std dev = 0.229, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else return -0.04004151939566175;  // std dev = 0.285, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( recursion_proteinclass(D, B), location(A, G) )
%   | | then return 0.2347480883755306;  // std dev = 0.311, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(D, H), phenotype(A, H) )
%   | | | then return -0.04702888746502292;  // std dev = 1.286, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.05811595494356015;  // std dev = 3.245, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
%   else if ( complex(A, I) )
%   | then return 0.01629597668548068;  // std dev = 0.243, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then return 0.010569405512277622;  // std dev = 0.830, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.2287215712630661;  // std dev = 1.652, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.10442637421194108;  // std dev = 2.605, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.1362815561993992;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, F), enzyme(A, D) )
%   | | then return 0.012271767533861555;  // std dev = 0.219, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.016663000848683582;  // std dev = 0.870, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.1462081275857058;  // std dev = 1.459, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.1683478022699101;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.2767046596476276;  // std dev = 0.202, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.005859915351405399;  // std dev = 4.458, 171.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=48 */
%   | | else if ( location(A, L) )
%   | | | then return 0.10437790473770517;  // std dev = 2.305, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return -0.0467946264469772;  // std dev = 0.963, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.143', 'seconds']
Refined model CLL: -0.248942


******************************************
Best model found
******************************************
Results 

CLL : -0.27126 

AUC ROC : 0.965505 

AUC PR : 0.224883 

Precision : 0.217877 

Recall : 0.563177 

F1 : 0.314199 

Total Learning Time : 6.738 

Total Inference Time : 3.4382846355438232 

Total revision time: 13.090856113433839
Best scored revision CLL: -0.248942


Results 

CLL : -0.27126 

AUC ROC : 0.965505 

AUC PR : 0.224883 

Precision : 0.217877 

Recall : 0.563177 

F1 : 0.314199 

Total Learning Time : 13.12005714416504 

Total Inference Time : 3.4382846355438232 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.05
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16639266269807904;  // std dev = 7.713, 279.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.18234222108907822;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.21574817606366328;  // std dev = 6.001, 153.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12141724232900612;  // std dev = 4.380, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.14003624376079707;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.24081547023027716;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.1264514022927913;  // std dev = 7.117, 225.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10858076965853589;  // std dev = 7.490, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07509005017071807;  // std dev = 7.563, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7231177785622751;  // std dev = 0.040, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.27689209451195224;  // std dev = 0.059, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.028151103647232858;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.04966096045666082;  // std dev = 5.131, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0402872542606662;  // std dev = 3.372, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return 0.04551455452976223;  // std dev = 6.249, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02667212345642707;  // std dev = 7.145, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.016608545373619395;  // std dev = 7.165, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.559', 'seconds']
Parameter learned model CLL:-0.336034 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.713, 193, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.28, 53, 28], 'false,false,false,false': [6.001, 95, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.38, 61, 28], 'false,false,false,false': [6.218, 116, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.225, 11, 9], 'false,false,false,false': [7.117, 148, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.49, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.563, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.04, 0, 28], 'true,false': [0.059, 59, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.655, 45, 19], 'false,false,false,false': [5.131, 81, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.372, 55, 28], 'false,false,false,false': [6.249, 119, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.145, 181, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.165, 185, 86]}]
{'': [nan, 0.21322953199470787], 'false': [nan, 0.21322953199470784], 'false,false': [nan, 0.21322953199470787], 'false,false,false': [nan, 0.21322953199470784]}
{'': [nan, 0.23244941193658872], 'false': [nan, 0.23244941193658963], 'false,false': [nan, 0.23244941193658872], 'false,false,false': [0.22618503276939503, 0.23537955487205484]}
{'': [nan, 0.22004506609937813], 'false': [nan, 0.22004506609937813], 'false,false': [nan, 0.2200450660993779], 'false,false,false': [0.21554764749872155, 0.2222281566265544]}
{'': [nan, 0.22793266412452304], 'false': [nan, 0.22793266412452304], 'false,false': [nan, 0.22793266412452265], 'false,false,false': [0.2475, 0.2251256604792025]}
{'': [nan, 0.2271392464747933], 'false': [nan, 0.2271392464747933], 'false,false': [nan, 0.22713924647479397], 'false,false,false': [nan, 0.22713924647479397]}
{'': [nan, 0.222580639450903], 'false': [nan, 0.222580639450903], 'false,false': [nan, 0.22258063945090226], 'false,false,false': [nan, 0.22258063945090312]}
{'': [0.2183210591101432, 0.21578090547787326], 'true': [5.802363572130328e-05, 5.808105002512513e-05], 'false': [nan, 0.21578090547787326], 'false,false': [nan, 0.21578090547787326], 'false,false,false': [0.2087402343750006, 0.2193750000000002], 'true,true': [nan, 5.802363572130328e-05], 'true,true,false': [nan, 5.802363572130328e-05]}
{'': [nan, 0.19394036476379872], 'false': [nan, 0.19394036476379872], 'false,false': [nan, 0.1939403647637985], 'false,false,false': [0.13703030693161455, 0.22061827917751917]}
{'': [nan, 0.19119553743831538], 'false': [nan, 0.1911955374383161], 'false,false': [nan, 0.1911955374383161], 'false,false,false': [nan, 0.1911955374383161]}
{'': [nan, 0.18945232627440858], 'false': [nan, 0.18945232627440858], 'false,false': [nan, 0.18945232627440783], 'false,false,false': [nan, 0.18945232627440783]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.493
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.3126943896449668;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1207751977257741;  // std dev = 4.379, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1914822684328457;  // std dev = 4.163, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2943132452184545;  // std dev = 2.011, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.6104214280222822;  // std dev = 0.354, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(C, A) )
%   | | | then return -0.15648432385879568;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.13470463343465708;  // std dev = 3.001, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.09106621782400068;  // std dev = 0.431, 170.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.6013016717532245;  // std dev = 0.063, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.06960538769629193;  // std dev = 0.412, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( interaction(H, G), complex(H, I) )
%   | | then if ( phenotype(F, J), phenotype(H, J) )
%   | | | then return 0.32615219523481764;  // std dev = 2.114, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.1407919685527287;  // std dev = 1.817, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( complex(G, K), phenotype(F, L) )
%   | | | then return 0.8303568710544221;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30285782762360836;  // std dev = 1.514, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | then return 0.6294493740783277;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.020162896431891775;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.14951419464065396;  // std dev = 3.845, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.409336667194468;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5455594778096057;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.1443105791206516;  // std dev = 0.163, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7647365706864774;  // std dev = 0.355, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.19511749338506604;  // std dev = 0.111, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.041961524520785914;  // std dev = 4.604, 116.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=31 */
%   | | | else return 0.09192261220050821;  // std dev = 3.777, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.39667524364659135;  // std dev = 0.132, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( enzyme(D, G), interaction(E, H) )
%   | | | then return -0.2027062195081566;  // std dev = 0.132, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.02878644373925123;  // std dev = 1.664, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12725060549233982;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13919163409869784;  // std dev = 1.743, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6880178098970398;  // std dev = 0.573, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.1943605704643322;  // std dev = 0.207, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.15973534091845829;  // std dev = 3.385, 59.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=25 */
%   | | | else return 0.1037653522716342;  // std dev = 3.452, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.24004344996715465;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, A), interaction(C, F) )
%   | | then return -0.09826302348608679;  // std dev = 0.196, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.12725004356398834;  // std dev = 1.429, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.012022287288255558;  // std dev = 2.577, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   else if ( interaction(G, A), interaction(A, G) )
%   | then return -0.027560321336047116;  // std dev = 0.250, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return 0.06699229071725482;  // std dev = 1.347, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.18556152964015035;  // std dev = 2.107, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( location(A, K) )
%   | | | then return 0.06287953438320436;  // std dev = 4.594, 109.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=37 */
%   | | | else return 0.4302180231294632;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.20102541692853101;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5781345798987123;  // std dev = 0.148, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.18076324860861312;  // std dev = 0.073, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), phenotype(G, H) )
%   | | then return 0.04524356466048216;  // std dev = 0.364, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3990987813105035;  // std dev = 0.390, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return -0.09789594763132768;  // std dev = 1.546, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return 0.047640230808831244;  // std dev = 1.142, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.07166971145841389;  // std dev = 3.636, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
%   | | | else return -0.023306888353538127;  // std dev = 3.439, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.1746570035825898;  // std dev = 0.067, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.32526159286536716;  // std dev = 0.215, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( phenotype(A, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.17514051489219287;  // std dev = 0.725, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4209419813416537;  // std dev = 2.402, 50.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=40 */
%   | | | else return -0.21429875440221333;  // std dev = 0.667, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( location(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4397993908148754;  // std dev = 0.449, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.04319283745934285;  // std dev = 2.359, 53.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.06433362576997076;  // std dev = 2.558, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.3905872261513941;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15337685894763084;  // std dev = 0.228, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.09890968038566612;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30827779682492285;  // std dev = 0.675, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.06534490322234315;  // std dev = 2.406, 99.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=14 */
%   | | | else return 0.013838811013353162;  // std dev = 3.929, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.23960966750984394;  // std dev = 0.816, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.025481648953508268;  // std dev = 1.529, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.1257631500189669;  // std dev = 0.931, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4182863475584667;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18129776448886178;  // std dev = 0.108, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.044888571311439814;  // std dev = 0.190, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.09818821760144675;  // std dev = 0.765, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( phenotype(D, H) )
%   | | | then return -0.012269586721543603;  // std dev = 1.835, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.06532000419827949;  // std dev = 1.248, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(J, J) )
%   | | | then return -0.0031192644161468306;  // std dev = 2.280, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.10372108386590348;  // std dev = 3.549, 83.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=37 */
%   | | else if ( location(A, K) )
%   | | | then return -0.0449164666908125;  // std dev = 1.348, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.1775487864201675;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.067', 'seconds']
Refined model CLL: -0.250978


******************************************
Best model found
******************************************
Results 

CLL : -0.257565 

AUC ROC : 0.927577 

AUC PR : 0.275524 

Precision : 0.241538 

Recall : 0.55477 

F1 : 0.336549 

Total Learning Time : 6.493 

Total Inference Time : 2.904805898666382 

Total revision time: 12.166407840728759
Best scored revision CLL: -0.250978


Results 

CLL : -0.257565 

AUC ROC : 0.927577 

AUC PR : 0.275524 

Precision : 0.241538 

Recall : 0.55477 

F1 : 0.336549 

Total Learning Time : 12.19560887145996 

Total Inference Time : 2.904805898666382 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.105
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16886322081379787;  // std dev = 7.744, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13769516963612877;  // std dev = 5.544, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   | | | else return 0.17226280662243018;  // std dev = 5.344, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14134916972288955;  // std dev = 4.854, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.11958259930997152;  // std dev = 6.009, 170.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.17908689058560273;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.11876914549909183;  // std dev = 6.724, 206.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1203693177183953;  // std dev = 7.527, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09491042022128589;  // std dev = 7.543, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7248652978287803;  // std dev = 0.015, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.27455439621891653;  // std dev = 0.022, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09175454473160659;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return 0.06943746287996495;  // std dev = 4.307, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.030535113084610346;  // std dev = 3.815, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.06375217358113974;  // std dev = 5.839, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03751400816640613;  // std dev = 6.997, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.058405595511824226;  // std dev = 6.816, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.579', 'seconds']
Parameter learned model CLL:-0.344173 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.744, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.544, 102, 44], 'false,false,false,false': [5.344, 85, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.854, 72, 35], 'false,false,false,false': [6.009, 118, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.508, 32, 20], 'false,false,false,false': [6.724, 139, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.527, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.543, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.015, 0, 35], 'true,false': [0.022, 72, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.941, 44, 24], 'false,false,false,false': [4.307, 55, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.815, 73, 35], 'false,false,false,false': [5.839, 99, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.997, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.816, 151, 87]}]
{'': [nan, 0.21417091836734775], 'false': [nan, 0.21417091836734786], 'false,false': [nan, 0.21417091836734775], 'false,false,false': [nan, 0.21417091836734786]}
{'': [nan, 0.2167004102509457], 'false': [nan, 0.21670041025094472], 'false,false': [nan, 0.2167004102509457], 'false,false,false': [0.21054606868080217, 0.22308349609375008]}
{'': [nan, 0.21550081921694406], 'false': [nan, 0.21550081921694406], 'false,false': [nan, 0.21550081921694403], 'false,false,false': [0.2201819077200428, 0.21237147316468857]}
{'': [nan, 0.22355676122725038], 'false': [nan, 0.22355676122725038], 'false,false': [nan, 0.22355676122724935], 'false,false,false': [0.23668639053254467, 0.2195091991269238]}
{'': [nan, 0.22751114136763168], 'false': [nan, 0.22751114136763168], 'false,false': [nan, 0.2275111413676323], 'false,false,false': [nan, 0.2275111413676323]}
{'': [nan, 0.22580857622512795], 'false': [nan, 0.22580857622512795], 'false,false': [nan, 0.22580857622512798], 'false,false,false': [nan, 0.22580857622512793]}
{'': [0.2198576827709909, 0.22584267925749338], 'false': [nan, 0.22584267925749338], 'false,false': [nan, 0.22584267925749338], 'false,false,false': [0.2283737024221458, 0.22354478153578228], 'true': [6.447785451411749e-06, 6.536405188230078e-06], 'true,true': [nan, 6.447785451411749e-06], 'true,true,false': [nan, 6.447785451411749e-06]}
{'': [nan, 0.1880965529458541], 'false': [nan, 0.1880965529458541], 'false,false': [nan, 0.18809655294585356], 'false,false,false': [0.13475379480760757, 0.2257888954244969]}
{'': [nan, 0.18903886464775863], 'false': [nan, 0.18903886464775813], 'false,false': [nan, 0.18903886464775813], 'false,false,false': [nan, 0.18903886464775813]}
{'': [nan, 0.19517786954930877], 'false': [nan, 0.19517786954930877], 'false,false': [nan, 0.19517786954930832], 'false,false,false': [nan, 0.19517786954930832]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 11.925
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then return 0.08731560176617903;  // std dev = 0.420, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | else return 0.22957750652808379;  // std dev = 0.483, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   else if ( interaction(A, G), location(A, H) )
%   | then if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(G, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.0307399537893767;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.32689893509951234;  // std dev = 2.823, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.15406730244645073;  // std dev = 4.519, 98.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.796918393721993;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( enzyme(D, F), phenotype(D, E) )
%   | | | then return -0.15281586106542885;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1994872674830749;  // std dev = 1.805, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(D, D), enzyme(A, G) )
%   | | | then return -0.16828810844501169;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.06362573522519918;  // std dev = 2.089, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( phenotype(I, J), complex(I, H) )
%   | | | then return -0.10491767235833054;  // std dev = 0.977, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.16792034566471606;  // std dev = 3.629, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.10836787716483795;  // std dev = 2.415, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.18311415058814043;  // std dev = 4.743, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then return 0.6177222351365077;  // std dev = 0.164, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6951438576051476;  // std dev = 0.078, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( location(A, H), enzyme(A, I) )
%   | | | then return 0.1485285455448472;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05755586738409531;  // std dev = 1.872, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else if ( complex(F, J) )
%   | | | then return 0.08991541919066873;  // std dev = 2.705, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.3174785823724977;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.6396516933009432;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.03079858454496488;  // std dev = 2.614, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.1627412597335396;  // std dev = 5.449, 130.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=46 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then return 0.4670061575916759;  // std dev = 0.172, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, E), complex(E, C) )
%   | | | then return 0.6782390166453169;  // std dev = 0.277, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7775466402187179;  // std dev = 0.179, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.21390921328796603;  // std dev = 0.045, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.5412473679249746;  // std dev = 0.237, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.053579144497271164;  // std dev = 1.297, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.07913112049466535;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.20648831449211774;  // std dev = 2.853, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.10431598188276041;  // std dev = 3.764, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.3946176868943433;  // std dev = 0.090, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1605016735559573;  // std dev = 0.678, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.6644002926491178;  // std dev = 0.378, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.11531884788430335;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.18121357161850032;  // std dev = 0.264, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.0022907662183776854;  // std dev = 3.404, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(H, J), complex(I, J) )
%   | | | then return 0.2727571669804874;  // std dev = 1.945, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.05762553192579554;  // std dev = 4.454, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   | | else return 0.3413533175696638;  // std dev = 0.472, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( enzyme(D, F) )
%   | | then return 0.3421533478523475;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2130738479847584;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36738293064640026;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.6088404145060315;  // std dev = 1.973, 72.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=68 */
%   | | | else return -0.12507592000601986;  // std dev = 1.733, 45.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.17689126904024813;  // std dev = 0.187, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.2448537922257202;  // std dev = 0.330, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12625532135857406;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5056729662792743;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.03722334280130063;  // std dev = 0.281, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.0699092090243081;  // std dev = 0.460, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3498989643480805;  // std dev = 0.661, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( location(D, G), location(A, G) )
%   | | | then return -0.003702600401250577;  // std dev = 2.486, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return -0.07026735411443609;  // std dev = 2.139, 45.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2544046902347993;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.012392042396841241;  // std dev = 1.594, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14443559693814498;  // std dev = 2.290, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.278284461807229;  // std dev = 0.969, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then return 1.875375567985879E-4;  // std dev = 0.222, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( interaction(F, C), phenotype(F, G) )
%   | | then return 0.1973738387967834;  // std dev = 0.369, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else return 0.0325553555935909;  // std dev = 0.331, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( enzyme(A, H), interaction(A, I) )
%   | then if ( interaction(J, A), interaction(J, I) )
%   | | then return 0.43872646301848484;  // std dev = 0.197, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, K), complex(I, L) )
%   | | | then return 0.12594608517422756;  // std dev = 1.111, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.02158347782600883;  // std dev = 1.218, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( interaction(M, A), phenotype(M, N) )
%   | | then return 0.022064364642863495;  // std dev = 0.302, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | | else if ( interaction(A, P), phenotype(P, Q) )
%   | | | then return 0.06501367941845862;  // std dev = 1.106, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.019613678731414636;  // std dev = 3.143, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2526954755283316;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.24813530516894847;  // std dev = 0.645, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.08177592409133096;  // std dev = 0.238, 58.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   else if ( phenotype(A, F), complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.36917522875011993;  // std dev = 0.157, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.16399566661454243;  // std dev = 0.043, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.23520015561801413;  // std dev = 0.711, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.062027625834056334;  // std dev = 4.180, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
%   | | else if ( interaction(A, M) )
%   | | | then return -0.04605487968710956;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.01712103796808611;  // std dev = 1.021, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(A, E), phenotype(C, E) )
%   | then if ( interaction(A, F), location(A, D) )
%   | | then return -0.03195832277464451;  // std dev = 0.231, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else return -0.0745017715394556;  // std dev = 0.257, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.18469678386086408;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, G) )
%   | | | then return 5.265811916724185E-4;  // std dev = 4.366, 175.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=53 */
%   | | | else return -0.07720861107579009;  // std dev = 1.517, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then return 4.5796329607948805E-4;  // std dev = 0.294, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then return 0.3235900933669499;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.031017792130726647;  // std dev = 0.606, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.11457474016459597;  // std dev = 0.909, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.291', 'seconds']
Refined model CLL: -0.247018


******************************************
Best model found
******************************************
Results 

CLL : -0.271547 

AUC ROC : 0.975047 

AUC PR : 0.261142 

Precision : 0.189017 

Recall : 0.524823 

F1 : 0.277934 

Total Learning Time : 11.925 

Total Inference Time : 7.667418956756592 

Total revision time: 22.375003366470338
Best scored revision CLL: -0.247018


Results 

CLL : -0.271547 

AUC ROC : 0.975047 

AUC PR : 0.261142 

Precision : 0.189017 

Recall : 0.524823 

F1 : 0.277934 

Total Learning Time : 22.398056297302247 

Total Inference Time : 7.667418956756592 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.182
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20138325853185604;  // std dev = 8.265, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15480633333608124;  // std dev = 5.933, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
%   | | | else return 0.15480633333608124;  // std dev = 5.933, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16869314434859828;  // std dev = 5.124, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | | else return 0.13212094461850396;  // std dev = 6.530, 195.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14411748050555875;  // std dev = 4.300, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
%   | | | else return 0.11011289559058292;  // std dev = 7.124, 232.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09474266516226786;  // std dev = 8.346, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0867625772313826;  // std dev = 8.288, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7230003789311904;  // std dev = 0.020, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27695876563654037;  // std dev = 0.027, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08347134106698799;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | | else return 0.02070077829642449;  // std dev = 5.345, 140.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 9.513645331209737E-4;  // std dev = 4.236, 142.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=41 */
%   | | | else return 0.07834285379682536;  // std dev = 6.390, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.034505183898662965;  // std dev = 7.716, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02655655318943809;  // std dev = 7.715, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.103', 'seconds']
Parameter learned model CLL:-0.329061 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.265, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.933, 109, 52], 'false,false,false,false': [5.933, 109, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.124, 73, 41], 'false,false,false,false': [6.53, 132, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.3, 51, 29], 'false,false,false,false': [7.124, 157, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.346, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.288, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.02, 0, 41], 'true,false': [0.027, 77, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.871, 43, 23], 'false,false,false,false': [5.345, 100, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.236, 101, 41], 'false,false,false,false': [6.39, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.716, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.715, 214, 104]}]
{'': [nan, 0.22542452265028698], 'false': [nan, 0.2254245226502854], 'false,false': [nan, 0.22542452265028698], 'false,false,false': [nan, 0.2254245226502854]}
{'': [nan, 0.21866440337949566], 'false': [nan, 0.21866440337950055], 'false,false': [nan, 0.21866440337949566], 'false,false,false': [0.2186644033795006, 0.2186644033795006]}
{'': [nan, 0.22329049758590327], 'false': [nan, 0.22329049758590327], 'false,false': [nan, 0.22329049758590747], 'false,false,false': [0.2303016312711593, 0.2186982248520722]}
{'': [nan, 0.22213872784038735], 'false': [nan, 0.22213872784038735], 'false,false': [nan, 0.2221387278403864], 'false,false,false': [0.231093749999999, 0.21875429896075074]}
{'': [nan, 0.2211187484921332], 'false': [nan, 0.2211187484921332], 'false,false': [nan, 0.22111874849213045], 'false,false,false': [nan, 0.22111874849213045]}
{'': [nan, 0.2244686569529401], 'false': [nan, 0.2244686569529401], 'false,false': [nan, 0.22446865695294094], 'false,false,false': [nan, 0.22446865695294047]}
{'': [0.2267219125376252, 0.21229616363464837], 'true': [9.54010406716304e-06, 9.653431676825398e-06], 'false': [nan, 0.21229616363464837], 'false,false': [nan, 0.21229616363464837], 'false,false,false': [0.2270431588613401, 0.20408163265306203], 'true,true': [nan, 9.54010406716304e-06], 'true,true,false': [nan, 9.54010406716304e-06]}
{'': [nan, 0.18456788521887252], 'false': [nan, 0.18456788521887252], 'false,false': [nan, 0.18456788521887202], 'false,false,false': [0.1263506714876301, 0.2281018378463968]}
{'': [nan, 0.1878081550096733], 'false': [nan, 0.18780815500967293], 'false,false': [nan, 0.18780815500967293], 'false,false,false': [nan, 0.18780815500967293]}
{'': [nan, 0.18717606706716447], 'false': [nan, 0.18717606706716447], 'false,false': [nan, 0.18717606706716428], 'false,false,false': [nan, 0.18717606706716428]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.652
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( complex(E, C) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.053615770782840674;  // std dev = 0.284, 68.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=6 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.7887044906550683;  // std dev = 2.157, 72.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=67 */
%   | | | else return -0.05851773156715447;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.4436994297114932;  // std dev = 0.709, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7525451644653972;  // std dev = 0.056, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(G, H), complex(G, I) )
%   | | | then return 0.6756834993955888;  // std dev = 0.967, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.1490779674864458;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.13406603583226698;  // std dev = 0.138, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0.06601715873133597;  // std dev = 2.891, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then return 0.46478027994643367;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.1172868868174681;  // std dev = 4.536, 131.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=38 */
%   | | | else return 0.18641865986920111;  // std dev = 2.785, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5712225517993637;  // std dev = 0.109, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7315279787659736;  // std dev = 0.062, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.5774667593409814;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), enzyme(H, F) )
%   | | | then return -0.09937922649515192;  // std dev = 0.706, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | | else return 0.0914316304832762;  // std dev = 3.536, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( complex(I, K), complex(A, L) )
%   | | | then return 0.5084441425925953;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20651909631541604;  // std dev = 1.842, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(A, M), complex(A, N) )
%   | | | then return 0.04326874401174087;  // std dev = 1.698, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.13890304143222382;  // std dev = 4.329, 116.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.447686497181639;  // std dev = 0.208, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( complex(E, F), enzyme(E, G) )
%   | | then if ( interaction(H, E), phenotype(H, D) )
%   | | | then return 0.34989632068743065;  // std dev = 1.348, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.12627439702661591;  // std dev = 1.754, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.321446807921409;  // std dev = 1.299, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.0363745122446741;  // std dev = 3.690, 108.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=25 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( complex(K, J) )
%   | | | then return -0.1155088694395056;  // std dev = 0.829, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.08646355233199488;  // std dev = 1.658, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.04694263446846842;  // std dev = 1.553, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.09855438531919805;  // std dev = 3.513, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, D) )
%   | then return 0.14101341064354067;  // std dev = 0.317, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.4859963173313234;  // std dev = 0.143, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( location(A, E), interaction(A, F) )
%   | then if ( enzyme(F, G), complex(A, H) )
%   | | then return -0.07534957794671822;  // std dev = 0.276, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.130037281149167;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.08073861871089702;  // std dev = 3.249, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, J) )
%   | | | then return 0.1432070344947701;  // std dev = 1.810, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.040983866307831976;  // std dev = 2.247, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.11265680630781805;  // std dev = 3.403, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return 0.1634668486902928;  // std dev = 2.152, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then return 0.27821406086629946;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.3694413686159071;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.3960997980702915;  // std dev = 0.092, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( location(A, E), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.3179120537873673;  // std dev = 0.299, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | else return -0.07418318424274219;  // std dev = 0.261, 125.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=13 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.39277189248065364;  // std dev = 3.000, 59.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=43 */
%   | | | else return -0.18742585963296293;  // std dev = 0.150, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.22762267787286095;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0410258863320551;  // std dev = 1.760, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), location(A, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.283731629253908;  // std dev = 0.243, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4516646395824097;  // std dev = 0.640, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.7357545976781174;  // std dev = 0.154, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1875055179312087;  // std dev = 0.099, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.27892429664476304;  // std dev = 0.218, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H) )
%   | | | then return 0.008346891444529615;  // std dev = 4.318, 156.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=46 */
%   | | | else return 0.24367066180347285;  // std dev = 1.120, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.26078696787950234;  // std dev = 0.977, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.08237343294728752;  // std dev = 1.473, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, C), enzyme(A, E) )
%   | then return -0.09426771222500878;  // std dev = 0.231, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.093701233951705;  // std dev = 0.194, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( complex(A, F), phenotype(C, G) )
%   | | | then return 0.07815604429412555;  // std dev = 1.292, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.004941807733743807;  // std dev = 2.989, 94.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   else if ( interaction(H, A), complex(A, I) )
%   | then return 0.029168735274722468;  // std dev = 0.228, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.16007594037439157;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.18656760232985597;  // std dev = 0.210, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.10045310217744514;  // std dev = 2.418, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.17726126568126457;  // std dev = 2.454, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), complex(A, E) )
%   | then if ( interaction(A, F), interaction(C, F) )
%   | | then return 0.17507940830511246;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.5821229105066831;  // std dev = 0.427, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(C, G), complex(G, H) )
%   | | then return 0.35286562707539865;  // std dev = 0.179, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.21993154412741278;  // std dev = 0.220, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.09900749930463437;  // std dev = 0.121, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.29902642815373787;  // std dev = 0.101, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.03403728922116636;  // std dev = 3.245, 125.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=29 */
%   | | | else return 0.019254635571226825;  // std dev = 4.273, 156.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=51 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.1956386191922464;  // std dev = 0.186, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | else if ( interaction(A, C) )
%   | | then return -0.11155918778001087;  // std dev = 0.168, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( phenotype(A, F), interaction(G, C) )
%   | | | then return 0.05392933952468443;  // std dev = 3.333, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
%   | | | else return -0.03073620056362815;  // std dev = 3.076, 93.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=25 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.16895089865662716;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( enzyme(I, K) )
%   | | | then return -0.27211331132228195;  // std dev = 0.279, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09805069751861677;  // std dev = 1.149, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return -0.05271171827244206;  // std dev = 1.056, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.0032507887666270298;  // std dev = 1.914, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.659', 'seconds']
Refined model CLL: -0.220613


******************************************
Best model found
******************************************
Results 

CLL : -0.22502 

AUC ROC : 0.960982 

AUC PR : 0.356671 

Precision : 0.363636 

Recall : 0.633962 

F1 : 0.462173 

Total Learning Time : 15.652 

Total Inference Time : 12.579519033432007 

Total revision time: 31.386233457565307
Best scored revision CLL: -0.220613


Results 

CLL : -0.22502 

AUC ROC : 0.960982 

AUC PR : 0.356671 

Precision : 0.363636 

Recall : 0.633962 

F1 : 0.462173 

Total Learning Time : 31.409286388397216 

Total Inference Time : 12.579519033432007 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.133
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284577;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19236042080901206;  // std dev = 5.717, 142.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=51 */
%   | | | else return 0.13030694050691108;  // std dev = 5.368, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.2090838798255376;  // std dev = 5.135, 110.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=44 */
%   | | | else return 0.1361469715932025;  // std dev = 5.683, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.0868538875243505;  // std dev = 4.214, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | | else return 0.11722796581788404;  // std dev = 6.642, 199.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10906513275974193;  // std dev = 7.752, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07348185315754073;  // std dev = 7.843, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6989514732047531;  // std dev = 0.992, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.27879409684894935;  // std dev = 0.028, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.021272566914223266;  // std dev = 4.201, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | | | else return 0.05873584759886604;  // std dev = 3.956, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.023349661476902258;  // std dev = 4.327, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.05396273506058832;  // std dev = 5.677, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029330043408022817;  // std dev = 7.151, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04063711884176689;  // std dev = 7.049, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.427', 'seconds']
Parameter learned model CLL:-0.324679 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.717, 91, 51], 'false,false,false,false': [5.368, 97, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.135, 66, 44], 'false,false,false,false': [5.683, 99, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.214, 56, 26], 'false,false,false,false': [6.642, 133, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.752, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.843, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.992, 1, 44], 'true,false': [0.028, 79, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.201, 60, 25], 'false,false,false,false': [3.956, 49, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.327, 95, 44], 'false,false,false,false': [5.677, 98, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.151, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.049, 177, 92]}]
{'': [nan, 0.2222222222222235], 'false': [nan, 0.2222222222222231], 'false,false': [nan, 0.2222222222222235], 'false,false,false': [nan, 0.2222222222222231]}
{'': [nan, 0.22061224489795775], 'false': [nan, 0.22061224489795853], 'false,false': [nan, 0.22061224489795775], 'false,false,false': [0.23016266613767014, 0.20883217811384253]}
{'': [nan, 0.2295732615396776], 'false': [nan, 0.2295732615396776], 'false,false': [nan, 0.22957326153967691], 'false,false,false': [0.23967480558498003, 0.2197373289787406]}
{'': [nan, 0.2203733218477425], 'false': [nan, 0.2203733218477425], 'false,false': [nan, 0.22037332184774236], 'false,false,false': [0.21653777513384945, 0.22168457439792355]}
{'': [nan, 0.2267740015805898], 'false': [nan, 0.2267740015805898], 'false,false': [nan, 0.22677400158059038], 'false,false,false': [nan, 0.22677400158059038]}
{'': [nan, 0.22208745786686868], 'false': [nan, 0.22208745786686868], 'false,false': [nan, 0.22208745786686937], 'false,false,false': [nan, 0.222087457866869]}
{'': [0.2289644132037309, 0.2124493387354911], 'true': [0.021851190994506532, 9.750972406902892e-06], 'false': [nan, 0.2124493387354911], 'false,false': [nan, 0.2124493387354911], 'false,false,false': [0.2076124567474049, 0.21739969135802456], 'true,true': [nan, 0.021851190994506532], 'true,true,false': [nan, 0.021851190994506532]}
{'': [nan, 0.1789975385950235], 'false': [nan, 0.1789975385950235], 'false,false': [nan, 0.17899753859502296], 'false,false,false': [0.13468495376850978, 0.22072847628540723]}
{'': [nan, 0.17880143250671032], 'false': [nan, 0.17880143250671093], 'false,false': [nan, 0.17880143250671093], 'false,false,false': [nan, 0.17880143250671093]}
{'': [nan, 0.18470136402050547], 'false': [nan, 0.18470136402050547], 'false,false': [nan, 0.18470136402050605], 'false,false,false': [nan, 0.18470136402050605]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.197
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.14161350202864473;  // std dev = 5.079, 127.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
%   | | | else return 0.22178529873587458;  // std dev = 4.786, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(C, E), enzyme(A, F) )
%   | then if ( complex(A, G) )
%   | | then return 0.12409759456228467;  // std dev = 0.431, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.0824108285083901;  // std dev = 0.433, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(H, C), recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.04395393056110144;  // std dev = 0.928, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.19870879672130531;  // std dev = 3.771, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then return 0.06212631052854659;  // std dev = 0.415, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.10040709156361524;  // std dev = 3.037, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.1763528485008553;  // std dev = 3.784, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), enzyme(A, D) )
%   | then return 0.3698073452877917;  // std dev = 0.632, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, A) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(C, E) )
%   | | | then return 0.6974955519843997;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6455606490057383;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.12545195008763976;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.5798296696494005;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.12798315738197882;  // std dev = 5.270, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | | else if ( location(A, H) )
%   | | | then return 0.08378112839502853;  // std dev = 4.690, 112.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=30 */
%   | | | else return 0.31487955495710734;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( complex(C, E), phenotype(A, D) )
%   | then return 0.2741514172494648;  // std dev = 0.414, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( complex(C, F), location(A, G) )
%   | | then return 0.07444357420550096;  // std dev = 0.408, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | else return 0.1990753805574444;  // std dev = 0.458, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( phenotype(A, J), interaction(A, K) )
%   | | then return 0.3031826088548448;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(H, L), recursion_proteinclass(L, B) )
%   | | | then return 0.7583864849880488;  // std dev = 0.430, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.21563975267961222;  // std dev = 0.080, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | then return 0.4477391407706311;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return -0.11548344076913114;  // std dev = 0.564, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.09709468445560168;  // std dev = 4.370, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3970010066540035;  // std dev = 0.092, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( phenotype(D, E), interaction(D, F) )
%   | | then if ( phenotype(F, E), interaction(G, A) )
%   | | | then return -0.10850286566515085;  // std dev = 0.637, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.011603377344346024;  // std dev = 1.606, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.19753376829974645;  // std dev = 1.894, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.02035947206206663;  // std dev = 2.356, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7161929146367857;  // std dev = 0.340, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.2017568116665363;  // std dev = 0.238, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.49200622018162193;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06488660940555298;  // std dev = 4.621, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.26031057951698994;  // std dev = 0.203, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( enzyme(A, F), enzyme(D, F) )
%   | | then if ( interaction(G, A), complex(G, E) )
%   | | | then return -0.1507917818046626;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.05979203956512738;  // std dev = 1.364, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.43921952117458885;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.01599226777439708;  // std dev = 3.007, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( location(A, I), interaction(H, H) )
%   | | | then return 0.22390324334902076;  // std dev = 1.457, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.07802490574070006;  // std dev = 4.202, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.11740303638832682;  // std dev = 1.148, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 7.85796961325198E-5;  // std dev = 3.118, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.540912998722582;  // std dev = 0.205, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.19680377496772714;  // std dev = 0.043, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(G, F) )
%   | | then if ( phenotype(F, H), location(G, I) )
%   | | | then return 0.240630674518631;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.0683945135480415;  // std dev = 1.860, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return 0.02555969251090316;  // std dev = 0.354, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7607792868358801;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2372496225477438;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.11367950953002864;  // std dev = 1.634, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.19663833377289663;  // std dev = 1.535, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.19622164037067724;  // std dev = 0.062, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.33423161961939374;  // std dev = 0.794, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(C, F), complex(C, G) )
%   | | | then return 0.08371863501702637;  // std dev = 2.414, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return -0.014823899632331113;  // std dev = 4.041, 138.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then return 0.039807159380985384;  // std dev = 0.333, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( complex(J, K) )
%   | | | then return 0.22808395864699174;  // std dev = 1.031, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.13969012473351036;  // std dev = 1.045, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.02345560147537723;  // std dev = 1.375, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.11286148465313163;  // std dev = 2.096, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then return 0.1604970243556807;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.29285417671483155;  // std dev = 0.195, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B), location(G, H) )
%   | | then return 0.5015673885848201;  // std dev = 0.396, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, I), enzyme(G, I) )
%   | | | then return -0.13251654627356033;  // std dev = 0.670, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return -0.003806501319296993;  // std dev = 4.173, 139.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=41 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5117694590964378;  // std dev = 0.431, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1765307009493626;  // std dev = 0.125, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.03590326708573642;  // std dev = 1.248, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.07552375149415806;  // std dev = 2.968, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.3855852869916587;  // std dev = 0.167, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.17829110921453192;  // std dev = 0.061, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(F, F), enzyme(F, H) )
%   | | then return 0.32320787175517623;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(F, I) )
%   | | | then return -0.035336424750352875;  // std dev = 0.764, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.08043816891838712;  // std dev = 2.525, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.43595631116372285;  // std dev = 0.635, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.19673297140687718;  // std dev = 0.103, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.0300525175701504;  // std dev = 2.073, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.06782474820168452;  // std dev = 2.583, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.971', 'seconds']
Refined model CLL: -0.243594


******************************************
Best model found
******************************************
Results 

CLL : -0.282454 

AUC ROC : 0.965622 

AUC PR : 0.228927 

Precision : 0.161989 

Recall : 0.729242 

F1 : 0.265092 

Total Learning Time : 6.197 

Total Inference Time : 2.782752275466919 

Total revision time: 11.867100553512573
Best scored revision CLL: -0.243594


Results 

CLL : -0.282454 

AUC ROC : 0.965622 

AUC PR : 0.228927 

Precision : 0.161989 

Recall : 0.729242 

F1 : 0.265092 

Total Learning Time : 11.890153484344482 

Total Inference Time : 2.782752275466919 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.113
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22101813341174886;  // std dev = 7.402, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19269664076201243;  // std dev = 5.752, 143.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=52 */
%   | | | else return 0.15286980093517258;  // std dev = 4.795, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14800950228213514;  // std dev = 4.278, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.13817022356801695;  // std dev = 6.208, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.17951905554141634;  // std dev = 3.364, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | | else return 0.11210079776942916;  // std dev = 6.690, 202.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09211843333626649;  // std dev = 7.561, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07392465729260167;  // std dev = 7.563, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7163928957776717;  // std dev = 0.053, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.28151717493103284;  // std dev = 0.079, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04242143243963324;  // std dev = 4.746, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | | | else return 0.04943630279101698;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04963203376504452;  // std dev = 3.324, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.05280111753555208;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05153644799765366;  // std dev = 6.979, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02102602909953321;  // std dev = 7.080, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.610', 'seconds']
Parameter learned model CLL:-0.347464 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.402, 151, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.752, 91, 52], 'false,false,false,false': [4.795, 71, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.278, 53, 28], 'false,false,false,false': [6.208, 115, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.364, 28, 19], 'false,false,false,false': [6.69, 135, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.561, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.563, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.053, 0, 28], 'true,false': [0.079, 55, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.746, 71, 33], 'false,false,false,false': [4.134, 54, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.324, 50, 28], 'false,false,false,false': [6.218, 116, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.979, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.08, 176, 86]}]
{'': [nan, 0.2311951432284721], 'false': [nan, 0.23119514322847182], 'false,false': [nan, 0.2311951432284721], 'false,false,false': [nan, 0.23119514322847182]}
{'': [nan, 0.22652185223725207], 'false': [nan, 0.22652185223725213], 'false,false': [nan, 0.22652185223725207], 'false,false,false': [0.23140495867768518, 0.2189569160997725]}
{'': [nan, 0.22379334883511262], 'false': [nan, 0.22379334883511262], 'false,false': [nan, 0.22379334883511295], 'false,false,false': [0.22598123487564087, 0.22273808995693967]}
{'': [nan, 0.2258803378891085], 'false': [nan, 0.2258803378891085], 'false,false': [nan, 0.2258803378891081], 'false,false,false': [0.24083295608872807, 0.22154332998559537]}
{'': [nan, 0.223314901539709], 'false': [nan, 0.223314901539709], 'false,false': [nan, 0.22331490153970887], 'false,false,false': [nan, 0.22331490153970887]}
{'': [nan, 0.2225638412755226], 'false': [nan, 0.2225638412755226], 'false,false': [nan, 0.22256384127552184], 'false,false,false': [nan, 0.22256384127552317]}
{'': [0.22272093000628765, 0.21650089080866325], 'true': [0.00010176821057823153, 0.0001135231742126082], 'false': [nan, 0.21650089080866325], 'false,false': [nan, 0.21650089080866325], 'false,false,false': [0.21662352071005958, 0.21631148854350277], 'true,true': [nan, 0.00010176821057823153], 'true,true,false': [nan, 0.00010176821057823153]}
{'': [nan, 0.1972867466497428], 'false': [nan, 0.1972867466497428], 'false,false': [nan, 0.19728674664974308], 'false,false,false': [0.14168704710676336, 0.22220764131706974]}
{'': [nan, 0.19879492795650228], 'false': [nan, 0.1987949279565031], 'false,false': [nan, 0.1987949279565031], 'false,false,false': [nan, 0.1987949279565031]}
{'': [nan, 0.19130306008568215], 'false': [nan, 0.19130306008568215], 'false,false': [nan, 0.19130306008568196], 'false,false,false': [nan, 0.19130306008568196]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.376
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( enzyme(D, E), complex(A, F) )
%   | | | then return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.224815601766179;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( location(A, I), interaction(G, J) )
%   | | | then return 0.12481560176617902;  // std dev = 2.966, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.2748156017661787;  // std dev = 3.416, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | | else return 0.1739384087837225;  // std dev = 4.052, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( location(A, E), location(C, E) )
%   | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.500171512305991;  // std dev = 0.907, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.07904762540663973;  // std dev = 0.427, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.8254910847041659;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.17550022756371264;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7702795154695068;  // std dev = 0.059, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.816849422559032;  // std dev = 0.105, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1686153782099483;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08902304820215302;  // std dev = 5.012, 135.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.5612424364843847;  // std dev = 0.162, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.23979734505098307;  // std dev = 0.839, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13538592065313418;  // std dev = 0.002, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.1574962653412143;  // std dev = 2.960, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.1021235203446657;  // std dev = 5.178, 144.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=42 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.12093273873031073;  // std dev = 1.614, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.3974876564410234;  // std dev = 1.065, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.6272587293966373;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.21615099036046734;  // std dev = 1.508, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(A, E) )
%   | then return 0.026362867812773843;  // std dev = 0.867, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5139923344117934;  // std dev = 0.127, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12028802911995158;  // std dev = 0.002, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( enzyme(F, G) )
%   | | | then return -0.03150278339293746;  // std dev = 1.659, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.1263886294845381;  // std dev = 2.153, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), phenotype(J, K) )
%   | | | then return 0.08689302589189381;  // std dev = 3.497, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return 0.2509396558933198;  // std dev = 2.465, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.0783149558334194;  // std dev = 3.318, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.02793093375701948;  // std dev = 2.465, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.30027277890619863;  // std dev = 0.078, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7719060155980775;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), interaction(F, C) )
%   | | then return -0.10752396505802515;  // std dev = 0.171, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(G, C), complex(G, H) )
%   | | | then return 0.04199301757468314;  // std dev = 3.142, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return -0.052570256928844525;  // std dev = 2.429, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.48199700138155754;  // std dev = 0.113, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.4451455236017134;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.010312224419859871;  // std dev = 2.576, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.11295367671803411;  // std dev = 4.255, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3287130245275213;  // std dev = 0.112, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(D, G), interaction(H, A) )
%   | | | then return 0.2439346968814108;  // std dev = 0.624, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7183180911857622;  // std dev = 0.158, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, I), enzyme(I, J) )
%   | | | then return -0.07580145781039639;  // std dev = 2.512, 66.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=9 */
%   | | | else return 0.02984390098938148;  // std dev = 3.520, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then if ( complex(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.5841966174858061;  // std dev = 0.342, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.23200387845229378;  // std dev = 0.368, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.15197861255153647;  // std dev = 3.967, 71.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=29 */
%   | | | else return 0.01494833277489526;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.48176576875150984;  // std dev = 0.330, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.1917753191357401;  // std dev = 0.061, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.12456638597414123;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -4.821628651203308E-4;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.06186426447642641;  // std dev = 0.299, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5218160805533358;  // std dev = 0.269, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0022323630235325516;  // std dev = 2.847, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.08033254055493447;  // std dev = 2.926, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.19666688552929826;  // std dev = 2.248, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( recursion_proteinclass(F, B), interaction(F, D) )
%   | | | then return 0.3274000227681393;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6324386861678304;  // std dev = 0.454, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.696341603802903;  // std dev = 0.139, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.2466638644887731;  // std dev = 0.068, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.20807977212794704;  // std dev = 0.093, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6983614966782938;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1434966372012797;  // std dev = 0.425, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.05320322573849768;  // std dev = 3.241, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return -0.016143062894041205;  // std dev = 3.010, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1877683741627238;  // std dev = 0.083, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(A, D), complex(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.07127747961163045;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.16028034184768727;  // std dev = 0.524, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.07043291978349904;  // std dev = 3.099, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | | else return -0.01910738938580981;  // std dev = 3.669, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.10701002206099662;  // std dev = 1.355, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.03118566615399029;  // std dev = 1.090, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return 0.20996365989113958;  // std dev = 1.350, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04766891002902766;  // std dev = 1.039, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.19641775909687478;  // std dev = 0.129, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.02748493845546356;  // std dev = 0.293, 80.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=18 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F), interaction(H, A) )
%   | | then return -0.032307313418211525;  // std dev = 0.193, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.05964321636813175;  // std dev = 0.562, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.02382312288132252;  // std dev = 1.682, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( interaction(A, I) )
%   | | then if ( phenotype(I, J), interaction(I, K) )
%   | | | then return 0.028357166133487766;  // std dev = 1.723, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.15381548014572916;  // std dev = 2.020, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.04643688909270157;  // std dev = 2.588, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return -0.008267347903017306;  // std dev = 2.273, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.842', 'seconds']
Refined model CLL: -0.255413


******************************************
Best model found
******************************************
Results 

CLL : -0.254658 

AUC ROC : 0.95426 

AUC PR : 0.29101 

Precision : 0.272232 

Recall : 0.530035 

F1 : 0.359712 

Total Learning Time : 6.376 

Total Inference Time : 2.8937482833862305 

Total revision time: 12.081210769653321
Best scored revision CLL: -0.255413


Results 

CLL : -0.254658 

AUC ROC : 0.95426 

AUC PR : 0.29101 

Precision : 0.272232 

Recall : 0.530035 

F1 : 0.359712 

Total Learning Time : 12.10426370048523 

Total Inference Time : 2.8937482833862305 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.261
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2020224528860736;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18373552961088388;  // std dev = 5.340, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   | | | else return 0.13455243101933487;  // std dev = 5.475, 142.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1260804406316033;  // std dev = 4.884, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | | else return 0.15035033194242775;  // std dev = 5.852, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1474722180777027;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.13517566832560082;  // std dev = 6.602, 192.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10827140362175938;  // std dev = 7.536, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0847471559340238;  // std dev = 7.558, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7258782336798806;  // std dev = 0.036, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.27392799899030573;  // std dev = 0.051, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06605583216174617;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return 0.05365694660550772;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.017955268271860277;  // std dev = 3.865, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
%   | | | else return 0.05541004893027281;  // std dev = 5.843, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03316665025682647;  // std dev = 7.003, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028716093614832502;  // std dev = 6.970, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.586', 'seconds']
Parameter learned model CLL:-0.338704 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.555, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.34, 81, 44], 'false,false,false,false': [5.475, 99, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.884, 75, 35], 'false,false,false,false': [5.852, 100, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.568, 35, 20], 'false,false,false,false': [6.602, 125, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.536, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.558, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.036, 0, 35], 'true,false': [0.051, 72, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.956, 45, 24], 'false,false,false,false': [4.346, 58, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.865, 79, 35], 'false,false,false,false': [5.843, 99, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.003, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.97, 175, 87]}]
{'': [nan, 0.22562452155165771], 'false': [nan, 0.22562452155165766], 'false,false': [nan, 0.22562452155165771], 'false,false,false': [nan, 0.22562452155165766]}
{'': [nan, 0.2196692336826172], 'false': [nan, 0.21966923368261626], 'false,false': [nan, 0.2196692336826172], 'false,false,false': [0.22809600000000024, 0.2111188256298356]}
{'': [nan, 0.2218785259151642], 'false': [nan, 0.2218785259151642], 'false,false': [nan, 0.2218785259151641], 'false,false,false': [0.21683057128251068, 0.22528434930396965]}
{'': [nan, 0.22802125251379343], 'false': [nan, 0.22802125251379343], 'false,false': [nan, 0.22802125251379338], 'false,false,false': [0.23140495867768648, 0.22701829252579964]}
{'': [nan, 0.22624301515950357], 'false': [nan, 0.22624301515950357], 'false,false': [nan, 0.22624301515950304], 'false,false,false': [nan, 0.22624301515950304]}
{'': [nan, 0.22578310480516608], 'false': [nan, 0.22578310480516608], 'false,false': [nan, 0.2257831048051659], 'false,false,false': [nan, 0.22578310480516595]}
{'': [0.2200579654802019, 0.2228501955692002], 'false': [nan, 0.2228501955692002], 'false,false': [nan, 0.2228501955692002], 'false,false,false': [0.22684310018903622, 0.2195781503515416], 'true': [3.6494496315750013e-05, 3.679486254115627e-05], 'true,true': [nan, 3.6494496315750013e-05], 'true,true,false': [nan, 3.6494496315750013e-05]}
{'': [nan, 0.18555914853721922], 'false': [nan, 0.18555914853721922], 'false,false': [nan, 0.18555914853721933], 'false,false,false': [0.13102663452922772, 0.2261258961546975]}
{'': [nan, 0.1871610340121122], 'false': [nan, 0.18716103401211226], 'false,false': [nan, 0.18716103401211226], 'false,false,false': [nan, 0.18716103401211226]}
{'': [nan, 0.18541883011543062], 'false': [nan, 0.18541883011543062], 'false,false': [nan, 0.18541883011543128], 'false,false,false': [nan, 0.18541883011543128]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.34
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, A) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.21109011157010057;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.21529179224236947;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.14241289449037464;  // std dev = 6.331, 197.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=56 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.011995088945666036;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(D, E), interaction(A, A) )
%   | then return 0.43783406196450586;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, F), interaction(A, G) )
%   | | then return 0.03588722218893526;  // std dev = 0.404, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( complex(D, H), complex(A, H) )
%   | | | then return 0.0657278310889131;  // std dev = 1.907, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.15687872306359654;  // std dev = 4.275, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.7463156693792842;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5484975988536311;  // std dev = 1.186, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.2353393534711509;  // std dev = 2.565, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return -0.006724048954743915;  // std dev = 0.928, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.1988881936842708;  // std dev = 4.237, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( interaction(A, A), recursion_proteinclass(C, B) )
%   | then return 0.6175050419449047;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(C, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1587079965566072;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.08077446685468273;  // std dev = 2.990, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else return -0.198926139076574;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.8257193404150516;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, F), phenotype(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.8165817951302475;  // std dev = 0.041, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1810353408414303;  // std dev = 0.041, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.007211678493705308;  // std dev = 1.276, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.17507080808721537;  // std dev = 5.408, 126.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=46 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), interaction(D, E) )
%   | then return 0.6728790659415115;  // std dev = 0.147, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(C, A) )
%   | | then return -0.19282138840737867;  // std dev = 0.240, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0.0593399040287154;  // std dev = 0.385, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.7215948360291901;  // std dev = 0.069, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1922154073351016;  // std dev = 0.097, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6722056094739125;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10131582841491389;  // std dev = 1.884, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.1346501330221866;  // std dev = 1.922, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.09345920445120767;  // std dev = 4.757, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5180221650805845;  // std dev = 0.161, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.09590855260714187;  // std dev = 0.647, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( phenotype(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1200516461836419;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5829048311928202;  // std dev = 1.534, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | | else return -0.18384775778695064;  // std dev = 0.305, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.1550535399655838;  // std dev = 4.382, 86.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=34 */
%   | | | else return -0.023350420501513144;  // std dev = 1.526, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.26677127037074694;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.32811959209253133;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.4076902130774775;  // std dev = 0.137, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, A) )
%   | | then return -0.18198152087860434;  // std dev = 0.104, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(A, F), interaction(C, G) )
%   | | | then return -0.05396585762647142;  // std dev = 1.209, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.05061335423208651;  // std dev = 1.746, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   else if ( interaction(A, H), interaction(H, H) )
%   | then return 0.009903572904155115;  // std dev = 0.312, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.6022063974463276;  // std dev = 0.203, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04817839455258884;  // std dev = 5.131, 162.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=50 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.04060425738372455;  // std dev = 0.805, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.20395848329301014;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.43441307801799045;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.6514657811206285;  // std dev = 0.121, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.19601870423553747;  // std dev = 0.079, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( phenotype(F, H), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.3214890842704698;  // std dev = 0.743, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.0407148899041764;  // std dev = 3.068, 77.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | else if ( recursion_proteinclass(F, B) )
%   | | | then return 0.3249792507112876;  // std dev = 0.391, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.048446449636934646;  // std dev = 3.597, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.08138221315868685;  // std dev = 0.694, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.40986269066644804;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2369769361274426;  // std dev = 0.103, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(D, E) )
%   | | then return -0.05483633165220964;  // std dev = 0.246, 61.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=10 */
%   | | else if ( location(A, F) )
%   | | | then return -0.007855716300434898;  // std dev = 2.615, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return 0.16450036349041053;  // std dev = 1.015, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( complex(A, G) )
%   | then return 0.0036777100367695625;  // std dev = 0.276, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6271209064328743;  // std dev = 0.260, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.23591596749037286;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.007925889760640696;  // std dev = 2.185, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.05248671315685125;  // std dev = 3.024, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, C), enzyme(C, E) )
%   | then return -0.021531680633770325;  // std dev = 0.185, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.34746795045540113;  // std dev = 0.118, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(G, A), interaction(C, H) )
%   | | | then return -0.07837253914527241;  // std dev = 0.798, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.12586660555999787;  // std dev = 1.360, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( interaction(A, I), interaction(I, A) )
%   | then return -0.054795389282982325;  // std dev = 0.235, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3043594225792653;  // std dev = 3.538, 75.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=51 */
%   | | | else return -0.21975694993748068;  // std dev = 0.638, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.07969378215998331;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.21379445659334556;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.27185146946138944;  // std dev = 0.204, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.05489100889676127;  // std dev = 0.814, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, C) )
%   | | then return -0.14931321929030694;  // std dev = 0.052, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(D, D), enzyme(D, F) )
%   | | | then return 0.13086517844487713;  // std dev = 1.448, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.007330551341837497;  // std dev = 4.373, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   else if ( enzyme(A, G) )
%   | then return 0.043326219174999264;  // std dev = 0.245, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.33449789262010265;  // std dev = 0.715, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.3577283078692627;  // std dev = 0.341, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.31465117678233234;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.940', 'seconds']
Refined model CLL: -0.225595


******************************************
Best model found
******************************************
Results 

CLL : -0.229403 

AUC ROC : 0.974305 

AUC PR : 0.378072 

Precision : 0.24 

Recall : 0.574468 

F1 : 0.338558 

Total Learning Time : 12.34 

Total Inference Time : 6.225017547607422 

Total revision time: 21.581555534362792
Best scored revision CLL: -0.225595


Results 

CLL : -0.229403 

AUC ROC : 0.974305 

AUC PR : 0.378072 

Precision : 0.24 

Recall : 0.574468 

F1 : 0.338558 

Total Learning Time : 26.784852195739745 

Total Inference Time : 6.225017547607422 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.151
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19581127276185048;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16808687459997285;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return 0.1555843700918583;  // std dev = 5.933, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12861588642981572;  // std dev = 5.280, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | | | else return 0.17968945312846316;  // std dev = 6.297, 170.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07422087584517414;  // std dev = 4.547, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | | | else return 0.07499797774033176;  // std dev = 7.280, 255.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10338556990487459;  // std dev = 8.325, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09798076272570687;  // std dev = 8.241, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7379467242023644;  // std dev = 0.007, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26209250421575003;  // std dev = 0.008, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07560260665803971;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | | else return 0.07441900408782633;  // std dev = 5.119, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07147342053082074;  // std dev = 4.030, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
%   | | | else return 0.016455848873172443;  // std dev = 6.628, 208.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04755833715159899;  // std dev = 7.626, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033926400493705405;  // std dev = 7.634, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.174', 'seconds']
Parameter learned model CLL:-0.33571 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.878, 103, 52], 'false,false,false,false': [5.933, 109, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.28, 87, 41], 'false,false,false,false': [6.297, 107, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.547, 72, 29], 'false,false,false,false': [7.28, 180, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.325, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.241, 196, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.007, 0, 41], 'true,false': [0.008, 69, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.871, 43, 23], 'false,false,false,false': [5.119, 76, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.03, 72, 41], 'false,false,false,false': [6.628, 145, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.626, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.634, 204, 104]}]
{'': [nan, 0.22364648338674525], 'false': [nan, 0.22364648338674373], 'false,false': [nan, 0.22364648338674525], 'false,false,false': [nan, 0.22364648338674373]}
{'': [nan, 0.22079794904662856], 'false': [nan, 0.22079794904662783], 'false,false': [nan, 0.22079794904662856], 'false,false,false': [0.22293444328824297, 0.21866440337950074]}
{'': [nan, 0.2272386577841253], 'false': [nan, 0.2272386577841253], 'false,false': [nan, 0.22723865778412353], 'false,false,false': [0.21778528764848926, 0.2332360559271998]}
{'': [nan, 0.20695689410203433], 'false': [nan, 0.20695689410203433], 'false,false': [nan, 0.2069568941020346], 'false,false,false': [0.2046858151161661, 0.20785624817668824]}
{'': [nan, 0.22215227227055095], 'false': [nan, 0.22215227227055095], 'false,false': [nan, 0.2221522722705481], 'false,false,false': [nan, 0.2221522722705481]}
{'': [nan, 0.22636103939831126], 'false': [nan, 0.22636103939831126], 'false,false': [nan, 0.22636103939831032], 'false,false,false': [nan, 0.2263610393983112]}
{'': [0.23382103442509375, 0.22632859322732055], 'true': [1.061907911067498e-06, 1.0235304083961054e-06], 'false': [nan, 0.22632859322732055], 'false,false': [nan, 0.22632859322732055], 'false,false,false': [0.22704315886134024, 0.22592152199762267], 'true,true': [nan, 1.061907911067498e-06], 'true,true,false': [nan, 1.061907911067498e-06]}
{'': [nan, 0.18811844593314336], 'false': [nan, 0.18811844593314336], 'false,false': [nan, 0.18811844593314267], 'false,false,false': [0.14369153300919643, 0.21118866482193044]}
{'': [nan, 0.1919329293729098], 'false': [nan, 0.19193292937290918], 'false,false': [nan, 0.19193292937290918], 'false,false,false': [nan, 0.19193292937290918]}
{'': [nan, 0.18920495911943291], 'false': [nan, 0.18920495911943291], 'false,false': [nan, 0.1892049591194333], 'false,false,false': [nan, 0.1892049591194333]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.459
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048766;  // std dev = 7.30e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( enzyme(A, F), interaction(A, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, H), phenotype(G, H) )
%   | | | then return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return 0.058148935099512356;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.17491912143491653;  // std dev = 5.903, 161.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7267858271949944;  // std dev = 0.083, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, A) )
%   | then return -0.13918972536849059;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, E), phenotype(D, F) )
%   | | | then return 0.20471044019802093;  // std dev = 0.940, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7952571086147991;  // std dev = 0.139, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, G), interaction(A, H) )
%   | | | then return 0.07425795305668319;  // std dev = 4.599, 130.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=31 */
%   | | | else return 0.15946703618535885;  // std dev = 5.631, 151.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.5715286845961189;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.5590093776876;  // std dev = 0.409, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.16468337721289797;  // std dev = 0.051, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.11592426214618845;  // std dev = 4.101, 87.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=27 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6160470007677739;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.2621243828655626;  // std dev = 2.577, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.4192506334998403;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.0638669363543686;  // std dev = 2.217, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.17499755825091193;  // std dev = 4.117, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.43715934091390934;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6473469558955196;  // std dev = 0.212, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.15486122730343416;  // std dev = 0.297, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.41181593449687603;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.535839680439158;  // std dev = 0.158, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7533834296748346;  // std dev = 0.392, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.21278504063718345;  // std dev = 0.235, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.576000682370598;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11618091516627936;  // std dev = 5.278, 131.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=42 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.15549032141799815;  // std dev = 0.851, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( enzyme(C, F) )
%   | | then return 0.44696372132500234;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.30938893073024354;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.36953015076072854;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.13321882327392584;  // std dev = 0.142, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5117614487615716;  // std dev = 0.636, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.1497836964094445;  // std dev = 0.251, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.14077000221351205;  // std dev = 2.745, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.09363037118953543;  // std dev = 5.062, 129.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( complex(A, E), interaction(A, F) )
%   | then return 0.03207987483194041;  // std dev = 0.219, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | else if ( location(A, G) )
%   | | then if ( phenotype(D, C), location(D, G) )
%   | | | then return 0.19095800958930836;  // std dev = 1.953, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.11732416483081232;  // std dev = 3.780, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | | else return -0.050665567860819195;  // std dev = 0.714, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.49771499512036765;  // std dev = 0.185, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return -0.14138739935367972;  // std dev = 0.427, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.06326177462518924;  // std dev = 3.343, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | else if ( interaction(L, A), complex(A, M) )
%   | | then return 0.11188415401608226;  // std dev = 0.349, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.029630839457058043;  // std dev = 0.317, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.014372616379763057;  // std dev = 0.244, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( complex(D, G), interaction(D, F) )
%   | | | then return 0.31042125516617003;  // std dev = 0.739, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08799500870845336;  // std dev = 2.033, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( enzyme(D, H) )
%   | | | then return 0.025432863960980726;  // std dev = 0.706, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.016796028009348003;  // std dev = 1.132, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), phenotype(A, L) )
%   | | | then return 0.01659152167148791;  // std dev = 3.505, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return -0.0483491895848951;  // std dev = 3.564, 98.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=22 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.05715151765785762;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.20210264280619267;  // std dev = 1.273, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25568730723542826;  // std dev = 0.060, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(E, E), complex(E, G) )
%   | | | then return -0.1824262284911462;  // std dev = 0.108, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.04341179814897422;  // std dev = 1.526, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1171412849909177;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.024184259924712913;  // std dev = 3.317, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.42802162692052415;  // std dev = 1.122, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.24769436591522104;  // std dev = 0.159, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.0036617766933100338;  // std dev = 1.603, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.11034628152876254;  // std dev = 4.301, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( location(A, E), location(C, E) )
%   | then if ( recursion_proteinclass(C, B), complex(C, F) )
%   | | then return 0.21359779682231506;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.005957595862292941;  // std dev = 0.350, 207.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=62 */
%   | else if ( phenotype(A, G), complex(C, H) )
%   | | then return 0.42677349063446446;  // std dev = 0.753, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(C, I) )
%   | | | then return 0.029491233561982275;  // std dev = 1.657, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.1373489678209898;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   else if ( enzyme(A, J) )
%   | then return 0.04037330775930173;  // std dev = 0.329, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( interaction(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.6165965701290701;  // std dev = 0.278, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.24324297773771905;  // std dev = 0.392, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08693223391086376;  // std dev = 0.321, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(F, D) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.3096274427876042;  // std dev = 0.744, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.1355680423913764;  // std dev = 0.160, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( complex(D, G) )
%   | | | then return -0.04124462416515913;  // std dev = 1.526, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.48698250677329274;  // std dev = 2.470, 61.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=54 */
%   | else return -0.20885099404509327;  // std dev = 0.076, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( enzyme(A, J) )
%   | | then return 0.22700792233687705;  // std dev = 0.654, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3039035171854193;  // std dev = 0.787, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.27464335103634524;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2281245761370562;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '52.506', 'seconds']
Refined model CLL: -0.240888


******************************************
Best model found
******************************************
Results 

CLL : -0.230369 

AUC ROC : 0.984554 

AUC PR : 0.367732 

Precision : 0.429268 

Recall : 0.664151 

F1 : 0.521481 

Total Learning Time : 13.459 

Total Inference Time : 12.76970100402832 

Total revision time: 29.42843638420105
Best scored revision CLL: -0.240888


Results 

CLL : -0.230369 

AUC ROC : 0.984554 

AUC PR : 0.367732 

Precision : 0.429268 

Recall : 0.664151 

F1 : 0.521481 

Total Learning Time : 34.631733045578 

Total Inference Time : 12.76970100402832 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.077
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17214210916094574;  // std dev = 7.944, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14496688903438457;  // std dev = 5.936, 165.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=51 */
%   | | | else return 0.12258926665676344;  // std dev = 5.408, 143.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11574155016154816;  // std dev = 5.552, 147.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=44 */
%   | | | else return 0.15240680934551773;  // std dev = 5.646, 143.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16311639727140878;  // std dev = 4.059, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | | else return 0.10159385137616922;  // std dev = 6.765, 215.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0871268843355165;  // std dev = 7.958, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08168758714130013;  // std dev = 7.898, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7444304470460168;  // std dev = 0.052, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2553607802826875;  // std dev = 0.074, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09984790095888663;  // std dev = 4.009, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | | else return 0.057768813870177585;  // std dev = 3.981, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02022305331348144;  // std dev = 4.416, 151.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=44 */
%   | | | else return 0.06954546027109655;  // std dev = 5.628, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050636493029357736;  // std dev = 7.073, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06606194448789274;  // std dev = 6.924, 252.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.561', 'seconds']
Parameter learned model CLL:-0.325487 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.944, 201, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.936, 114, 51], 'false,false,false,false': [5.408, 102, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.552, 103, 44], 'false,false,false,false': [5.646, 95, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.059, 45, 26], 'false,false,false,false': [6.765, 149, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.958, 203, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.898, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.052, 0, 44], 'true,false': [0.074, 90, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.009, 45, 25], 'false,false,false,false': [3.981, 51, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.416, 107, 44], 'false,false,false,false': [5.628, 93, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.073, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.924, 160, 92]}]
{'': [nan, 0.21540146070426097], 'false': [nan, 0.21540146070426075], 'false,false': [nan, 0.21540146070426097], 'false,false,false': [nan, 0.21540146070426075]}
{'': [nan, 0.20947883285545554], 'false': [nan, 0.20947883285545554], 'false,false': [nan, 0.20947883285545554], 'false,false,false': [0.21355371900826403, 0.20450877793535052]}
{'': [nan, 0.2165525270752896], 'false': [nan, 0.2165525270752896], 'false,false': [nan, 0.2165525270752905], 'false,false,false': [0.20970474010512455, 0.22291041859978394]}
{'': [nan, 0.21835749111469024], 'false': [nan, 0.21835749111469024], 'false,false': [nan, 0.2183574911146912], 'false,false,false': [0.2320968061892471, 0.21288068321139617]}
{'': [nan, 0.21468673039897998], 'false': [nan, 0.21468673039897998], 'false,false': [nan, 0.21468673039897962], 'false,false,false': [nan, 0.21468673039897962]}
{'': [nan, 0.21810543123184395], 'false': [nan, 0.21810543123184395], 'false,false': [nan, 0.21810543123184215], 'false,false,false': [nan, 0.2181054312318435]}
{'': [0.22050850042688128, 0.22212829251803878], 'false': [nan, 0.22212829251803878], 'false,false': [nan, 0.22212829251803878], 'false,false,false': [0.22959183673469394, 0.21420745069393693], 'true': [6.110425887681262e-05, 6.16641717017943e-05], 'true,true': [nan, 6.110425887681262e-05], 'true,true,false': [nan, 6.110425887681262e-05]}
{'': [nan, 0.17588960913616375], 'false': [nan, 0.17588960913616375], 'false,false': [nan, 0.17588960913616392], 'false,false,false': [0.12916296054224688, 0.22467219870584892]}
{'': [nan, 0.18123730711782005], 'false': [nan, 0.1812373071178201], 'false,false': [nan, 0.1812373071178201], 'false,false,false': [nan, 0.1812373071178201]}
{'': [nan, 0.19023752959779466], 'false': [nan, 0.19023752959779466], 'false,false': [nan, 0.1902375295977961], 'false,false,false': [nan, 0.1902375295977961]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 5.932
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( complex(A, F), complex(D, F) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10814893509951222;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.21109011157009924;  // std dev = 4.406, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.08228686613399513;  // std dev = 3.176, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | | else return 0.19638422921715865;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( recursion_proteinclass(C, B), complex(A, D) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, A) )
%   | | then if ( interaction(C, E), phenotype(E, F) )
%   | | | then return -0.1548397616920056;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.056918287573440064;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(C, G), interaction(C, C) )
%   | | | then return 0.38601823228174287;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.15412197268823155;  // std dev = 3.719, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then return -0.008907679466824855;  // std dev = 0.358, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.19852241814997434;  // std dev = 2.970, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.11647587036272578;  // std dev = 4.848, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), complex(A, D) )
%   | then return 0.35393471576604485;  // std dev = 0.698, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6869466229690142;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8125299957638848;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06465541465522684;  // std dev = 6.058, 199.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=49 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.1349693929155927;  // std dev = 2.433, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.30911079879672165;  // std dev = 2.348, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(A, A) )
%   | then return 0.22331021594133774;  // std dev = 0.670, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, E) )
%   | | then return 0.428545696019893;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5246060237351323;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then if ( complex(A, F) )
%   | | then return -0.19108122181660486;  // std dev = 0.201, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1612271540990596;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( phenotype(G, I), interaction(J, A) )
%   | | | then return 0.13910348446292356;  // std dev = 2.593, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.014407944292547522;  // std dev = 3.870, 83.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.15147567807733325;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13325263019752814;  // std dev = 5.361, 134.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=46 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.31042377790232695;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(D, D) )
%   | | | then return -0.1268706303447327;  // std dev = 0.789, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return -0.011172315389132019;  // std dev = 1.109, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.1008181263561812;  // std dev = 2.359, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.021008543188218078;  // std dev = 3.247, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), interaction(J, J) )
%   | | | then return 0.315520538767085;  // std dev = 2.177, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.086318769359685;  // std dev = 4.613, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.06093881984013689;  // std dev = 2.069, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.06774782677095732;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.2952189147044903;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.38075281424730995;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( enzyme(E, G), enzyme(A, G) )
%   | | then if ( interaction(E, E) )
%   | | | then return -0.057744976790572965;  // std dev = 1.537, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.14756494430895584;  // std dev = 0.105, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(A, H), interaction(E, I) )
%   | | | then return 0.07583074464952912;  // std dev = 2.222, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.024188973246001846;  // std dev = 3.280, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.31482886078724454;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.0010698347334322181;  // std dev = 3.367, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.08857579511431182;  // std dev = 4.644, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.07030443936006392;  // std dev = 0.416, 122.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=44 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(F, G), enzyme(F, H) )
%   | | | then return 0.13552472143000677;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.05274149442115728;  // std dev = 1.399, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7522503830925052;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2477496169074947;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( complex(J, K) )
%   | | | then return 0.01961810814303264;  // std dev = 1.250, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2375617102167152;  // std dev = 1.434, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.09878776707078146;  // std dev = 2.723, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.0059333783424151305;  // std dev = 3.478, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.22297062907826964;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2787996938018072;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( phenotype(A, E), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.3489811394618765;  // std dev = 0.620, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, A), interaction(F, I) )
%   | | | then return -0.12752438449408376;  // std dev = 1.393, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | | else return 0.03488095729370037;  // std dev = 2.895, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), interaction(J, L) )
%   | | | then return -0.023681297033688445;  // std dev = 2.459, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.06471309840899948;  // std dev = 3.059, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.1759072787511985;  // std dev = 2.757, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.05557464752570481;  // std dev = 3.622, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), complex(F, D) )
%   | | then return 0.21627235248682944;  // std dev = 0.487, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.663064011867498;  // std dev = 0.159, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.24745396176854398;  // std dev = 0.049, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5152786248683004;  // std dev = 0.256, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.24613174757997203;  // std dev = 0.064, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.009221146117668277;  // std dev = 1.358, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.14385177912888356;  // std dev = 2.311, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.08739323868746031;  // std dev = 1.837, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.013558718294225476;  // std dev = 4.185, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.15903018955078507;  // std dev = 0.046, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.46054390601612577;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.010150961973074985;  // std dev = 0.381, 142.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=34 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.5231362330493873;  // std dev = 0.171, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.22393132776277166;  // std dev = 0.018, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6398788912621018;  // std dev = 0.179, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.23999737881152683;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.010082911886934567;  // std dev = 1.276, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.10128541121359266;  // std dev = 2.741, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.101', 'seconds']
Refined model CLL: -0.268891


******************************************
Best model found
******************************************
Results 

CLL : -0.275454 

AUC ROC : 0.898969 

AUC PR : 0.212065 

Precision : 0.230469 

Recall : 0.425993 

F1 : 0.299113 

Total Learning Time : 5.932 

Total Inference Time : 2.509526014328003 

Total revision time: 11.227272924423218
Best scored revision CLL: -0.268891


Results 

CLL : -0.275454 

AUC ROC : 0.898969 

AUC PR : 0.212065 

Precision : 0.230469 

Recall : 0.425993 

F1 : 0.299113 

Total Learning Time : 16.43056958580017 

Total Inference Time : 2.509526014328003 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.246
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.186393209908673;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18057820645765044;  // std dev = 5.829, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
%   | | | else return 0.1608346167140626;  // std dev = 4.784, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13768216030337938;  // std dev = 4.334, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.10310583701143679;  // std dev = 6.397, 197.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10171741864246923;  // std dev = 3.603, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.11409086029495155;  // std dev = 6.737, 208.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10303574475737631;  // std dev = 7.582, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08977669247480959;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7316838942642035;  // std dev = 0.004, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2682923772571702;  // std dev = 0.006, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05908974587458301;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return 0.07271611767848782;  // std dev = 4.082, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.025590481323858605;  // std dev = 3.455, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return 0.0466727705386231;  // std dev = 6.270, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05551490273451812;  // std dev = 7.026, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033491943126400255;  // std dev = 7.083, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.613', 'seconds']
Parameter learned model CLL:-0.338936 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.829, 98, 52], 'false,false,false,false': [4.784, 70, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.334, 57, 28], 'false,false,false,false': [6.397, 139, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.603, 41, 19], 'false,false,false,false': [6.737, 141, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.582, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.55, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.004, 0, 28], 'true,false': [0.006, 74, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.725, 69, 33], 'false,false,false,false': [4.082, 50, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.455, 62, 28], 'false,false,false,false': [6.27, 122, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.026, 163, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.083, 171, 86]}]
{'': [nan, 0.22049997086416953], 'false': [nan, 0.22049997086416942], 'false,false': [nan, 0.22049997086416953], 'false,false,false': [nan, 0.22049997086416942]}
{'': [nan, 0.22394444788889672], 'false': [nan, 0.22394444788889692], 'false,false': [nan, 0.22394444788889672], 'false,false,false': [0.2264888888888901, 0.22004437869822532]}
{'': [nan, 0.2119732096553686], 'false': [nan, 0.2119732096553686], 'false,false': [nan, 0.21197320965536848], 'false,false,false': [0.2209565015885795, 0.20773681757296358]}
{'': [nan, 0.21781282619726888], 'false': [nan, 0.21781282619726888], 'false,false': [nan, 0.21781282619726905], 'false,false,false': [0.21638888888888924, 0.2181893007636944]}
{'': [nan, 0.22193304481878479], 'false': [nan, 0.22193304481878479], 'false,false': [nan, 0.22193304481878537], 'false,false,false': [nan, 0.22193304481878537]}
{'': [nan, 0.22351061253584636], 'false': [nan, 0.22351061253584636], 'false,false': [nan, 0.2235106125358465], 'false,false,false': [nan, 0.22351061253584742]}
{'': [0.19914518489611802, 0.22032893302204407], 'false': [nan, 0.22032893302204407], 'false,false': [nan, 0.22032893302204407], 'false,false,false': [0.21885813148788938, 0.2222222222222219], 'true': [4.5608049990621324e-07, 4.677718738241074e-07], 'true,true': [nan, 4.5608049990621324e-07], 'true,true,false': [nan, 4.5608049990621324e-07]}
{'': [nan, 0.18989029003528238], 'false': [nan, 0.18989029003528238], 'false,false': [nan, 0.18989029003528307], 'false,false,false': [0.13260480460879795, 0.21838487844234733]}
{'': [nan, 0.19826644166822227], 'false': [nan, 0.19826644166822263], 'false,false': [nan, 0.19826644166822263], 'false,false,false': [nan, 0.19826644166822263]}
{'': [nan, 0.1952016354402003], 'false': [nan, 0.1952016354402003], 'false,false': [nan, 0.19520163544020033], 'false,false,false': [nan, 0.19520163544020033]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.724
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( complex(A, E), location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5133213488926157;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | | | else return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.18373033044834897;  // std dev = 5.322, 129.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, F) )
%   | | then return 0.6272602223988767;  // std dev = 0.872, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.8094311952662778;  // std dev = 0.135, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.16576384624683452;  // std dev = 0.232, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(G, H), interaction(G, I) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.01862695028260377;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.7373228684706172;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.4840481812556819;  // std dev = 1.127, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.04239337698780204;  // std dev = 2.416, 64.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
%   | | | else return 0.10817951267312172;  // std dev = 4.886, 125.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.6560159660629732;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.46589853664571007;  // std dev = 0.296, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.0026527895725355632;  // std dev = 0.650, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5828055594181214;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, A), complex(E, H) )
%   | | | then return -0.08557194252189908;  // std dev = 0.955, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.06271605279723304;  // std dev = 4.554, 131.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=32 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then return 0.4357335453459784;  // std dev = 0.628, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.3059567068783169;  // std dev = 1.605, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.1767208762208553;  // std dev = 3.500, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.48946170406787426;  // std dev = 0.080, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.3820597302855355;  // std dev = 0.734, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7835550935740345;  // std dev = 0.166, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.13427270936238536;  // std dev = 0.149, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.07589638419913865;  // std dev = 4.327, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7011511370777249;  // std dev = 0.382, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.17893326282876276;  // std dev = 0.103, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.04303131742874687;  // std dev = 2.125, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.20076173604860517;  // std dev = 2.265, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.3100765939924675;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.445072077966131;  // std dev = 0.127, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, D), complex(D, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10994661465412227;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.032665333973141815;  // std dev = 1.238, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return 0.2946361978751883;  // std dev = 1.419, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.0698211106216028;  // std dev = 2.656, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3987008713181018;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.027985579868247904;  // std dev = 1.775, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.041317863293767146;  // std dev = 4.690, 141.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=39 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then return -0.03217940957942852;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.293129985689586;  // std dev = 0.060, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.5396894632363233;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7441147752347356;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.19329162764913002;  // std dev = 0.063, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(A, J) )
%   | | | then return 0.025548555180931316;  // std dev = 0.638, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.35634281489678543;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return -0.016030409124460125;  // std dev = 2.343, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return 0.046871929890249873;  // std dev = 5.083, 159.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=45 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.24246443116757577;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(F, A), location(A, G) )
%   | | | then return 0.5411620171766083;  // std dev = 0.560, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6931527665535531;  // std dev = 0.163, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.16936480814910657;  // std dev = 0.067, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.2566305856513515;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5713214516917647;  // std dev = 0.511, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.02975744808839606;  // std dev = 2.888, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.3480272626632536;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.07099362883228116;  // std dev = 3.304, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B), interaction(E, A) )
%   | then return 0.20809889487549804;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.01328335875439017;  // std dev = 0.331, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( phenotype(A, H) )
%   | | then if ( location(A, I), location(F, I) )
%   | | | then return 0.1858520591221931;  // std dev = 1.672, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.032432754115983;  // std dev = 0.788, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.033806736896332804;  // std dev = 0.322, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.22704846666067546;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.028078555316784715;  // std dev = 2.272, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.01745416295016532;  // std dev = 0.918, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.19906078236140556;  // std dev = 1.866, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19275121104872978;  // std dev = 0.064, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.06356747654510142;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08558426368203627;  // std dev = 0.636, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2704358474801786;  // std dev = 1.120, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.17035763792624894;  // std dev = 0.358, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(J, A), interaction(H, J) )
%   | | | then return -0.09234157793633913;  // std dev = 0.714, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.009874901382388682;  // std dev = 1.697, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.06985008586576237;  // std dev = 2.831, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return -5.794959510593548E-4;  // std dev = 4.003, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.15516755228498136;  // std dev = 0.044, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(D, E), enzyme(D, F) )
%   | | then return -0.061480599045767886;  // std dev = 0.300, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( recursion_proteinclass(D, B), interaction(A, G) )
%   | | | then return 0.4747390134888973;  // std dev = 0.373, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.00852507897567481;  // std dev = 3.482, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | then return 0.32448934297992366;  // std dev = 0.453, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.023826182591031305;  // std dev = 0.319, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.03720254636740599;  // std dev = 0.303, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.04643192956427512;  // std dev = 0.491, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.302145913267614;  // std dev = 1.702, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.464', 'seconds']
Refined model CLL: -0.236124


******************************************
Best model found
******************************************
Results 

CLL : -0.241675 

AUC ROC : 0.929919 

AUC PR : 0.236586 

Precision : 0.262477 

Recall : 0.501767 

F1 : 0.34466 

Total Learning Time : 6.724 

Total Inference Time : 3.1659634113311768 

Total revision time: 12.736664505004883
Best scored revision CLL: -0.236124


Results 

CLL : -0.241675 

AUC ROC : 0.929919 

AUC PR : 0.236586 

Precision : 0.262477 

Recall : 0.501767 

F1 : 0.34466 

Total Learning Time : 17.939961166381835 

Total Inference Time : 3.1659634113311768 

